{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/.nojekyll","path":".nojekyll","modified":1,"renderable":0},{"_id":"source/Staticfile","path":"Staticfile","modified":1,"renderable":0},{"_id":"source/CNAME","path":"CNAME","modified":1,"renderable":0},{"_id":"source/README.md","path":"README.md","modified":1,"renderable":0},{"_id":"source/baidu_urls.txt","path":"baidu_urls.txt","modified":1,"renderable":0},{"_id":"source/baidu_verify_dc4dBM4StW.html","path":"baidu_verify_dc4dBM4StW.html","modified":1,"renderable":0},{"_id":"source/googled7e43f3624e0f703.html","path":"googled7e43f3624e0f703.html","modified":1,"renderable":0},{"_id":"source/robots.txt","path":"robots.txt","modified":1,"renderable":0},{"_id":"source/200.png","path":"200.png","modified":1,"renderable":0},{"_id":"themes/next5.1/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next5.1/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/next5.1/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next5.1/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next5.1/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next5.1/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next5.1/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next5.1/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next5.1/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next5.1/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next5.1/source/images/loading.gif","path":"images/loading.gif","modified":1,"renderable":1},{"_id":"themes/next5.1/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/next5.1/source/images/placeholder.gif","path":"images/placeholder.gif","modified":1,"renderable":1},{"_id":"themes/next5.1/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/next5.1/source/images/searchicon.png","path":"images/searchicon.png","modified":1,"renderable":1},{"_id":"themes/next5.1/source/js/src/affix.js","path":"js/src/affix.js","modified":1,"renderable":1},{"_id":"themes/next5.1/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/next5.1/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":1,"renderable":1},{"_id":"themes/next5.1/source/js/src/motion.js","path":"js/src/motion.js","modified":1,"renderable":1},{"_id":"themes/next5.1/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/next5.1/source/js/src/particle.js","path":"js/src/particle.js","modified":1,"renderable":1},{"_id":"themes/next5.1/source/js/src/post-details.js","path":"js/src/post-details.js","modified":1,"renderable":1},{"_id":"themes/next5.1/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":1,"renderable":1},{"_id":"themes/next5.1/source/js/src/utils.js","path":"js/src/utils.js","modified":1,"renderable":1},{"_id":"themes/next5.1/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":1,"renderable":1},{"_id":"themes/next5.1/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/next5.1/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/next5.1/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":1,"renderable":1},{"_id":"themes/next5.1/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":1,"renderable":1},{"_id":"themes/next5.1/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":1,"renderable":1},{"_id":"themes/next5.1/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":1,"renderable":1},{"_id":"themes/next5.1/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":1,"renderable":1},{"_id":"themes/next5.1/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":1,"renderable":1},{"_id":"themes/next5.1/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":1,"renderable":1},{"_id":"themes/next5.1/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":1,"renderable":1},{"_id":"themes/next5.1/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":1,"renderable":1},{"_id":"themes/next5.1/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next5.1/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next5.1/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":1,"renderable":1},{"_id":"themes/next5.1/source/images/avatar.jpg","path":"images/avatar.jpg","modified":1,"renderable":1},{"_id":"themes/next5.1/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":1,"renderable":1},{"_id":"themes/next5.1/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next5.1/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":1,"renderable":1},{"_id":"themes/next5.1/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/next5.1/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/next5.1/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/next5.1/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/next5.1/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/next5.1/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/next5.1/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/next5.1/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/next5.1/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/next5.1/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/next5.1/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/next5.1/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":1,"renderable":1},{"_id":"themes/next5.1/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":1,"renderable":1},{"_id":"themes/next5.1/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":1,"renderable":1},{"_id":"themes/next5.1/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":1,"renderable":1},{"_id":"themes/next5.1/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/next5.1/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/next5.1/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":1,"renderable":1},{"_id":"themes/next5.1/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/next5.1/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/next5.1/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/next5.1/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/next5.1/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/next5.1/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/next5.1/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/next5.1/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/next5.1/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/next5.1/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":1,"renderable":1},{"_id":"themes/next5.1/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":1,"renderable":1}],"Cache":[{"_id":"source/.nojekyll","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1478526927000},{"_id":"source/Staticfile","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1478526929000},{"_id":"source/.DS_Store","hash":"b74b0c6bd39c292d115cfe506c8bafc1370f8e12","modified":1479138157000},{"_id":"source/404.html","hash":"89bc129f8a7e2172e072245d05f3988840e2218a","modified":1479130894000},{"_id":"source/CNAME","hash":"2aa48d8d6581d360a1d27cfed89e5f6ebfcf9ff0","modified":1478949127000},{"_id":"source/README.md","hash":"c8aa77e69ef57dfb8d5e2f0b0e6a4f9f60fa7ae6","modified":1478952030000},{"_id":"source/baidu_urls.txt","hash":"ae528aed7af4bc5bde16b5f0a8a3ffaad207906f","modified":1479010575000},{"_id":"source/baidu_verify_dc4dBM4StW.html","hash":"65cd22420b3ade918135bbedf65d58eb69cc7543","modified":1479010836000},{"_id":"source/googled7e43f3624e0f703.html","hash":"83ed1434e018ec841dabc903aa2f0a80679a889f","modified":1478949486000},{"_id":"source/robots.txt","hash":"7176945f1fc8d331b146f85196f93f772faddaad","modified":1479007047000},{"_id":"themes/next5.1/.gitignore","hash":"5f09fca02e030b7676c1d312cd88ce8fbccf381c","modified":1478941112000},{"_id":"themes/next5.1/.DS_Store","hash":"c3d2ec20e7c74cb6f0492bf0860fdee4c713220d","modified":1479137598000},{"_id":"themes/next5.1/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1478941112000},{"_id":"themes/next5.1/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1478941112000},{"_id":"themes/next5.1/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1478941112000},{"_id":"themes/next5.1/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1478941112000},{"_id":"themes/next5.1/.javascript_ignore","hash":"f9ea3c5395f8feb225a24e2c32baa79afda30c16","modified":1478941112000},{"_id":"themes/next5.1/bower.json","hash":"5abc236d9cc2512f5457ed57c1fba76669eb7399","modified":1478941112000},{"_id":"themes/next5.1/gulpfile.coffee","hash":"61ef0606a8134894d7ac796bc8d0fa4ba6a94483","modified":1478941112000},{"_id":"themes/next5.1/README.md","hash":"500b5606eb6a09c979d16128f8b00f4bf9bc95ac","modified":1478941112000},{"_id":"themes/next5.1/_config.yml","hash":"47f4c750b7813715e26106ec92a7353b91ee29cd","modified":1479130894000},{"_id":"themes/next5.1/README.en.md","hash":"565ba52b3825b85a9f05b41183caca7f18b741d4","modified":1478941112000},{"_id":"themes/next5.1/package.json","hash":"877cb98025e59015532c4c9a04a33e2af4ad56f9","modified":1478941112000},{"_id":"source/200.png","hash":"2064c91ebe67a61f166b5c629666821dee4c4462","modified":1478526929000},{"_id":"source/_drafts/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1479138113000},{"_id":"source/_drafts/git.md","hash":"fa5d3e3b5e4fbace4b51956b2852c29aca45e7dd","modified":1479130894000},{"_id":"source/_drafts/hexo-next-one.md","hash":"ddd927a37c673f0f1691119d9f5ebe7711b2af94","modified":1479130894000},{"_id":"source/_drafts/hexo-next-three.md","hash":"c1267b8c703b75b3849a3ca786e428fab2be2d3b","modified":1479130894000},{"_id":"source/_drafts/hexo-next-two.md","hash":"dc8e0ecf3f6b496a8f006da3c88d2c79df5c8fe0","modified":1479130894000},{"_id":"source/_posts/.DS_Store","hash":"0a9f63b96c8924d0b7a6e3deca2d589f349bf7bd","modified":1479138125000},{"_id":"source/_posts/分类.txt","hash":"dedfaf6f88c8b4b681a659f6159c5c3483e89768","modified":1478616160000},{"_id":"source/about/index.md","hash":"6087f434b65a40df3f48cf0b979be5669ddbf76a","modified":1478821574000},{"_id":"source/guestbook/index.md","hash":"9ed6289facf8a8efbac5497fb532010d8c3e1fa6","modified":1479138172000},{"_id":"source/categories/index.md","hash":"b1c5e548bbbfe2238c1760f84cea4303dce74a10","modified":1478526929000},{"_id":"source/tags/index.md","hash":"3e5cb1f16ee1ffc5cd88cff819330acd9a1f073d","modified":1478526929000},{"_id":"themes/next5.1/languages/de.yml","hash":"786afba25cfc98845a20d9901823ebeebcd1cbbf","modified":1478941112000},{"_id":"themes/next5.1/languages/default.yml","hash":"767470a80dc257e23e14c3a78e8c52a46c9d6209","modified":1478941112000},{"_id":"themes/next5.1/languages/en.yml","hash":"40057d6608e825d06e0864bac4dcd27ed88ada87","modified":1478941112000},{"_id":"themes/next5.1/languages/fr-FR.yml","hash":"1a084623c39de74301f3e92f9388a3a815a542ca","modified":1478941112000},{"_id":"themes/next5.1/languages/id.yml","hash":"147c01e41b931085ad14250fa900c2249dcbbdd7","modified":1478941112000},{"_id":"themes/next5.1/languages/pt-BR.yml","hash":"462aa865ca3d479bcf6b363cba61247b50f230ff","modified":1478941112000},{"_id":"themes/next5.1/languages/pt.yml","hash":"ca239b39bf65c9462e59d51b12f0fe566d453197","modified":1478941112000},{"_id":"themes/next5.1/languages/ja.yml","hash":"a2c7b6301b5474aab798946fb700289df237c3cf","modified":1478941112000},{"_id":"themes/next5.1/languages/ko.yml","hash":"ce8b047c89daae77c03482fc76f16ffec6bdbf2d","modified":1478941112000},{"_id":"themes/next5.1/languages/ru.yml","hash":"257d11e626cbe4b9b78785a764190b9278f95c28","modified":1478941112000},{"_id":"themes/next5.1/languages/zh-hk.yml","hash":"519ab3d817ec3bc5bfc91159c494b6b3c170bea7","modified":1478941112000},{"_id":"themes/next5.1/languages/zh-Hans.yml","hash":"d320ed1daddbb3ba3a437cfb1577b81669a68812","modified":1479130894000},{"_id":"themes/next5.1/languages/zh-tw.yml","hash":"6b1f345aaefc13e6723dc8a6741b59ac05c20dfd","modified":1478941112000},{"_id":"themes/next5.1/layout/.DS_Store","hash":"4a06e9fa15d86aac6f1f3bcc554ac2ceeb73abd9","modified":1479053374000},{"_id":"themes/next5.1/layout/_layout.swig","hash":"73b0f6485f4bdbbc01a34cd16d66f41d34cb128f","modified":1479043334000},{"_id":"themes/next5.1/layout/archive.swig","hash":"b5b59d70fc1563f482fa07afd435752774ad5981","modified":1478941112000},{"_id":"themes/next5.1/layout/category.swig","hash":"6422d196ceaff4220d54b8af770e7e957f3364ad","modified":1478941112000},{"_id":"themes/next5.1/layout/page.swig","hash":"718d7182c2b5a94e519f7f5ff1035ee4e059c784","modified":1478966993000},{"_id":"themes/next5.1/layout/index.swig","hash":"427d0b95b854e311ae363088ab39a393bf8fdc8b","modified":1478941112000},{"_id":"themes/next5.1/scripts/merge-configs.js","hash":"0c56be2e85c694247cfa327ea6d627b99ca265e8","modified":1478941112000},{"_id":"themes/next5.1/layout/post.swig","hash":"e2e512142961ddfe77eba29eaa88f4a2ee43ae18","modified":1478941112000},{"_id":"themes/next5.1/layout/schedule.swig","hash":"1f1cdc268f4ef773fd3ae693bbdf7d0b2f45c3a3","modified":1478941112000},{"_id":"themes/next5.1/layout/tag.swig","hash":"07cf49c49c39a14dfbe9ce8e7d7eea3d4d0a4911","modified":1478941112000},{"_id":"themes/next5.1/source/.DS_Store","hash":"b081b0e8cdcbc1e66c10278b6167b5458f0f73f7","modified":1479137598000},{"_id":"themes/next5.1/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1478941112000},{"_id":"themes/next5.1/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1478941112000},{"_id":"themes/next5.1/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1478941112000},{"_id":"themes/next5.1/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1478941112000},{"_id":"source/_posts/Dev/2016-11-03-开发相关网页链接.md","hash":"e9ee57d44f1c67dc9b98ef4d40e1f50bb9d74ce8","modified":1479008190000},{"_id":"source/_posts/Dev/2016-11-10-jenkins.md","hash":"b1f5540b2d76be601021baff6f70e583b2050431","modified":1479008190000},{"_id":"source/_posts/Dev/2016-11-08-用github写开源书籍.md","hash":"987eb9d382eeb4ee1ecb57a1b008f01885318904","modified":1479008190000},{"_id":"source/_posts/Dev/2016-11-04-Git教程.md","hash":"bfee783021640b97e73d8eaeab7df2a9dee3e5c1","modified":1479008190000},{"_id":"source/_posts/VPN_墙/2016-11-01-穷人VPN.md","hash":"a48acf1f55ff42788ac07ba51f0af361a103a2c6","modified":1479008190000},{"_id":"source/_posts/web服务器/2016-10-21-OpenResty_install.md","hash":"8bcc14de468be9073022c3ce108bbdc4f242016b","modified":1479008190000},{"_id":"source/_posts/数据库/2016-11-03-MySQL数据库.md","hash":"634c7086630af26b193ab25487f27c53a409aac6","modified":1479008190000},{"_id":"source/_posts/杂项/2016-11-03-vim常用命令.md","hash":"084a3cde450d16cf8c4a5ad7eca6ad127d0168f7","modified":1479008190000},{"_id":"source/_posts/数据库/2016-11-11-数据库主主互备（高可用）.md","hash":"47568fe4227bc0f181214b726fa2df40132cdb9d","modified":1479008190000},{"_id":"source/_posts/数据库/2016-11-10-MongoDB数据库.md","hash":"cab7f952d77c2f605916f01f02fe6820ccb33fc5","modified":1479008190000},{"_id":"source/_posts/杂项/2016-11-03-工具集.md","hash":"d059ebed7edd26991f074d2d1748b0228ed540ab","modified":1479008190000},{"_id":"source/_posts/文章阅读/2016-11-02-Linux学习流程发展.md","hash":"dc7474e715d2e7cde51f5220a6f4464145b725ae","modified":1479008190000},{"_id":"source/_posts/杂项/2016-11-08-Linux常见面试题.md","hash":"f82715be3bab47f25fd5dc1493106d146f50a719","modified":1479008190000},{"_id":"source/_posts/杂项/2016-11-11-常用网站链接.md","hash":"ef5c7242b385ce6a95bc7f8a5dd8ea56a805eba8","modified":1479008190000},{"_id":"source/_posts/文章阅读/2016-11-02-文章阅读链接更新页.md","hash":"3f65baa38fc84a5cf5dc48a2906a86a32fe681df","modified":1479008190000},{"_id":"source/_posts/文章阅读/2016-11-02-用软文思维写工作总结.md","hash":"08e48ecba1503b522a5fac1b73c641af555298d2","modified":1479008190000},{"_id":"source/_posts/文章阅读/2016-11-02-程序员怎样才能找到一个靠谱的创业公司.md","hash":"9df793e9134757e8fb78cf59908ad40247681c86","modified":1479008190000},{"_id":"source/_posts/文章阅读/2016-11-02-高并发系统之服务器降级.md","hash":"8dd1fd7d449af1fe6e42ea2e06d1fb4fa605566f","modified":1479008190000},{"_id":"source/_posts/文章阅读/2016-11-07-Linux-发行版汇总.md","hash":"da5c10b42d580f2ab25fd3ca394ac872a8580f67","modified":1479008190000},{"_id":"source/_posts/环境搭建/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1478704257000},{"_id":"source/_posts/环境搭建/2016-10-21-Ruby开发环境搭建.md","hash":"6b446d655b53f515befbbcf7ba9c0ce50a1fa8d3","modified":1479008190000},{"_id":"source/_posts/环境搭建/2016-11-02-CentOS-7安装配置LAMP服务器.md","hash":"6d7f8954c06df54937163bffa5d3e765f25437c7","modified":1479008190000},{"_id":"source/_posts/环境搭建/2016-11-02-CentOS搭建PHP环境.md","hash":"1ef5598134a6ea8bdc2e56045b84b6b3fa7d11f7","modified":1479008190000},{"_id":"source/_posts/环境搭建/2016-11-02-Node-js开发环境搭建.md","hash":"b3f75792d6e2ed198ecf242a8c10df6e2b1cfc60","modified":1479008190000},{"_id":"source/_posts/环境搭建/2016-11-08-Zibbix监控.md","hash":"b9ffadc10b8adecb11bf16c88afa64bc7ce390fa","modified":1479008190000},{"_id":"source/_posts/环境搭建/2016-11-08-检查Linux服务器性能.md","hash":"7255f3819ed271c113ffe9967fd2fc79d53183fe","modified":1479008190000},{"_id":"source/_posts/环境搭建/2016-11-08-用Hexo搭建博客.md","hash":"d6d5ee5eb53d309a1381986581cbf3a29ed08069","modified":1479008190000},{"_id":"source/_posts/环境搭建/2016-11-08-用Jekyll搭建博客.md","hash":"b242a15128a6c35c8119eaa36df14b2a37c04106","modified":1479008190000},{"_id":"source/_posts/系统管理/2016-11-02-Centos网络端口.md","hash":"143b088dba1e54f424b5555be9af9cd79cb0df53","modified":1479008190000},{"_id":"source/_posts/环境搭建/2016-11-10-GitLab服务器搭建.md","hash":"79ed087c3a877b1ac49e4e0e646ce87f6c6e22bd","modified":1479008190000},{"_id":"source/_posts/系统管理/2016-11-02-Linux内核升级.md","hash":"6aa30eb34c5f88fcf2472d72c09255b4666a4f3a","modified":1479008190000},{"_id":"source/_posts/系统管理/2016-11-02-SSH远程重装Centos系统.md","hash":"801a61d57b6eb49b5c6eb976937d63783a45da3f","modified":1479008190000},{"_id":"source/_posts/系统管理/2016-11-02-VNC服务.md","hash":"971e2a079b9dc5f8c2d0e3cf500eeb549106f9aa","modified":1479008190000},{"_id":"source/_posts/系统管理/2016-11-02-grub引导修复.md","hash":"e02c928d58ee9bf0c0287cd3cb7c5b8727cf4d64","modified":1479008190000},{"_id":"source/_posts/系统管理/2016-11-02-iptables防火墙.md","hash":"5633e0eaf882974ce37810bb95bafd16cc25e3d5","modified":1479008190000},{"_id":"source/_posts/系统管理/2016-11-03-LVM磁盘管理.md","hash":"2ed2768876517c867910b16a16a19046ecc6dfc7","modified":1479008190000},{"_id":"source/_posts/系统管理/2016-11-03-服务器入侵肉鸡发包.md","hash":"dcce440eedf689c2b139538a0f1240906fd65d95","modified":1479008190000},{"_id":"source/_posts/系统管理/2016-11-11-swap分区转换.md","hash":"c2f8dd3722da9dec9fd6c2bf0a622e73bb9471d8","modified":1479008190000},{"_id":"source/_posts/虚拟化/2016-11-03-Docker安装.md","hash":"fc5a90ea8b0ccfce48dbc6a40c5a6c06ee8b0d86","modified":1479008190000},{"_id":"source/_posts/虚拟化/2016-11-03-KVM虚拟化.md","hash":"29820e16db7e47fc63c9f105398e875e64baa510","modified":1479008190000},{"_id":"source/_posts/虚拟化/2016-11-03-tomcat单机多实例.md","hash":"cb51cf5dffc10c0e0b8538ee6a8e325ce17c4e78","modified":1479008190000},{"_id":"source/_posts/虚拟化/2016-11-03-Docker常用命令.md","hash":"110452a1c4a2d3e5a138147f13b3284699c24478","modified":1479008190000},{"_id":"source/_posts/集群自动化/2016-11-03-集群、自动化链接更新页.md","hash":"2e69b3d7afe48c8a5b8b25e87c29baa5fe7da39c","modified":1479008190000},{"_id":"themes/next5.1/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1478941112000},{"_id":"themes/next5.1/layout/_macro/post-collapse.swig","hash":"43c3433155ccd9abcbe7dce2e6bfa1f3a66af18b","modified":1478941112000},{"_id":"themes/next5.1/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1478941112000},{"_id":"themes/next5.1/layout/_macro/reward.swig","hash":"d605dd356630f22e9b227d9878297920ad24020b","modified":1479024452000},{"_id":"themes/next5.1/layout/_macro/post.swig","hash":"92931468492e79e0c15e96f6bdb4b0098735bcf2","modified":1479024579000},{"_id":"themes/next5.1/layout/_macro/sidebar.swig","hash":"b488de49d229a2dd50d03f3471d3316c2bb3c4eb","modified":1479007666000},{"_id":"themes/next5.1/layout/_macro/wechat-subscriber.swig","hash":"14e785adeb0e671ba0ff9a553e6f0d8def6c670c","modified":1478941112000},{"_id":"themes/next5.1/layout/_partials/comments.swig","hash":"7a3ef28678467c45ee9416b41b943252e8036285","modified":1478941112000},{"_id":"themes/next5.1/layout/_partials/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1478941112000},{"_id":"themes/next5.1/layout/_partials/footer.swig","hash":"0b5a0936ef7bd1114a4683078bafac62f878eb4e","modified":1478965477000},{"_id":"themes/next5.1/layout/_partials/head.swig","hash":"ca56f92e2fa82b03853869f5073ee1a5626a4796","modified":1478941112000},{"_id":"themes/next5.1/layout/_partials/page-header.swig","hash":"39d613e5a9f8389d4ea52d6082502af8e833b9f2","modified":1478941112000},{"_id":"themes/next5.1/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1478941112000},{"_id":"themes/next5.1/layout/_partials/header.swig","hash":"cf9a2afff726a2e4a3b8787ff4622d54186fe776","modified":1479048701000},{"_id":"themes/next5.1/layout/_partials/search.swig","hash":"1431719d1dbba3f5ee385eebc46376d1a960b2d5","modified":1478941112000},{"_id":"themes/next5.1/layout/_scripts/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1478941112000},{"_id":"themes/next5.1/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1478941112000},{"_id":"themes/next5.1/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1478941112000},{"_id":"themes/next5.1/layout/_scripts/.DS_Store","hash":"334dfaf748cf4d37f681f803517f2a2d9b5cabf6","modified":1479026182000},{"_id":"themes/next5.1/layout/_scripts/vendors.swig","hash":"0b91cadecead8e0b5211cc42b085998d94af503a","modified":1478941112000},{"_id":"themes/next5.1/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1478941112000},{"_id":"themes/next5.1/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1478941112000},{"_id":"themes/next5.1/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1478941112000},{"_id":"themes/next5.1/scripts/tags/note.js","hash":"6752925eedbdb939d8ec4d11bdfb75199f18dd70","modified":1478941112000},{"_id":"themes/next5.1/source/css/.DS_Store","hash":"29ae4e85c366a37acb38173b9bb977701f4aa20e","modified":1479137612000},{"_id":"themes/next5.1/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1478941112000},{"_id":"themes/next5.1/source/images/algolia_logo.svg","hash":"90035272fa31a3f65b3c0e2cb8a633876ef457dc","modified":1478941112000},{"_id":"themes/next5.1/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1478941112000},{"_id":"themes/next5.1/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1478941112000},{"_id":"themes/next5.1/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1478941112000},{"_id":"themes/next5.1/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1478941112000},{"_id":"themes/next5.1/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1478941112000},{"_id":"themes/next5.1/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1478941112000},{"_id":"themes/next5.1/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1478941112000},{"_id":"themes/next5.1/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1478941112000},{"_id":"themes/next5.1/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1478941112000},{"_id":"themes/next5.1/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1478941112000},{"_id":"themes/next5.1/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1478941112000},{"_id":"themes/next5.1/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1478941112000},{"_id":"themes/next5.1/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1478941112000},{"_id":"themes/next5.1/source/js/.DS_Store","hash":"31c2f5727b698385605f0ee26880da82ab432572","modified":1479043742000},{"_id":"themes/next5.1/source/lib/.DS_Store","hash":"7ac245ff7f556501079c9c340cb9d49c4b77a0fc","modified":1479137211000},{"_id":"themes/next5.1/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1478941112000},{"_id":"themes/next5.1/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1478941112000},{"_id":"themes/next5.1/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1478941112000},{"_id":"themes/next5.1/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1478941112000},{"_id":"themes/next5.1/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1478941112000},{"_id":"themes/next5.1/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1478941112000},{"_id":"themes/next5.1/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1479029397000},{"_id":"themes/next5.1/layout/_components/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1478941112000},{"_id":"themes/next5.1/layout/_components/algolia-search/dom.swig","hash":"636f1181dd5887a70b4a08ca8f655d4e46635792","modified":1478941112000},{"_id":"themes/next5.1/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1478941112000},{"_id":"themes/next5.1/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1478941112000},{"_id":"themes/next5.1/layout/_partials/search/localsearch.swig","hash":"ff5523d5dacaa77a55a24e50e6e6530c3b98bfad","modified":1478941112000},{"_id":"themes/next5.1/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1478941112000},{"_id":"themes/next5.1/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1478941112000},{"_id":"themes/next5.1/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1478941112000},{"_id":"themes/next5.1/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1478941112000},{"_id":"themes/next5.1/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1478941112000},{"_id":"themes/next5.1/layout/_partials/share/jiathis.swig","hash":"63315fcf210799f894208c9f512737096df84962","modified":1478941112000},{"_id":"themes/next5.1/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1478941112000},{"_id":"themes/next5.1/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1478941112000},{"_id":"themes/next5.1/layout/_scripts/third-party/analytics.swig","hash":"0a89c04055bade7baa5962f1d5aefe438d83a244","modified":1478941112000},{"_id":"themes/next5.1/layout/_scripts/third-party/localsearch.swig","hash":"b460e27db3dcd4ab40b17d8926a5c4e624f293a9","modified":1478941112000},{"_id":"themes/next5.1/layout/_scripts/third-party/comments.swig","hash":"82a2ac14d4200480a36bf10abcc3cc554ad744d6","modified":1478941112000},{"_id":"themes/next5.1/layout/_scripts/third-party/lean-analytics.swig","hash":"92dc60821307fc9769bea9b2d60adaeb798342af","modified":1478941112000},{"_id":"themes/next5.1/layout/_scripts/third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1478941112000},{"_id":"themes/next5.1/layout/_scripts/third-party/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1478941112000},{"_id":"themes/next5.1/layout/_scripts/third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1478941112000},{"_id":"themes/next5.1/source/css/_custom/custom.styl","hash":"fd86220808ee982094a7260225e553ae05f16b65","modified":1479137623000},{"_id":"themes/next5.1/source/css/_mixins/Pisces.styl","hash":"715d5b40dc52f319fe4bff0325beb874774d9bd9","modified":1478941112000},{"_id":"themes/next5.1/source/css/_mixins/base.styl","hash":"78a83c38f69a8747bb74e420e6c9eeef1ea76525","modified":1478941112000},{"_id":"themes/next5.1/source/css/_schemes/.DS_Store","hash":"a676ab247d4ffaa3b8e8ff9d4898f023e5afe153","modified":1479031326000},{"_id":"themes/next5.1/source/css/_variables/Mist.styl","hash":"c8d35a6b9e3bff6d8fdb66de853065af9d37562d","modified":1478941112000},{"_id":"themes/next5.1/source/css/_variables/Pisces.styl","hash":"3ead77befa064d6327dc7afd0a5af7be59a5f196","modified":1478941112000},{"_id":"themes/next5.1/source/css/_variables/base.styl","hash":"3f0d6aa424f434e82ea507f740eeff110f996269","modified":1478941112000},{"_id":"themes/next5.1/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1478941112000},{"_id":"themes/next5.1/source/js/src/algolia-search.js","hash":"96b29f69b8b916b22f62c9959a117b5a968200a5","modified":1478941112000},{"_id":"themes/next5.1/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1478941112000},{"_id":"themes/next5.1/source/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1478941112000},{"_id":"themes/next5.1/source/js/src/bootstrap.js","hash":"39bf93769d9080fa01a9a875183b43198f79bc19","modified":1478941112000},{"_id":"themes/next5.1/source/js/src/particle.js","hash":"ecf57818db68579e9cfd86248caa096ef7d4f11b","modified":1479043075000},{"_id":"themes/next5.1/source/js/src/post-details.js","hash":"2038f54e289b6da5def09689e69f623187147be5","modified":1478941112000},{"_id":"themes/next5.1/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1478941112000},{"_id":"themes/next5.1/source/js/src/utils.js","hash":"384e17ff857f073060f5bf8c6e4f4b7353236331","modified":1478941112000},{"_id":"themes/next5.1/source/lib/algolia-instant-search/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1479137206000},{"_id":"themes/next5.1/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1478941112000},{"_id":"themes/next5.1/source/lib/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1478941112000},{"_id":"themes/next5.1/source/lib/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1478941112000},{"_id":"themes/next5.1/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1478941112000},{"_id":"themes/next5.1/source/lib/font-awesome/.bower.json","hash":"c1072942459fa0880e8a33a1bd929176b62b4171","modified":1478941112000},{"_id":"themes/next5.1/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1478941112000},{"_id":"themes/next5.1/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1478941112000},{"_id":"themes/next5.1/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1478941112000},{"_id":"themes/next5.1/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1478941112000},{"_id":"themes/next5.1/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1478941112000},{"_id":"themes/next5.1/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1478941112000},{"_id":"themes/next5.1/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1478941112000},{"_id":"themes/next5.1/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1478941112000},{"_id":"themes/next5.1/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1478941112000},{"_id":"themes/next5.1/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1478941112000},{"_id":"themes/next5.1/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1478941112000},{"_id":"themes/next5.1/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1478941112000},{"_id":"themes/next5.1/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1478941112000},{"_id":"themes/next5.1/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1478941112000},{"_id":"themes/next5.1/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1478941112000},{"_id":"themes/next5.1/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1478941112000},{"_id":"themes/next5.1/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1478941112000},{"_id":"themes/next5.1/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1478941112000},{"_id":"themes/next5.1/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1478941112000},{"_id":"themes/next5.1/source/images/avatar.jpg","hash":"81e23483dfdb9c3b637180f216a5a412222bf51d","modified":1478526928000},{"_id":"themes/next5.1/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1478941112000},{"_id":"themes/next5.1/layout/_scripts/third-party/analytics/baidu-analytics.swig","hash":"7c43d66da93cde65b473a7d6db2a86f9a42647d6","modified":1478941112000},{"_id":"themes/next5.1/layout/_scripts/third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1478941112000},{"_id":"themes/next5.1/layout/_scripts/third-party/analytics/busuanzi-counter.swig","hash":"4fcbf57c4918528ab51d3d042cff92cf5aefb599","modified":1478941112000},{"_id":"themes/next5.1/layout/_scripts/third-party/analytics/facebook-sdk.swig","hash":"394d008e5e94575280407ad8a1607a028026cbc3","modified":1478941112000},{"_id":"themes/next5.1/layout/_scripts/third-party/analytics/google-analytics.swig","hash":"30a23fa7e816496fdec0e932aa42e2d13098a9c2","modified":1478941112000},{"_id":"themes/next5.1/layout/_scripts/third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1478941112000},{"_id":"themes/next5.1/layout/_scripts/third-party/comments/disqus.swig","hash":"fb1d04ede838b52ca7541973f86c3810f1ad396e","modified":1478941112000},{"_id":"themes/next5.1/layout/_scripts/third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1478941112000},{"_id":"themes/next5.1/layout/_scripts/third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1478941112000},{"_id":"themes/next5.1/source/css/_common/components/back-to-top.styl","hash":"b49efc66bd055a2d0be7deabfcb02ee72a9a28c8","modified":1478941112000},{"_id":"themes/next5.1/source/css/_common/components/buttons.styl","hash":"0dfb4b3ba3180d7285e66f270e1d3fa0f132c3d2","modified":1478941112000},{"_id":"themes/next5.1/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1478941112000},{"_id":"themes/next5.1/source/css/_common/components/components.styl","hash":"10994990d6e0b4d965a728a22cf7f6ee29cae9f6","modified":1478941112000},{"_id":"themes/next5.1/source/css/_common/components/pagination.styl","hash":"711c8830886619d4f4a0598b0cde5499dce50c62","modified":1478941112000},{"_id":"themes/next5.1/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1478941112000},{"_id":"themes/next5.1/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1478941112000},{"_id":"themes/next5.1/source/css/_common/scaffolding/base.styl","hash":"5304f99581da3a31de3ecec959b7adf9002fde83","modified":1478941112000},{"_id":"themes/next5.1/source/css/_common/scaffolding/helpers.styl","hash":"54c90cf7bdbf5c596179d8dae6e671bad1292662","modified":1478941112000},{"_id":"themes/next5.1/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1478941112000},{"_id":"themes/next5.1/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1478941112000},{"_id":"themes/next5.1/source/css/_common/scaffolding/scaffolding.styl","hash":"013619c472c7e4b08311c464fcbe9fcf5edde603","modified":1478941112000},{"_id":"themes/next5.1/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1478941112000},{"_id":"themes/next5.1/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1478941112000},{"_id":"themes/next5.1/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1478941112000},{"_id":"themes/next5.1/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1478941112000},{"_id":"themes/next5.1/source/css/_schemes/Mist/_posts-expanded.styl","hash":"4303776991ef28f5742ca51c7dffe6f12f0acf34","modified":1478941112000},{"_id":"themes/next5.1/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1478941112000},{"_id":"themes/next5.1/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1478941112000},{"_id":"themes/next5.1/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1478941112000},{"_id":"themes/next5.1/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1478941112000},{"_id":"themes/next5.1/source/css/_schemes/Muse/_menu.styl","hash":"c2c6c4f6434b4f94aac2af5861cd769427f0ee10","modified":1478941112000},{"_id":"themes/next5.1/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1478941112000},{"_id":"themes/next5.1/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1478941112000},{"_id":"themes/next5.1/source/css/_schemes/Pisces/_brand.styl","hash":"be22ad34f546a07f6d56b424338cdd898683eea4","modified":1478941112000},{"_id":"themes/next5.1/source/css/_schemes/Pisces/_full-image.styl","hash":"938d39eedc6e3d33918c1145a5bf1e79991d3fcf","modified":1478941112000},{"_id":"themes/next5.1/source/css/_schemes/Pisces/_layout.styl","hash":"5398b9776838152e97dd57dfe578494ccc40280d","modified":1479031345000},{"_id":"themes/next5.1/source/css/_schemes/Pisces/_layout.styl.bak","hash":"7b206cd8921bc042f8e37a74aea1abc8a5ec8ab4","modified":1478941112000},{"_id":"themes/next5.1/source/css/_schemes/Pisces/_menu.styl","hash":"d09280e5b79f3b573edb30f30c7a5f03ac640986","modified":1478941112000},{"_id":"themes/next5.1/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1478941112000},{"_id":"themes/next5.1/source/css/_schemes/Pisces/_sidebar.styl","hash":"d4b7bd610ca03dbb2f5b66631c0e84a79fb4660b","modified":1478941112000},{"_id":"themes/next5.1/source/css/_schemes/Pisces/index.styl","hash":"1b10ba2d3ad0c063c418dc94a0b7e0db4b342c53","modified":1478941112000},{"_id":"themes/next5.1/source/js/src/schemes/pisces.js","hash":"7506e7490c69a200831393c38d25e91c156bd471","modified":1478941112000},{"_id":"themes/next5.1/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1478941112000},{"_id":"themes/next5.1/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1478941112000},{"_id":"themes/next5.1/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1478941112000},{"_id":"themes/next5.1/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1478941112000},{"_id":"themes/next5.1/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1478941112000},{"_id":"themes/next5.1/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1478941112000},{"_id":"themes/next5.1/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1478941112000},{"_id":"themes/next5.1/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1478941112000},{"_id":"themes/next5.1/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1478941112000},{"_id":"themes/next5.1/source/lib/font-awesome/css/font-awesome.css","hash":"4eda182cbcc046dbf449aef97c02c230cf80a494","modified":1478941112000},{"_id":"themes/next5.1/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1478941112000},{"_id":"themes/next5.1/source/lib/font-awesome/css/font-awesome.min.css","hash":"fb5b49426dee7f1508500e698d1b3c6b04c8fcce","modified":1478941112000},{"_id":"themes/next5.1/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1478941112000},{"_id":"themes/next5.1/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1478941112000},{"_id":"themes/next5.1/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1478941112000},{"_id":"themes/next5.1/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1478941112000},{"_id":"themes/next5.1/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"1b22f17fdc38070de50e6d1ab3a32da71aa2d819","modified":1478941112000},{"_id":"themes/next5.1/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"965ce8f688fedbeed504efd498bc9c1622d12362","modified":1478941112000},{"_id":"themes/next5.1/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1478941112000},{"_id":"themes/next5.1/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"6d7e6a5fc802b13694d8820fc0138037c0977d2e","modified":1478941112000},{"_id":"themes/next5.1/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"97e438cc545714309882fbceadbf344fcaddcec5","modified":1478941112000},{"_id":"themes/next5.1/source/css/_common/components/footer/footer.styl","hash":"8994ffcce84deac0471532f270f97c44fea54dc0","modified":1478941112000},{"_id":"themes/next5.1/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1478941112000},{"_id":"themes/next5.1/source/css/_common/components/header/menu.styl","hash":"c890ce7fe933abad7baf39764a01894924854e92","modified":1478941112000},{"_id":"themes/next5.1/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1478941112000},{"_id":"themes/next5.1/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1478941112000},{"_id":"themes/next5.1/source/css/_common/components/highlight/highlight.styl","hash":"4b7f81e1006e7acee3d1c840ccba155239f830cc","modified":1478941112000},{"_id":"themes/next5.1/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1478941112000},{"_id":"themes/next5.1/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1478941112000},{"_id":"themes/next5.1/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1478941112000},{"_id":"themes/next5.1/source/css/_common/components/pages/archive.styl","hash":"7778920dd105fa4de3a7ab206eeba30b1a7bac45","modified":1478941112000},{"_id":"themes/next5.1/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1478941112000},{"_id":"themes/next5.1/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1478941112000},{"_id":"themes/next5.1/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1478941112000},{"_id":"themes/next5.1/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1478941112000},{"_id":"themes/next5.1/source/css/_common/components/post/post-collapse.styl","hash":"8fae54591877a73dff0b29b2be2e8935e3c63575","modified":1478941112000},{"_id":"themes/next5.1/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1478941112000},{"_id":"themes/next5.1/source/css/_common/components/post/post-expand.styl","hash":"b25132fe6a7ad67059a2c3afc60feabb479bdd75","modified":1478941112000},{"_id":"themes/next5.1/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1478941112000},{"_id":"themes/next5.1/source/css/_common/components/post/post-meta.styl","hash":"0bf3eeb5b97ba6ce8ad008d66c81aec532bc9b91","modified":1478941112000},{"_id":"themes/next5.1/source/css/_common/components/post/post-more-link.styl","hash":"15063d79b5befc21820baf05d6f20cc1c1787477","modified":1478941112000},{"_id":"themes/next5.1/source/css/_common/components/post/post-nav.styl","hash":"c6dab7661a6b8c678b21b7eb273cef7100f970f6","modified":1478941112000},{"_id":"themes/next5.1/source/css/_common/components/post/post-reward.styl","hash":"e792c8dc41561c96d128e9b421187f1c3dc978a0","modified":1478941112000},{"_id":"themes/next5.1/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1478941112000},{"_id":"themes/next5.1/source/css/_common/components/post/post-title.styl","hash":"963105a531403d7aad6d9e5e23e3bfabb8ec065a","modified":1478941112000},{"_id":"themes/next5.1/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1478941112000},{"_id":"themes/next5.1/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1478941112000},{"_id":"themes/next5.1/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"c44f6a553ec7ea5508f2054a13be33a62a15d3a9","modified":1478941112000},{"_id":"themes/next5.1/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1478941112000},{"_id":"themes/next5.1/source/css/_common/components/post/post.styl","hash":"4eb18b12fa0ea6c35925d9a64f64e2a7dae8c7fd","modified":1478941112000},{"_id":"themes/next5.1/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"2e7ec9aaa3293941106b1bdd09055246aa3c3dc6","modified":1478941112000},{"_id":"themes/next5.1/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1478941112000},{"_id":"themes/next5.1/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"7690b9596ec3a49befbe529a5a2649abec0faf76","modified":1478941112000},{"_id":"themes/next5.1/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"2d3abbc85b979a648e0e579e45f16a6eba49d1e7","modified":1478941112000},{"_id":"themes/next5.1/source/css/_common/components/sidebar/sidebar.styl","hash":"234facd038f144bd0fe09a31ed1357c5d74c517f","modified":1478941112000},{"_id":"themes/next5.1/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1478941112000},{"_id":"themes/next5.1/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1478941112000},{"_id":"themes/next5.1/source/css/_common/components/tags/note.styl","hash":"74d0ba86f698165d13402670382a822c8736a556","modified":1478941112000},{"_id":"themes/next5.1/source/css/_common/components/tags/full-image.styl","hash":"618f73450cf541f88a4fddc3d22898aee49d105d","modified":1478941112000},{"_id":"themes/next5.1/source/css/_common/components/tags/tags.styl","hash":"3eb73cee103b810fa56901577ecb9c9bb1793cff","modified":1478941112000},{"_id":"themes/next5.1/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1478941112000},{"_id":"themes/next5.1/source/css/_common/components/third-party/algolia-search.styl","hash":"eba491ae624b4c843c8be4c94a044085dad4ba0f","modified":1478941112000},{"_id":"themes/next5.1/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1478941112000},{"_id":"themes/next5.1/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"b03f891883446f3a5548b7cc90d29c77e62f1053","modified":1478941112000},{"_id":"themes/next5.1/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1478941112000},{"_id":"themes/next5.1/source/css/_common/components/third-party/localsearch.styl","hash":"637c6b32c58ecf40041be6e911471cd82671919b","modified":1478941112000},{"_id":"themes/next5.1/source/css/_common/components/third-party/third-party.styl","hash":"5433b6bc9d8f0c4685e760b326445ac51245b0a8","modified":1478941112000},{"_id":"themes/next5.1/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1478941112000},{"_id":"themes/next5.1/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1478941112000},{"_id":"themes/next5.1/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"8b8e8cbce98a9296c8fd77f512ae85d945f65d40","modified":1478941112000},{"_id":"themes/next5.1/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"8b8e8cbce98a9296c8fd77f512ae85d945f65d40","modified":1478941112000},{"_id":"themes/next5.1/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1478941112000},{"_id":"themes/next5.1/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1478941112000},{"_id":"themes/next5.1/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1478941112000},{"_id":"themes/next5.1/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1478941112000},{"_id":"themes/next5.1/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1478941112000},{"_id":"themes/next5.1/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1478941112000},{"_id":"themes/next5.1/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"61d8d967807ef12598d81582fa95b9f600c3ee01","modified":1478941112000},{"_id":"themes/next5.1/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1478941112000},{"_id":"themes/next5.1/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"c0522272bbaef2acb3d341912754d6ea2d0ecfc0","modified":1478941112000}],"Category":[{"name":"综合","_id":"civi8ouch00052c6n957z6wut"},{"name":"Dev","_id":"civi8ouia000w2c6nlt97n0jx"},{"name":"Dve","_id":"civi8ouiq00172c6nbwn01eif"},{"name":"VPN","_id":"civi8ouit001d2c6nna1lpfvw"},{"name":"web服务器","_id":"civi8ouiy001i2c6nbl0w9gmo"},{"name":"数据库","_id":"civi8ouj1001n2c6nr8zfj7ly"},{"name":"杂项","_id":"civi8ouj6001v2c6nbgiao4ui"},{"name":"文章阅读","_id":"civi8oujo002m2c6nc2ao3oxs"},{"name":"环境搭建","_id":"civi8oukf003w2c6nh3b4fg4p"},{"name":"系统管理","_id":"civi8oukq004t2c6nrcjlmpuw"},{"name":"虚拟化","_id":"civi8oul0005u2c6n8bu5r2z5"},{"name":"集群自动化","_id":"civi8oul300692c6n8uvsko6g"}],"Data":[],"Page":[{"_content":"<!DOCTYPE HTML>\n<html>\n<head>\n\t<title>404 - leolan'blog</title>\n\t<meta name=\"description\" content=\"404错误，页面不存在！\">\n\t<meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n\t<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n\t<meta name=\"robots\" content=\"all\" />\n\t<meta name=\"robots\" content=\"index,follow\"/>\n</head>\n<body>\n\t<script type=\"text/javascript\" src=\"http://qzonestyle.gtimg.cn/qzone_v6/lostchild/search_children.js\" charset=\"utf-8\" width=\"auto\"></script>\n</body>\n</html>\n","source":"404.html","raw":"<!DOCTYPE HTML>\n<html>\n<head>\n\t<title>404 - leolan'blog</title>\n\t<meta name=\"description\" content=\"404错误，页面不存在！\">\n\t<meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n\t<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n\t<meta name=\"robots\" content=\"all\" />\n\t<meta name=\"robots\" content=\"index,follow\"/>\n</head>\n<body>\n\t<script type=\"text/javascript\" src=\"http://qzonestyle.gtimg.cn/qzone_v6/lostchild/search_children.js\" charset=\"utf-8\" width=\"auto\"></script>\n</body>\n</html>\n","date":"2016-11-14T13:41:34.000Z","updated":"2016-11-14T13:41:34.000Z","path":"404.html","title":"","comments":1,"layout":"page","_id":"civi8oua900002c6nwvbdx3wc","content":"<!DOCTYPE HTML>\n<html>\n<head>\n\t<title>404 - leolan'blog</title>\n\t<meta name=\"description\" content=\"404错误，页面不存在！\">\n\t<meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\">\n\t<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n\t<meta name=\"robots\" content=\"all\">\n\t<meta name=\"robots\" content=\"index,follow\">\n</head>\n<body>\n\t<script type=\"text/javascript\" src=\"http://qzonestyle.gtimg.cn/qzone_v6/lostchild/search_children.js\" charset=\"utf-8\" width=\"auto\"></script>\n</body>\n</html>\n","excerpt":"","more":"<!DOCTYPE HTML>\n<html>\n<head>\n\t<title>404 - leolan'blog</title>\n\t<meta name=\"description\" content=\"404错误，页面不存在！\">\n\t<meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n\t<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n\t<meta name=\"robots\" content=\"all\" />\n\t<meta name=\"robots\" content=\"index,follow\"/>\n</head>\n<body>\n\t<script type=\"text/javascript\" src=\"http://qzonestyle.gtimg.cn/qzone_v6/lostchild/search_children.js\" charset=\"utf-8\" width=\"auto\"></script>\n</body>\n</html>\n"},{"title":"关于","date":"2016-10-30T04:39:04.000Z","type":"about","comments":0,"_content":"\n# 感谢\n\n 非常感谢您的来访！本博客是个人学习笔记，大部分内容来源于互联网，基本上都是本人测试之后写的。看了很多博文，踩过好些坑，本人整理资料有个习惯就是尽量简单，符合实际情况的处理方式，考虑问题尽量全面。所以本博客也尽量做到简洁明了的同时能抓住重点，希望对您有所帮助。\n\n**本文少量几篇是没有条件（实验环境）进行测试，还有少量的文章是转载的文章，都会在文章中适当的说明，如果侵犯到您的权益，请立刻联系我，非常感谢！**\n\n抛开装逼的嫌疑不说，来点实际的，国内我习惯用QQ邮箱：**842632422@qq.com**\nQQ：842632422\nGmail：myleolan@gmail.com\nfacebook：https://www.facebook.com/MyLeoLan\n有任何问题欢迎给我发邮件，当然也非常欢迎喜欢计算机、软件、物联网、Linux等等的朋友打扰。非常感谢！","source":"about/index.md","raw":"title: 关于\ndate: 2016-10-30 12:39:04\ntype: \"about\"\ncomments: false\n---\n\n# 感谢\n\n 非常感谢您的来访！本博客是个人学习笔记，大部分内容来源于互联网，基本上都是本人测试之后写的。看了很多博文，踩过好些坑，本人整理资料有个习惯就是尽量简单，符合实际情况的处理方式，考虑问题尽量全面。所以本博客也尽量做到简洁明了的同时能抓住重点，希望对您有所帮助。\n\n**本文少量几篇是没有条件（实验环境）进行测试，还有少量的文章是转载的文章，都会在文章中适当的说明，如果侵犯到您的权益，请立刻联系我，非常感谢！**\n\n抛开装逼的嫌疑不说，来点实际的，国内我习惯用QQ邮箱：**842632422@qq.com**\nQQ：842632422\nGmail：myleolan@gmail.com\nfacebook：https://www.facebook.com/MyLeoLan\n有任何问题欢迎给我发邮件，当然也非常欢迎喜欢计算机、软件、物联网、Linux等等的朋友打扰。非常感谢！","updated":"2016-11-10T23:46:14.000Z","path":"about/index.html","layout":"page","_id":"civi8oucd00022c6nrjnc4u7u","content":"<h1 id=\"感谢\"><a href=\"#感谢\" class=\"headerlink\" title=\"感谢\"></a>感谢</h1><p> 非常感谢您的来访！本博客是个人学习笔记，大部分内容来源于互联网，基本上都是本人测试之后写的。看了很多博文，踩过好些坑，本人整理资料有个习惯就是尽量简单，符合实际情况的处理方式，考虑问题尽量全面。所以本博客也尽量做到简洁明了的同时能抓住重点，希望对您有所帮助。</p>\n<p><strong>本文少量几篇是没有条件（实验环境）进行测试，还有少量的文章是转载的文章，都会在文章中适当的说明，如果侵犯到您的权益，请立刻联系我，非常感谢！</strong></p>\n<p>抛开装逼的嫌疑不说，来点实际的，国内我习惯用QQ邮箱：<strong>842632422@qq.com</strong><br>QQ：842632422<br>Gmail：myleolan@gmail.com<br>facebook：<a href=\"https://www.facebook.com/MyLeoLan\" target=\"_blank\" rel=\"external\">https://www.facebook.com/MyLeoLan</a><br>有任何问题欢迎给我发邮件，当然也非常欢迎喜欢计算机、软件、物联网、Linux等等的朋友打扰。非常感谢！</p>\n","excerpt":"","more":"<h1 id=\"感谢\"><a href=\"#感谢\" class=\"headerlink\" title=\"感谢\"></a>感谢</h1><p> 非常感谢您的来访！本博客是个人学习笔记，大部分内容来源于互联网，基本上都是本人测试之后写的。看了很多博文，踩过好些坑，本人整理资料有个习惯就是尽量简单，符合实际情况的处理方式，考虑问题尽量全面。所以本博客也尽量做到简洁明了的同时能抓住重点，希望对您有所帮助。</p>\n<p><strong>本文少量几篇是没有条件（实验环境）进行测试，还有少量的文章是转载的文章，都会在文章中适当的说明，如果侵犯到您的权益，请立刻联系我，非常感谢！</strong></p>\n<p>抛开装逼的嫌疑不说，来点实际的，国内我习惯用QQ邮箱：<strong>842632422@qq.com</strong><br>QQ：842632422<br>Gmail：myleolan@gmail.com<br>facebook：<a href=\"https://www.facebook.com/MyLeoLan\">https://www.facebook.com/MyLeoLan</a><br>有任何问题欢迎给我发邮件，当然也非常欢迎喜欢计算机、软件、物联网、Linux等等的朋友打扰。非常感谢！</p>\n"},{"title":"留言板","date":"2016-11-14T09:21:10.000Z","_content":"<blockquote class=\"blockquote-center\">\n    Stay Hungry,Stay Foolish\n    <embed src=\"http://music.163.com/outchain/player?type=1&id=27955653 &auto=1&height=90\" border=\"0\"  marginheight=\"0\" width=330 height=110></embed> \n   <!--  <embed src=\"http://ofyfogrgx.bkt.clouddn.com//blog/Apple%20&%20Stone%20-%20Lost.mp3\" autostart=\"true\" loop=\"true\" width=\"330\" height=\"110\"></embed>-->\n</blockquote>\n<br/>\n\n<span id=\"yu-2\">最近访客</span>\n<div class=\"ds-recent-visitors\" data-num-items=\"39\" data-avatar-size=\"40\" id=\"ds-recent-visitors\"></div>\n<br/>\n","source":"guestbook/index.md","raw":"---\ntitle: 留言板\ndate: 2016-11-14 17:21:10\n---\n<blockquote class=\"blockquote-center\">\n    Stay Hungry,Stay Foolish\n    <embed src=\"http://music.163.com/outchain/player?type=1&id=27955653 &auto=1&height=90\" border=\"0\"  marginheight=\"0\" width=330 height=110></embed> \n   <!--  <embed src=\"http://ofyfogrgx.bkt.clouddn.com//blog/Apple%20&%20Stone%20-%20Lost.mp3\" autostart=\"true\" loop=\"true\" width=\"330\" height=\"110\"></embed>-->\n</blockquote>\n<br/>\n\n<span id=\"yu-2\">最近访客</span>\n<div class=\"ds-recent-visitors\" data-num-items=\"39\" data-avatar-size=\"40\" id=\"ds-recent-visitors\"></div>\n<br/>\n","updated":"2016-11-14T15:52:02.000Z","path":"guestbook/index.html","_id":"civi8oucg00042c6n56gjs7l1","comments":1,"layout":"page","content":"<p><blockquote class=\"blockquote-center\"><br>    Stay Hungry,Stay Foolish<br>    <embed src=\"http://music.163.com/outchain/player?type=1&id=27955653 &auto=1&height=90\" border=\"0\" marginheight=\"0\" width=\"330\" height=\"110\"><br>   <!--  <embed src=\"http://ofyfogrgx.bkt.clouddn.com//blog/Apple%20&%20Stone%20-%20Lost.mp3\" autostart=\"true\" loop=\"true\" width=\"330\" height=\"110\"></embed>--><br></blockquote><br><br></p>\n<p><span id=\"yu-2\">最近访客</span></p>\n<p><div class=\"ds-recent-visitors\" data-num-items=\"39\" data-avatar-size=\"40\" id=\"ds-recent-visitors\"></div><br><br></p>\n","excerpt":"","more":"<p><blockquote class=\"blockquote-center\"><br>    Stay Hungry,Stay Foolish<br>    <embed src=\"http://music.163.com/outchain/player?type=1&id=27955653 &auto=1&height=90\" border=\"0\"  marginheight=\"0\" width=330 height=110></embed><br>   <!--  <embed src=\"http://ofyfogrgx.bkt.clouddn.com//blog/Apple%20&%20Stone%20-%20Lost.mp3\" autostart=\"true\" loop=\"true\" width=\"330\" height=\"110\"></embed>--><br></blockquote><br><br/></p>\n<p><span id=\"yu-2\">最近访客</span></p>\n<p><div class=\"ds-recent-visitors\" data-num-items=\"39\" data-avatar-size=\"40\" id=\"ds-recent-visitors\"></div><br><br/></p>\n"},{"title":"分类","date":"2016-10-30T04:39:04.000Z","type":"categories","comments":0,"_content":"\n这里是分类","source":"categories/index.md","raw":"title: 分类\ndate: 2016-10-30 12:39:04\ntype: \"categories\"\ncomments: false\n---\n\n这里是分类","updated":"2016-11-07T13:55:29.000Z","path":"categories/index.html","layout":"page","_id":"civi8oucl00082c6nbepprel5","content":"<p>这里是分类</p>\n","excerpt":"","more":"<p>这里是分类</p>\n"},{"title":"标签","date":"2016-10-30T04:39:04.000Z","type":"tags","comments":0,"_content":"\n这里是标签","source":"tags/index.md","raw":"title: 标签\ndate: 2016-10-30 12:39:04\ntype: \"tags\"\ncomments: false\n---\n\n这里是标签","updated":"2016-11-07T13:55:29.000Z","path":"tags/index.html","layout":"page","_id":"civi8oucp000a2c6naztmatuo","content":"<p>这里是标签</p>\n","excerpt":"","more":"<p>这里是标签</p>\n"}],"Post":[{"title":"Git学习总结","comments":0,"abbrlink":43183,"date":"2016-10-07T05:25:24.000Z","_content":"## 从svn到git\n\n两者都是优秀的版本管理工具（giter请不要鄙视svner）\n* svn上手非常容易，操作简单\n* git功能强大，但是要熟练使用分支不算容易\n\ngit因为是分布式的，所以其核心就是分支（只有master分支情况下和svn差不多？），分支的意义在于，可以将项目代码按照功能、模块拆分成不同的分支。比如这个产品要加一个支付功能和一个登陆功能，可以创建两个分支，交给不同的开发人员并行开发。登陆功能先开发完，测试无误后合并改分支到master分支，master分支部署上线。支付功能虽然没有开发完成，但是在另一条分支上，所以产品上线和功能开发完全不受影响。这才是分布式开发的高效模式。\n\n被git坑了一个星期之后决心把官方文档看一下，结合实践经验进行了整理。\n\n- - -\n\n<!-- more -->\n\n## 新手常见问题\n\n1. 如何查看有哪些分支？\n`git branch -a`\n\n2. 如何强制检出/切换分支或分支指定文件\n`git checkout <branch> [file] [-f]`\n强制更新，以branch版本的代码为主\n\n3. 提交代码出现冲突冲突怎么办？\n`hint: Updates were rejected because the tip of your current branch is behind`\n`hint: its remote counterpart. Integrate the remote changes (e.g.`\n`hint: 'git pull ...') before pushing again.`\n`hint: See the 'Note about fast-forwards' in 'git push --help' for details.`\n先切换分支，然后拉取分支上最新的代码覆盖到本地\n`git pull`\n添加或者提交代码，解决冲突之后\n`git push`\n\n4. 如何新建分支\n`git checkout -b <branch_name>`  \n本地建立 branch 並立即切換到新分支\n`git branch -m <new_name>`\n修改分支名称  \n\n5. 从远程仓库拉取代码到本地仓库，并建立跟踪关系\n`git clone http://xxx.git`\n或者\n`get clone git@xxx.git`\n然后\n`git checkout -b <本地新分支名> <对应的远程分支名>`\n\n6. 远程仓库新建了一个分支，如何更新远程分支信息\n`git fetch <remote base>`\n\n7. 如何在远程仓库新建一个分支\n`git branch <branch name>`\n新建一个本地分支，按照正常流程提交完代码后，推送到远程\n`git push <remote base> <local branch>:<remote branch>`\n\n## 实用指令\n### reset\n`git reset [file]`\n取消暂存\n\n### remote\n查看远程仓库名\n\n`git remote -v`\n查看远程仓库url\n\n`git remote add <basename> <url>`\n新增远程仓库\n\n`git remote show <basename>`\n查看远程仓库详细信息\n\n`git remote rename <old basename> <new basename>`\n重命名远程仓库\n\n### pull\n相当于fetch和merge\n\n### push\n`git push [remote_branch] [local_branch]`\n推送本地仓库代码到远程仓库，相当于svn的commit\n\n`git push <remote base> [tag name]`\n推送本地标签到远程仓库\n\n`git push <remote base> <remote branch>:<local branch>`\n将本地分支推送到指定的远程分支\n\n`git push <remote base> --delete <remote branch>`\n删除远程分支\n\n### tag\n查看标签（用来标记标志性的稳定版本信息）\n\n`git tag -l '[expression]'`\n查看那符合正则表达式的\n\n`git tag -a <tag name> -m <comment>`\n添加带注释的标签\n\n`git tag -a <tag name> <md5>`\n对某个版本打标签\n\n`git tag [tag name]`\n如果没有标签名，则为查看所有标签。带标签名则为新建标签\n\n### merge\n`git merge <branch name>`\n将其他分支合并到本分支\n\n### commit\n`git commit -a -m 'xx'`\n暂存并提交\n\n### branch\n`git branch`\n查看本地仓库分支\n\n`git branch -v`\n查看本地仓库分支最后一次提交情况\n\n`git branch -vv`\n查看分支跟踪情况\n\n`git branch <branch name>`\n新建分支\n\n`git branch -d <branch name>`\n删除分支\n\n`git branch [--merged | --no-merged]`\n查看已合并|未合并的本地仓库分支\n\n`git branch -u <remote base>/<remote branch>`\n修改当前跟踪分支\n\n### commit\n`git commit -a -m 'xx'`\n提交并且暂存暂存的方法\n\n### checkout\n`git checkout -- [file]`\n恢复文件\n\n`git checkout -b [branchname] [tagname]`\n在特定的版本上创建一个新的分支并切换到此分支\n\n`git checkout -b [local branch] [remote base]/[remote branch]`\n将远程分支检出到本地分支\n\n`git checkout --track <remote base>/<remote branch>`\n让当前分支跟踪远程分支\n\n\n`git checkout --track <remote base>/<remote branch>`\n`git checkout -b <local branch> <remote base>/<remote branch>`\n让当前分支跟踪到远程分支。两条命令作用基本一致，不同的是第二条命令可以重命名检出的分支。\n\n### rebase\n`git rebase [basebranch]`\n变基是将一系列提交按照原有次序依次应用到另一分支上，而合并是把最终结果合在一起。\n\n## 小技巧\n\n### 查看配置\n`git config -1`\n\n### 设置git push 默认\n`git config --global push.default current`\n\n### 设置别名\n`git config --global alias.<name> <commend>`\n我的设置：\n`git config --global alias.st status`\n`git config --global alias.cm \"commit -m\"`\n`git config --global alias.ph \"push origin <local_repository>:<remote_repository>\"`\n\n### 保存用户名和密码\n\n#### 对于http(s)协议，可以用下面命令临时缓存\n`git config --global credential.helper cache`\n开启linux缓存\n`git config --global credential.helper wincred`\n开启windows缓存\n#### 对于ssh协议，可以用ssh  key，具体教程网上很多\n\n### 忽略文件\n默认方法是在当前项目目录下创建一个.gitignore文件，如果需要忽略的文件已经添加到版本库中，请先移除\n`git rm --cached [file]`\n不删除文件，只移除追踪。\n\n[权威教程](http://git-scm.com/book/zh/v2)\n","source":"_drafts/git.md","raw":"---\ntitle: Git学习总结\ncategories: 综合\ntags:\n  - Git\ncomments: false\nabbrlink: 43183\ndate: 2016-10-07 13:25:24\n---\n## 从svn到git\n\n两者都是优秀的版本管理工具（giter请不要鄙视svner）\n* svn上手非常容易，操作简单\n* git功能强大，但是要熟练使用分支不算容易\n\ngit因为是分布式的，所以其核心就是分支（只有master分支情况下和svn差不多？），分支的意义在于，可以将项目代码按照功能、模块拆分成不同的分支。比如这个产品要加一个支付功能和一个登陆功能，可以创建两个分支，交给不同的开发人员并行开发。登陆功能先开发完，测试无误后合并改分支到master分支，master分支部署上线。支付功能虽然没有开发完成，但是在另一条分支上，所以产品上线和功能开发完全不受影响。这才是分布式开发的高效模式。\n\n被git坑了一个星期之后决心把官方文档看一下，结合实践经验进行了整理。\n\n- - -\n\n<!-- more -->\n\n## 新手常见问题\n\n1. 如何查看有哪些分支？\n`git branch -a`\n\n2. 如何强制检出/切换分支或分支指定文件\n`git checkout <branch> [file] [-f]`\n强制更新，以branch版本的代码为主\n\n3. 提交代码出现冲突冲突怎么办？\n`hint: Updates were rejected because the tip of your current branch is behind`\n`hint: its remote counterpart. Integrate the remote changes (e.g.`\n`hint: 'git pull ...') before pushing again.`\n`hint: See the 'Note about fast-forwards' in 'git push --help' for details.`\n先切换分支，然后拉取分支上最新的代码覆盖到本地\n`git pull`\n添加或者提交代码，解决冲突之后\n`git push`\n\n4. 如何新建分支\n`git checkout -b <branch_name>`  \n本地建立 branch 並立即切換到新分支\n`git branch -m <new_name>`\n修改分支名称  \n\n5. 从远程仓库拉取代码到本地仓库，并建立跟踪关系\n`git clone http://xxx.git`\n或者\n`get clone git@xxx.git`\n然后\n`git checkout -b <本地新分支名> <对应的远程分支名>`\n\n6. 远程仓库新建了一个分支，如何更新远程分支信息\n`git fetch <remote base>`\n\n7. 如何在远程仓库新建一个分支\n`git branch <branch name>`\n新建一个本地分支，按照正常流程提交完代码后，推送到远程\n`git push <remote base> <local branch>:<remote branch>`\n\n## 实用指令\n### reset\n`git reset [file]`\n取消暂存\n\n### remote\n查看远程仓库名\n\n`git remote -v`\n查看远程仓库url\n\n`git remote add <basename> <url>`\n新增远程仓库\n\n`git remote show <basename>`\n查看远程仓库详细信息\n\n`git remote rename <old basename> <new basename>`\n重命名远程仓库\n\n### pull\n相当于fetch和merge\n\n### push\n`git push [remote_branch] [local_branch]`\n推送本地仓库代码到远程仓库，相当于svn的commit\n\n`git push <remote base> [tag name]`\n推送本地标签到远程仓库\n\n`git push <remote base> <remote branch>:<local branch>`\n将本地分支推送到指定的远程分支\n\n`git push <remote base> --delete <remote branch>`\n删除远程分支\n\n### tag\n查看标签（用来标记标志性的稳定版本信息）\n\n`git tag -l '[expression]'`\n查看那符合正则表达式的\n\n`git tag -a <tag name> -m <comment>`\n添加带注释的标签\n\n`git tag -a <tag name> <md5>`\n对某个版本打标签\n\n`git tag [tag name]`\n如果没有标签名，则为查看所有标签。带标签名则为新建标签\n\n### merge\n`git merge <branch name>`\n将其他分支合并到本分支\n\n### commit\n`git commit -a -m 'xx'`\n暂存并提交\n\n### branch\n`git branch`\n查看本地仓库分支\n\n`git branch -v`\n查看本地仓库分支最后一次提交情况\n\n`git branch -vv`\n查看分支跟踪情况\n\n`git branch <branch name>`\n新建分支\n\n`git branch -d <branch name>`\n删除分支\n\n`git branch [--merged | --no-merged]`\n查看已合并|未合并的本地仓库分支\n\n`git branch -u <remote base>/<remote branch>`\n修改当前跟踪分支\n\n### commit\n`git commit -a -m 'xx'`\n提交并且暂存暂存的方法\n\n### checkout\n`git checkout -- [file]`\n恢复文件\n\n`git checkout -b [branchname] [tagname]`\n在特定的版本上创建一个新的分支并切换到此分支\n\n`git checkout -b [local branch] [remote base]/[remote branch]`\n将远程分支检出到本地分支\n\n`git checkout --track <remote base>/<remote branch>`\n让当前分支跟踪远程分支\n\n\n`git checkout --track <remote base>/<remote branch>`\n`git checkout -b <local branch> <remote base>/<remote branch>`\n让当前分支跟踪到远程分支。两条命令作用基本一致，不同的是第二条命令可以重命名检出的分支。\n\n### rebase\n`git rebase [basebranch]`\n变基是将一系列提交按照原有次序依次应用到另一分支上，而合并是把最终结果合在一起。\n\n## 小技巧\n\n### 查看配置\n`git config -1`\n\n### 设置git push 默认\n`git config --global push.default current`\n\n### 设置别名\n`git config --global alias.<name> <commend>`\n我的设置：\n`git config --global alias.st status`\n`git config --global alias.cm \"commit -m\"`\n`git config --global alias.ph \"push origin <local_repository>:<remote_repository>\"`\n\n### 保存用户名和密码\n\n#### 对于http(s)协议，可以用下面命令临时缓存\n`git config --global credential.helper cache`\n开启linux缓存\n`git config --global credential.helper wincred`\n开启windows缓存\n#### 对于ssh协议，可以用ssh  key，具体教程网上很多\n\n### 忽略文件\n默认方法是在当前项目目录下创建一个.gitignore文件，如果需要忽略的文件已经添加到版本库中，请先移除\n`git rm --cached [file]`\n不删除文件，只移除追踪。\n\n[权威教程](http://git-scm.com/book/zh/v2)\n","slug":"git","published":0,"updated":"2016-11-14T13:41:34.000Z","layout":"post","photos":[],"link":"","_id":"civi8ouc700012c6n33qjnxfw","content":"<h2 id=\"从svn到git\"><a href=\"#从svn到git\" class=\"headerlink\" title=\"从svn到git\"></a>从svn到git</h2><p>两者都是优秀的版本管理工具（giter请不要鄙视svner）</p>\n<ul>\n<li>svn上手非常容易，操作简单</li>\n<li>git功能强大，但是要熟练使用分支不算容易</li>\n</ul>\n<p>git因为是分布式的，所以其核心就是分支（只有master分支情况下和svn差不多？），分支的意义在于，可以将项目代码按照功能、模块拆分成不同的分支。比如这个产品要加一个支付功能和一个登陆功能，可以创建两个分支，交给不同的开发人员并行开发。登陆功能先开发完，测试无误后合并改分支到master分支，master分支部署上线。支付功能虽然没有开发完成，但是在另一条分支上，所以产品上线和功能开发完全不受影响。这才是分布式开发的高效模式。</p>\n<p>被git坑了一个星期之后决心把官方文档看一下，结合实践经验进行了整理。</p>\n<hr>\n<a id=\"more\"></a>\n<h2 id=\"新手常见问题\"><a href=\"#新手常见问题\" class=\"headerlink\" title=\"新手常见问题\"></a>新手常见问题</h2><ol>\n<li><p>如何查看有哪些分支？<br><code>git branch -a</code></p>\n</li>\n<li><p>如何强制检出/切换分支或分支指定文件<br><code>git checkout &lt;branch&gt; [file] [-f]</code><br>强制更新，以branch版本的代码为主</p>\n</li>\n<li><p>提交代码出现冲突冲突怎么办？<br><code>hint: Updates were rejected because the tip of your current branch is behind</code><br><code>hint: its remote counterpart. Integrate the remote changes (e.g.</code><br><code>hint: &#39;git pull ...&#39;) before pushing again.</code><br><code>hint: See the &#39;Note about fast-forwards&#39; in &#39;git push --help&#39; for details.</code><br>先切换分支，然后拉取分支上最新的代码覆盖到本地<br><code>git pull</code><br>添加或者提交代码，解决冲突之后<br><code>git push</code></p>\n</li>\n<li><p>如何新建分支<br><code>git checkout -b &lt;branch_name&gt;</code><br>本地建立 branch 並立即切換到新分支<br><code>git branch -m &lt;new_name&gt;</code><br>修改分支名称  </p>\n</li>\n<li><p>从远程仓库拉取代码到本地仓库，并建立跟踪关系<br><code>git clone http://xxx.git</code><br>或者<br><code>get clone git@xxx.git</code><br>然后<br><code>git checkout -b &lt;本地新分支名&gt; &lt;对应的远程分支名&gt;</code></p>\n</li>\n<li><p>远程仓库新建了一个分支，如何更新远程分支信息<br><code>git fetch &lt;remote base&gt;</code></p>\n</li>\n<li><p>如何在远程仓库新建一个分支<br><code>git branch &lt;branch name&gt;</code><br>新建一个本地分支，按照正常流程提交完代码后，推送到远程<br><code>git push &lt;remote base&gt; &lt;local branch&gt;:&lt;remote branch&gt;</code></p>\n</li>\n</ol>\n<h2 id=\"实用指令\"><a href=\"#实用指令\" class=\"headerlink\" title=\"实用指令\"></a>实用指令</h2><h3 id=\"reset\"><a href=\"#reset\" class=\"headerlink\" title=\"reset\"></a>reset</h3><p><code>git reset [file]</code><br>取消暂存</p>\n<h3 id=\"remote\"><a href=\"#remote\" class=\"headerlink\" title=\"remote\"></a>remote</h3><p>查看远程仓库名</p>\n<p><code>git remote -v</code><br>查看远程仓库url</p>\n<p><code>git remote add &lt;basename&gt; &lt;url&gt;</code><br>新增远程仓库</p>\n<p><code>git remote show &lt;basename&gt;</code><br>查看远程仓库详细信息</p>\n<p><code>git remote rename &lt;old basename&gt; &lt;new basename&gt;</code><br>重命名远程仓库</p>\n<h3 id=\"pull\"><a href=\"#pull\" class=\"headerlink\" title=\"pull\"></a>pull</h3><p>相当于fetch和merge</p>\n<h3 id=\"push\"><a href=\"#push\" class=\"headerlink\" title=\"push\"></a>push</h3><p><code>git push [remote_branch] [local_branch]</code><br>推送本地仓库代码到远程仓库，相当于svn的commit</p>\n<p><code>git push &lt;remote base&gt; [tag name]</code><br>推送本地标签到远程仓库</p>\n<p><code>git push &lt;remote base&gt; &lt;remote branch&gt;:&lt;local branch&gt;</code><br>将本地分支推送到指定的远程分支</p>\n<p><code>git push &lt;remote base&gt; --delete &lt;remote branch&gt;</code><br>删除远程分支</p>\n<h3 id=\"tag\"><a href=\"#tag\" class=\"headerlink\" title=\"tag\"></a>tag</h3><p>查看标签（用来标记标志性的稳定版本信息）</p>\n<p><code>git tag -l &#39;[expression]&#39;</code><br>查看那符合正则表达式的</p>\n<p><code>git tag -a &lt;tag name&gt; -m &lt;comment&gt;</code><br>添加带注释的标签</p>\n<p><code>git tag -a &lt;tag name&gt; &lt;md5&gt;</code><br>对某个版本打标签</p>\n<p><code>git tag [tag name]</code><br>如果没有标签名，则为查看所有标签。带标签名则为新建标签</p>\n<h3 id=\"merge\"><a href=\"#merge\" class=\"headerlink\" title=\"merge\"></a>merge</h3><p><code>git merge &lt;branch name&gt;</code><br>将其他分支合并到本分支</p>\n<h3 id=\"commit\"><a href=\"#commit\" class=\"headerlink\" title=\"commit\"></a>commit</h3><p><code>git commit -a -m &#39;xx&#39;</code><br>暂存并提交</p>\n<h3 id=\"branch\"><a href=\"#branch\" class=\"headerlink\" title=\"branch\"></a>branch</h3><p><code>git branch</code><br>查看本地仓库分支</p>\n<p><code>git branch -v</code><br>查看本地仓库分支最后一次提交情况</p>\n<p><code>git branch -vv</code><br>查看分支跟踪情况</p>\n<p><code>git branch &lt;branch name&gt;</code><br>新建分支</p>\n<p><code>git branch -d &lt;branch name&gt;</code><br>删除分支</p>\n<p><code>git branch [--merged | --no-merged]</code><br>查看已合并|未合并的本地仓库分支</p>\n<p><code>git branch -u &lt;remote base&gt;/&lt;remote branch&gt;</code><br>修改当前跟踪分支</p>\n<h3 id=\"commit-1\"><a href=\"#commit-1\" class=\"headerlink\" title=\"commit\"></a>commit</h3><p><code>git commit -a -m &#39;xx&#39;</code><br>提交并且暂存暂存的方法</p>\n<h3 id=\"checkout\"><a href=\"#checkout\" class=\"headerlink\" title=\"checkout\"></a>checkout</h3><p><code>git checkout -- [file]</code><br>恢复文件</p>\n<p><code>git checkout -b [branchname] [tagname]</code><br>在特定的版本上创建一个新的分支并切换到此分支</p>\n<p><code>git checkout -b [local branch] [remote base]/[remote branch]</code><br>将远程分支检出到本地分支</p>\n<p><code>git checkout --track &lt;remote base&gt;/&lt;remote branch&gt;</code><br>让当前分支跟踪远程分支</p>\n<p><code>git checkout --track &lt;remote base&gt;/&lt;remote branch&gt;</code><br><code>git checkout -b &lt;local branch&gt; &lt;remote base&gt;/&lt;remote branch&gt;</code><br>让当前分支跟踪到远程分支。两条命令作用基本一致，不同的是第二条命令可以重命名检出的分支。</p>\n<h3 id=\"rebase\"><a href=\"#rebase\" class=\"headerlink\" title=\"rebase\"></a>rebase</h3><p><code>git rebase [basebranch]</code><br>变基是将一系列提交按照原有次序依次应用到另一分支上，而合并是把最终结果合在一起。</p>\n<h2 id=\"小技巧\"><a href=\"#小技巧\" class=\"headerlink\" title=\"小技巧\"></a>小技巧</h2><h3 id=\"查看配置\"><a href=\"#查看配置\" class=\"headerlink\" title=\"查看配置\"></a>查看配置</h3><p><code>git config -1</code></p>\n<h3 id=\"设置git-push-默认\"><a href=\"#设置git-push-默认\" class=\"headerlink\" title=\"设置git push 默认\"></a>设置git push 默认</h3><p><code>git config --global push.default current</code></p>\n<h3 id=\"设置别名\"><a href=\"#设置别名\" class=\"headerlink\" title=\"设置别名\"></a>设置别名</h3><p><code>git config --global alias.&lt;name&gt; &lt;commend&gt;</code><br>我的设置：<br><code>git config --global alias.st status</code><br><code>git config --global alias.cm &quot;commit -m&quot;</code><br><code>git config --global alias.ph &quot;push origin &lt;local_repository&gt;:&lt;remote_repository&gt;&quot;</code></p>\n<h3 id=\"保存用户名和密码\"><a href=\"#保存用户名和密码\" class=\"headerlink\" title=\"保存用户名和密码\"></a>保存用户名和密码</h3><h4 id=\"对于http-s-协议，可以用下面命令临时缓存\"><a href=\"#对于http-s-协议，可以用下面命令临时缓存\" class=\"headerlink\" title=\"对于http(s)协议，可以用下面命令临时缓存\"></a>对于http(s)协议，可以用下面命令临时缓存</h4><p><code>git config --global credential.helper cache</code><br>开启linux缓存<br><code>git config --global credential.helper wincred</code><br>开启windows缓存</p>\n<h4 id=\"对于ssh协议，可以用ssh-key，具体教程网上很多\"><a href=\"#对于ssh协议，可以用ssh-key，具体教程网上很多\" class=\"headerlink\" title=\"对于ssh协议，可以用ssh  key，具体教程网上很多\"></a>对于ssh协议，可以用ssh  key，具体教程网上很多</h4><h3 id=\"忽略文件\"><a href=\"#忽略文件\" class=\"headerlink\" title=\"忽略文件\"></a>忽略文件</h3><p>默认方法是在当前项目目录下创建一个.gitignore文件，如果需要忽略的文件已经添加到版本库中，请先移除<br><code>git rm --cached [file]</code><br>不删除文件，只移除追踪。</p>\n<p><a href=\"http://git-scm.com/book/zh/v2\" target=\"_blank\" rel=\"external\">权威教程</a></p>\n","excerpt":"<h2 id=\"从svn到git\"><a href=\"#从svn到git\" class=\"headerlink\" title=\"从svn到git\"></a>从svn到git</h2><p>两者都是优秀的版本管理工具（giter请不要鄙视svner）</p>\n<ul>\n<li>svn上手非常容易，操作简单</li>\n<li>git功能强大，但是要熟练使用分支不算容易</li>\n</ul>\n<p>git因为是分布式的，所以其核心就是分支（只有master分支情况下和svn差不多？），分支的意义在于，可以将项目代码按照功能、模块拆分成不同的分支。比如这个产品要加一个支付功能和一个登陆功能，可以创建两个分支，交给不同的开发人员并行开发。登陆功能先开发完，测试无误后合并改分支到master分支，master分支部署上线。支付功能虽然没有开发完成，但是在另一条分支上，所以产品上线和功能开发完全不受影响。这才是分布式开发的高效模式。</p>\n<p>被git坑了一个星期之后决心把官方文档看一下，结合实践经验进行了整理。</p>\n<hr>","more":"<h2 id=\"新手常见问题\"><a href=\"#新手常见问题\" class=\"headerlink\" title=\"新手常见问题\"></a>新手常见问题</h2><ol>\n<li><p>如何查看有哪些分支？<br><code>git branch -a</code></p>\n</li>\n<li><p>如何强制检出/切换分支或分支指定文件<br><code>git checkout &lt;branch&gt; [file] [-f]</code><br>强制更新，以branch版本的代码为主</p>\n</li>\n<li><p>提交代码出现冲突冲突怎么办？<br><code>hint: Updates were rejected because the tip of your current branch is behind</code><br><code>hint: its remote counterpart. Integrate the remote changes (e.g.</code><br><code>hint: &#39;git pull ...&#39;) before pushing again.</code><br><code>hint: See the &#39;Note about fast-forwards&#39; in &#39;git push --help&#39; for details.</code><br>先切换分支，然后拉取分支上最新的代码覆盖到本地<br><code>git pull</code><br>添加或者提交代码，解决冲突之后<br><code>git push</code></p>\n</li>\n<li><p>如何新建分支<br><code>git checkout -b &lt;branch_name&gt;</code><br>本地建立 branch 並立即切換到新分支<br><code>git branch -m &lt;new_name&gt;</code><br>修改分支名称  </p>\n</li>\n<li><p>从远程仓库拉取代码到本地仓库，并建立跟踪关系<br><code>git clone http://xxx.git</code><br>或者<br><code>get clone git@xxx.git</code><br>然后<br><code>git checkout -b &lt;本地新分支名&gt; &lt;对应的远程分支名&gt;</code></p>\n</li>\n<li><p>远程仓库新建了一个分支，如何更新远程分支信息<br><code>git fetch &lt;remote base&gt;</code></p>\n</li>\n<li><p>如何在远程仓库新建一个分支<br><code>git branch &lt;branch name&gt;</code><br>新建一个本地分支，按照正常流程提交完代码后，推送到远程<br><code>git push &lt;remote base&gt; &lt;local branch&gt;:&lt;remote branch&gt;</code></p>\n</li>\n</ol>\n<h2 id=\"实用指令\"><a href=\"#实用指令\" class=\"headerlink\" title=\"实用指令\"></a>实用指令</h2><h3 id=\"reset\"><a href=\"#reset\" class=\"headerlink\" title=\"reset\"></a>reset</h3><p><code>git reset [file]</code><br>取消暂存</p>\n<h3 id=\"remote\"><a href=\"#remote\" class=\"headerlink\" title=\"remote\"></a>remote</h3><p>查看远程仓库名</p>\n<p><code>git remote -v</code><br>查看远程仓库url</p>\n<p><code>git remote add &lt;basename&gt; &lt;url&gt;</code><br>新增远程仓库</p>\n<p><code>git remote show &lt;basename&gt;</code><br>查看远程仓库详细信息</p>\n<p><code>git remote rename &lt;old basename&gt; &lt;new basename&gt;</code><br>重命名远程仓库</p>\n<h3 id=\"pull\"><a href=\"#pull\" class=\"headerlink\" title=\"pull\"></a>pull</h3><p>相当于fetch和merge</p>\n<h3 id=\"push\"><a href=\"#push\" class=\"headerlink\" title=\"push\"></a>push</h3><p><code>git push [remote_branch] [local_branch]</code><br>推送本地仓库代码到远程仓库，相当于svn的commit</p>\n<p><code>git push &lt;remote base&gt; [tag name]</code><br>推送本地标签到远程仓库</p>\n<p><code>git push &lt;remote base&gt; &lt;remote branch&gt;:&lt;local branch&gt;</code><br>将本地分支推送到指定的远程分支</p>\n<p><code>git push &lt;remote base&gt; --delete &lt;remote branch&gt;</code><br>删除远程分支</p>\n<h3 id=\"tag\"><a href=\"#tag\" class=\"headerlink\" title=\"tag\"></a>tag</h3><p>查看标签（用来标记标志性的稳定版本信息）</p>\n<p><code>git tag -l &#39;[expression]&#39;</code><br>查看那符合正则表达式的</p>\n<p><code>git tag -a &lt;tag name&gt; -m &lt;comment&gt;</code><br>添加带注释的标签</p>\n<p><code>git tag -a &lt;tag name&gt; &lt;md5&gt;</code><br>对某个版本打标签</p>\n<p><code>git tag [tag name]</code><br>如果没有标签名，则为查看所有标签。带标签名则为新建标签</p>\n<h3 id=\"merge\"><a href=\"#merge\" class=\"headerlink\" title=\"merge\"></a>merge</h3><p><code>git merge &lt;branch name&gt;</code><br>将其他分支合并到本分支</p>\n<h3 id=\"commit\"><a href=\"#commit\" class=\"headerlink\" title=\"commit\"></a>commit</h3><p><code>git commit -a -m &#39;xx&#39;</code><br>暂存并提交</p>\n<h3 id=\"branch\"><a href=\"#branch\" class=\"headerlink\" title=\"branch\"></a>branch</h3><p><code>git branch</code><br>查看本地仓库分支</p>\n<p><code>git branch -v</code><br>查看本地仓库分支最后一次提交情况</p>\n<p><code>git branch -vv</code><br>查看分支跟踪情况</p>\n<p><code>git branch &lt;branch name&gt;</code><br>新建分支</p>\n<p><code>git branch -d &lt;branch name&gt;</code><br>删除分支</p>\n<p><code>git branch [--merged | --no-merged]</code><br>查看已合并|未合并的本地仓库分支</p>\n<p><code>git branch -u &lt;remote base&gt;/&lt;remote branch&gt;</code><br>修改当前跟踪分支</p>\n<h3 id=\"commit-1\"><a href=\"#commit-1\" class=\"headerlink\" title=\"commit\"></a>commit</h3><p><code>git commit -a -m &#39;xx&#39;</code><br>提交并且暂存暂存的方法</p>\n<h3 id=\"checkout\"><a href=\"#checkout\" class=\"headerlink\" title=\"checkout\"></a>checkout</h3><p><code>git checkout -- [file]</code><br>恢复文件</p>\n<p><code>git checkout -b [branchname] [tagname]</code><br>在特定的版本上创建一个新的分支并切换到此分支</p>\n<p><code>git checkout -b [local branch] [remote base]/[remote branch]</code><br>将远程分支检出到本地分支</p>\n<p><code>git checkout --track &lt;remote base&gt;/&lt;remote branch&gt;</code><br>让当前分支跟踪远程分支</p>\n<p><code>git checkout --track &lt;remote base&gt;/&lt;remote branch&gt;</code><br><code>git checkout -b &lt;local branch&gt; &lt;remote base&gt;/&lt;remote branch&gt;</code><br>让当前分支跟踪到远程分支。两条命令作用基本一致，不同的是第二条命令可以重命名检出的分支。</p>\n<h3 id=\"rebase\"><a href=\"#rebase\" class=\"headerlink\" title=\"rebase\"></a>rebase</h3><p><code>git rebase [basebranch]</code><br>变基是将一系列提交按照原有次序依次应用到另一分支上，而合并是把最终结果合在一起。</p>\n<h2 id=\"小技巧\"><a href=\"#小技巧\" class=\"headerlink\" title=\"小技巧\"></a>小技巧</h2><h3 id=\"查看配置\"><a href=\"#查看配置\" class=\"headerlink\" title=\"查看配置\"></a>查看配置</h3><p><code>git config -1</code></p>\n<h3 id=\"设置git-push-默认\"><a href=\"#设置git-push-默认\" class=\"headerlink\" title=\"设置git push 默认\"></a>设置git push 默认</h3><p><code>git config --global push.default current</code></p>\n<h3 id=\"设置别名\"><a href=\"#设置别名\" class=\"headerlink\" title=\"设置别名\"></a>设置别名</h3><p><code>git config --global alias.&lt;name&gt; &lt;commend&gt;</code><br>我的设置：<br><code>git config --global alias.st status</code><br><code>git config --global alias.cm &quot;commit -m&quot;</code><br><code>git config --global alias.ph &quot;push origin &lt;local_repository&gt;:&lt;remote_repository&gt;&quot;</code></p>\n<h3 id=\"保存用户名和密码\"><a href=\"#保存用户名和密码\" class=\"headerlink\" title=\"保存用户名和密码\"></a>保存用户名和密码</h3><h4 id=\"对于http-s-协议，可以用下面命令临时缓存\"><a href=\"#对于http-s-协议，可以用下面命令临时缓存\" class=\"headerlink\" title=\"对于http(s)协议，可以用下面命令临时缓存\"></a>对于http(s)协议，可以用下面命令临时缓存</h4><p><code>git config --global credential.helper cache</code><br>开启linux缓存<br><code>git config --global credential.helper wincred</code><br>开启windows缓存</p>\n<h4 id=\"对于ssh协议，可以用ssh-key，具体教程网上很多\"><a href=\"#对于ssh协议，可以用ssh-key，具体教程网上很多\" class=\"headerlink\" title=\"对于ssh协议，可以用ssh  key，具体教程网上很多\"></a>对于ssh协议，可以用ssh  key，具体教程网上很多</h4><h3 id=\"忽略文件\"><a href=\"#忽略文件\" class=\"headerlink\" title=\"忽略文件\"></a>忽略文件</h3><p>默认方法是在当前项目目录下创建一个.gitignore文件，如果需要忽略的文件已经添加到版本库中，请先移除<br><code>git rm --cached [file]</code><br>不删除文件，只移除追踪。</p>\n<p><a href=\"http://git-scm.com/book/zh/v2\">权威教程</a></p>"},{"title":"Hexo-NexT搭建个人博客（一）","comments":0,"abbrlink":52138,"date":"2016-09-03T05:25:24.000Z","_content":"[Hexo](https://hexo.io/zh-cn/) 是一个快速、简洁且高效的静态站点生成框架，它基于 [Node.js](https://nodejs.org/en/) 。 它有以下特点：\n\n- <i class=\"fa fa-bolt\"></i><h6 style=\"display: inline;\">　超快速度</h6>\n<i>Node.js 所带来的超快生成速度，让上百个页面在几秒内瞬间完成渲染。</i>\n- <i class=\"fa fa-pencil\"></i><h6 style=\"display: inline;\">　支持Markdown</h6>\n<i>Hexo 支持 GitHub Flavored Markdown 的所有功能，甚至可以整合 Octopress 的大多数插件。</i>\n- <i class=\"fa fa-cloud-upload\"></i><h6 style=\"display: inline;\">　一件部署</h6>\n<i>只需一条指令即可部署到Github Pages，或其他网站</i>\n- <i class=\"fa fa-cog\"></i><h6 style=\"display: inline;\">　丰富的插件</h6>\n<i>Hexo 拥有强大的插件系统，安装插件可以让 Hexo 支持 Jade, CoffeeScript。</i>\n\n通过 Hexo 你可以轻松地使用 Markdown 编写文章，除了 Markdown 本身的语法之外，还可以使用 Hexo 提供的 [标签插件](https://hexo.io/zh-cn/docs/tag-plugins.html) 来快速的插入特定形式的内容。\n\n基于 Hexo 这个优秀的博客框架，很多优秀的开发者奉献出了它们基于 Hexo 开发的[主题](https://hexo.io/themes/)。\n[NexT](http://theme-next.iissnan.com/) 因其 <span id=\"yu-1\">精于心，简于形</span> 的风格，一直被广大用户所喜爱。\n\n<!-- more -->\n\n## 安装\n安装 Hexo 只需几分钟时间，若你在安装过程中遇到问题或无法找到解决方式，请[提交问题](https://neveryu.github.io/guestbook/)，我会尽力解决你的问题。\n### 安装前提\n安装 Hexo 相当简单。然而在安装前，您必须检查电脑中是否已安装下列应用程序:\n\n> [Node.js](https://nodejs.org/en/)\n> [Git](http://git-scm.com/)\n\n如果您的电脑中已经安装上述必备程序，那么恭喜你！接下来只需要使用 npm 即可完成 Hexo 的安装。\n``` bash \n$ npm install -g hexo-cli\n```\n如果你的电脑中尚未安装所需要的程序，请根据以下安装指示完成安装。\n### 安装 Git\n* Windows：下载安装 git 。<a id=\"download\" href=\"https://git-scm.com/download/win\"><i class=\"fa fa-download\"></i><span> Download Now</span>\n</a>\n* Mac：使用 [Homebrew](http://mxcl.github.com/homebrew/)，[MacPorts](http://www.macports.org/) 或下载 [安装程序](http://sourceforge.net/projects/git-osx-installer/) 安装\n* Linux（Ubuntu，Debian）：`sudo apt-get install git-core`\n* Linux（Fedora，Red Hat，CentOS）：`sudo yum install git-core`\n\n### 安装 Node.js\n安装 Node.js 的最佳方式是使用 [nvm](https://github.com/creationix/nvm)。（nvm：Node Version Manager）\nwindows 下使用 nvm 请看这里： [nvm-windows](https://github.com/coreybutler/nvm-windows) ，首先需要下载安装 nvm 。<a id=\"download\" href=\"https://github.com/coreybutler/nvm-windows/releases\"><i class=\"fa fa-download\"></i><span> Download Now</span>\n</a> \nwindows下安装完nvm以后，我们可以打开命令行中执行命令\n``` bash\n$ nvm\n$ nvm install latest\n```\n执行完以后，重启命令行，执行命令 `node -v` ，如果出现版本号，那么 `Node.js` 就安装成功了。\n\n<p id=\"div-border-left-red\">如果没有安装成功，那可能就是墙的原因。建议下载 `Node.js` 直接安装。<a id=\"download\" href=\"https://nodejs.org/en/download/\"><i class=\"fa fa-download\"></i><span> Download Now</span>\n</a> </p>\n\n\n\n### 安装 Hexo\n有了 Node.js ，我们可以使用 npm 安装 Hexo。\n``` bash\n$ npm install -g hexo-cli\n```\n安装 Hexo 完成后，我们首先需要为我们的项目创建一个<span id=\"inline-green\">指定文件夹</span>（例如我在 D 盘目录下创建了一个文件夹 blog 。`D:\\blog` ），在指定文件夹中执行下列命令， Hexo 将会在指定文件夹中新建所需要的文件。\n``` bash\n$ hexo init\n```\n等待安装，安装完成后，<span id=\"inline-green\">指定文件夹</span> 的目录如下：\n``` \n.\n├── _config.yml\n├── package.json\n├── scaffolds\n├── source\n|   ├── _drafts\n|   └── _posts\n└──\n```\n\n我们继续执行命令\n``` bash\n$ hexo g\n$ hexo s --debug\n```\nHexo 将 `source` 文件夹中除 `_posts` 文件夹之外，开头命名为 `_`（下划线）的文件 / 文件夹和隐藏的文件将会被忽略。Markdown 和 HTML 文件会被解析并放到 `public` 文件夹，而其他文件夹会被拷贝过去。\n这个时候，我们在浏览器中访问 `http://localhost:4000/` ，就可以看到基于 Hexo 的默认主题的原型：\n![hexo-next-one-1](http://p1.bqimg.com/567571/27324b740c9e91e2.png)\n\n\n安装 NexT 主题\n==\n\n#### 下载 NexT 主题\n\n依旧是在当前目录下，使用 Git checkout 代码：\n``` bash\n$ git clone https://github.com/iissnan/hexo-theme-next themes/next\n```\n等待下载完成。\n\n<p id=\"div-border-left-yellow\">在 Hexo 中有两份主要的配置文件，其名称都是 _config.yml 。其中，一份位于站点根目录下，主要包含 Hexo 本身的配置；另一份位于主题目录下，这份配置由主题作者提供，主要用于配置主题相关的选项。\n  我们约定，将前者称为 <span id=\"inline-blue\">站点配置文件</span>，后者称为 <span id=\"inline-purple\">主题配置文件</span></p>\n\n#### 启用 NexT 主题\n打开 <span id=\"inline-blue\">站点配置文件</span> ，找到 `theme` 字段，并将其值更改为 `next` 。\n到此， NexT 主题安装完成。下一步我们将验证主题是否正确启用。在切换主题之后、验证之前，我们最好使用 `hexo clean` 来清除 Hexo 的缓存。\n\n#### 验证主题\n首先启动 Hexo 本地站点，并开启调试模式（即加上 `--debug`），整个命令是 `hexo s --debug`。在服务启动的过程，注意观察命令行输出是否有任何异常信息。当命令行输出中提示：\n`INFO  Hexo is running at http://0.0.0.0:4000/. Press Ctrl+C to stop.`\n此时即可使用浏览器访问 `http://localhost:4000/` ，检查站点是否正确运行。\n<p id=\"div-border-left-green\">当你看到站点的外观与下图所示类似时即说明你已成功安装 NexT 主题。这是 NexT 默认的 Scheme —— Muse</p>\n![hexo-next-one-1](http://p1.bqimg.com/567571/8333728b5eaab526.png)\n现在，我们已经成功安装并启用了 NexT 主题。\n\n<p id=\"div-border-top-blue\">关于更多基本操作和基础知识，请查阅 [Hexo](https://hexo.io/zh-cn/) 与 [NexT](http://theme-next.iissnan.com/) 官方文档.</p>\n\n\n### 总结：本地调试步骤\n三部曲：\n``` bash\n$ hexo clean\n$ hexo g\n$ hexo s --debug\n```\n这种带debug的运行，如果出现错误，可以在命令行中看到错误提示信息。\n\n### 总结：部署步骤\n三部曲：\n``` bash\n$ hexo clean\n$ hexo g\n$ hexo d\n```\n当然在部署之前，需要先配置好配置文件中的deploy。\n\n\n### 常用命令\n``` bash\n$ hexo new \"postName\"  #新建文章\n$ hexo new page \"pageName\" # 新建页面\n$ hexo generate # 生成静态页面至public目录\n$ hexo server # 开启预览访问端口(默认端口4000，'ctrl+c'关闭server)\n$ hexo deploy # 项目部署\n$ hexo help # 查看帮助\n$ hexo version # 查看Hexo的版本\n```\n\n### 简写命令\n``` bash\n$ hexo new == hexo n\n$ hexo generate == hexo g\n$ hexo server == hexo s\n$ hexo deploy == hexo d\n```\n\n\n### 常见问题1\n在hexo的配置和设置文件中，在冒号后面没留空格会导致出问题：\n错误的设置：\n```\nauthor:Neveryu\nemail:react.dong.yu@gmail.com\nlanguage:zh-CN\n```\n正确的设置：\n```\nauthor: Neveryu\nemail: react.dong.yu@gmail.com\nlanguage: zh-CN\n```\n\n### 常见问题2\n关于Git提交中用户名和Email的设置\n```\ngit config --global user.name \"Your name\"\ngit config --global user.email \"Your email\"\n```\n\n### 常见问题3\n\nHexo 中的图标使用的是 [Font Awesome](http://fontawesome.io/) ，所以，我们的博客已经自带了 Font Awesome 中的所有图标，基本可以满足我们的所有需求，我们可以去 Font Awesome 中查找我们想要使用的图标。\n<i class=\"fa fa-github\"></i> `<i class=\"fa fa-github\"></i>`\n<i class=\"fa fa-github fa-lg\"></i> `<i class=\"fa fa-github fa-lg\"></i>`\n<i class=\"fa fa-github fa-2x\"></i> `<i class=\"fa fa-github fa-2x\"></i>`\n\n\n","source":"_drafts/hexo-next-one.md","raw":"---\ntitle: Hexo-NexT搭建个人博客（一）\ncategories: 综合\ntags:\n  - Hexo\n  - Next\ncomments: false\nabbrlink: 52138\ndate: 2016-09-03 13:25:24\n---\n[Hexo](https://hexo.io/zh-cn/) 是一个快速、简洁且高效的静态站点生成框架，它基于 [Node.js](https://nodejs.org/en/) 。 它有以下特点：\n\n- <i class=\"fa fa-bolt\"></i><h6 style=\"display: inline;\">　超快速度</h6>\n<i>Node.js 所带来的超快生成速度，让上百个页面在几秒内瞬间完成渲染。</i>\n- <i class=\"fa fa-pencil\"></i><h6 style=\"display: inline;\">　支持Markdown</h6>\n<i>Hexo 支持 GitHub Flavored Markdown 的所有功能，甚至可以整合 Octopress 的大多数插件。</i>\n- <i class=\"fa fa-cloud-upload\"></i><h6 style=\"display: inline;\">　一件部署</h6>\n<i>只需一条指令即可部署到Github Pages，或其他网站</i>\n- <i class=\"fa fa-cog\"></i><h6 style=\"display: inline;\">　丰富的插件</h6>\n<i>Hexo 拥有强大的插件系统，安装插件可以让 Hexo 支持 Jade, CoffeeScript。</i>\n\n通过 Hexo 你可以轻松地使用 Markdown 编写文章，除了 Markdown 本身的语法之外，还可以使用 Hexo 提供的 [标签插件](https://hexo.io/zh-cn/docs/tag-plugins.html) 来快速的插入特定形式的内容。\n\n基于 Hexo 这个优秀的博客框架，很多优秀的开发者奉献出了它们基于 Hexo 开发的[主题](https://hexo.io/themes/)。\n[NexT](http://theme-next.iissnan.com/) 因其 <span id=\"yu-1\">精于心，简于形</span> 的风格，一直被广大用户所喜爱。\n\n<!-- more -->\n\n## 安装\n安装 Hexo 只需几分钟时间，若你在安装过程中遇到问题或无法找到解决方式，请[提交问题](https://neveryu.github.io/guestbook/)，我会尽力解决你的问题。\n### 安装前提\n安装 Hexo 相当简单。然而在安装前，您必须检查电脑中是否已安装下列应用程序:\n\n> [Node.js](https://nodejs.org/en/)\n> [Git](http://git-scm.com/)\n\n如果您的电脑中已经安装上述必备程序，那么恭喜你！接下来只需要使用 npm 即可完成 Hexo 的安装。\n``` bash \n$ npm install -g hexo-cli\n```\n如果你的电脑中尚未安装所需要的程序，请根据以下安装指示完成安装。\n### 安装 Git\n* Windows：下载安装 git 。<a id=\"download\" href=\"https://git-scm.com/download/win\"><i class=\"fa fa-download\"></i><span> Download Now</span>\n</a>\n* Mac：使用 [Homebrew](http://mxcl.github.com/homebrew/)，[MacPorts](http://www.macports.org/) 或下载 [安装程序](http://sourceforge.net/projects/git-osx-installer/) 安装\n* Linux（Ubuntu，Debian）：`sudo apt-get install git-core`\n* Linux（Fedora，Red Hat，CentOS）：`sudo yum install git-core`\n\n### 安装 Node.js\n安装 Node.js 的最佳方式是使用 [nvm](https://github.com/creationix/nvm)。（nvm：Node Version Manager）\nwindows 下使用 nvm 请看这里： [nvm-windows](https://github.com/coreybutler/nvm-windows) ，首先需要下载安装 nvm 。<a id=\"download\" href=\"https://github.com/coreybutler/nvm-windows/releases\"><i class=\"fa fa-download\"></i><span> Download Now</span>\n</a> \nwindows下安装完nvm以后，我们可以打开命令行中执行命令\n``` bash\n$ nvm\n$ nvm install latest\n```\n执行完以后，重启命令行，执行命令 `node -v` ，如果出现版本号，那么 `Node.js` 就安装成功了。\n\n<p id=\"div-border-left-red\">如果没有安装成功，那可能就是墙的原因。建议下载 `Node.js` 直接安装。<a id=\"download\" href=\"https://nodejs.org/en/download/\"><i class=\"fa fa-download\"></i><span> Download Now</span>\n</a> </p>\n\n\n\n### 安装 Hexo\n有了 Node.js ，我们可以使用 npm 安装 Hexo。\n``` bash\n$ npm install -g hexo-cli\n```\n安装 Hexo 完成后，我们首先需要为我们的项目创建一个<span id=\"inline-green\">指定文件夹</span>（例如我在 D 盘目录下创建了一个文件夹 blog 。`D:\\blog` ），在指定文件夹中执行下列命令， Hexo 将会在指定文件夹中新建所需要的文件。\n``` bash\n$ hexo init\n```\n等待安装，安装完成后，<span id=\"inline-green\">指定文件夹</span> 的目录如下：\n``` \n.\n├── _config.yml\n├── package.json\n├── scaffolds\n├── source\n|   ├── _drafts\n|   └── _posts\n└──\n```\n\n我们继续执行命令\n``` bash\n$ hexo g\n$ hexo s --debug\n```\nHexo 将 `source` 文件夹中除 `_posts` 文件夹之外，开头命名为 `_`（下划线）的文件 / 文件夹和隐藏的文件将会被忽略。Markdown 和 HTML 文件会被解析并放到 `public` 文件夹，而其他文件夹会被拷贝过去。\n这个时候，我们在浏览器中访问 `http://localhost:4000/` ，就可以看到基于 Hexo 的默认主题的原型：\n![hexo-next-one-1](http://p1.bqimg.com/567571/27324b740c9e91e2.png)\n\n\n安装 NexT 主题\n==\n\n#### 下载 NexT 主题\n\n依旧是在当前目录下，使用 Git checkout 代码：\n``` bash\n$ git clone https://github.com/iissnan/hexo-theme-next themes/next\n```\n等待下载完成。\n\n<p id=\"div-border-left-yellow\">在 Hexo 中有两份主要的配置文件，其名称都是 _config.yml 。其中，一份位于站点根目录下，主要包含 Hexo 本身的配置；另一份位于主题目录下，这份配置由主题作者提供，主要用于配置主题相关的选项。\n  我们约定，将前者称为 <span id=\"inline-blue\">站点配置文件</span>，后者称为 <span id=\"inline-purple\">主题配置文件</span></p>\n\n#### 启用 NexT 主题\n打开 <span id=\"inline-blue\">站点配置文件</span> ，找到 `theme` 字段，并将其值更改为 `next` 。\n到此， NexT 主题安装完成。下一步我们将验证主题是否正确启用。在切换主题之后、验证之前，我们最好使用 `hexo clean` 来清除 Hexo 的缓存。\n\n#### 验证主题\n首先启动 Hexo 本地站点，并开启调试模式（即加上 `--debug`），整个命令是 `hexo s --debug`。在服务启动的过程，注意观察命令行输出是否有任何异常信息。当命令行输出中提示：\n`INFO  Hexo is running at http://0.0.0.0:4000/. Press Ctrl+C to stop.`\n此时即可使用浏览器访问 `http://localhost:4000/` ，检查站点是否正确运行。\n<p id=\"div-border-left-green\">当你看到站点的外观与下图所示类似时即说明你已成功安装 NexT 主题。这是 NexT 默认的 Scheme —— Muse</p>\n![hexo-next-one-1](http://p1.bqimg.com/567571/8333728b5eaab526.png)\n现在，我们已经成功安装并启用了 NexT 主题。\n\n<p id=\"div-border-top-blue\">关于更多基本操作和基础知识，请查阅 [Hexo](https://hexo.io/zh-cn/) 与 [NexT](http://theme-next.iissnan.com/) 官方文档.</p>\n\n\n### 总结：本地调试步骤\n三部曲：\n``` bash\n$ hexo clean\n$ hexo g\n$ hexo s --debug\n```\n这种带debug的运行，如果出现错误，可以在命令行中看到错误提示信息。\n\n### 总结：部署步骤\n三部曲：\n``` bash\n$ hexo clean\n$ hexo g\n$ hexo d\n```\n当然在部署之前，需要先配置好配置文件中的deploy。\n\n\n### 常用命令\n``` bash\n$ hexo new \"postName\"  #新建文章\n$ hexo new page \"pageName\" # 新建页面\n$ hexo generate # 生成静态页面至public目录\n$ hexo server # 开启预览访问端口(默认端口4000，'ctrl+c'关闭server)\n$ hexo deploy # 项目部署\n$ hexo help # 查看帮助\n$ hexo version # 查看Hexo的版本\n```\n\n### 简写命令\n``` bash\n$ hexo new == hexo n\n$ hexo generate == hexo g\n$ hexo server == hexo s\n$ hexo deploy == hexo d\n```\n\n\n### 常见问题1\n在hexo的配置和设置文件中，在冒号后面没留空格会导致出问题：\n错误的设置：\n```\nauthor:Neveryu\nemail:react.dong.yu@gmail.com\nlanguage:zh-CN\n```\n正确的设置：\n```\nauthor: Neveryu\nemail: react.dong.yu@gmail.com\nlanguage: zh-CN\n```\n\n### 常见问题2\n关于Git提交中用户名和Email的设置\n```\ngit config --global user.name \"Your name\"\ngit config --global user.email \"Your email\"\n```\n\n### 常见问题3\n\nHexo 中的图标使用的是 [Font Awesome](http://fontawesome.io/) ，所以，我们的博客已经自带了 Font Awesome 中的所有图标，基本可以满足我们的所有需求，我们可以去 Font Awesome 中查找我们想要使用的图标。\n<i class=\"fa fa-github\"></i> `<i class=\"fa fa-github\"></i>`\n<i class=\"fa fa-github fa-lg\"></i> `<i class=\"fa fa-github fa-lg\"></i>`\n<i class=\"fa fa-github fa-2x\"></i> `<i class=\"fa fa-github fa-2x\"></i>`\n\n\n","slug":"hexo-next-one","published":0,"updated":"2016-11-14T13:41:34.000Z","layout":"post","photos":[],"link":"","_id":"civi8ouce00032c6nyzyhgytv","content":"<p><a href=\"https://hexo.io/zh-cn/\" target=\"_blank\" rel=\"external\">Hexo</a> 是一个快速、简洁且高效的静态站点生成框架，它基于 <a href=\"https://nodejs.org/en/\" target=\"_blank\" rel=\"external\">Node.js</a> 。 它有以下特点：</p>\n<ul>\n<li><i class=\"fa fa-bolt\"></i><h6 style=\"display: inline;\">　超快速度</h6><br><i>Node.js 所带来的超快生成速度，让上百个页面在几秒内瞬间完成渲染。</i></li>\n<li><i class=\"fa fa-pencil\"></i><h6 style=\"display: inline;\">　支持Markdown</h6><br><i>Hexo 支持 GitHub Flavored Markdown 的所有功能，甚至可以整合 Octopress 的大多数插件。</i></li>\n<li><i class=\"fa fa-cloud-upload\"></i><h6 style=\"display: inline;\">　一件部署</h6><br><i>只需一条指令即可部署到Github Pages，或其他网站</i></li>\n<li><i class=\"fa fa-cog\"></i><h6 style=\"display: inline;\">　丰富的插件</h6><br><i>Hexo 拥有强大的插件系统，安装插件可以让 Hexo 支持 Jade, CoffeeScript。</i></li>\n</ul>\n<p>通过 Hexo 你可以轻松地使用 Markdown 编写文章，除了 Markdown 本身的语法之外，还可以使用 Hexo 提供的 <a href=\"https://hexo.io/zh-cn/docs/tag-plugins.html\" target=\"_blank\" rel=\"external\">标签插件</a> 来快速的插入特定形式的内容。</p>\n<p>基于 Hexo 这个优秀的博客框架，很多优秀的开发者奉献出了它们基于 Hexo 开发的<a href=\"https://hexo.io/themes/\" target=\"_blank\" rel=\"external\">主题</a>。<br><a href=\"http://theme-next.iissnan.com/\" target=\"_blank\" rel=\"external\">NexT</a> 因其 <span id=\"yu-1\">精于心，简于形</span> 的风格，一直被广大用户所喜爱。</p>\n<a id=\"more\"></a>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><p>安装 Hexo 只需几分钟时间，若你在安装过程中遇到问题或无法找到解决方式，请<a href=\"https://neveryu.github.io/guestbook/\" target=\"_blank\" rel=\"external\">提交问题</a>，我会尽力解决你的问题。</p>\n<h3 id=\"安装前提\"><a href=\"#安装前提\" class=\"headerlink\" title=\"安装前提\"></a>安装前提</h3><p>安装 Hexo 相当简单。然而在安装前，您必须检查电脑中是否已安装下列应用程序:</p>\n<blockquote>\n<p><a href=\"https://nodejs.org/en/\" target=\"_blank\" rel=\"external\">Node.js</a><br><a href=\"http://git-scm.com/\" target=\"_blank\" rel=\"external\">Git</a></p>\n</blockquote>\n<p>如果您的电脑中已经安装上述必备程序，那么恭喜你！接下来只需要使用 npm 即可完成 Hexo 的安装。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm install -g hexo-cli</div></pre></td></tr></table></figure></p>\n<p>如果你的电脑中尚未安装所需要的程序，请根据以下安装指示完成安装。</p>\n<h3 id=\"安装-Git\"><a href=\"#安装-Git\" class=\"headerlink\" title=\"安装 Git\"></a>安装 Git</h3><ul>\n<li>Windows：下载安装 git 。<a id=\"download\" href=\"https://git-scm.com/download/win\" target=\"_blank\" rel=\"external\"><i class=\"fa fa-download\"></i><span> Download Now</span><br></a></li>\n<li>Mac：使用 <a href=\"http://mxcl.github.com/homebrew/\" target=\"_blank\" rel=\"external\">Homebrew</a>，<a href=\"http://www.macports.org/\" target=\"_blank\" rel=\"external\">MacPorts</a> 或下载 <a href=\"http://sourceforge.net/projects/git-osx-installer/\" target=\"_blank\" rel=\"external\">安装程序</a> 安装</li>\n<li>Linux（Ubuntu，Debian）：<code>sudo apt-get install git-core</code></li>\n<li>Linux（Fedora，Red Hat，CentOS）：<code>sudo yum install git-core</code></li>\n</ul>\n<h3 id=\"安装-Node-js\"><a href=\"#安装-Node-js\" class=\"headerlink\" title=\"安装 Node.js\"></a>安装 Node.js</h3><p>安装 Node.js 的最佳方式是使用 <a href=\"https://github.com/creationix/nvm\" target=\"_blank\" rel=\"external\">nvm</a>。（nvm：Node Version Manager）<br>windows 下使用 nvm 请看这里： <a href=\"https://github.com/coreybutler/nvm-windows\" target=\"_blank\" rel=\"external\">nvm-windows</a> ，首先需要下载安装 nvm 。<a id=\"download\" href=\"https://github.com/coreybutler/nvm-windows/releases\" target=\"_blank\" rel=\"external\"><i class=\"fa fa-download\"></i><span> Download Now</span><br></a><br>windows下安装完nvm以后，我们可以打开命令行中执行命令<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ nvm</div><div class=\"line\">$ nvm install latest</div></pre></td></tr></table></figure></p>\n<p>执行完以后，重启命令行，执行命令 <code>node -v</code> ，如果出现版本号，那么 <code>Node.js</code> 就安装成功了。</p>\n<p id=\"div-border-left-red\">如果没有安装成功，那可能就是墙的原因。建议下载 <code>Node.js</code> 直接安装。<a id=\"download\" href=\"https://nodejs.org/en/download/\" target=\"_blank\" rel=\"external\"><i class=\"fa fa-download\"></i><span> Download Now</span><br></a> </p>\n\n\n\n<h3 id=\"安装-Hexo\"><a href=\"#安装-Hexo\" class=\"headerlink\" title=\"安装 Hexo\"></a>安装 Hexo</h3><p>有了 Node.js ，我们可以使用 npm 安装 Hexo。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm install -g hexo-cli</div></pre></td></tr></table></figure></p>\n<p>安装 Hexo 完成后，我们首先需要为我们的项目创建一个<span id=\"inline-green\">指定文件夹</span>（例如我在 D 盘目录下创建了一个文件夹 blog 。<code>D:\\blog</code> ），在指定文件夹中执行下列命令， Hexo 将会在指定文件夹中新建所需要的文件。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo init</div></pre></td></tr></table></figure></p>\n<p>等待安装，安装完成后，<span id=\"inline-green\">指定文件夹</span> 的目录如下：<br><figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">.</div><div class=\"line\">├── _config.yml</div><div class=\"line\">├── package.json</div><div class=\"line\">├── scaffolds</div><div class=\"line\">├── source</div><div class=\"line\"><span class=\"string\">|   ├── _drafts</span></div><div class=\"line\"><span class=\"string\">|   └── _posts</span></div><div class=\"line\">└──</div></pre></td></tr></table></figure></p>\n<p>我们继续执行命令<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo g</div><div class=\"line\">$ hexo s --debug</div></pre></td></tr></table></figure></p>\n<p>Hexo 将 <code>source</code> 文件夹中除 <code>_posts</code> 文件夹之外，开头命名为 <code>_</code>（下划线）的文件 / 文件夹和隐藏的文件将会被忽略。Markdown 和 HTML 文件会被解析并放到 <code>public</code> 文件夹，而其他文件夹会被拷贝过去。<br>这个时候，我们在浏览器中访问 <code>http://localhost:4000/</code> ，就可以看到基于 Hexo 的默认主题的原型：<br><img src=\"http://p1.bqimg.com/567571/27324b740c9e91e2.png\" alt=\"hexo-next-one-1\"></p>\n<h1 id=\"安装-NexT-主题\"><a href=\"#安装-NexT-主题\" class=\"headerlink\" title=\"安装 NexT 主题\"></a>安装 NexT 主题</h1><h4 id=\"下载-NexT-主题\"><a href=\"#下载-NexT-主题\" class=\"headerlink\" title=\"下载 NexT 主题\"></a>下载 NexT 主题</h4><p>依旧是在当前目录下，使用 Git checkout 代码：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ git <span class=\"built_in\">clone</span> https://github.com/iissnan/hexo-theme-next themes/next</div></pre></td></tr></table></figure></p>\n<p>等待下载完成。</p>\n<p id=\"div-border-left-yellow\">在 Hexo 中有两份主要的配置文件，其名称都是 _config.yml 。其中，一份位于站点根目录下，主要包含 Hexo 本身的配置；另一份位于主题目录下，这份配置由主题作者提供，主要用于配置主题相关的选项。<br>  我们约定，将前者称为 <span id=\"inline-blue\">站点配置文件</span>，后者称为 <span id=\"inline-purple\">主题配置文件</span></p>\n\n<h4 id=\"启用-NexT-主题\"><a href=\"#启用-NexT-主题\" class=\"headerlink\" title=\"启用 NexT 主题\"></a>启用 NexT 主题</h4><p>打开 <span id=\"inline-blue\">站点配置文件</span> ，找到 <code>theme</code> 字段，并将其值更改为 <code>next</code> 。<br>到此， NexT 主题安装完成。下一步我们将验证主题是否正确启用。在切换主题之后、验证之前，我们最好使用 <code>hexo clean</code> 来清除 Hexo 的缓存。</p>\n<h4 id=\"验证主题\"><a href=\"#验证主题\" class=\"headerlink\" title=\"验证主题\"></a>验证主题</h4><p>首先启动 Hexo 本地站点，并开启调试模式（即加上 <code>--debug</code>），整个命令是 <code>hexo s --debug</code>。在服务启动的过程，注意观察命令行输出是否有任何异常信息。当命令行输出中提示：<br><code>INFO  Hexo is running at http://0.0.0.0:4000/. Press Ctrl+C to stop.</code><br>此时即可使用浏览器访问 <code>http://localhost:4000/</code> ，检查站点是否正确运行。</p>\n<p id=\"div-border-left-green\">当你看到站点的外观与下图所示类似时即说明你已成功安装 NexT 主题。这是 NexT 默认的 Scheme —— Muse</p><br><img src=\"http://p1.bqimg.com/567571/8333728b5eaab526.png\" alt=\"hexo-next-one-1\"><br>现在，我们已经成功安装并启用了 NexT 主题。<br><br><p id=\"div-border-top-blue\">关于更多基本操作和基础知识，请查阅 <a href=\"https://hexo.io/zh-cn/\" target=\"_blank\" rel=\"external\">Hexo</a> 与 <a href=\"http://theme-next.iissnan.com/\" target=\"_blank\" rel=\"external\">NexT</a> 官方文档.</p>\n\n\n<h3 id=\"总结：本地调试步骤\"><a href=\"#总结：本地调试步骤\" class=\"headerlink\" title=\"总结：本地调试步骤\"></a>总结：本地调试步骤</h3><p>三部曲：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo clean</div><div class=\"line\">$ hexo g</div><div class=\"line\">$ hexo s --debug</div></pre></td></tr></table></figure></p>\n<p>这种带debug的运行，如果出现错误，可以在命令行中看到错误提示信息。</p>\n<h3 id=\"总结：部署步骤\"><a href=\"#总结：部署步骤\" class=\"headerlink\" title=\"总结：部署步骤\"></a>总结：部署步骤</h3><p>三部曲：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo clean</div><div class=\"line\">$ hexo g</div><div class=\"line\">$ hexo d</div></pre></td></tr></table></figure></p>\n<p>当然在部署之前，需要先配置好配置文件中的deploy。</p>\n<h3 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"postName\"</span>  <span class=\"comment\">#新建文章</span></div><div class=\"line\">$ hexo new page <span class=\"string\">\"pageName\"</span> <span class=\"comment\"># 新建页面</span></div><div class=\"line\">$ hexo generate <span class=\"comment\"># 生成静态页面至public目录</span></div><div class=\"line\">$ hexo server <span class=\"comment\"># 开启预览访问端口(默认端口4000，'ctrl+c'关闭server)</span></div><div class=\"line\">$ hexo deploy <span class=\"comment\"># 项目部署</span></div><div class=\"line\">$ hexo <span class=\"built_in\">help</span> <span class=\"comment\"># 查看帮助</span></div><div class=\"line\">$ hexo version <span class=\"comment\"># 查看Hexo的版本</span></div></pre></td></tr></table></figure>\n<h3 id=\"简写命令\"><a href=\"#简写命令\" class=\"headerlink\" title=\"简写命令\"></a>简写命令</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new == hexo n</div><div class=\"line\">$ hexo generate == hexo g</div><div class=\"line\">$ hexo server == hexo s</div><div class=\"line\">$ hexo deploy == hexo d</div></pre></td></tr></table></figure>\n<h3 id=\"常见问题1\"><a href=\"#常见问题1\" class=\"headerlink\" title=\"常见问题1\"></a>常见问题1</h3><p>在hexo的配置和设置文件中，在冒号后面没留空格会导致出问题：<br>错误的设置：<br><figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attribute\">author</span>:Neveryu</div><div class=\"line\"><span class=\"attribute\">email</span>:react.dong.yu<span class=\"variable\">@gmail</span>.com</div><div class=\"line\"><span class=\"attribute\">language</span>:zh-CN</div></pre></td></tr></table></figure></p>\n<p>正确的设置：<br><figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attribute\">author</span>: Neveryu</div><div class=\"line\"><span class=\"attribute\">email</span>: react.dong.yu<span class=\"variable\">@gmail</span>.com</div><div class=\"line\"><span class=\"attribute\">language</span>: zh-CN</div></pre></td></tr></table></figure></p>\n<h3 id=\"常见问题2\"><a href=\"#常见问题2\" class=\"headerlink\" title=\"常见问题2\"></a>常见问题2</h3><p>关于Git提交中用户名和Email的设置<br><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">git config --global user<span class=\"selector-class\">.name</span> <span class=\"string\">\"Your name\"</span></div><div class=\"line\">git config --global user<span class=\"selector-class\">.email</span> <span class=\"string\">\"Your email\"</span></div></pre></td></tr></table></figure></p>\n<h3 id=\"常见问题3\"><a href=\"#常见问题3\" class=\"headerlink\" title=\"常见问题3\"></a>常见问题3</h3><p>Hexo 中的图标使用的是 <a href=\"http://fontawesome.io/\" target=\"_blank\" rel=\"external\">Font Awesome</a> ，所以，我们的博客已经自带了 Font Awesome 中的所有图标，基本可以满足我们的所有需求，我们可以去 Font Awesome 中查找我们想要使用的图标。<br><i class=\"fa fa-github\"></i> <code>&lt;i class=&quot;fa fa-github&quot;&gt;&lt;/i&gt;</code><br><i class=\"fa fa-github fa-lg\"></i> <code>&lt;i class=&quot;fa fa-github fa-lg&quot;&gt;&lt;/i&gt;</code><br><i class=\"fa fa-github fa-2x\"></i> <code>&lt;i class=&quot;fa fa-github fa-2x&quot;&gt;&lt;/i&gt;</code></p>\n","excerpt":"<p><a href=\"https://hexo.io/zh-cn/\">Hexo</a> 是一个快速、简洁且高效的静态站点生成框架，它基于 <a href=\"https://nodejs.org/en/\">Node.js</a> 。 它有以下特点：</p>\n<ul>\n<li><i class=\"fa fa-bolt\"></i><h6 style=\"display: inline;\">　超快速度</h6><br><i>Node.js 所带来的超快生成速度，让上百个页面在几秒内瞬间完成渲染。</i></li>\n<li><i class=\"fa fa-pencil\"></i><h6 style=\"display: inline;\">　支持Markdown</h6><br><i>Hexo 支持 GitHub Flavored Markdown 的所有功能，甚至可以整合 Octopress 的大多数插件。</i></li>\n<li><i class=\"fa fa-cloud-upload\"></i><h6 style=\"display: inline;\">　一件部署</h6><br><i>只需一条指令即可部署到Github Pages，或其他网站</i></li>\n<li><i class=\"fa fa-cog\"></i><h6 style=\"display: inline;\">　丰富的插件</h6><br><i>Hexo 拥有强大的插件系统，安装插件可以让 Hexo 支持 Jade, CoffeeScript。</i></li>\n</ul>\n<p>通过 Hexo 你可以轻松地使用 Markdown 编写文章，除了 Markdown 本身的语法之外，还可以使用 Hexo 提供的 <a href=\"https://hexo.io/zh-cn/docs/tag-plugins.html\">标签插件</a> 来快速的插入特定形式的内容。</p>\n<p>基于 Hexo 这个优秀的博客框架，很多优秀的开发者奉献出了它们基于 Hexo 开发的<a href=\"https://hexo.io/themes/\">主题</a>。<br><a href=\"http://theme-next.iissnan.com/\">NexT</a> 因其 <span id=\"yu-1\">精于心，简于形</span> 的风格，一直被广大用户所喜爱。</p>","more":"<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><p>安装 Hexo 只需几分钟时间，若你在安装过程中遇到问题或无法找到解决方式，请<a href=\"https://neveryu.github.io/guestbook/\">提交问题</a>，我会尽力解决你的问题。</p>\n<h3 id=\"安装前提\"><a href=\"#安装前提\" class=\"headerlink\" title=\"安装前提\"></a>安装前提</h3><p>安装 Hexo 相当简单。然而在安装前，您必须检查电脑中是否已安装下列应用程序:</p>\n<blockquote>\n<p><a href=\"https://nodejs.org/en/\">Node.js</a><br><a href=\"http://git-scm.com/\">Git</a></p>\n</blockquote>\n<p>如果您的电脑中已经安装上述必备程序，那么恭喜你！接下来只需要使用 npm 即可完成 Hexo 的安装。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm install -g hexo-cli</div></pre></td></tr></table></figure></p>\n<p>如果你的电脑中尚未安装所需要的程序，请根据以下安装指示完成安装。</p>\n<h3 id=\"安装-Git\"><a href=\"#安装-Git\" class=\"headerlink\" title=\"安装 Git\"></a>安装 Git</h3><ul>\n<li>Windows：下载安装 git 。<a id=\"download\" href=\"https://git-scm.com/download/win\"><i class=\"fa fa-download\"></i><span> Download Now</span><br></a></li>\n<li>Mac：使用 <a href=\"http://mxcl.github.com/homebrew/\">Homebrew</a>，<a href=\"http://www.macports.org/\">MacPorts</a> 或下载 <a href=\"http://sourceforge.net/projects/git-osx-installer/\">安装程序</a> 安装</li>\n<li>Linux（Ubuntu，Debian）：<code>sudo apt-get install git-core</code></li>\n<li>Linux（Fedora，Red Hat，CentOS）：<code>sudo yum install git-core</code></li>\n</ul>\n<h3 id=\"安装-Node-js\"><a href=\"#安装-Node-js\" class=\"headerlink\" title=\"安装 Node.js\"></a>安装 Node.js</h3><p>安装 Node.js 的最佳方式是使用 <a href=\"https://github.com/creationix/nvm\">nvm</a>。（nvm：Node Version Manager）<br>windows 下使用 nvm 请看这里： <a href=\"https://github.com/coreybutler/nvm-windows\">nvm-windows</a> ，首先需要下载安装 nvm 。<a id=\"download\" href=\"https://github.com/coreybutler/nvm-windows/releases\"><i class=\"fa fa-download\"></i><span> Download Now</span><br></a><br>windows下安装完nvm以后，我们可以打开命令行中执行命令<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ nvm</div><div class=\"line\">$ nvm install latest</div></pre></td></tr></table></figure></p>\n<p>执行完以后，重启命令行，执行命令 <code>node -v</code> ，如果出现版本号，那么 <code>Node.js</code> 就安装成功了。</p>\n<p id=\"div-border-left-red\">如果没有安装成功，那可能就是墙的原因。建议下载 <code>Node.js</code> 直接安装。<a id=\"download\" href=\"https://nodejs.org/en/download/\"><i class=\"fa fa-download\"></i><span> Download Now</span><br></a> </p>\n\n\n\n<h3 id=\"安装-Hexo\"><a href=\"#安装-Hexo\" class=\"headerlink\" title=\"安装 Hexo\"></a>安装 Hexo</h3><p>有了 Node.js ，我们可以使用 npm 安装 Hexo。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm install -g hexo-cli</div></pre></td></tr></table></figure></p>\n<p>安装 Hexo 完成后，我们首先需要为我们的项目创建一个<span id=\"inline-green\">指定文件夹</span>（例如我在 D 盘目录下创建了一个文件夹 blog 。<code>D:\\blog</code> ），在指定文件夹中执行下列命令， Hexo 将会在指定文件夹中新建所需要的文件。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo init</div></pre></td></tr></table></figure></p>\n<p>等待安装，安装完成后，<span id=\"inline-green\">指定文件夹</span> 的目录如下：<br><figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">.</div><div class=\"line\">├── _config.yml</div><div class=\"line\">├── package.json</div><div class=\"line\">├── scaffolds</div><div class=\"line\">├── source</div><div class=\"line\"><span class=\"string\">|   ├── _drafts</span></div><div class=\"line\"><span class=\"string\">|   └── _posts</span></div><div class=\"line\">└──</div></pre></td></tr></table></figure></p>\n<p>我们继续执行命令<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo g</div><div class=\"line\">$ hexo s --debug</div></pre></td></tr></table></figure></p>\n<p>Hexo 将 <code>source</code> 文件夹中除 <code>_posts</code> 文件夹之外，开头命名为 <code>_</code>（下划线）的文件 / 文件夹和隐藏的文件将会被忽略。Markdown 和 HTML 文件会被解析并放到 <code>public</code> 文件夹，而其他文件夹会被拷贝过去。<br>这个时候，我们在浏览器中访问 <code>http://localhost:4000/</code> ，就可以看到基于 Hexo 的默认主题的原型：<br><img src=\"http://p1.bqimg.com/567571/27324b740c9e91e2.png\" alt=\"hexo-next-one-1\"></p>\n<h1 id=\"安装-NexT-主题\"><a href=\"#安装-NexT-主题\" class=\"headerlink\" title=\"安装 NexT 主题\"></a>安装 NexT 主题</h1><h4 id=\"下载-NexT-主题\"><a href=\"#下载-NexT-主题\" class=\"headerlink\" title=\"下载 NexT 主题\"></a>下载 NexT 主题</h4><p>依旧是在当前目录下，使用 Git checkout 代码：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ git <span class=\"built_in\">clone</span> https://github.com/iissnan/hexo-theme-next themes/next</div></pre></td></tr></table></figure></p>\n<p>等待下载完成。</p>\n<p id=\"div-border-left-yellow\">在 Hexo 中有两份主要的配置文件，其名称都是 _config.yml 。其中，一份位于站点根目录下，主要包含 Hexo 本身的配置；另一份位于主题目录下，这份配置由主题作者提供，主要用于配置主题相关的选项。<br>  我们约定，将前者称为 <span id=\"inline-blue\">站点配置文件</span>，后者称为 <span id=\"inline-purple\">主题配置文件</span></p>\n\n<h4 id=\"启用-NexT-主题\"><a href=\"#启用-NexT-主题\" class=\"headerlink\" title=\"启用 NexT 主题\"></a>启用 NexT 主题</h4><p>打开 <span id=\"inline-blue\">站点配置文件</span> ，找到 <code>theme</code> 字段，并将其值更改为 <code>next</code> 。<br>到此， NexT 主题安装完成。下一步我们将验证主题是否正确启用。在切换主题之后、验证之前，我们最好使用 <code>hexo clean</code> 来清除 Hexo 的缓存。</p>\n<h4 id=\"验证主题\"><a href=\"#验证主题\" class=\"headerlink\" title=\"验证主题\"></a>验证主题</h4><p>首先启动 Hexo 本地站点，并开启调试模式（即加上 <code>--debug</code>），整个命令是 <code>hexo s --debug</code>。在服务启动的过程，注意观察命令行输出是否有任何异常信息。当命令行输出中提示：<br><code>INFO  Hexo is running at http://0.0.0.0:4000/. Press Ctrl+C to stop.</code><br>此时即可使用浏览器访问 <code>http://localhost:4000/</code> ，检查站点是否正确运行。</p>\n<p id=\"div-border-left-green\">当你看到站点的外观与下图所示类似时即说明你已成功安装 NexT 主题。这是 NexT 默认的 Scheme —— Muse</p><br><img src=\"http://p1.bqimg.com/567571/8333728b5eaab526.png\" alt=\"hexo-next-one-1\"><br>现在，我们已经成功安装并启用了 NexT 主题。<br><br><p id=\"div-border-top-blue\">关于更多基本操作和基础知识，请查阅 <a href=\"https://hexo.io/zh-cn/\">Hexo</a> 与 <a href=\"http://theme-next.iissnan.com/\">NexT</a> 官方文档.</p>\n\n\n<h3 id=\"总结：本地调试步骤\"><a href=\"#总结：本地调试步骤\" class=\"headerlink\" title=\"总结：本地调试步骤\"></a>总结：本地调试步骤</h3><p>三部曲：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo clean</div><div class=\"line\">$ hexo g</div><div class=\"line\">$ hexo s --debug</div></pre></td></tr></table></figure></p>\n<p>这种带debug的运行，如果出现错误，可以在命令行中看到错误提示信息。</p>\n<h3 id=\"总结：部署步骤\"><a href=\"#总结：部署步骤\" class=\"headerlink\" title=\"总结：部署步骤\"></a>总结：部署步骤</h3><p>三部曲：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo clean</div><div class=\"line\">$ hexo g</div><div class=\"line\">$ hexo d</div></pre></td></tr></table></figure></p>\n<p>当然在部署之前，需要先配置好配置文件中的deploy。</p>\n<h3 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"postName\"</span>  <span class=\"comment\">#新建文章</span></div><div class=\"line\">$ hexo new page <span class=\"string\">\"pageName\"</span> <span class=\"comment\"># 新建页面</span></div><div class=\"line\">$ hexo generate <span class=\"comment\"># 生成静态页面至public目录</span></div><div class=\"line\">$ hexo server <span class=\"comment\"># 开启预览访问端口(默认端口4000，'ctrl+c'关闭server)</span></div><div class=\"line\">$ hexo deploy <span class=\"comment\"># 项目部署</span></div><div class=\"line\">$ hexo <span class=\"built_in\">help</span> <span class=\"comment\"># 查看帮助</span></div><div class=\"line\">$ hexo version <span class=\"comment\"># 查看Hexo的版本</span></div></pre></td></tr></table></figure>\n<h3 id=\"简写命令\"><a href=\"#简写命令\" class=\"headerlink\" title=\"简写命令\"></a>简写命令</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new == hexo n</div><div class=\"line\">$ hexo generate == hexo g</div><div class=\"line\">$ hexo server == hexo s</div><div class=\"line\">$ hexo deploy == hexo d</div></pre></td></tr></table></figure>\n<h3 id=\"常见问题1\"><a href=\"#常见问题1\" class=\"headerlink\" title=\"常见问题1\"></a>常见问题1</h3><p>在hexo的配置和设置文件中，在冒号后面没留空格会导致出问题：<br>错误的设置：<br><figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attribute\">author</span>:Neveryu</div><div class=\"line\"><span class=\"attribute\">email</span>:react.dong.yu<span class=\"variable\">@gmail</span>.com</div><div class=\"line\"><span class=\"attribute\">language</span>:zh-CN</div></pre></td></tr></table></figure></p>\n<p>正确的设置：<br><figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attribute\">author</span>: Neveryu</div><div class=\"line\"><span class=\"attribute\">email</span>: react.dong.yu<span class=\"variable\">@gmail</span>.com</div><div class=\"line\"><span class=\"attribute\">language</span>: zh-CN</div></pre></td></tr></table></figure></p>\n<h3 id=\"常见问题2\"><a href=\"#常见问题2\" class=\"headerlink\" title=\"常见问题2\"></a>常见问题2</h3><p>关于Git提交中用户名和Email的设置<br><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">git config --global user<span class=\"selector-class\">.name</span> <span class=\"string\">\"Your name\"</span></div><div class=\"line\">git config --global user<span class=\"selector-class\">.email</span> <span class=\"string\">\"Your email\"</span></div></pre></td></tr></table></figure></p>\n<h3 id=\"常见问题3\"><a href=\"#常见问题3\" class=\"headerlink\" title=\"常见问题3\"></a>常见问题3</h3><p>Hexo 中的图标使用的是 <a href=\"http://fontawesome.io/\">Font Awesome</a> ，所以，我们的博客已经自带了 Font Awesome 中的所有图标，基本可以满足我们的所有需求，我们可以去 Font Awesome 中查找我们想要使用的图标。<br><i class=\"fa fa-github\"></i> <code>&lt;i class=&quot;fa fa-github&quot;&gt;&lt;/i&gt;</code><br><i class=\"fa fa-github fa-lg\"></i> <code>&lt;i class=&quot;fa fa-github fa-lg&quot;&gt;&lt;/i&gt;</code><br><i class=\"fa fa-github fa-2x\"></i> <code>&lt;i class=&quot;fa fa-github fa-2x&quot;&gt;&lt;/i&gt;</code></p>"},{"title":"Hexo-NexT搭建个人博客（三）","comments":0,"abbrlink":22441,"date":"2016-11-11T05:25:24.000Z","_content":"　　经过前面两期文章，我相信你已经可以在本地建立一个非常令人满意的静态博客了，本篇文章将介绍如何将自己的静态博客部署到 gitpage 上，并托管到 github 上；以及关于 Hexo 和 NexT 中更深层次的一些问题及解方案。\n\n## 菜单栏中标签与侧边栏中标签关联的问题\n　　以我的博客为例，关于菜单栏中的选项 与侧边栏中的选项，由于顶部菜单栏中位置有限，所以我就想在顶部菜单栏中不显示<b>标签</b>这一项，于是我在 <span id=\"inline-purple\">主题配置文件</span> 中 将 menu 配置项中的<b>标签</b>这一个选项给注释掉了，所以它不会在菜单栏中显示，但是不代表没有这个页面，这个页面是存在的，我们只是使其不显示在顶部的菜单栏中而已，我们可以直接输入绝对地址来查看这个页面，例如：[https://neveryu.github.io/tags/](https://neveryu.github.io/tags/)。但是与此同时，我们发现侧边栏中的<b>标签</b>选项只能显示标签数量，不能点击。\n\n<!-- more -->\n\n　　这是因为侧边栏中的点击链接是根据菜单栏中对应的项来添加的，什么意思呢？就是说如果顶部菜单栏中有<b>标签</b>这一项，那么就会给侧边栏中<b>标签</b>这一项也添加点击链接；如果顶部菜单栏中没有<b>标签</b>这一项，那么就不给侧边栏中<b>标签</b>这一项添加点击链接，导致侧边栏中的<b>标签</b>项只有显示数据，不提供点击链接。\n　　如果我们不想在菜单栏中显示<b>标签</b>项，但是希望侧边栏中的<b>标签</b>项 可以点击，该怎么做呢？\n　　在 <span id=\"inline-purple\">主题配置文件</span> `\\themes\\next\\layout\\_macro\\sidebar.swing_` 中，将\n```\n{% if site.tags.length > 0 %}\n  <div class=\"site-state-item site-state-tags\">\n    {% if theme.menu.tags %}<a href=\"{{ url_for(theme.menu.tags) }}\">{% endif %}\n      <span class=\"site-state-item-count\">{{ site.tags.length }}</span>\n      <span class=\"site-state-item-name\">{{ __('state.tags') }}</span>\n    {% if theme.menu.tags %}</a>{% endif %}\n  </div>\n{% endif %}\n```\n改成：\n```\n{% if site.tags.length > 0 %}\n  <div class=\"site-state-item site-state-tags\">\n    <a href=\"{{ url_for(theme.menu.tags) }}\">\n      <span class=\"site-state-item-count\">{{ site.tags.length }}</span>\n      <span class=\"site-state-item-name\">{{ __('state.tags') }}</span>\n    </a>\n  </div>\n{% endif %}\n```\n同理，关于菜单栏中 归档 和 分类 的类似操作也是如此。\n\n\n## 关于High一下中的音乐多次点击重叠播放的解决方案\n\n　　在之前的 High一下 的播放音乐，如果多次点击的话，音乐会重复叠加播放，严重影响听歌体验，而且只能播放一首歌。\n　　而现在的 High一下 已经解决了这个问题，而且可以列表循环多首歌曲。我将之前的那段播放音乐的代码换了。由于代码太长了，就不在这里贴出来了。大家可以去查看我的源码：[https://github.com/Neveryu/Blog](https://github.com/Neveryu/Blog)。\n关于播放音乐的代码是在：[https://github.com/Neveryu/Blog/blob/master/themes/next/layout/_partials/header.swig](https://github.com/Neveryu/Blog/blob/master/themes/next/layout/_partials/header.swig) 中的第 60 行开始。\n　　需要说明的是：现在的 High一下 实现了歌曲列表循环，所以，我们可以放入多首歌的链接。在代码中以数组元素的形式加入歌曲链接。\n```\nvar songs = [\n            \"http://v.65dj.com/wailian/84791c997d8c55023dad0d5690e48c28.mp3\",\n            \"http://7xoiki.com1.z0.glb.clouddn.com/Music-sunburst.mp3\"\n];\n```\n\n\n## 关于github屏蔽vetor，导致页面空白的解决方案。\n\n\n关于 Github Pages 过滤掉了 `source/vendors` 目录的访问，导致加载vendor里面的文件全部 404 ，页面大面积空白。\n\n1.在根目录添加.nojekyll文件。\n2.也可以手动将 `source/vendors` 目录修改成 `source/lib` 同时，修改主题配置文件 `_config.yml` ，将 `_internal: vendors` 改成你所修改的名字，例如 `_internal: lib` 。\n\n\n\n## 关于如何获取自己的多说userid\n首先进入自己的帐号管理页面，点击左上自己的名字\n![](http://i1.piimg.com/567571/afbb6058c9f628ad.png)\n此时地址栏后面的一串数字就是你的多说 `userid`。\n![](http://i1.piimg.com/567571/5e3de4efdcabd668.png)\n\n## 关于如何修改内容区域宽度\n\n未完...ing\n\n<p id=\"div-border-top-green\"><i>[我的博客仓库](https://github.com/Neveryu/Neveryu.github.io)\n[博客源码](https://github.com/Neveryu/Blog)\n</i></p>","source":"_drafts/hexo-next-three.md","raw":"---\ntitle: Hexo-NexT搭建个人博客（三）\ncategories: 综合\ntags:\n  - Hexo\n  - Next\ncomments: false\nabbrlink: 22441\ndate: 2016-11-11 13:25:24\n---\n　　经过前面两期文章，我相信你已经可以在本地建立一个非常令人满意的静态博客了，本篇文章将介绍如何将自己的静态博客部署到 gitpage 上，并托管到 github 上；以及关于 Hexo 和 NexT 中更深层次的一些问题及解方案。\n\n## 菜单栏中标签与侧边栏中标签关联的问题\n　　以我的博客为例，关于菜单栏中的选项 与侧边栏中的选项，由于顶部菜单栏中位置有限，所以我就想在顶部菜单栏中不显示<b>标签</b>这一项，于是我在 <span id=\"inline-purple\">主题配置文件</span> 中 将 menu 配置项中的<b>标签</b>这一个选项给注释掉了，所以它不会在菜单栏中显示，但是不代表没有这个页面，这个页面是存在的，我们只是使其不显示在顶部的菜单栏中而已，我们可以直接输入绝对地址来查看这个页面，例如：[https://neveryu.github.io/tags/](https://neveryu.github.io/tags/)。但是与此同时，我们发现侧边栏中的<b>标签</b>选项只能显示标签数量，不能点击。\n\n<!-- more -->\n\n　　这是因为侧边栏中的点击链接是根据菜单栏中对应的项来添加的，什么意思呢？就是说如果顶部菜单栏中有<b>标签</b>这一项，那么就会给侧边栏中<b>标签</b>这一项也添加点击链接；如果顶部菜单栏中没有<b>标签</b>这一项，那么就不给侧边栏中<b>标签</b>这一项添加点击链接，导致侧边栏中的<b>标签</b>项只有显示数据，不提供点击链接。\n　　如果我们不想在菜单栏中显示<b>标签</b>项，但是希望侧边栏中的<b>标签</b>项 可以点击，该怎么做呢？\n　　在 <span id=\"inline-purple\">主题配置文件</span> `\\themes\\next\\layout\\_macro\\sidebar.swing_` 中，将\n```\n{% if site.tags.length > 0 %}\n  <div class=\"site-state-item site-state-tags\">\n    {% if theme.menu.tags %}<a href=\"{{ url_for(theme.menu.tags) }}\">{% endif %}\n      <span class=\"site-state-item-count\">{{ site.tags.length }}</span>\n      <span class=\"site-state-item-name\">{{ __('state.tags') }}</span>\n    {% if theme.menu.tags %}</a>{% endif %}\n  </div>\n{% endif %}\n```\n改成：\n```\n{% if site.tags.length > 0 %}\n  <div class=\"site-state-item site-state-tags\">\n    <a href=\"{{ url_for(theme.menu.tags) }}\">\n      <span class=\"site-state-item-count\">{{ site.tags.length }}</span>\n      <span class=\"site-state-item-name\">{{ __('state.tags') }}</span>\n    </a>\n  </div>\n{% endif %}\n```\n同理，关于菜单栏中 归档 和 分类 的类似操作也是如此。\n\n\n## 关于High一下中的音乐多次点击重叠播放的解决方案\n\n　　在之前的 High一下 的播放音乐，如果多次点击的话，音乐会重复叠加播放，严重影响听歌体验，而且只能播放一首歌。\n　　而现在的 High一下 已经解决了这个问题，而且可以列表循环多首歌曲。我将之前的那段播放音乐的代码换了。由于代码太长了，就不在这里贴出来了。大家可以去查看我的源码：[https://github.com/Neveryu/Blog](https://github.com/Neveryu/Blog)。\n关于播放音乐的代码是在：[https://github.com/Neveryu/Blog/blob/master/themes/next/layout/_partials/header.swig](https://github.com/Neveryu/Blog/blob/master/themes/next/layout/_partials/header.swig) 中的第 60 行开始。\n　　需要说明的是：现在的 High一下 实现了歌曲列表循环，所以，我们可以放入多首歌的链接。在代码中以数组元素的形式加入歌曲链接。\n```\nvar songs = [\n            \"http://v.65dj.com/wailian/84791c997d8c55023dad0d5690e48c28.mp3\",\n            \"http://7xoiki.com1.z0.glb.clouddn.com/Music-sunburst.mp3\"\n];\n```\n\n\n## 关于github屏蔽vetor，导致页面空白的解决方案。\n\n\n关于 Github Pages 过滤掉了 `source/vendors` 目录的访问，导致加载vendor里面的文件全部 404 ，页面大面积空白。\n\n1.在根目录添加.nojekyll文件。\n2.也可以手动将 `source/vendors` 目录修改成 `source/lib` 同时，修改主题配置文件 `_config.yml` ，将 `_internal: vendors` 改成你所修改的名字，例如 `_internal: lib` 。\n\n\n\n## 关于如何获取自己的多说userid\n首先进入自己的帐号管理页面，点击左上自己的名字\n![](http://i1.piimg.com/567571/afbb6058c9f628ad.png)\n此时地址栏后面的一串数字就是你的多说 `userid`。\n![](http://i1.piimg.com/567571/5e3de4efdcabd668.png)\n\n## 关于如何修改内容区域宽度\n\n未完...ing\n\n<p id=\"div-border-top-green\"><i>[我的博客仓库](https://github.com/Neveryu/Neveryu.github.io)\n[博客源码](https://github.com/Neveryu/Blog)\n</i></p>","slug":"hexo-next-three","published":0,"updated":"2016-11-14T13:41:34.000Z","layout":"post","photos":[],"link":"","_id":"civi8ouck00072c6nxequnuxw","content":"<p>　　经过前面两期文章，我相信你已经可以在本地建立一个非常令人满意的静态博客了，本篇文章将介绍如何将自己的静态博客部署到 gitpage 上，并托管到 github 上；以及关于 Hexo 和 NexT 中更深层次的一些问题及解方案。</p>\n<h2 id=\"菜单栏中标签与侧边栏中标签关联的问题\"><a href=\"#菜单栏中标签与侧边栏中标签关联的问题\" class=\"headerlink\" title=\"菜单栏中标签与侧边栏中标签关联的问题\"></a>菜单栏中标签与侧边栏中标签关联的问题</h2><p>　　以我的博客为例，关于菜单栏中的选项 与侧边栏中的选项，由于顶部菜单栏中位置有限，所以我就想在顶部菜单栏中不显示<b>标签</b>这一项，于是我在 <span id=\"inline-purple\">主题配置文件</span> 中 将 menu 配置项中的<b>标签</b>这一个选项给注释掉了，所以它不会在菜单栏中显示，但是不代表没有这个页面，这个页面是存在的，我们只是使其不显示在顶部的菜单栏中而已，我们可以直接输入绝对地址来查看这个页面，例如：<a href=\"https://neveryu.github.io/tags/\" target=\"_blank\" rel=\"external\">https://neveryu.github.io/tags/</a>。但是与此同时，我们发现侧边栏中的<b>标签</b>选项只能显示标签数量，不能点击。</p>\n<a id=\"more\"></a>\n<p>　　这是因为侧边栏中的点击链接是根据菜单栏中对应的项来添加的，什么意思呢？就是说如果顶部菜单栏中有<b>标签</b>这一项，那么就会给侧边栏中<b>标签</b>这一项也添加点击链接；如果顶部菜单栏中没有<b>标签</b>这一项，那么就不给侧边栏中<b>标签</b>这一项添加点击链接，导致侧边栏中的<b>标签</b>项只有显示数据，不提供点击链接。<br>　　如果我们不想在菜单栏中显示<b>标签</b>项，但是希望侧边栏中的<b>标签</b>项 可以点击，该怎么做呢？<br>　　在 <span id=\"inline-purple\">主题配置文件</span> <code>\\themes\\next\\layout\\_macro\\sidebar.swing_</code> 中，将<br><figure class=\"highlight django\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\"><span class=\"name\">if</span></span> site.tags.length &gt; 0 %&#125;</span><span class=\"xml\"></span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"site-state-item site-state-tags\"</span>&gt;</span></div><div class=\"line\">    <span class=\"template-tag\">&#123;% <span class=\"name\"><span class=\"name\">if</span></span> theme.menu.tags %&#125;</span><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"</span></span></span><span class=\"template-variable\">&#123;&#123; url_for(theme.menu.tags) &#125;&#125;</span><span class=\"xml\"><span class=\"tag\"><span class=\"string\">\"</span>&gt;</span></span><span class=\"template-tag\">&#123;% <span class=\"name\"><span class=\"name\">endif</span></span> %&#125;</span><span class=\"xml\"></span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"site-state-item-count\"</span>&gt;</span><span class=\"template-variable\">&#123;&#123; site.tags.length &#125;&#125;</span><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"site-state-item-name\"</span>&gt;</span><span class=\"template-variable\">&#123;&#123; __('state.tags') &#125;&#125;</span><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span></div><div class=\"line\">    <span class=\"template-tag\">&#123;% <span class=\"name\"><span class=\"name\">if</span></span> theme.menu.tags %&#125;</span><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><span class=\"template-tag\">&#123;% <span class=\"name\"><span class=\"name\">endif</span></span> %&#125;</span><span class=\"xml\"></span></div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"><span class=\"template-tag\">&#123;% <span class=\"name\"><span class=\"name\">endif</span></span> %&#125;</span><span class=\"xml\"></span></div></pre></td></tr></table></figure></p>\n<p>改成：<br><figure class=\"highlight django\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\"><span class=\"name\">if</span></span> site.tags.length &gt; 0 %&#125;</span><span class=\"xml\"></span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"site-state-item site-state-tags\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"</span></span><span class=\"template-variable\">&#123;&#123; url_for(theme.menu.tags) &#125;&#125;</span><span class=\"xml\"><span class=\"tag\"><span class=\"string\">\"</span>&gt;</span></span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"site-state-item-count\"</span>&gt;</span><span class=\"template-variable\">&#123;&#123; site.tags.length &#125;&#125;</span><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"site-state-item-name\"</span>&gt;</span><span class=\"template-variable\">&#123;&#123; __('state.tags') &#125;&#125;</span><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"><span class=\"template-tag\">&#123;% <span class=\"name\"><span class=\"name\">endif</span></span> %&#125;</span><span class=\"xml\"></span></div></pre></td></tr></table></figure></p>\n<p>同理，关于菜单栏中 归档 和 分类 的类似操作也是如此。</p>\n<h2 id=\"关于High一下中的音乐多次点击重叠播放的解决方案\"><a href=\"#关于High一下中的音乐多次点击重叠播放的解决方案\" class=\"headerlink\" title=\"关于High一下中的音乐多次点击重叠播放的解决方案\"></a>关于High一下中的音乐多次点击重叠播放的解决方案</h2><p>　　在之前的 High一下 的播放音乐，如果多次点击的话，音乐会重复叠加播放，严重影响听歌体验，而且只能播放一首歌。<br>　　而现在的 High一下 已经解决了这个问题，而且可以列表循环多首歌曲。我将之前的那段播放音乐的代码换了。由于代码太长了，就不在这里贴出来了。大家可以去查看我的源码：<a href=\"https://github.com/Neveryu/Blog\" target=\"_blank\" rel=\"external\">https://github.com/Neveryu/Blog</a>。<br>关于播放音乐的代码是在：<a href=\"https://github.com/Neveryu/Blog/blob/master/themes/next/layout/_partials/header.swig\" target=\"_blank\" rel=\"external\">https://github.com/Neveryu/Blog/blob/master/themes/next/layout/_partials/header.swig</a> 中的第 60 行开始。<br>　　需要说明的是：现在的 High一下 实现了歌曲列表循环，所以，我们可以放入多首歌的链接。在代码中以数组元素的形式加入歌曲链接。<br><figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attribute\">var songs</span> = [</div><div class=\"line\">            <span class=\"string\">\"http://v.65dj.com/wailian/84791c997d8c55023dad0d5690e48c28.mp3\"</span>,</div><div class=\"line\">            <span class=\"string\">\"http://7xoiki.com1.z0.glb.clouddn.com/Music-sunburst.mp3\"</span></div><div class=\"line\">];</div></pre></td></tr></table></figure></p>\n<h2 id=\"关于github屏蔽vetor，导致页面空白的解决方案。\"><a href=\"#关于github屏蔽vetor，导致页面空白的解决方案。\" class=\"headerlink\" title=\"关于github屏蔽vetor，导致页面空白的解决方案。\"></a>关于github屏蔽vetor，导致页面空白的解决方案。</h2><p>关于 Github Pages 过滤掉了 <code>source/vendors</code> 目录的访问，导致加载vendor里面的文件全部 404 ，页面大面积空白。</p>\n<p>1.在根目录添加.nojekyll文件。<br>2.也可以手动将 <code>source/vendors</code> 目录修改成 <code>source/lib</code> 同时，修改主题配置文件 <code>_config.yml</code> ，将 <code>_internal: vendors</code> 改成你所修改的名字，例如 <code>_internal: lib</code> 。</p>\n<h2 id=\"关于如何获取自己的多说userid\"><a href=\"#关于如何获取自己的多说userid\" class=\"headerlink\" title=\"关于如何获取自己的多说userid\"></a>关于如何获取自己的多说userid</h2><p>首先进入自己的帐号管理页面，点击左上自己的名字<br><img src=\"http://i1.piimg.com/567571/afbb6058c9f628ad.png\" alt=\"\"><br>此时地址栏后面的一串数字就是你的多说 <code>userid</code>。<br><img src=\"http://i1.piimg.com/567571/5e3de4efdcabd668.png\" alt=\"\"></p>\n<h2 id=\"关于如何修改内容区域宽度\"><a href=\"#关于如何修改内容区域宽度\" class=\"headerlink\" title=\"关于如何修改内容区域宽度\"></a>关于如何修改内容区域宽度</h2><p>未完…ing</p>\n<p id=\"div-border-top-green\"><i><a href=\"https://github.com/Neveryu/Neveryu.github.io\" target=\"_blank\" rel=\"external\">我的博客仓库</a><br><a href=\"https://github.com/Neveryu/Blog\" target=\"_blank\" rel=\"external\">博客源码</a><br></i></p>","excerpt":"<p>　　经过前面两期文章，我相信你已经可以在本地建立一个非常令人满意的静态博客了，本篇文章将介绍如何将自己的静态博客部署到 gitpage 上，并托管到 github 上；以及关于 Hexo 和 NexT 中更深层次的一些问题及解方案。</p>\n<h2 id=\"菜单栏中标签与侧边栏中标签关联的问题\"><a href=\"#菜单栏中标签与侧边栏中标签关联的问题\" class=\"headerlink\" title=\"菜单栏中标签与侧边栏中标签关联的问题\"></a>菜单栏中标签与侧边栏中标签关联的问题</h2><p>　　以我的博客为例，关于菜单栏中的选项 与侧边栏中的选项，由于顶部菜单栏中位置有限，所以我就想在顶部菜单栏中不显示<b>标签</b>这一项，于是我在 <span id=\"inline-purple\">主题配置文件</span> 中 将 menu 配置项中的<b>标签</b>这一个选项给注释掉了，所以它不会在菜单栏中显示，但是不代表没有这个页面，这个页面是存在的，我们只是使其不显示在顶部的菜单栏中而已，我们可以直接输入绝对地址来查看这个页面，例如：<a href=\"https://neveryu.github.io/tags/\">https://neveryu.github.io/tags/</a>。但是与此同时，我们发现侧边栏中的<b>标签</b>选项只能显示标签数量，不能点击。</p>","more":"<p>　　这是因为侧边栏中的点击链接是根据菜单栏中对应的项来添加的，什么意思呢？就是说如果顶部菜单栏中有<b>标签</b>这一项，那么就会给侧边栏中<b>标签</b>这一项也添加点击链接；如果顶部菜单栏中没有<b>标签</b>这一项，那么就不给侧边栏中<b>标签</b>这一项添加点击链接，导致侧边栏中的<b>标签</b>项只有显示数据，不提供点击链接。<br>　　如果我们不想在菜单栏中显示<b>标签</b>项，但是希望侧边栏中的<b>标签</b>项 可以点击，该怎么做呢？<br>　　在 <span id=\"inline-purple\">主题配置文件</span> <code>\\themes\\next\\layout\\_macro\\sidebar.swing_</code> 中，将<br><figure class=\"highlight django\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\"><span class=\"name\">if</span></span> site.tags.length &gt; 0 %&#125;</span><span class=\"xml\"></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"site-state-item site-state-tags\"</span>&gt;</span></div><div class=\"line\">    </span><span class=\"template-tag\">&#123;% <span class=\"name\"><span class=\"name\">if</span></span> theme.menu.tags %&#125;</span><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"</span></span></span><span class=\"template-variable\">&#123;&#123; url_for(theme.menu.tags) &#125;&#125;</span><span class=\"xml\"><span class=\"tag\"><span class=\"string\">\"</span>&gt;</span></span><span class=\"template-tag\">&#123;% <span class=\"name\"><span class=\"name\">endif</span></span> %&#125;</span><span class=\"xml\"></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"site-state-item-count\"</span>&gt;</span></span><span class=\"template-variable\">&#123;&#123; site.tags.length &#125;&#125;</span><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"site-state-item-name\"</span>&gt;</span></span><span class=\"template-variable\">&#123;&#123; __('state.tags') &#125;&#125;</span><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></div><div class=\"line\">    </span><span class=\"template-tag\">&#123;% <span class=\"name\"><span class=\"name\">if</span></span> theme.menu.tags %&#125;</span><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><span class=\"template-tag\">&#123;% <span class=\"name\"><span class=\"name\">endif</span></span> %&#125;</span><span class=\"xml\"></div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"></span><span class=\"template-tag\">&#123;% <span class=\"name\"><span class=\"name\">endif</span></span> %&#125;</span><span class=\"xml\"></span></div></pre></td></tr></table></figure></p>\n<p>改成：<br><figure class=\"highlight django\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\"><span class=\"name\">if</span></span> site.tags.length &gt; 0 %&#125;</span><span class=\"xml\"></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"site-state-item site-state-tags\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"</span></span></span><span class=\"template-variable\">&#123;&#123; url_for(theme.menu.tags) &#125;&#125;</span><span class=\"xml\"><span class=\"tag\"><span class=\"string\">\"</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"site-state-item-count\"</span>&gt;</span></span><span class=\"template-variable\">&#123;&#123; site.tags.length &#125;&#125;</span><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"site-state-item-name\"</span>&gt;</span></span><span class=\"template-variable\">&#123;&#123; __('state.tags') &#125;&#125;</span><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"></span><span class=\"template-tag\">&#123;% <span class=\"name\"><span class=\"name\">endif</span></span> %&#125;</span><span class=\"xml\"></span></div></pre></td></tr></table></figure></p>\n<p>同理，关于菜单栏中 归档 和 分类 的类似操作也是如此。</p>\n<h2 id=\"关于High一下中的音乐多次点击重叠播放的解决方案\"><a href=\"#关于High一下中的音乐多次点击重叠播放的解决方案\" class=\"headerlink\" title=\"关于High一下中的音乐多次点击重叠播放的解决方案\"></a>关于High一下中的音乐多次点击重叠播放的解决方案</h2><p>　　在之前的 High一下 的播放音乐，如果多次点击的话，音乐会重复叠加播放，严重影响听歌体验，而且只能播放一首歌。<br>　　而现在的 High一下 已经解决了这个问题，而且可以列表循环多首歌曲。我将之前的那段播放音乐的代码换了。由于代码太长了，就不在这里贴出来了。大家可以去查看我的源码：<a href=\"https://github.com/Neveryu/Blog\">https://github.com/Neveryu/Blog</a>。<br>关于播放音乐的代码是在：<a href=\"https://github.com/Neveryu/Blog/blob/master/themes/next/layout/_partials/header.swig\">https://github.com/Neveryu/Blog/blob/master/themes/next/layout/_partials/header.swig</a> 中的第 60 行开始。<br>　　需要说明的是：现在的 High一下 实现了歌曲列表循环，所以，我们可以放入多首歌的链接。在代码中以数组元素的形式加入歌曲链接。<br><figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attribute\">var songs</span> = [</div><div class=\"line\">            <span class=\"string\">\"http://v.65dj.com/wailian/84791c997d8c55023dad0d5690e48c28.mp3\"</span>,</div><div class=\"line\">            <span class=\"string\">\"http://7xoiki.com1.z0.glb.clouddn.com/Music-sunburst.mp3\"</span></div><div class=\"line\">];</div></pre></td></tr></table></figure></p>\n<h2 id=\"关于github屏蔽vetor，导致页面空白的解决方案。\"><a href=\"#关于github屏蔽vetor，导致页面空白的解决方案。\" class=\"headerlink\" title=\"关于github屏蔽vetor，导致页面空白的解决方案。\"></a>关于github屏蔽vetor，导致页面空白的解决方案。</h2><p>关于 Github Pages 过滤掉了 <code>source/vendors</code> 目录的访问，导致加载vendor里面的文件全部 404 ，页面大面积空白。</p>\n<p>1.在根目录添加.nojekyll文件。<br>2.也可以手动将 <code>source/vendors</code> 目录修改成 <code>source/lib</code> 同时，修改主题配置文件 <code>_config.yml</code> ，将 <code>_internal: vendors</code> 改成你所修改的名字，例如 <code>_internal: lib</code> 。</p>\n<h2 id=\"关于如何获取自己的多说userid\"><a href=\"#关于如何获取自己的多说userid\" class=\"headerlink\" title=\"关于如何获取自己的多说userid\"></a>关于如何获取自己的多说userid</h2><p>首先进入自己的帐号管理页面，点击左上自己的名字<br><img src=\"http://i1.piimg.com/567571/afbb6058c9f628ad.png\" alt=\"\"><br>此时地址栏后面的一串数字就是你的多说 <code>userid</code>。<br><img src=\"http://i1.piimg.com/567571/5e3de4efdcabd668.png\" alt=\"\"></p>\n<h2 id=\"关于如何修改内容区域宽度\"><a href=\"#关于如何修改内容区域宽度\" class=\"headerlink\" title=\"关于如何修改内容区域宽度\"></a>关于如何修改内容区域宽度</h2><p>未完…ing</p>\n<p id=\"div-border-top-green\"><i><a href=\"https://github.com/Neveryu/Neveryu.github.io\">我的博客仓库</a><br><a href=\"https://github.com/Neveryu/Blog\">博客源码</a><br></i></p>"},{"title":"Hexo-NexT搭建个人博客（二）","comments":0,"abbrlink":23504,"date":"2016-09-30T14:18:22.000Z","_content":"\n本篇文章将介绍基于NexT主题下的一些扩展功能的实现。\n首先，我们需要明白：\n<p id=\"div-border-left-yellow\">在 Hexo 中有两份主要的配置文件，其名称都是 _config.yml 。其中，一份位于站点根目录下，主要包含 Hexo 本身的配置；另一份位于主题目录下，这份配置由主题作者提供，主要用于配置主题相关的选项。\n  我们约定，将前者称为 <span id=\"inline-blue\">站点配置文件</span>，后者称为 <span id=\"inline-purple\">主题配置文件</span></p>\n\n#### 1.设置侧栏的位置\n修改 <span id=\"inline-purple\">主题配置文件</span> 中 `sidebar.position` 的值，支持的选项有：`left` `right`\n目前仅 Pisces Scheme 支持 position 配置，也就是说NexT主题的侧栏位置是不能设置的，设置了也没用，反正都在右边。\n\n<!-- more -->\n\n#### 2. 关于添加居中模块\n<blockquote class=\"blockquote-center\">优秀的人，不是不合群，而是他们合群的人里面没有你</blockquote>\n代码如下：\n``` html\n<blockquote class=\"blockquote-center\">优秀的人，不是不合群，而是他们合群的人里面没有你</blockquote>\n```\n\n#### 3. 添加High一下\n打开博客根目录 `\\themes\\next\\layout\\_partials\\header.swig` ，在\n`<ul> ... /ul>` 标签之间加入以下代码：\n```\n<li> <a title=\"把这个链接拖到你的Chrome收藏夹工具栏中\" href='javascript:(function() {\n    function c() {\n        var e = document.createElement(\"link\");\n        e.setAttribute(\"type\", \"text/css\");\n        e.setAttribute(\"rel\", \"stylesheet\");\n        e.setAttribute(\"href\", f);\n        e.setAttribute(\"class\", l);\n        document.body.appendChild(e)\n    }\n\n    function h() {\n        var e = document.getElementsByClassName(l);\n        for (var t = 0; t < e.length; t++) {\n            document.body.removeChild(e[t])\n        }\n    }\n\n    function p() {\n        var e = document.createElement(\"div\");\n        e.setAttribute(\"class\", a);\n        document.body.appendChild(e);\n        setTimeout(function() {\n            document.body.removeChild(e)\n        }, 100)\n    }\n\n    function d(e) {\n        return {\n            height : e.offsetHeight,\n            width : e.offsetWidth\n        }\n    }\n\n    function v(i) {\n        var s = d(i);\n        return s.height > e && s.height < n && s.width > t && s.width < r\n    }\n\n    function m(e) {\n        var t = e;\n        var n = 0;\n        while (!!t) {\n            n += t.offsetTop;\n            t = t.offsetParent\n        }\n        return n\n    }\n\n    function g() {\n        var e = document.documentElement;\n        if (!!window.innerWidth) {\n            return window.innerHeight\n        } else if (e && !isNaN(e.clientHeight)) {\n            return e.clientHeight\n        }\n        return 0\n    }\n\n    function y() {\n        if (window.pageYOffset) {\n            return window.pageYOffset\n        }\n        return Math.max(document.documentElement.scrollTop, document.body.scrollTop)\n    }\n\n    function E(e) {\n        var t = m(e);\n        return t >= w && t <= b + w\n    }\n\n    function S() {\n        var e = document.createElement(\"audio\");\n        e.setAttribute(\"class\", l);\n        e.src = i;\n        e.loop = false;\n        e.addEventListener(\"canplay\", function() {\n            setTimeout(function() {\n                x(k)\n            }, 500);\n            setTimeout(function() {\n                N();\n                p();\n                for (var e = 0; e < O.length; e++) {\n                    T(O[e])\n                }\n            }, 15500)\n        }, true);\n        e.addEventListener(\"ended\", function() {\n            N();\n            h()\n        }, true);\n        e.innerHTML = \" <p>If you are reading this, it is because your browser does not support the audio element. We recommend that you get a new browser.</p> <p>\";\n        document.body.appendChild(e);\n        e.play()\n    }\n\n    function x(e) {\n        e.className += \" \" + s + \" \" + o\n    }\n\n    function T(e) {\n        e.className += \" \" + s + \" \" + u[Math.floor(Math.random() * u.length)]\n    }\n\n    function N() {\n        var e = document.getElementsByClassName(s);\n        var t = new RegExp(\"\\\\b\" + s + \"\\\\b\");\n        for (var n = 0; n < e.length; ) {\n            e[n].className = e[n].className.replace(t, \"\")\n        }\n    }\n\n    var e = 30;\n    var t = 30;\n    var n = 350;\n    var r = 350;\n    var i = \"//7xuupy.com1.z0.glb.clouddn.com/tongxingSibel%20-%20Im%20Sorry.mp3\";\n    var s = \"mw-harlem_shake_me\";\n    var o = \"im_first\";\n    var u = [\"im_drunk\", \"im_baked\", \"im_trippin\", \"im_blown\"];\n    var a = \"mw-strobe_light\";\n    var f = \"//s3.amazonaws.com/moovweb-marketing/playground/harlem-shake-style.css\";\n    var l = \"mw_added_css\";\n    var b = g();\n    var w = y();\n    var C = document.getElementsByTagName(\"*\");\n    var k = null;\n    for (var L = 0; L < C.length; L++) {\n        var A = C[L];\n        if (v(A)) {\n            if (E(A)) {\n                k = A;\n                break\n            }\n        }\n    }\n    if (A === null) {\n        console.warn(\"Could not find a node of the right size. Please try a different page.\");\n        return\n    }\n    c();\n    S();\n    var O = [];\n    for (var L = 0; L < C.length; L++) {\n        var A = C[L];\n        if (v(A)) {\n            O.push(A)\n        }\n    }\n    })()    '>High一下</a> </li>\n    ```\n\n\n\n#### 4. 添加最近访客\n在需要添加最近访客的网页对应的 markdown 文件中添加如下代码：\n```\n最近访客\n<div class=\"ds-recent-visitors\" data-num-items=\"39\" data-avatar-size=\"40\" id=\"ds-recent-visitors\"></div>\n```\n\n\n#### 5. 鼠标点击小红心的设置\n  1. 将 [love.js](https://github.com/Neveryu/Neveryu.github.io/blob/master/js/src/love.js) 文件添加到 `\\themes\\next\\source\\js\\src` 文件目录下。\n  2. 找到 `\\themes\\next\\layout\\_layout.swing` 文件，** 在文件的后面，`</body>`标签之前 ** 添加以下代码：\n  ``` html\n  <!-- 页面点击小红心 -->\n  <script type=\"text/javascript\" src=\"/js/src/love.js\"></script>\n  ```\n\n#### 6. 背景的设置\n  1. 将[particle.js](https://github.com/Neveryu/Neveryu.github.io/blob/master/js/src/particle.js)文件添加到`\\themes\\next\\source\\js\\src`文件目录下。\n  2. 找到`\\themes\\next\\layout\\_layout.swing`文件，** 在文件的后面，`</body>`标签之前 ** 添加以下代码：\n  ``` html\n  <!-- 背景动画 -->\n  <script type=\"text/javascript\" src=\"/js/src/particle.js\"></script>\n  ```\n\n#### 7.修改文章内链接文本样式\n将链接文本设置为蓝色，鼠标划过时文字颜色加深，并显示下划线。\n找到文件 `themes\\next\\source\\css\\_custom\\custom.styl` ，添加如下 `css` 样式：\n``` css\n.post-body p a {\n  color: #0593d3;\n  border-bottom: none;\n  &:hover {\n    color: #0477ab;\n    text-decoration: underline;\n  }\n}\n```\n\n#### 8. 多说评论不稳定，加载速度慢怎么办？\n把多说评论依赖的`embed.js`放置底部，这里需要修改的文件是`duoshuo.swig`。\n将\n```\n(document.getElementsByTagName('head')[0]\n```\n修改成下面的代码\n```\n(document.getElementById('footer')\n```\n\n\n#### 9. 给 Github 添加 README\n默认情况下，Github中每一个项目，我们希望有一份`README.md`的文件来作为项目的说明，但是我们在项目根目录下的`blog\\source`目录下创建一份`README.md`文件，写好说明介绍，部署的时候，这个`README.md`会被hexo解析掉，而不会被解析到Github中去的。\n正确的解决方法其实很简单：\n** 把`README.md`文件的后缀名改成\"MDOWN\"然后扔到`blog/source`文件夹下即可，这样hexo不会解析，Github也会将其作为MD文件解析。 **\n\n#### 10. 给 Blog 添加 LICENSE\n在 <span id=\"inline-purple\">主题配置文件</span> 中的 160 行左右：\n```\n# Creative Commons 4.0 International License.\n# http://creativecommons.org/\n# Available: by | by-nc | by-nc-nd | by-nc-sa | by-nd | by-sa | zero\ncreative_commons: by-nc-sa\n#creative_commons:\n```\n将其中第 4 行的注释放开，然后选择你想使用的 LICENSE 即可，可选项参照第 3 行。\n\n\n\n\n\n","source":"_drafts/hexo-next-two.md","raw":"---\ntitle: Hexo-NexT搭建个人博客（二）\ncategories: 综合\ntags:\n  - Hexo\n  - Next\ncomments: false\nabbrlink: 23504\ndate: 2016-09-30 22:18:22\n---\n\n本篇文章将介绍基于NexT主题下的一些扩展功能的实现。\n首先，我们需要明白：\n<p id=\"div-border-left-yellow\">在 Hexo 中有两份主要的配置文件，其名称都是 _config.yml 。其中，一份位于站点根目录下，主要包含 Hexo 本身的配置；另一份位于主题目录下，这份配置由主题作者提供，主要用于配置主题相关的选项。\n  我们约定，将前者称为 <span id=\"inline-blue\">站点配置文件</span>，后者称为 <span id=\"inline-purple\">主题配置文件</span></p>\n\n#### 1.设置侧栏的位置\n修改 <span id=\"inline-purple\">主题配置文件</span> 中 `sidebar.position` 的值，支持的选项有：`left` `right`\n目前仅 Pisces Scheme 支持 position 配置，也就是说NexT主题的侧栏位置是不能设置的，设置了也没用，反正都在右边。\n\n<!-- more -->\n\n#### 2. 关于添加居中模块\n<blockquote class=\"blockquote-center\">优秀的人，不是不合群，而是他们合群的人里面没有你</blockquote>\n代码如下：\n``` html\n<blockquote class=\"blockquote-center\">优秀的人，不是不合群，而是他们合群的人里面没有你</blockquote>\n```\n\n#### 3. 添加High一下\n打开博客根目录 `\\themes\\next\\layout\\_partials\\header.swig` ，在\n`<ul> ... /ul>` 标签之间加入以下代码：\n```\n<li> <a title=\"把这个链接拖到你的Chrome收藏夹工具栏中\" href='javascript:(function() {\n    function c() {\n        var e = document.createElement(\"link\");\n        e.setAttribute(\"type\", \"text/css\");\n        e.setAttribute(\"rel\", \"stylesheet\");\n        e.setAttribute(\"href\", f);\n        e.setAttribute(\"class\", l);\n        document.body.appendChild(e)\n    }\n\n    function h() {\n        var e = document.getElementsByClassName(l);\n        for (var t = 0; t < e.length; t++) {\n            document.body.removeChild(e[t])\n        }\n    }\n\n    function p() {\n        var e = document.createElement(\"div\");\n        e.setAttribute(\"class\", a);\n        document.body.appendChild(e);\n        setTimeout(function() {\n            document.body.removeChild(e)\n        }, 100)\n    }\n\n    function d(e) {\n        return {\n            height : e.offsetHeight,\n            width : e.offsetWidth\n        }\n    }\n\n    function v(i) {\n        var s = d(i);\n        return s.height > e && s.height < n && s.width > t && s.width < r\n    }\n\n    function m(e) {\n        var t = e;\n        var n = 0;\n        while (!!t) {\n            n += t.offsetTop;\n            t = t.offsetParent\n        }\n        return n\n    }\n\n    function g() {\n        var e = document.documentElement;\n        if (!!window.innerWidth) {\n            return window.innerHeight\n        } else if (e && !isNaN(e.clientHeight)) {\n            return e.clientHeight\n        }\n        return 0\n    }\n\n    function y() {\n        if (window.pageYOffset) {\n            return window.pageYOffset\n        }\n        return Math.max(document.documentElement.scrollTop, document.body.scrollTop)\n    }\n\n    function E(e) {\n        var t = m(e);\n        return t >= w && t <= b + w\n    }\n\n    function S() {\n        var e = document.createElement(\"audio\");\n        e.setAttribute(\"class\", l);\n        e.src = i;\n        e.loop = false;\n        e.addEventListener(\"canplay\", function() {\n            setTimeout(function() {\n                x(k)\n            }, 500);\n            setTimeout(function() {\n                N();\n                p();\n                for (var e = 0; e < O.length; e++) {\n                    T(O[e])\n                }\n            }, 15500)\n        }, true);\n        e.addEventListener(\"ended\", function() {\n            N();\n            h()\n        }, true);\n        e.innerHTML = \" <p>If you are reading this, it is because your browser does not support the audio element. We recommend that you get a new browser.</p> <p>\";\n        document.body.appendChild(e);\n        e.play()\n    }\n\n    function x(e) {\n        e.className += \" \" + s + \" \" + o\n    }\n\n    function T(e) {\n        e.className += \" \" + s + \" \" + u[Math.floor(Math.random() * u.length)]\n    }\n\n    function N() {\n        var e = document.getElementsByClassName(s);\n        var t = new RegExp(\"\\\\b\" + s + \"\\\\b\");\n        for (var n = 0; n < e.length; ) {\n            e[n].className = e[n].className.replace(t, \"\")\n        }\n    }\n\n    var e = 30;\n    var t = 30;\n    var n = 350;\n    var r = 350;\n    var i = \"//7xuupy.com1.z0.glb.clouddn.com/tongxingSibel%20-%20Im%20Sorry.mp3\";\n    var s = \"mw-harlem_shake_me\";\n    var o = \"im_first\";\n    var u = [\"im_drunk\", \"im_baked\", \"im_trippin\", \"im_blown\"];\n    var a = \"mw-strobe_light\";\n    var f = \"//s3.amazonaws.com/moovweb-marketing/playground/harlem-shake-style.css\";\n    var l = \"mw_added_css\";\n    var b = g();\n    var w = y();\n    var C = document.getElementsByTagName(\"*\");\n    var k = null;\n    for (var L = 0; L < C.length; L++) {\n        var A = C[L];\n        if (v(A)) {\n            if (E(A)) {\n                k = A;\n                break\n            }\n        }\n    }\n    if (A === null) {\n        console.warn(\"Could not find a node of the right size. Please try a different page.\");\n        return\n    }\n    c();\n    S();\n    var O = [];\n    for (var L = 0; L < C.length; L++) {\n        var A = C[L];\n        if (v(A)) {\n            O.push(A)\n        }\n    }\n    })()    '>High一下</a> </li>\n    ```\n\n\n\n#### 4. 添加最近访客\n在需要添加最近访客的网页对应的 markdown 文件中添加如下代码：\n```\n最近访客\n<div class=\"ds-recent-visitors\" data-num-items=\"39\" data-avatar-size=\"40\" id=\"ds-recent-visitors\"></div>\n```\n\n\n#### 5. 鼠标点击小红心的设置\n  1. 将 [love.js](https://github.com/Neveryu/Neveryu.github.io/blob/master/js/src/love.js) 文件添加到 `\\themes\\next\\source\\js\\src` 文件目录下。\n  2. 找到 `\\themes\\next\\layout\\_layout.swing` 文件，** 在文件的后面，`</body>`标签之前 ** 添加以下代码：\n  ``` html\n  <!-- 页面点击小红心 -->\n  <script type=\"text/javascript\" src=\"/js/src/love.js\"></script>\n  ```\n\n#### 6. 背景的设置\n  1. 将[particle.js](https://github.com/Neveryu/Neveryu.github.io/blob/master/js/src/particle.js)文件添加到`\\themes\\next\\source\\js\\src`文件目录下。\n  2. 找到`\\themes\\next\\layout\\_layout.swing`文件，** 在文件的后面，`</body>`标签之前 ** 添加以下代码：\n  ``` html\n  <!-- 背景动画 -->\n  <script type=\"text/javascript\" src=\"/js/src/particle.js\"></script>\n  ```\n\n#### 7.修改文章内链接文本样式\n将链接文本设置为蓝色，鼠标划过时文字颜色加深，并显示下划线。\n找到文件 `themes\\next\\source\\css\\_custom\\custom.styl` ，添加如下 `css` 样式：\n``` css\n.post-body p a {\n  color: #0593d3;\n  border-bottom: none;\n  &:hover {\n    color: #0477ab;\n    text-decoration: underline;\n  }\n}\n```\n\n#### 8. 多说评论不稳定，加载速度慢怎么办？\n把多说评论依赖的`embed.js`放置底部，这里需要修改的文件是`duoshuo.swig`。\n将\n```\n(document.getElementsByTagName('head')[0]\n```\n修改成下面的代码\n```\n(document.getElementById('footer')\n```\n\n\n#### 9. 给 Github 添加 README\n默认情况下，Github中每一个项目，我们希望有一份`README.md`的文件来作为项目的说明，但是我们在项目根目录下的`blog\\source`目录下创建一份`README.md`文件，写好说明介绍，部署的时候，这个`README.md`会被hexo解析掉，而不会被解析到Github中去的。\n正确的解决方法其实很简单：\n** 把`README.md`文件的后缀名改成\"MDOWN\"然后扔到`blog/source`文件夹下即可，这样hexo不会解析，Github也会将其作为MD文件解析。 **\n\n#### 10. 给 Blog 添加 LICENSE\n在 <span id=\"inline-purple\">主题配置文件</span> 中的 160 行左右：\n```\n# Creative Commons 4.0 International License.\n# http://creativecommons.org/\n# Available: by | by-nc | by-nc-nd | by-nc-sa | by-nd | by-sa | zero\ncreative_commons: by-nc-sa\n#creative_commons:\n```\n将其中第 4 行的注释放开，然后选择你想使用的 LICENSE 即可，可选项参照第 3 行。\n\n\n\n\n\n","slug":"hexo-next-two","published":0,"updated":"2016-11-14T13:41:34.000Z","layout":"post","photos":[],"link":"","_id":"civi8oucm00092c6nkb48x6zp","content":"<p>本篇文章将介绍基于NexT主题下的一些扩展功能的实现。<br>首先，我们需要明白：</p>\n<p id=\"div-border-left-yellow\">在 Hexo 中有两份主要的配置文件，其名称都是 _config.yml 。其中，一份位于站点根目录下，主要包含 Hexo 本身的配置；另一份位于主题目录下，这份配置由主题作者提供，主要用于配置主题相关的选项。<br>  我们约定，将前者称为 <span id=\"inline-blue\">站点配置文件</span>，后者称为 <span id=\"inline-purple\">主题配置文件</span></p>\n\n<h4 id=\"1-设置侧栏的位置\"><a href=\"#1-设置侧栏的位置\" class=\"headerlink\" title=\"1.设置侧栏的位置\"></a>1.设置侧栏的位置</h4><p>修改 <span id=\"inline-purple\">主题配置文件</span> 中 <code>sidebar.position</code> 的值，支持的选项有：<code>left</code> <code>right</code><br>目前仅 Pisces Scheme 支持 position 配置，也就是说NexT主题的侧栏位置是不能设置的，设置了也没用，反正都在右边。</p>\n<a id=\"more\"></a>\n<h4 id=\"2-关于添加居中模块\"><a href=\"#2-关于添加居中模块\" class=\"headerlink\" title=\"2. 关于添加居中模块\"></a>2. 关于添加居中模块</h4><p><blockquote class=\"blockquote-center\">优秀的人，不是不合群，而是他们合群的人里面没有你</blockquote><br>代码如下：<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">blockquote</span> <span class=\"attr\">class</span>=<span class=\"string\">\"blockquote-center\"</span>&gt;</span>优秀的人，不是不合群，而是他们合群的人里面没有你<span class=\"tag\">&lt;/<span class=\"name\">blockquote</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<h4 id=\"3-添加High一下\"><a href=\"#3-添加High一下\" class=\"headerlink\" title=\"3. 添加High一下\"></a>3. 添加High一下</h4><p>打开博客根目录 <code>\\themes\\next\\layout\\_partials\\header.swig</code> ，在<br><code>&lt;ul&gt; ... /ul&gt;</code> 标签之间加入以下代码：<br><figure class=\"highlight golo\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;li&gt; &lt;a title=<span class=\"string\">\"把这个链接拖到你的Chrome收藏夹工具栏中\"</span> href='javascript:(<span class=\"keyword\">function</span>() &#123;</div><div class=\"line\">    <span class=\"keyword\">function</span> c() &#123;</div><div class=\"line\">        <span class=\"keyword\">var</span> e = document.createElement(<span class=\"string\">\"link\"</span>);</div><div class=\"line\">        e.setAttribute(<span class=\"string\">\"type\"</span>, <span class=\"string\">\"text/css\"</span>);</div><div class=\"line\">        e.setAttribute(<span class=\"string\">\"rel\"</span>, <span class=\"string\">\"stylesheet\"</span>);</div><div class=\"line\">        e.setAttribute(<span class=\"string\">\"href\"</span>, f);</div><div class=\"line\">        e.setAttribute(<span class=\"string\">\"class\"</span>, l);</div><div class=\"line\">        document.body.appendChild(e)</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">function</span> h() &#123;</div><div class=\"line\">        <span class=\"keyword\">var</span> e = document.getElementsByClassName(l);</div><div class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> t = <span class=\"number\">0</span>; t &lt; e.length; t++) &#123;</div><div class=\"line\">            document.body.removeChild(e[t])</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">function</span> p() &#123;</div><div class=\"line\">        <span class=\"keyword\">var</span> e = document.createElement(<span class=\"string\">\"div\"</span>);</div><div class=\"line\">        e.setAttribute(<span class=\"string\">\"class\"</span>, a);</div><div class=\"line\">        document.body.appendChild(e);</div><div class=\"line\">        setTimeout(<span class=\"keyword\">function</span>() &#123;</div><div class=\"line\">            document.body.removeChild(e)</div><div class=\"line\">        &#125;, <span class=\"number\">100</span>)</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">function</span> d(e) &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">            height : e.offsetHeight,</div><div class=\"line\">            width : e.offsetWidth</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">function</span> v(i) &#123;</div><div class=\"line\">        <span class=\"keyword\">var</span> s = d(i);</div><div class=\"line\">        <span class=\"keyword\">return</span> s.height &gt; e &amp;&amp; s.height &lt; n &amp;&amp; s.width &gt; t &amp;&amp; s.width &lt; r</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">function</span> m(e) &#123;</div><div class=\"line\">        <span class=\"keyword\">var</span> t = e;</div><div class=\"line\">        <span class=\"keyword\">var</span> n = <span class=\"number\">0</span>;</div><div class=\"line\">        <span class=\"keyword\">while</span> (!!t) &#123;</div><div class=\"line\">            n += t.offsetTop;</div><div class=\"line\">            t = t.offsetParent</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span> n</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">function</span> g() &#123;</div><div class=\"line\">        <span class=\"keyword\">var</span> e = document.documentElement;</div><div class=\"line\">        <span class=\"keyword\">if</span> (!!window.innerWidth) &#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> window.innerHeight</div><div class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (e &amp;&amp; !isNaN(e.clientHeight)) &#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> e.clientHeight</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span></div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">function</span> y() &#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (window.pageYOffset) &#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> window.pageYOffset</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span> Math.max(document.documentElement.scrollTop, document.body.scrollTop)</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">function</span> E(e) &#123;</div><div class=\"line\">        <span class=\"keyword\">var</span> t = m(e);</div><div class=\"line\">        <span class=\"keyword\">return</span> t &gt;= w &amp;&amp; t &lt;= b + w</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">function</span> S() &#123;</div><div class=\"line\">        <span class=\"keyword\">var</span> e = document.createElement(<span class=\"string\">\"audio\"</span>);</div><div class=\"line\">        e.setAttribute(<span class=\"string\">\"class\"</span>, l);</div><div class=\"line\">        e.src = i;</div><div class=\"line\">        e.loop = <span class=\"literal\">false</span>;</div><div class=\"line\">        e.addEventListener(<span class=\"string\">\"canplay\"</span>, <span class=\"keyword\">function</span>() &#123;</div><div class=\"line\">            setTimeout(<span class=\"keyword\">function</span>() &#123;</div><div class=\"line\">                x(k)</div><div class=\"line\">            &#125;, <span class=\"number\">500</span>);</div><div class=\"line\">            setTimeout(<span class=\"keyword\">function</span>() &#123;</div><div class=\"line\">                N();</div><div class=\"line\">                p();</div><div class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> e = <span class=\"number\">0</span>; e &lt; O.length; e++) &#123;</div><div class=\"line\">                    T(O[e])</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;, <span class=\"number\">15500</span>)</div><div class=\"line\">        &#125;, <span class=\"literal\">true</span>);</div><div class=\"line\">        e.addEventListener(<span class=\"string\">\"ended\"</span>, <span class=\"keyword\">function</span>() &#123;</div><div class=\"line\">            N();</div><div class=\"line\">            h()</div><div class=\"line\">        &#125;, <span class=\"literal\">true</span>);</div><div class=\"line\">        e.innerHTML = <span class=\"string\">\" &lt;p&gt;If you are reading this, it is because your browser does not support the audio element. We recommend that you get a new browser.&lt;/p&gt; &lt;p&gt;\"</span>;</div><div class=\"line\">        document.body.appendChild(e);</div><div class=\"line\">        e.play()</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">function</span> x(e) &#123;</div><div class=\"line\">        e.className += <span class=\"string\">\" \"</span> + s + <span class=\"string\">\" \"</span> + o</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">function</span> T(e) &#123;</div><div class=\"line\">        e.className += <span class=\"string\">\" \"</span> + s + <span class=\"string\">\" \"</span> + u[Math.floor(Math.random() * u.length)]</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">function</span> N() &#123;</div><div class=\"line\">        <span class=\"keyword\">var</span> e = document.getElementsByClassName(s);</div><div class=\"line\">        <span class=\"keyword\">var</span> t = new RegExp(<span class=\"string\">\"\\\\b\"</span> + s + <span class=\"string\">\"\\\\b\"</span>);</div><div class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> n = <span class=\"number\">0</span>; n &lt; e.length; ) &#123;</div><div class=\"line\">            e[n].className = e[n].className.replace(t, <span class=\"string\">\"\"</span>)</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">var</span> e = <span class=\"number\">30</span>;</div><div class=\"line\">    <span class=\"keyword\">var</span> t = <span class=\"number\">30</span>;</div><div class=\"line\">    <span class=\"keyword\">var</span> n = <span class=\"number\">350</span>;</div><div class=\"line\">    <span class=\"keyword\">var</span> r = <span class=\"number\">350</span>;</div><div class=\"line\">    <span class=\"keyword\">var</span> i = <span class=\"string\">\"//7xuupy.com1.z0.glb.clouddn.com/tongxingSibel%20-%20Im%20Sorry.mp3\"</span>;</div><div class=\"line\">    <span class=\"keyword\">var</span> s = <span class=\"string\">\"mw-harlem_shake_me\"</span>;</div><div class=\"line\">    <span class=\"keyword\">var</span> o = <span class=\"string\">\"im_first\"</span>;</div><div class=\"line\">    <span class=\"keyword\">var</span> u = [<span class=\"string\">\"im_drunk\"</span>, <span class=\"string\">\"im_baked\"</span>, <span class=\"string\">\"im_trippin\"</span>, <span class=\"string\">\"im_blown\"</span>];</div><div class=\"line\">    <span class=\"keyword\">var</span> a = <span class=\"string\">\"mw-strobe_light\"</span>;</div><div class=\"line\">    <span class=\"keyword\">var</span> f = <span class=\"string\">\"//s3.amazonaws.com/moovweb-marketing/playground/harlem-shake-style.css\"</span>;</div><div class=\"line\">    <span class=\"keyword\">var</span> l = <span class=\"string\">\"mw_added_css\"</span>;</div><div class=\"line\">    <span class=\"keyword\">var</span> b = g();</div><div class=\"line\">    <span class=\"keyword\">var</span> w = y();</div><div class=\"line\">    <span class=\"keyword\">var</span> C = document.getElementsByTagName(<span class=\"string\">\"*\"</span>);</div><div class=\"line\">    <span class=\"keyword\">var</span> k = <span class=\"literal\">null</span>;</div><div class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> L = <span class=\"number\">0</span>; L &lt; C.length; L++) &#123;</div><div class=\"line\">        <span class=\"keyword\">var</span> A = C[L];</div><div class=\"line\">        <span class=\"keyword\">if</span> (v(A)) &#123;</div><div class=\"line\">            <span class=\"keyword\">if</span> (E(A)) &#123;</div><div class=\"line\">                k = A;</div><div class=\"line\">                <span class=\"keyword\">break</span></div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">if</span> (A === <span class=\"literal\">null</span>) &#123;</div><div class=\"line\">        console.warn(<span class=\"string\">\"Could not find a node of the right size. Please try a different page.\"</span>);</div><div class=\"line\">        <span class=\"keyword\">return</span></div><div class=\"line\">    &#125;</div><div class=\"line\">    c();</div><div class=\"line\">    S();</div><div class=\"line\">    <span class=\"keyword\">var</span> O = [];</div><div class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> L = <span class=\"number\">0</span>; L &lt; C.length; L++) &#123;</div><div class=\"line\">        <span class=\"keyword\">var</span> A = C[L];</div><div class=\"line\">        <span class=\"keyword\">if</span> (v(A)) &#123;</div><div class=\"line\">            O.push(A)</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    &#125;)()    '&gt;High一下&lt;/a&gt; &lt;/li&gt;</div></pre></td></tr></table></figure></p>\n<h4 id=\"4-添加最近访客\"><a href=\"#4-添加最近访客\" class=\"headerlink\" title=\"4. 添加最近访客\"></a>4. 添加最近访客</h4><p>在需要添加最近访客的网页对应的 markdown 文件中添加如下代码：<br><figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">最近访客</div><div class=\"line\">&lt;<span class=\"keyword\">div</span> <span class=\"built_in\">class</span>=<span class=\"string\">\"ds-recent-visitors\"</span> data-num-items=<span class=\"string\">\"39\"</span> data-avatar-size=<span class=\"string\">\"40\"</span> <span class=\"built_in\">id</span>=<span class=\"string\">\"ds-recent-visitors\"</span>&gt;&lt;/<span class=\"keyword\">div</span>&gt;</div></pre></td></tr></table></figure></p>\n<h4 id=\"5-鼠标点击小红心的设置\"><a href=\"#5-鼠标点击小红心的设置\" class=\"headerlink\" title=\"5. 鼠标点击小红心的设置\"></a>5. 鼠标点击小红心的设置</h4><ol>\n<li>将 <a href=\"https://github.com/Neveryu/Neveryu.github.io/blob/master/js/src/love.js\" target=\"_blank\" rel=\"external\">love.js</a> 文件添加到 <code>\\themes\\next\\source\\js\\src</code> 文件目录下。</li>\n<li>找到 <code>\\themes\\next\\layout\\_layout.swing</code> 文件，<strong> 在文件的后面，<code>&lt;/body&gt;</code>标签之前 </strong> 添加以下代码：<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">&lt;!-- 页面点击小红心 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span> <span class=\"attr\">src</span>=<span class=\"string\">\"/js/src/love.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure>\n</li>\n</ol>\n<h4 id=\"6-背景的设置\"><a href=\"#6-背景的设置\" class=\"headerlink\" title=\"6. 背景的设置\"></a>6. 背景的设置</h4><ol>\n<li>将<a href=\"https://github.com/Neveryu/Neveryu.github.io/blob/master/js/src/particle.js\" target=\"_blank\" rel=\"external\">particle.js</a>文件添加到<code>\\themes\\next\\source\\js\\src</code>文件目录下。</li>\n<li>找到<code>\\themes\\next\\layout\\_layout.swing</code>文件，<strong> 在文件的后面，<code>&lt;/body&gt;</code>标签之前 </strong> 添加以下代码：<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">&lt;!-- 背景动画 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span> <span class=\"attr\">src</span>=<span class=\"string\">\"/js/src/particle.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure>\n</li>\n</ol>\n<h4 id=\"7-修改文章内链接文本样式\"><a href=\"#7-修改文章内链接文本样式\" class=\"headerlink\" title=\"7.修改文章内链接文本样式\"></a>7.修改文章内链接文本样式</h4><p>将链接文本设置为蓝色，鼠标划过时文字颜色加深，并显示下划线。<br>找到文件 <code>themes\\next\\source\\css\\_custom\\custom.styl</code> ，添加如下 <code>css</code> 样式：<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">.post-body p a &#123;</div><div class=\"line\">  color: #0593d3;</div><div class=\"line\">  border-bottom: none;</div><div class=\"line\">  &amp;:hover &#123;</div><div class=\"line\">    color: #0477ab;</div><div class=\"line\">    text-decoration: underline;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h4 id=\"8-多说评论不稳定，加载速度慢怎么办？\"><a href=\"#8-多说评论不稳定，加载速度慢怎么办？\" class=\"headerlink\" title=\"8. 多说评论不稳定，加载速度慢怎么办？\"></a>8. 多说评论不稳定，加载速度慢怎么办？</h4><p>把多说评论依赖的<code>embed.js</code>放置底部，这里需要修改的文件是<code>duoshuo.swig</code>。<br>将<br><figure class=\"highlight scheme\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">(<span class=\"name\">document.getElementsByTagName</span>(<span class=\"symbol\">'head</span>')[<span class=\"name\">0</span>]</div></pre></td></tr></table></figure></p>\n<p>修改成下面的代码<br><figure class=\"highlight scheme\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">(<span class=\"name\">document.getElementById</span>(<span class=\"symbol\">'footer</span>')</div></pre></td></tr></table></figure></p>\n<h4 id=\"9-给-Github-添加-README\"><a href=\"#9-给-Github-添加-README\" class=\"headerlink\" title=\"9. 给 Github 添加 README\"></a>9. 给 Github 添加 README</h4><p>默认情况下，Github中每一个项目，我们希望有一份<code>README.md</code>的文件来作为项目的说明，但是我们在项目根目录下的<code>blog\\source</code>目录下创建一份<code>README.md</code>文件，写好说明介绍，部署的时候，这个<code>README.md</code>会被hexo解析掉，而不会被解析到Github中去的。<br>正确的解决方法其实很简单：<br><strong> 把<code>README.md</code>文件的后缀名改成”MDOWN”然后扔到<code>blog/source</code>文件夹下即可，这样hexo不会解析，Github也会将其作为MD文件解析。 </strong></p>\n<h4 id=\"10-给-Blog-添加-LICENSE\"><a href=\"#10-给-Blog-添加-LICENSE\" class=\"headerlink\" title=\"10. 给 Blog 添加 LICENSE\"></a>10. 给 Blog 添加 LICENSE</h4><p>在 <span id=\"inline-purple\">主题配置文件</span> 中的 160 行左右：<br><figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"># Creative Commons 4.0 International License.</div><div class=\"line\"># http:<span class=\"comment\">//creativecommons.org/</span></div><div class=\"line\"># Available: <span class=\"keyword\">by</span> | <span class=\"keyword\">by</span>-nc | <span class=\"keyword\">by</span>-nc-nd | <span class=\"keyword\">by</span>-nc-<span class=\"keyword\">sa</span> | <span class=\"keyword\">by</span>-nd | <span class=\"keyword\">by</span>-<span class=\"keyword\">sa</span> | zero</div><div class=\"line\">creative_commons: <span class=\"keyword\">by</span>-nc-<span class=\"keyword\">sa</span></div><div class=\"line\">#creative_commons:</div></pre></td></tr></table></figure></p>\n<p>将其中第 4 行的注释放开，然后选择你想使用的 LICENSE 即可，可选项参照第 3 行。</p>\n","excerpt":"<p>本篇文章将介绍基于NexT主题下的一些扩展功能的实现。<br>首先，我们需要明白：</p>\n<p id=\"div-border-left-yellow\">在 Hexo 中有两份主要的配置文件，其名称都是 _config.yml 。其中，一份位于站点根目录下，主要包含 Hexo 本身的配置；另一份位于主题目录下，这份配置由主题作者提供，主要用于配置主题相关的选项。<br>  我们约定，将前者称为 <span id=\"inline-blue\">站点配置文件</span>，后者称为 <span id=\"inline-purple\">主题配置文件</span></p>\n\n<h4 id=\"1-设置侧栏的位置\"><a href=\"#1-设置侧栏的位置\" class=\"headerlink\" title=\"1.设置侧栏的位置\"></a>1.设置侧栏的位置</h4><p>修改 <span id=\"inline-purple\">主题配置文件</span> 中 <code>sidebar.position</code> 的值，支持的选项有：<code>left</code> <code>right</code><br>目前仅 Pisces Scheme 支持 position 配置，也就是说NexT主题的侧栏位置是不能设置的，设置了也没用，反正都在右边。</p>","more":"<h4 id=\"2-关于添加居中模块\"><a href=\"#2-关于添加居中模块\" class=\"headerlink\" title=\"2. 关于添加居中模块\"></a>2. 关于添加居中模块</h4><p><blockquote class=\"blockquote-center\">优秀的人，不是不合群，而是他们合群的人里面没有你</blockquote><br>代码如下：<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">blockquote</span> <span class=\"attr\">class</span>=<span class=\"string\">\"blockquote-center\"</span>&gt;</span>优秀的人，不是不合群，而是他们合群的人里面没有你<span class=\"tag\">&lt;/<span class=\"name\">blockquote</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<h4 id=\"3-添加High一下\"><a href=\"#3-添加High一下\" class=\"headerlink\" title=\"3. 添加High一下\"></a>3. 添加High一下</h4><p>打开博客根目录 <code>\\themes\\next\\layout\\_partials\\header.swig</code> ，在<br><code>&lt;ul&gt; ... /ul&gt;</code> 标签之间加入以下代码：<br><figure class=\"highlight golo\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;li&gt; &lt;a title=<span class=\"string\">\"把这个链接拖到你的Chrome收藏夹工具栏中\"</span> href='javascript:(<span class=\"keyword\">function</span>() &#123;</div><div class=\"line\">    <span class=\"keyword\">function</span> c() &#123;</div><div class=\"line\">        <span class=\"keyword\">var</span> e = document.createElement(<span class=\"string\">\"link\"</span>);</div><div class=\"line\">        e.setAttribute(<span class=\"string\">\"type\"</span>, <span class=\"string\">\"text/css\"</span>);</div><div class=\"line\">        e.setAttribute(<span class=\"string\">\"rel\"</span>, <span class=\"string\">\"stylesheet\"</span>);</div><div class=\"line\">        e.setAttribute(<span class=\"string\">\"href\"</span>, f);</div><div class=\"line\">        e.setAttribute(<span class=\"string\">\"class\"</span>, l);</div><div class=\"line\">        document.body.appendChild(e)</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">function</span> h() &#123;</div><div class=\"line\">        <span class=\"keyword\">var</span> e = document.getElementsByClassName(l);</div><div class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> t = <span class=\"number\">0</span>; t &lt; e.length; t++) &#123;</div><div class=\"line\">            document.body.removeChild(e[t])</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">function</span> p() &#123;</div><div class=\"line\">        <span class=\"keyword\">var</span> e = document.createElement(<span class=\"string\">\"div\"</span>);</div><div class=\"line\">        e.setAttribute(<span class=\"string\">\"class\"</span>, a);</div><div class=\"line\">        document.body.appendChild(e);</div><div class=\"line\">        setTimeout(<span class=\"keyword\">function</span>() &#123;</div><div class=\"line\">            document.body.removeChild(e)</div><div class=\"line\">        &#125;, <span class=\"number\">100</span>)</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">function</span> d(e) &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">            height : e.offsetHeight,</div><div class=\"line\">            width : e.offsetWidth</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">function</span> v(i) &#123;</div><div class=\"line\">        <span class=\"keyword\">var</span> s = d(i);</div><div class=\"line\">        <span class=\"keyword\">return</span> s.height &gt; e &amp;&amp; s.height &lt; n &amp;&amp; s.width &gt; t &amp;&amp; s.width &lt; r</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">function</span> m(e) &#123;</div><div class=\"line\">        <span class=\"keyword\">var</span> t = e;</div><div class=\"line\">        <span class=\"keyword\">var</span> n = <span class=\"number\">0</span>;</div><div class=\"line\">        <span class=\"keyword\">while</span> (!!t) &#123;</div><div class=\"line\">            n += t.offsetTop;</div><div class=\"line\">            t = t.offsetParent</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span> n</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">function</span> g() &#123;</div><div class=\"line\">        <span class=\"keyword\">var</span> e = document.documentElement;</div><div class=\"line\">        <span class=\"keyword\">if</span> (!!window.innerWidth) &#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> window.innerHeight</div><div class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (e &amp;&amp; !isNaN(e.clientHeight)) &#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> e.clientHeight</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span></div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">function</span> y() &#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (window.pageYOffset) &#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> window.pageYOffset</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span> Math.max(document.documentElement.scrollTop, document.body.scrollTop)</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">function</span> E(e) &#123;</div><div class=\"line\">        <span class=\"keyword\">var</span> t = m(e);</div><div class=\"line\">        <span class=\"keyword\">return</span> t &gt;= w &amp;&amp; t &lt;= b + w</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">function</span> S() &#123;</div><div class=\"line\">        <span class=\"keyword\">var</span> e = document.createElement(<span class=\"string\">\"audio\"</span>);</div><div class=\"line\">        e.setAttribute(<span class=\"string\">\"class\"</span>, l);</div><div class=\"line\">        e.src = i;</div><div class=\"line\">        e.loop = <span class=\"literal\">false</span>;</div><div class=\"line\">        e.addEventListener(<span class=\"string\">\"canplay\"</span>, <span class=\"keyword\">function</span>() &#123;</div><div class=\"line\">            setTimeout(<span class=\"keyword\">function</span>() &#123;</div><div class=\"line\">                x(k)</div><div class=\"line\">            &#125;, <span class=\"number\">500</span>);</div><div class=\"line\">            setTimeout(<span class=\"keyword\">function</span>() &#123;</div><div class=\"line\">                N();</div><div class=\"line\">                p();</div><div class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> e = <span class=\"number\">0</span>; e &lt; O.length; e++) &#123;</div><div class=\"line\">                    T(O[e])</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;, <span class=\"number\">15500</span>)</div><div class=\"line\">        &#125;, <span class=\"literal\">true</span>);</div><div class=\"line\">        e.addEventListener(<span class=\"string\">\"ended\"</span>, <span class=\"keyword\">function</span>() &#123;</div><div class=\"line\">            N();</div><div class=\"line\">            h()</div><div class=\"line\">        &#125;, <span class=\"literal\">true</span>);</div><div class=\"line\">        e.innerHTML = <span class=\"string\">\" &lt;p&gt;If you are reading this, it is because your browser does not support the audio element. We recommend that you get a new browser.&lt;/p&gt; &lt;p&gt;\"</span>;</div><div class=\"line\">        document.body.appendChild(e);</div><div class=\"line\">        e.play()</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">function</span> x(e) &#123;</div><div class=\"line\">        e.className += <span class=\"string\">\" \"</span> + s + <span class=\"string\">\" \"</span> + o</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">function</span> T(e) &#123;</div><div class=\"line\">        e.className += <span class=\"string\">\" \"</span> + s + <span class=\"string\">\" \"</span> + u[Math.floor(Math.random() * u.length)]</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">function</span> N() &#123;</div><div class=\"line\">        <span class=\"keyword\">var</span> e = document.getElementsByClassName(s);</div><div class=\"line\">        <span class=\"keyword\">var</span> t = new RegExp(<span class=\"string\">\"\\\\b\"</span> + s + <span class=\"string\">\"\\\\b\"</span>);</div><div class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> n = <span class=\"number\">0</span>; n &lt; e.length; ) &#123;</div><div class=\"line\">            e[n].className = e[n].className.replace(t, <span class=\"string\">\"\"</span>)</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">var</span> e = <span class=\"number\">30</span>;</div><div class=\"line\">    <span class=\"keyword\">var</span> t = <span class=\"number\">30</span>;</div><div class=\"line\">    <span class=\"keyword\">var</span> n = <span class=\"number\">350</span>;</div><div class=\"line\">    <span class=\"keyword\">var</span> r = <span class=\"number\">350</span>;</div><div class=\"line\">    <span class=\"keyword\">var</span> i = <span class=\"string\">\"//7xuupy.com1.z0.glb.clouddn.com/tongxingSibel%20-%20Im%20Sorry.mp3\"</span>;</div><div class=\"line\">    <span class=\"keyword\">var</span> s = <span class=\"string\">\"mw-harlem_shake_me\"</span>;</div><div class=\"line\">    <span class=\"keyword\">var</span> o = <span class=\"string\">\"im_first\"</span>;</div><div class=\"line\">    <span class=\"keyword\">var</span> u = [<span class=\"string\">\"im_drunk\"</span>, <span class=\"string\">\"im_baked\"</span>, <span class=\"string\">\"im_trippin\"</span>, <span class=\"string\">\"im_blown\"</span>];</div><div class=\"line\">    <span class=\"keyword\">var</span> a = <span class=\"string\">\"mw-strobe_light\"</span>;</div><div class=\"line\">    <span class=\"keyword\">var</span> f = <span class=\"string\">\"//s3.amazonaws.com/moovweb-marketing/playground/harlem-shake-style.css\"</span>;</div><div class=\"line\">    <span class=\"keyword\">var</span> l = <span class=\"string\">\"mw_added_css\"</span>;</div><div class=\"line\">    <span class=\"keyword\">var</span> b = g();</div><div class=\"line\">    <span class=\"keyword\">var</span> w = y();</div><div class=\"line\">    <span class=\"keyword\">var</span> C = document.getElementsByTagName(<span class=\"string\">\"*\"</span>);</div><div class=\"line\">    <span class=\"keyword\">var</span> k = <span class=\"literal\">null</span>;</div><div class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> L = <span class=\"number\">0</span>; L &lt; C.length; L++) &#123;</div><div class=\"line\">        <span class=\"keyword\">var</span> A = C[L];</div><div class=\"line\">        <span class=\"keyword\">if</span> (v(A)) &#123;</div><div class=\"line\">            <span class=\"keyword\">if</span> (E(A)) &#123;</div><div class=\"line\">                k = A;</div><div class=\"line\">                <span class=\"keyword\">break</span></div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">if</span> (A === <span class=\"literal\">null</span>) &#123;</div><div class=\"line\">        console.warn(<span class=\"string\">\"Could not find a node of the right size. Please try a different page.\"</span>);</div><div class=\"line\">        <span class=\"keyword\">return</span></div><div class=\"line\">    &#125;</div><div class=\"line\">    c();</div><div class=\"line\">    S();</div><div class=\"line\">    <span class=\"keyword\">var</span> O = [];</div><div class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> L = <span class=\"number\">0</span>; L &lt; C.length; L++) &#123;</div><div class=\"line\">        <span class=\"keyword\">var</span> A = C[L];</div><div class=\"line\">        <span class=\"keyword\">if</span> (v(A)) &#123;</div><div class=\"line\">            O.push(A)</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    &#125;)()    '&gt;High一下&lt;/a&gt; &lt;/li&gt;</div></pre></td></tr></table></figure></p>\n<h4 id=\"4-添加最近访客\"><a href=\"#4-添加最近访客\" class=\"headerlink\" title=\"4. 添加最近访客\"></a>4. 添加最近访客</h4><p>在需要添加最近访客的网页对应的 markdown 文件中添加如下代码：<br><figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">最近访客</div><div class=\"line\">&lt;<span class=\"keyword\">div</span> <span class=\"built_in\">class</span>=<span class=\"string\">\"ds-recent-visitors\"</span> data-num-items=<span class=\"string\">\"39\"</span> data-avatar-size=<span class=\"string\">\"40\"</span> <span class=\"built_in\">id</span>=<span class=\"string\">\"ds-recent-visitors\"</span>&gt;&lt;/<span class=\"keyword\">div</span>&gt;</div></pre></td></tr></table></figure></p>\n<h4 id=\"5-鼠标点击小红心的设置\"><a href=\"#5-鼠标点击小红心的设置\" class=\"headerlink\" title=\"5. 鼠标点击小红心的设置\"></a>5. 鼠标点击小红心的设置</h4><ol>\n<li>将 <a href=\"https://github.com/Neveryu/Neveryu.github.io/blob/master/js/src/love.js\">love.js</a> 文件添加到 <code>\\themes\\next\\source\\js\\src</code> 文件目录下。</li>\n<li>找到 <code>\\themes\\next\\layout\\_layout.swing</code> 文件，<strong> 在文件的后面，<code>&lt;/body&gt;</code>标签之前 </strong> 添加以下代码：<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">&lt;!-- 页面点击小红心 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span> <span class=\"attr\">src</span>=<span class=\"string\">\"/js/src/love.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure>\n</li>\n</ol>\n<h4 id=\"6-背景的设置\"><a href=\"#6-背景的设置\" class=\"headerlink\" title=\"6. 背景的设置\"></a>6. 背景的设置</h4><ol>\n<li>将<a href=\"https://github.com/Neveryu/Neveryu.github.io/blob/master/js/src/particle.js\">particle.js</a>文件添加到<code>\\themes\\next\\source\\js\\src</code>文件目录下。</li>\n<li>找到<code>\\themes\\next\\layout\\_layout.swing</code>文件，<strong> 在文件的后面，<code>&lt;/body&gt;</code>标签之前 </strong> 添加以下代码：<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">&lt;!-- 背景动画 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span> <span class=\"attr\">src</span>=<span class=\"string\">\"/js/src/particle.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure>\n</li>\n</ol>\n<h4 id=\"7-修改文章内链接文本样式\"><a href=\"#7-修改文章内链接文本样式\" class=\"headerlink\" title=\"7.修改文章内链接文本样式\"></a>7.修改文章内链接文本样式</h4><p>将链接文本设置为蓝色，鼠标划过时文字颜色加深，并显示下划线。<br>找到文件 <code>themes\\next\\source\\css\\_custom\\custom.styl</code> ，添加如下 <code>css</code> 样式：<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">.post-body p a &#123;</div><div class=\"line\">  color: #0593d3;</div><div class=\"line\">  border-bottom: none;</div><div class=\"line\">  &amp;:hover &#123;</div><div class=\"line\">    color: #0477ab;</div><div class=\"line\">    text-decoration: underline;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h4 id=\"8-多说评论不稳定，加载速度慢怎么办？\"><a href=\"#8-多说评论不稳定，加载速度慢怎么办？\" class=\"headerlink\" title=\"8. 多说评论不稳定，加载速度慢怎么办？\"></a>8. 多说评论不稳定，加载速度慢怎么办？</h4><p>把多说评论依赖的<code>embed.js</code>放置底部，这里需要修改的文件是<code>duoshuo.swig</code>。<br>将<br><figure class=\"highlight scheme\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">(<span class=\"name\">document.getElementsByTagName</span>(<span class=\"symbol\">'head</span>')[<span class=\"name\">0</span>]</div></pre></td></tr></table></figure></p>\n<p>修改成下面的代码<br><figure class=\"highlight scheme\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">(<span class=\"name\">document.getElementById</span>(<span class=\"symbol\">'footer</span>')</div></pre></td></tr></table></figure></p>\n<h4 id=\"9-给-Github-添加-README\"><a href=\"#9-给-Github-添加-README\" class=\"headerlink\" title=\"9. 给 Github 添加 README\"></a>9. 给 Github 添加 README</h4><p>默认情况下，Github中每一个项目，我们希望有一份<code>README.md</code>的文件来作为项目的说明，但是我们在项目根目录下的<code>blog\\source</code>目录下创建一份<code>README.md</code>文件，写好说明介绍，部署的时候，这个<code>README.md</code>会被hexo解析掉，而不会被解析到Github中去的。<br>正确的解决方法其实很简单：<br><strong> 把<code>README.md</code>文件的后缀名改成”MDOWN”然后扔到<code>blog/source</code>文件夹下即可，这样hexo不会解析，Github也会将其作为MD文件解析。 </strong></p>\n<h4 id=\"10-给-Blog-添加-LICENSE\"><a href=\"#10-给-Blog-添加-LICENSE\" class=\"headerlink\" title=\"10. 给 Blog 添加 LICENSE\"></a>10. 给 Blog 添加 LICENSE</h4><p>在 <span id=\"inline-purple\">主题配置文件</span> 中的 160 行左右：<br><figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"># Creative Commons 4.0 International License.</div><div class=\"line\"># http:<span class=\"comment\">//creativecommons.org/</span></div><div class=\"line\"># Available: <span class=\"keyword\">by</span> | <span class=\"keyword\">by</span>-nc | <span class=\"keyword\">by</span>-nc-nd | <span class=\"keyword\">by</span>-nc-<span class=\"keyword\">sa</span> | <span class=\"keyword\">by</span>-nd | <span class=\"keyword\">by</span>-<span class=\"keyword\">sa</span> | zero</div><div class=\"line\">creative_commons: <span class=\"keyword\">by</span>-nc-<span class=\"keyword\">sa</span></div><div class=\"line\">#creative_commons:</div></pre></td></tr></table></figure></p>\n<p>将其中第 4 行的注释放开，然后选择你想使用的 LICENSE 即可，可选项参照第 3 行。</p>"},{"title":"开发相关网页链接","abbrlink":23807,"date":"2016-11-03T02:17:39.000Z","_content":"\n\n## 基于HTML5的APP\nhttp://www.wex5.com/\n\n---\n## 微信\n\n* 微信小程序 (应用号) 微信 web 开发者工具破解版\n\nhttp://www.diycode.cc/topics/308?\n\n* 微信小程序\n\nhttps://git.oschina.net/codebean/wechat-demo?from=20160925\n\n\n---\n## 前端\nbootstrap前端框架：http://www.runoob.com/bootstrap/bootstrap-tutorial.html\n\n\n\n---\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/Dev/2016-11-03-开发相关网页链接.md","raw":"---\ntitle: 开发相关网页链接\ncategories:\n  - Dev\ntags:\n  - 网页链接更新页\nabbrlink: 23807\ndate: 2016-11-03 10:17:39\n---\n\n\n## 基于HTML5的APP\nhttp://www.wex5.com/\n\n---\n## 微信\n\n* 微信小程序 (应用号) 微信 web 开发者工具破解版\n\nhttp://www.diycode.cc/topics/308?\n\n* 微信小程序\n\nhttps://git.oschina.net/codebean/wechat-demo?from=20160925\n\n\n---\n## 前端\nbootstrap前端框架：http://www.runoob.com/bootstrap/bootstrap-tutorial.html\n\n\n\n---\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","slug":"Dev-2016-11-03-开发相关网页链接","published":1,"updated":"2016-11-13T03:36:30.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civi8oui8000u2c6n9mn9vjju","content":"<h2 id=\"基于HTML5的APP\"><a href=\"#基于HTML5的APP\" class=\"headerlink\" title=\"基于HTML5的APP\"></a>基于HTML5的APP</h2><p><a href=\"http://www.wex5.com/\" target=\"_blank\" rel=\"external\">http://www.wex5.com/</a></p>\n<hr>\n<h2 id=\"微信\"><a href=\"#微信\" class=\"headerlink\" title=\"微信\"></a>微信</h2><ul>\n<li>微信小程序 (应用号) 微信 web 开发者工具破解版</li>\n</ul>\n<p><a href=\"http://www.diycode.cc/topics/308?\" target=\"_blank\" rel=\"external\">http://www.diycode.cc/topics/308?</a></p>\n<ul>\n<li>微信小程序</li>\n</ul>\n<p><a href=\"https://git.oschina.net/codebean/wechat-demo?from=20160925\" target=\"_blank\" rel=\"external\">https://git.oschina.net/codebean/wechat-demo?from=20160925</a></p>\n<hr>\n<h2 id=\"前端\"><a href=\"#前端\" class=\"headerlink\" title=\"前端\"></a>前端</h2><p>bootstrap前端框架：<a href=\"http://www.runoob.com/bootstrap/bootstrap-tutorial.html\" target=\"_blank\" rel=\"external\">http://www.runoob.com/bootstrap/bootstrap-tutorial.html</a></p>\n<hr>\n","excerpt":"","more":"<h2 id=\"基于HTML5的APP\"><a href=\"#基于HTML5的APP\" class=\"headerlink\" title=\"基于HTML5的APP\"></a>基于HTML5的APP</h2><p><a href=\"http://www.wex5.com/\">http://www.wex5.com/</a></p>\n<hr>\n<h2 id=\"微信\"><a href=\"#微信\" class=\"headerlink\" title=\"微信\"></a>微信</h2><ul>\n<li>微信小程序 (应用号) 微信 web 开发者工具破解版</li>\n</ul>\n<p><a href=\"http://www.diycode.cc/topics/308?\">http://www.diycode.cc/topics/308?</a></p>\n<ul>\n<li>微信小程序</li>\n</ul>\n<p><a href=\"https://git.oschina.net/codebean/wechat-demo?from=20160925\">https://git.oschina.net/codebean/wechat-demo?from=20160925</a></p>\n<hr>\n<h2 id=\"前端\"><a href=\"#前端\" class=\"headerlink\" title=\"前端\"></a>前端</h2><p>bootstrap前端框架：<a href=\"http://www.runoob.com/bootstrap/bootstrap-tutorial.html\">http://www.runoob.com/bootstrap/bootstrap-tutorial.html</a></p>\n<hr>\n"},{"title":"jenkins","abbrlink":34699,"date":"2016-11-10T03:47:55.000Z","_content":"\njenkins是一个广泛用于持续构建的可视化web工具，持续构建说得更直白点，就是各种项目的\"自动化\"编译、打包、分发部署。jenkins可以很好的支持各种语言（比如：java, c#, php等）的项目构建，也完全兼容ant、maven、gradle等多种第三方构建工具，同时跟svn、git能无缝集成，也支持直接与知名源代码托管网站，比如github、bitbucket直接集成。\n\n# jenkins 安装\n\n\n\n\n\n\n---\n\n# jenkins 插件\n## Git Parameter Plug-In 插件\n本节是根据[烂泥大神](http://www.ilanni.com/)分享的笔记摘录的！\n**Git Parameter Plug-In**插件可以参数化构建git 可以根据不同的分支或者tag进行构建。\n\n### 安装**Git Parameter Plug-In**插件\n\n**Git Parameter 文档**：https://wiki.jenkins-ci.org/display/JENKINS/Git+Parameter+Plugin\n**插件下载**：https://updates.jenkins-ci.org/download/plugins/git-parameter/\n![](http://ofyfogrgx.bkt.clouddn.com//blog/jenkins001.png)\n\n下面这个截图是根据分支进行构建\n![](http://ofyfogrgx.bkt.clouddn.com//blog/jenkins002.png)\n\n如果是根据tag进行构建的话，如下进行配置\n![](http://ofyfogrgx.bkt.clouddn.com//blog/jenkins003.png)\n\n这次我们是根据分支进行构建\n![](http://ofyfogrgx.bkt.clouddn.com//blog/jenkins004.png)\n\n注意以上两张截图中name就是下面我们要配置的变量：\n![](http://ofyfogrgx.bkt.clouddn.com//blog/jenkins005.png)\n![](http://ofyfogrgx.bkt.clouddn.com//blog/jenkins006.png)\n![](http://ofyfogrgx.bkt.clouddn.com//blog/jenkins007.png)\n\n通过上图，我们可以看到下载git仓库中有两个分支master和wxy，我们可以选择其中任意一个进行构建即可。\n这次我们选择wxy分支进行构建，如下：\n![](http://ofyfogrgx.bkt.clouddn.com//blog/jenkins008.png)\n![](http://ofyfogrgx.bkt.clouddn.com//blog/jenkins009.png)\n![](http://ofyfogrgx.bkt.clouddn.com//blog/jenkins010.png)\n\n\n## ansible plugin插件\n\n**本节是根据[烂泥大神](http://www.ilanni.com/)分享的笔记摘录的！**\n\n首先要注意把yml文件存放到jenkins的工作目录下，否则jenkins会提示无权限操作。\n```\ncat /var/lib/jenkins/yml/dir.yml\n \n- hosts: '{{ host }}'\n  remote_user: root\n  tasks:\n   - name: test make dir\n     file: path=/etc/ilannitest state=directory mode=0755```\n\n![](http://ofyfogrgx.bkt.clouddn.com//blog/jenkins011.png)\n![](http://ofyfogrgx.bkt.clouddn.com//blog/jenkins012.png)\n![](http://ofyfogrgx.bkt.clouddn.com//blog/jenkins013.png)\n也可以保存到文件中主机地址，如下：\n```\ncat /etc/ansible/hosts \n\n[h5]\n114.55.101.252  ansible_ssh_user=root ansible_ssh_private_key_file=/var/lib/jenkins/key/dongyin```\n![](http://ofyfogrgx.bkt.clouddn.com//blog/jenkins014.png)\n![](http://ofyfogrgx.bkt.clouddn.com//blog/jenkins015.png)\n![](http://ofyfogrgx.bkt.clouddn.com//blog/jenkins016.png)\n\n\n---\n","source":"_posts/Dev/2016-11-10-jenkins.md","raw":"---\ntitle: jenkins\ncategories:\n  - Dev\ntags:\n  - jenkins 安装\n  - jenkins参数化构建git\n  - Git Parameter Plug-In 插件\n  - ansible plugin插件\nabbrlink: 34699\ndate: 2016-11-10 11:47:55\n---\n\njenkins是一个广泛用于持续构建的可视化web工具，持续构建说得更直白点，就是各种项目的\"自动化\"编译、打包、分发部署。jenkins可以很好的支持各种语言（比如：java, c#, php等）的项目构建，也完全兼容ant、maven、gradle等多种第三方构建工具，同时跟svn、git能无缝集成，也支持直接与知名源代码托管网站，比如github、bitbucket直接集成。\n\n# jenkins 安装\n\n\n\n\n\n\n---\n\n# jenkins 插件\n## Git Parameter Plug-In 插件\n本节是根据[烂泥大神](http://www.ilanni.com/)分享的笔记摘录的！\n**Git Parameter Plug-In**插件可以参数化构建git 可以根据不同的分支或者tag进行构建。\n\n### 安装**Git Parameter Plug-In**插件\n\n**Git Parameter 文档**：https://wiki.jenkins-ci.org/display/JENKINS/Git+Parameter+Plugin\n**插件下载**：https://updates.jenkins-ci.org/download/plugins/git-parameter/\n![](http://ofyfogrgx.bkt.clouddn.com//blog/jenkins001.png)\n\n下面这个截图是根据分支进行构建\n![](http://ofyfogrgx.bkt.clouddn.com//blog/jenkins002.png)\n\n如果是根据tag进行构建的话，如下进行配置\n![](http://ofyfogrgx.bkt.clouddn.com//blog/jenkins003.png)\n\n这次我们是根据分支进行构建\n![](http://ofyfogrgx.bkt.clouddn.com//blog/jenkins004.png)\n\n注意以上两张截图中name就是下面我们要配置的变量：\n![](http://ofyfogrgx.bkt.clouddn.com//blog/jenkins005.png)\n![](http://ofyfogrgx.bkt.clouddn.com//blog/jenkins006.png)\n![](http://ofyfogrgx.bkt.clouddn.com//blog/jenkins007.png)\n\n通过上图，我们可以看到下载git仓库中有两个分支master和wxy，我们可以选择其中任意一个进行构建即可。\n这次我们选择wxy分支进行构建，如下：\n![](http://ofyfogrgx.bkt.clouddn.com//blog/jenkins008.png)\n![](http://ofyfogrgx.bkt.clouddn.com//blog/jenkins009.png)\n![](http://ofyfogrgx.bkt.clouddn.com//blog/jenkins010.png)\n\n\n## ansible plugin插件\n\n**本节是根据[烂泥大神](http://www.ilanni.com/)分享的笔记摘录的！**\n\n首先要注意把yml文件存放到jenkins的工作目录下，否则jenkins会提示无权限操作。\n```\ncat /var/lib/jenkins/yml/dir.yml\n \n- hosts: '{{ host }}'\n  remote_user: root\n  tasks:\n   - name: test make dir\n     file: path=/etc/ilannitest state=directory mode=0755```\n\n![](http://ofyfogrgx.bkt.clouddn.com//blog/jenkins011.png)\n![](http://ofyfogrgx.bkt.clouddn.com//blog/jenkins012.png)\n![](http://ofyfogrgx.bkt.clouddn.com//blog/jenkins013.png)\n也可以保存到文件中主机地址，如下：\n```\ncat /etc/ansible/hosts \n\n[h5]\n114.55.101.252  ansible_ssh_user=root ansible_ssh_private_key_file=/var/lib/jenkins/key/dongyin```\n![](http://ofyfogrgx.bkt.clouddn.com//blog/jenkins014.png)\n![](http://ofyfogrgx.bkt.clouddn.com//blog/jenkins015.png)\n![](http://ofyfogrgx.bkt.clouddn.com//blog/jenkins016.png)\n\n\n---\n","slug":"Dev-2016-11-10-jenkins","published":1,"updated":"2016-11-13T03:36:30.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civi8oui9000v2c6nqtda7lmf","content":"<p>jenkins是一个广泛用于持续构建的可视化web工具，持续构建说得更直白点，就是各种项目的”自动化”编译、打包、分发部署。jenkins可以很好的支持各种语言（比如：java, c#, php等）的项目构建，也完全兼容ant、maven、gradle等多种第三方构建工具，同时跟svn、git能无缝集成，也支持直接与知名源代码托管网站，比如github、bitbucket直接集成。</p>\n<h1 id=\"jenkins-安装\"><a href=\"#jenkins-安装\" class=\"headerlink\" title=\"jenkins 安装\"></a>jenkins 安装</h1><hr>\n<h1 id=\"jenkins-插件\"><a href=\"#jenkins-插件\" class=\"headerlink\" title=\"jenkins 插件\"></a>jenkins 插件</h1><h2 id=\"Git-Parameter-Plug-In-插件\"><a href=\"#Git-Parameter-Plug-In-插件\" class=\"headerlink\" title=\"Git Parameter Plug-In 插件\"></a>Git Parameter Plug-In 插件</h2><p>本节是根据<a href=\"http://www.ilanni.com/\" target=\"_blank\" rel=\"external\">烂泥大神</a>分享的笔记摘录的！<br><strong>Git Parameter Plug-In</strong>插件可以参数化构建git 可以根据不同的分支或者tag进行构建。</p>\n<h3 id=\"安装Git-Parameter-Plug-In插件\"><a href=\"#安装Git-Parameter-Plug-In插件\" class=\"headerlink\" title=\"安装Git Parameter Plug-In插件\"></a>安装<strong>Git Parameter Plug-In</strong>插件</h3><p><strong>Git Parameter 文档</strong>：<a href=\"https://wiki.jenkins-ci.org/display/JENKINS/Git+Parameter+Plugin\" target=\"_blank\" rel=\"external\">https://wiki.jenkins-ci.org/display/JENKINS/Git+Parameter+Plugin</a><br><strong>插件下载</strong>：<a href=\"https://updates.jenkins-ci.org/download/plugins/git-parameter/\" target=\"_blank\" rel=\"external\">https://updates.jenkins-ci.org/download/plugins/git-parameter/</a><br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/jenkins001.png\" alt=\"\"></p>\n<p>下面这个截图是根据分支进行构建<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/jenkins002.png\" alt=\"\"></p>\n<p>如果是根据tag进行构建的话，如下进行配置<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/jenkins003.png\" alt=\"\"></p>\n<p>这次我们是根据分支进行构建<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/jenkins004.png\" alt=\"\"></p>\n<p>注意以上两张截图中name就是下面我们要配置的变量：<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/jenkins005.png\" alt=\"\"><br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/jenkins006.png\" alt=\"\"><br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/jenkins007.png\" alt=\"\"></p>\n<p>通过上图，我们可以看到下载git仓库中有两个分支master和wxy，我们可以选择其中任意一个进行构建即可。<br>这次我们选择wxy分支进行构建，如下：<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/jenkins008.png\" alt=\"\"><br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/jenkins009.png\" alt=\"\"><br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/jenkins010.png\" alt=\"\"></p>\n<h2 id=\"ansible-plugin插件\"><a href=\"#ansible-plugin插件\" class=\"headerlink\" title=\"ansible plugin插件\"></a>ansible plugin插件</h2><p><strong>本节是根据<a href=\"http://www.ilanni.com/\" target=\"_blank\" rel=\"external\">烂泥大神</a>分享的笔记摘录的！</strong></p>\n<p>首先要注意把yml文件存放到jenkins的工作目录下，否则jenkins会提示无权限操作。<br><figure class=\"highlight crystal\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">cat /var/<span class=\"class\"><span class=\"keyword\">lib</span>/<span class=\"title\">jenkins</span>/<span class=\"title\">yml</span>/<span class=\"title\">dir</span>.<span class=\"title\">yml</span></span></div><div class=\"line\"> </div><div class=\"line\">- <span class=\"symbol\">hosts:</span> <span class=\"string\">'&#123;&#123; host &#125;&#125;'</span></div><div class=\"line\">  <span class=\"symbol\">remote_user:</span> root</div><div class=\"line\">  <span class=\"symbol\">tasks:</span></div><div class=\"line\">   - <span class=\"symbol\">name:</span> test make dir</div><div class=\"line\">     <span class=\"symbol\">file:</span> path=<span class=\"regexp\">/etc/ilannitest</span> state=directory mode=<span class=\"number\">0755</span></div></pre></td></tr></table></figure></p>\n<p><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/jenkins011.png\" alt=\"\"><br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/jenkins012.png\" alt=\"\"><br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/jenkins013.png\" alt=\"\"><br>也可以保存到文件中主机地址，如下：<br><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">cat /etc/ansible/hosts </div><div class=\"line\"></div><div class=\"line\">[h5]</div><div class=\"line\"><span class=\"number\">114.55</span><span class=\"number\">.101</span><span class=\"number\">.252</span>  ansible_ssh_user=root ansible_ssh_private_key_file=/var/lib/jenkins/<span class=\"type\">key</span>/dongyin</div></pre></td></tr></table></figure></p>\n<p><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/jenkins014.png\" alt=\"\"><br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/jenkins015.png\" alt=\"\"><br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/jenkins016.png\" alt=\"\"></p>\n<hr>\n","excerpt":"","more":"<p>jenkins是一个广泛用于持续构建的可视化web工具，持续构建说得更直白点，就是各种项目的”自动化”编译、打包、分发部署。jenkins可以很好的支持各种语言（比如：java, c#, php等）的项目构建，也完全兼容ant、maven、gradle等多种第三方构建工具，同时跟svn、git能无缝集成，也支持直接与知名源代码托管网站，比如github、bitbucket直接集成。</p>\n<h1 id=\"jenkins-安装\"><a href=\"#jenkins-安装\" class=\"headerlink\" title=\"jenkins 安装\"></a>jenkins 安装</h1><hr>\n<h1 id=\"jenkins-插件\"><a href=\"#jenkins-插件\" class=\"headerlink\" title=\"jenkins 插件\"></a>jenkins 插件</h1><h2 id=\"Git-Parameter-Plug-In-插件\"><a href=\"#Git-Parameter-Plug-In-插件\" class=\"headerlink\" title=\"Git Parameter Plug-In 插件\"></a>Git Parameter Plug-In 插件</h2><p>本节是根据<a href=\"http://www.ilanni.com/\">烂泥大神</a>分享的笔记摘录的！<br><strong>Git Parameter Plug-In</strong>插件可以参数化构建git 可以根据不同的分支或者tag进行构建。</p>\n<h3 id=\"安装Git-Parameter-Plug-In插件\"><a href=\"#安装Git-Parameter-Plug-In插件\" class=\"headerlink\" title=\"安装Git Parameter Plug-In插件\"></a>安装<strong>Git Parameter Plug-In</strong>插件</h3><p><strong>Git Parameter 文档</strong>：<a href=\"https://wiki.jenkins-ci.org/display/JENKINS/Git+Parameter+Plugin\">https://wiki.jenkins-ci.org/display/JENKINS/Git+Parameter+Plugin</a><br><strong>插件下载</strong>：<a href=\"https://updates.jenkins-ci.org/download/plugins/git-parameter/\">https://updates.jenkins-ci.org/download/plugins/git-parameter/</a><br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/jenkins001.png\" alt=\"\"></p>\n<p>下面这个截图是根据分支进行构建<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/jenkins002.png\" alt=\"\"></p>\n<p>如果是根据tag进行构建的话，如下进行配置<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/jenkins003.png\" alt=\"\"></p>\n<p>这次我们是根据分支进行构建<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/jenkins004.png\" alt=\"\"></p>\n<p>注意以上两张截图中name就是下面我们要配置的变量：<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/jenkins005.png\" alt=\"\"><br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/jenkins006.png\" alt=\"\"><br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/jenkins007.png\" alt=\"\"></p>\n<p>通过上图，我们可以看到下载git仓库中有两个分支master和wxy，我们可以选择其中任意一个进行构建即可。<br>这次我们选择wxy分支进行构建，如下：<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/jenkins008.png\" alt=\"\"><br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/jenkins009.png\" alt=\"\"><br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/jenkins010.png\" alt=\"\"></p>\n<h2 id=\"ansible-plugin插件\"><a href=\"#ansible-plugin插件\" class=\"headerlink\" title=\"ansible plugin插件\"></a>ansible plugin插件</h2><p><strong>本节是根据<a href=\"http://www.ilanni.com/\">烂泥大神</a>分享的笔记摘录的！</strong></p>\n<p>首先要注意把yml文件存放到jenkins的工作目录下，否则jenkins会提示无权限操作。<br><figure class=\"highlight crystal\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">cat /var/<span class=\"class\"><span class=\"keyword\">lib</span>/<span class=\"title\">jenkins</span>/<span class=\"title\">yml</span>/<span class=\"title\">dir</span>.<span class=\"title\">yml</span></span></div><div class=\"line\"> </div><div class=\"line\">- <span class=\"symbol\">hosts:</span> <span class=\"string\">'&#123;&#123; host &#125;&#125;'</span></div><div class=\"line\">  <span class=\"symbol\">remote_user:</span> root</div><div class=\"line\">  <span class=\"symbol\">tasks:</span></div><div class=\"line\">   - <span class=\"symbol\">name:</span> test make dir</div><div class=\"line\">     <span class=\"symbol\">file:</span> path=<span class=\"regexp\">/etc/ilannitest</span> state=directory mode=<span class=\"number\">0755</span></div></pre></td></tr></table></figure></p>\n<p><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/jenkins011.png\" alt=\"\"><br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/jenkins012.png\" alt=\"\"><br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/jenkins013.png\" alt=\"\"><br>也可以保存到文件中主机地址，如下：<br><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">cat /etc/ansible/hosts </div><div class=\"line\"></div><div class=\"line\">[h5]</div><div class=\"line\"><span class=\"number\">114.55</span><span class=\"number\">.101</span><span class=\"number\">.252</span>  ansible_ssh_user=root ansible_ssh_private_key_file=/var/lib/jenkins/<span class=\"type\">key</span>/dongyin</div></pre></td></tr></table></figure></p>\n<p><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/jenkins014.png\" alt=\"\"><br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/jenkins015.png\" alt=\"\"><br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/jenkins016.png\" alt=\"\"></p>\n<hr>\n"},{"title":"用github写开源书籍","abbrlink":40647,"date":"2016-11-08T02:39:05.000Z","_content":"\n# 创建新的仓库\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8github%E5%86%99%E5%BC%80%E6%BA%90%E4%B9%A6%E7%B1%8D1.png)\n创建新文件，名为SUMMARY.md，里面填入：\n\n```\n# Summary\n* [前言](README.md)```\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8github%E5%86%99%E5%BC%80%E6%BA%90%E4%B9%A6%E7%B1%8D2.png)\n\n# 创建一本书\n首先进入gitbook的官网：https://www.gitbook.com/\n点红色部分，用github登录，登录之后，点+NewBook(或在右上角+NEW，页面稍有改版)\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8github%E5%86%99%E5%BC%80%E6%BA%90%E4%B9%A6%E7%B1%8D3.png)\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8github%E5%86%99%E5%BC%80%E6%BA%90%E4%B9%A6%E7%B1%8D4.png)\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8github%E5%86%99%E5%BC%80%E6%BA%90%E4%B9%A6%E7%B1%8D5.png)\n这个页面目前是在同步，等同步完毕后，就可以看到自己的书了（不是什么原因这里会一直是这个界面不会跳转，但其实收到了通知邮件已经创建好了，打开主页刷新就可以看到）。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8github%E5%86%99%E5%BC%80%E6%BA%90%E4%B9%A6%E7%B1%8D6.png)\n点击edit，可以发现里面就1页，就是我们刚才SUMMARY.md写的内容\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8github%E5%86%99%E5%BC%80%E6%BA%90%E4%B9%A6%E7%B1%8D7.png)\n\n# 增加内容\n我们退回上一步，点edit\n可以看到如下界面\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8github%E5%86%99%E5%BC%80%E6%BA%90%E4%B9%A6%E7%B1%8D8.png)\n我们点开\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8github%E5%86%99%E5%BC%80%E6%BA%90%E4%B9%A6%E7%B1%8D9.png)\n可以同步显示编辑后的效果，预览效果。\n\n现在我们就可以完成我们的书的录入了，在目录区点击右键，可以新建一个内容页\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8github%E5%86%99%E5%BC%80%E6%BA%90%E4%B9%A6%E7%B1%8D10.png)\n然后点击一下，会提示创建一个文件\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8github%E5%86%99%E5%BC%80%E6%BA%90%E4%B9%A6%E7%B1%8D11.png)\n然后你会发现在github上也多了一个文件，这就关联起来了。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8github%E5%86%99%E5%BC%80%E6%BA%90%E4%B9%A6%E7%B1%8D12.png)\n我们再看SUMMARY里面多了一个“第一页”\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8github%E5%86%99%E5%BC%80%E6%BA%90%E4%B9%A6%E7%B1%8D13.png)\n我们双击一下，发现就是markdown的超链接，原来这就是gitbook的内容组织方式，通过超连接把内容和github上文件关联起来。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8github%E5%86%99%E5%BC%80%E6%BA%90%E4%B9%A6%E7%B1%8D14.png)\n我们修改一下名字，然后把他缩进一个tab，保存看看有什么变化\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8github%E5%86%99%E5%BC%80%E6%BA%90%E4%B9%A6%E7%B1%8D15.png)\n可以发现目录结构变了，然后名字也变了\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8github%E5%86%99%E5%BC%80%E6%BA%90%E4%B9%A6%E7%B1%8D16.png)\n通过修改SUMMARY.md你可以轻松的组织你的书\n\n# 书的框架\n一般来说，你的书得有一个README.md和一个SUMMARY.md。 \n其中SUMMARY.md是最重要的，它代表了整个书的框架，也是我们主要需要修改的地方。\n当你考虑好要写一本书，你可以先粗略的想好大概要分几部分，对这几部分弄一个文件夹。然后把对应的markdown文件放进去。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8github%E5%86%99%E5%BC%80%E6%BA%90%E4%B9%A6%E7%B1%8D17.png)\n然后push到github上，然后再在gitbook上修改SUMAARY使得新加的文件得以跟gitbook关联\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8github%E5%86%99%E5%BC%80%E6%BA%90%E4%B9%A6%E7%B1%8D18.png)\n关于地址的获取有个小诀窍，就是点击文件，邮件，有个重命名，这里可以看到文件的完整地址，复制就好。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8github%E5%86%99%E5%BC%80%E6%BA%90%E4%B9%A6%E7%B1%8D19.png)\n最后，可以在自己的书的主页点击read看看效果\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8github%E5%86%99%E5%BC%80%E6%BA%90%E4%B9%A6%E7%B1%8D20.png)\n\n---\n# 绑定域名\n原理和博客绑定域名是一样的\n\n* 1· 在你的项目下新建一个**CNAME**文件，注意没有后缀名。在里面添加你的域名，如我的就是** leolan.top**，然后推送**CNAME文件**到远程仓库。（方法二是直接在pages页上找到域名绑定设置，最好同时绑定如：**leolan.top**和**www.leolan.top**,少绑一个，没绑的那个打不开）\n* 2· 到域名服务商那里增加你的CNAME记录。添加两条记录，@和www的主机记录，记录类型为CNAME，记录值为 `username.github.io. `，重要的是 io 后面还有一个原点（看官方帮助文档Coding的就不用加点），切记。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E5%9F%9F%E5%90%8D%E7%BB%91%E5%AE%9A.png)\n过几分钟，刷新网页，就能直接用域名访问了，因为是在项目内建的**CNAME**文件，所以域名直接指向此项目文件夹，其他项目可以用其他域名设定。\n\n---\n参考：GitBook入门（用github做出第一本书）\nhttp://blog.csdn.net/hk2291976/article/details/51173850\n\n\n---","source":"_posts/Dev/2016-11-08-用github写开源书籍.md","raw":"---\ntitle: 用github写开源书籍\ncategories:\n  - Dve\ntags:\n  - 用github写开源书籍\n  - gitbook\nabbrlink: 40647\ndate: 2016-11-08 10:39:05\n---\n\n# 创建新的仓库\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8github%E5%86%99%E5%BC%80%E6%BA%90%E4%B9%A6%E7%B1%8D1.png)\n创建新文件，名为SUMMARY.md，里面填入：\n\n```\n# Summary\n* [前言](README.md)```\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8github%E5%86%99%E5%BC%80%E6%BA%90%E4%B9%A6%E7%B1%8D2.png)\n\n# 创建一本书\n首先进入gitbook的官网：https://www.gitbook.com/\n点红色部分，用github登录，登录之后，点+NewBook(或在右上角+NEW，页面稍有改版)\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8github%E5%86%99%E5%BC%80%E6%BA%90%E4%B9%A6%E7%B1%8D3.png)\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8github%E5%86%99%E5%BC%80%E6%BA%90%E4%B9%A6%E7%B1%8D4.png)\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8github%E5%86%99%E5%BC%80%E6%BA%90%E4%B9%A6%E7%B1%8D5.png)\n这个页面目前是在同步，等同步完毕后，就可以看到自己的书了（不是什么原因这里会一直是这个界面不会跳转，但其实收到了通知邮件已经创建好了，打开主页刷新就可以看到）。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8github%E5%86%99%E5%BC%80%E6%BA%90%E4%B9%A6%E7%B1%8D6.png)\n点击edit，可以发现里面就1页，就是我们刚才SUMMARY.md写的内容\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8github%E5%86%99%E5%BC%80%E6%BA%90%E4%B9%A6%E7%B1%8D7.png)\n\n# 增加内容\n我们退回上一步，点edit\n可以看到如下界面\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8github%E5%86%99%E5%BC%80%E6%BA%90%E4%B9%A6%E7%B1%8D8.png)\n我们点开\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8github%E5%86%99%E5%BC%80%E6%BA%90%E4%B9%A6%E7%B1%8D9.png)\n可以同步显示编辑后的效果，预览效果。\n\n现在我们就可以完成我们的书的录入了，在目录区点击右键，可以新建一个内容页\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8github%E5%86%99%E5%BC%80%E6%BA%90%E4%B9%A6%E7%B1%8D10.png)\n然后点击一下，会提示创建一个文件\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8github%E5%86%99%E5%BC%80%E6%BA%90%E4%B9%A6%E7%B1%8D11.png)\n然后你会发现在github上也多了一个文件，这就关联起来了。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8github%E5%86%99%E5%BC%80%E6%BA%90%E4%B9%A6%E7%B1%8D12.png)\n我们再看SUMMARY里面多了一个“第一页”\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8github%E5%86%99%E5%BC%80%E6%BA%90%E4%B9%A6%E7%B1%8D13.png)\n我们双击一下，发现就是markdown的超链接，原来这就是gitbook的内容组织方式，通过超连接把内容和github上文件关联起来。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8github%E5%86%99%E5%BC%80%E6%BA%90%E4%B9%A6%E7%B1%8D14.png)\n我们修改一下名字，然后把他缩进一个tab，保存看看有什么变化\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8github%E5%86%99%E5%BC%80%E6%BA%90%E4%B9%A6%E7%B1%8D15.png)\n可以发现目录结构变了，然后名字也变了\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8github%E5%86%99%E5%BC%80%E6%BA%90%E4%B9%A6%E7%B1%8D16.png)\n通过修改SUMMARY.md你可以轻松的组织你的书\n\n# 书的框架\n一般来说，你的书得有一个README.md和一个SUMMARY.md。 \n其中SUMMARY.md是最重要的，它代表了整个书的框架，也是我们主要需要修改的地方。\n当你考虑好要写一本书，你可以先粗略的想好大概要分几部分，对这几部分弄一个文件夹。然后把对应的markdown文件放进去。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8github%E5%86%99%E5%BC%80%E6%BA%90%E4%B9%A6%E7%B1%8D17.png)\n然后push到github上，然后再在gitbook上修改SUMAARY使得新加的文件得以跟gitbook关联\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8github%E5%86%99%E5%BC%80%E6%BA%90%E4%B9%A6%E7%B1%8D18.png)\n关于地址的获取有个小诀窍，就是点击文件，邮件，有个重命名，这里可以看到文件的完整地址，复制就好。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8github%E5%86%99%E5%BC%80%E6%BA%90%E4%B9%A6%E7%B1%8D19.png)\n最后，可以在自己的书的主页点击read看看效果\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8github%E5%86%99%E5%BC%80%E6%BA%90%E4%B9%A6%E7%B1%8D20.png)\n\n---\n# 绑定域名\n原理和博客绑定域名是一样的\n\n* 1· 在你的项目下新建一个**CNAME**文件，注意没有后缀名。在里面添加你的域名，如我的就是** leolan.top**，然后推送**CNAME文件**到远程仓库。（方法二是直接在pages页上找到域名绑定设置，最好同时绑定如：**leolan.top**和**www.leolan.top**,少绑一个，没绑的那个打不开）\n* 2· 到域名服务商那里增加你的CNAME记录。添加两条记录，@和www的主机记录，记录类型为CNAME，记录值为 `username.github.io. `，重要的是 io 后面还有一个原点（看官方帮助文档Coding的就不用加点），切记。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E5%9F%9F%E5%90%8D%E7%BB%91%E5%AE%9A.png)\n过几分钟，刷新网页，就能直接用域名访问了，因为是在项目内建的**CNAME**文件，所以域名直接指向此项目文件夹，其他项目可以用其他域名设定。\n\n---\n参考：GitBook入门（用github做出第一本书）\nhttp://blog.csdn.net/hk2291976/article/details/51173850\n\n\n---","slug":"Dev-2016-11-08-用github写开源书籍","published":1,"updated":"2016-11-13T03:36:30.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civi8ouia000y2c6n1zlh64qp","content":"<h1 id=\"创建新的仓库\"><a href=\"#创建新的仓库\" class=\"headerlink\" title=\"创建新的仓库\"></a>创建新的仓库</h1><p><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8github%E5%86%99%E5%BC%80%E6%BA%90%E4%B9%A6%E7%B1%8D1.png\" alt=\"\"><br>创建新文件，名为SUMMARY.md，里面填入：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"section\"># Summary</span></div><div class=\"line\"><span class=\"bullet\">* </span>[<span class=\"string\">前言</span>](<span class=\"link\">README.md</span>)</div></pre></td></tr></table></figure>\n<p><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8github%E5%86%99%E5%BC%80%E6%BA%90%E4%B9%A6%E7%B1%8D2.png\" alt=\"\"></p>\n<h1 id=\"创建一本书\"><a href=\"#创建一本书\" class=\"headerlink\" title=\"创建一本书\"></a>创建一本书</h1><p>首先进入gitbook的官网：<a href=\"https://www.gitbook.com/\" target=\"_blank\" rel=\"external\">https://www.gitbook.com/</a><br>点红色部分，用github登录，登录之后，点+NewBook(或在右上角+NEW，页面稍有改版)<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8github%E5%86%99%E5%BC%80%E6%BA%90%E4%B9%A6%E7%B1%8D3.png\" alt=\"\"><br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8github%E5%86%99%E5%BC%80%E6%BA%90%E4%B9%A6%E7%B1%8D4.png\" alt=\"\"><br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8github%E5%86%99%E5%BC%80%E6%BA%90%E4%B9%A6%E7%B1%8D5.png\" alt=\"\"><br>这个页面目前是在同步，等同步完毕后，就可以看到自己的书了（不是什么原因这里会一直是这个界面不会跳转，但其实收到了通知邮件已经创建好了，打开主页刷新就可以看到）。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8github%E5%86%99%E5%BC%80%E6%BA%90%E4%B9%A6%E7%B1%8D6.png\" alt=\"\"><br>点击edit，可以发现里面就1页，就是我们刚才SUMMARY.md写的内容<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8github%E5%86%99%E5%BC%80%E6%BA%90%E4%B9%A6%E7%B1%8D7.png\" alt=\"\"></p>\n<h1 id=\"增加内容\"><a href=\"#增加内容\" class=\"headerlink\" title=\"增加内容\"></a>增加内容</h1><p>我们退回上一步，点edit<br>可以看到如下界面<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8github%E5%86%99%E5%BC%80%E6%BA%90%E4%B9%A6%E7%B1%8D8.png\" alt=\"\"><br>我们点开<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8github%E5%86%99%E5%BC%80%E6%BA%90%E4%B9%A6%E7%B1%8D9.png\" alt=\"\"><br>可以同步显示编辑后的效果，预览效果。</p>\n<p>现在我们就可以完成我们的书的录入了，在目录区点击右键，可以新建一个内容页<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8github%E5%86%99%E5%BC%80%E6%BA%90%E4%B9%A6%E7%B1%8D10.png\" alt=\"\"><br>然后点击一下，会提示创建一个文件<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8github%E5%86%99%E5%BC%80%E6%BA%90%E4%B9%A6%E7%B1%8D11.png\" alt=\"\"><br>然后你会发现在github上也多了一个文件，这就关联起来了。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8github%E5%86%99%E5%BC%80%E6%BA%90%E4%B9%A6%E7%B1%8D12.png\" alt=\"\"><br>我们再看SUMMARY里面多了一个“第一页”<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8github%E5%86%99%E5%BC%80%E6%BA%90%E4%B9%A6%E7%B1%8D13.png\" alt=\"\"><br>我们双击一下，发现就是markdown的超链接，原来这就是gitbook的内容组织方式，通过超连接把内容和github上文件关联起来。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8github%E5%86%99%E5%BC%80%E6%BA%90%E4%B9%A6%E7%B1%8D14.png\" alt=\"\"><br>我们修改一下名字，然后把他缩进一个tab，保存看看有什么变化<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8github%E5%86%99%E5%BC%80%E6%BA%90%E4%B9%A6%E7%B1%8D15.png\" alt=\"\"><br>可以发现目录结构变了，然后名字也变了<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8github%E5%86%99%E5%BC%80%E6%BA%90%E4%B9%A6%E7%B1%8D16.png\" alt=\"\"><br>通过修改SUMMARY.md你可以轻松的组织你的书</p>\n<h1 id=\"书的框架\"><a href=\"#书的框架\" class=\"headerlink\" title=\"书的框架\"></a>书的框架</h1><p>一般来说，你的书得有一个README.md和一个SUMMARY.md。<br>其中SUMMARY.md是最重要的，它代表了整个书的框架，也是我们主要需要修改的地方。<br>当你考虑好要写一本书，你可以先粗略的想好大概要分几部分，对这几部分弄一个文件夹。然后把对应的markdown文件放进去。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8github%E5%86%99%E5%BC%80%E6%BA%90%E4%B9%A6%E7%B1%8D17.png\" alt=\"\"><br>然后push到github上，然后再在gitbook上修改SUMAARY使得新加的文件得以跟gitbook关联<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8github%E5%86%99%E5%BC%80%E6%BA%90%E4%B9%A6%E7%B1%8D18.png\" alt=\"\"><br>关于地址的获取有个小诀窍，就是点击文件，邮件，有个重命名，这里可以看到文件的完整地址，复制就好。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8github%E5%86%99%E5%BC%80%E6%BA%90%E4%B9%A6%E7%B1%8D19.png\" alt=\"\"><br>最后，可以在自己的书的主页点击read看看效果<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8github%E5%86%99%E5%BC%80%E6%BA%90%E4%B9%A6%E7%B1%8D20.png\" alt=\"\"></p>\n<hr>\n<h1 id=\"绑定域名\"><a href=\"#绑定域名\" class=\"headerlink\" title=\"绑定域名\"></a>绑定域名</h1><p>原理和博客绑定域名是一样的</p>\n<ul>\n<li>1· 在你的项目下新建一个<strong>CNAME</strong>文件，注意没有后缀名。在里面添加你的域名，如我的就是<strong> leolan.top</strong>，然后推送<strong>CNAME文件</strong>到远程仓库。（方法二是直接在pages页上找到域名绑定设置，最好同时绑定如：<strong>leolan.top</strong>和<strong>www.leolan.top</strong>,少绑一个，没绑的那个打不开）</li>\n<li>2· 到域名服务商那里增加你的CNAME记录。添加两条记录，@和www的主机记录，记录类型为CNAME，记录值为 <code>username.github.io.</code>，重要的是 io 后面还有一个原点（看官方帮助文档Coding的就不用加点），切记。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E5%9F%9F%E5%90%8D%E7%BB%91%E5%AE%9A.png\" alt=\"\"><br>过几分钟，刷新网页，就能直接用域名访问了，因为是在项目内建的<strong>CNAME</strong>文件，所以域名直接指向此项目文件夹，其他项目可以用其他域名设定。</li>\n</ul>\n<hr>\n<p>参考：GitBook入门（用github做出第一本书）<br><a href=\"http://blog.csdn.net/hk2291976/article/details/51173850\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/hk2291976/article/details/51173850</a></p>\n<hr>\n","excerpt":"","more":"<h1 id=\"创建新的仓库\"><a href=\"#创建新的仓库\" class=\"headerlink\" title=\"创建新的仓库\"></a>创建新的仓库</h1><p><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8github%E5%86%99%E5%BC%80%E6%BA%90%E4%B9%A6%E7%B1%8D1.png\" alt=\"\"><br>创建新文件，名为SUMMARY.md，里面填入：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"section\"># Summary</span></div><div class=\"line\"><span class=\"bullet\">* </span>[<span class=\"string\">前言</span>](<span class=\"link\">README.md</span>)</div></pre></td></tr></table></figure>\n<p><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8github%E5%86%99%E5%BC%80%E6%BA%90%E4%B9%A6%E7%B1%8D2.png\" alt=\"\"></p>\n<h1 id=\"创建一本书\"><a href=\"#创建一本书\" class=\"headerlink\" title=\"创建一本书\"></a>创建一本书</h1><p>首先进入gitbook的官网：<a href=\"https://www.gitbook.com/\">https://www.gitbook.com/</a><br>点红色部分，用github登录，登录之后，点+NewBook(或在右上角+NEW，页面稍有改版)<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8github%E5%86%99%E5%BC%80%E6%BA%90%E4%B9%A6%E7%B1%8D3.png\" alt=\"\"><br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8github%E5%86%99%E5%BC%80%E6%BA%90%E4%B9%A6%E7%B1%8D4.png\" alt=\"\"><br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8github%E5%86%99%E5%BC%80%E6%BA%90%E4%B9%A6%E7%B1%8D5.png\" alt=\"\"><br>这个页面目前是在同步，等同步完毕后，就可以看到自己的书了（不是什么原因这里会一直是这个界面不会跳转，但其实收到了通知邮件已经创建好了，打开主页刷新就可以看到）。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8github%E5%86%99%E5%BC%80%E6%BA%90%E4%B9%A6%E7%B1%8D6.png\" alt=\"\"><br>点击edit，可以发现里面就1页，就是我们刚才SUMMARY.md写的内容<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8github%E5%86%99%E5%BC%80%E6%BA%90%E4%B9%A6%E7%B1%8D7.png\" alt=\"\"></p>\n<h1 id=\"增加内容\"><a href=\"#增加内容\" class=\"headerlink\" title=\"增加内容\"></a>增加内容</h1><p>我们退回上一步，点edit<br>可以看到如下界面<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8github%E5%86%99%E5%BC%80%E6%BA%90%E4%B9%A6%E7%B1%8D8.png\" alt=\"\"><br>我们点开<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8github%E5%86%99%E5%BC%80%E6%BA%90%E4%B9%A6%E7%B1%8D9.png\" alt=\"\"><br>可以同步显示编辑后的效果，预览效果。</p>\n<p>现在我们就可以完成我们的书的录入了，在目录区点击右键，可以新建一个内容页<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8github%E5%86%99%E5%BC%80%E6%BA%90%E4%B9%A6%E7%B1%8D10.png\" alt=\"\"><br>然后点击一下，会提示创建一个文件<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8github%E5%86%99%E5%BC%80%E6%BA%90%E4%B9%A6%E7%B1%8D11.png\" alt=\"\"><br>然后你会发现在github上也多了一个文件，这就关联起来了。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8github%E5%86%99%E5%BC%80%E6%BA%90%E4%B9%A6%E7%B1%8D12.png\" alt=\"\"><br>我们再看SUMMARY里面多了一个“第一页”<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8github%E5%86%99%E5%BC%80%E6%BA%90%E4%B9%A6%E7%B1%8D13.png\" alt=\"\"><br>我们双击一下，发现就是markdown的超链接，原来这就是gitbook的内容组织方式，通过超连接把内容和github上文件关联起来。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8github%E5%86%99%E5%BC%80%E6%BA%90%E4%B9%A6%E7%B1%8D14.png\" alt=\"\"><br>我们修改一下名字，然后把他缩进一个tab，保存看看有什么变化<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8github%E5%86%99%E5%BC%80%E6%BA%90%E4%B9%A6%E7%B1%8D15.png\" alt=\"\"><br>可以发现目录结构变了，然后名字也变了<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8github%E5%86%99%E5%BC%80%E6%BA%90%E4%B9%A6%E7%B1%8D16.png\" alt=\"\"><br>通过修改SUMMARY.md你可以轻松的组织你的书</p>\n<h1 id=\"书的框架\"><a href=\"#书的框架\" class=\"headerlink\" title=\"书的框架\"></a>书的框架</h1><p>一般来说，你的书得有一个README.md和一个SUMMARY.md。<br>其中SUMMARY.md是最重要的，它代表了整个书的框架，也是我们主要需要修改的地方。<br>当你考虑好要写一本书，你可以先粗略的想好大概要分几部分，对这几部分弄一个文件夹。然后把对应的markdown文件放进去。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8github%E5%86%99%E5%BC%80%E6%BA%90%E4%B9%A6%E7%B1%8D17.png\" alt=\"\"><br>然后push到github上，然后再在gitbook上修改SUMAARY使得新加的文件得以跟gitbook关联<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8github%E5%86%99%E5%BC%80%E6%BA%90%E4%B9%A6%E7%B1%8D18.png\" alt=\"\"><br>关于地址的获取有个小诀窍，就是点击文件，邮件，有个重命名，这里可以看到文件的完整地址，复制就好。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8github%E5%86%99%E5%BC%80%E6%BA%90%E4%B9%A6%E7%B1%8D19.png\" alt=\"\"><br>最后，可以在自己的书的主页点击read看看效果<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8github%E5%86%99%E5%BC%80%E6%BA%90%E4%B9%A6%E7%B1%8D20.png\" alt=\"\"></p>\n<hr>\n<h1 id=\"绑定域名\"><a href=\"#绑定域名\" class=\"headerlink\" title=\"绑定域名\"></a>绑定域名</h1><p>原理和博客绑定域名是一样的</p>\n<ul>\n<li>1· 在你的项目下新建一个<strong>CNAME</strong>文件，注意没有后缀名。在里面添加你的域名，如我的就是<strong> leolan.top</strong>，然后推送<strong>CNAME文件</strong>到远程仓库。（方法二是直接在pages页上找到域名绑定设置，最好同时绑定如：<strong>leolan.top</strong>和<strong>www.leolan.top</strong>,少绑一个，没绑的那个打不开）</li>\n<li>2· 到域名服务商那里增加你的CNAME记录。添加两条记录，@和www的主机记录，记录类型为CNAME，记录值为 <code>username.github.io.</code>，重要的是 io 后面还有一个原点（看官方帮助文档Coding的就不用加点），切记。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E5%9F%9F%E5%90%8D%E7%BB%91%E5%AE%9A.png\" alt=\"\"><br>过几分钟，刷新网页，就能直接用域名访问了，因为是在项目内建的<strong>CNAME</strong>文件，所以域名直接指向此项目文件夹，其他项目可以用其他域名设定。</li>\n</ul>\n<hr>\n<p>参考：GitBook入门（用github做出第一本书）<br><a href=\"http://blog.csdn.net/hk2291976/article/details/51173850\">http://blog.csdn.net/hk2291976/article/details/51173850</a></p>\n<hr>\n"},{"title":"穷人VPN","abbrlink":61013,"date":"2016-11-01T08:08:50.000Z","_content":"\n# sshuttle：不需配置的 VPN\n\nsshuttle 被其作者称为 “穷人的 VPN”（A poor man’s instant VPN），甚至不需要远端服务器的 root 权限就可以用（只需要一个普通 SSH 帐号），和在 Mac/Linux 客户端直接用 ssh -D 的方式有点类似。如果不想花钱买 VPN，又懒得自己在 VPS 上安装和设置复杂的 VPN 服务，又不想用 ssh -D 这么朴素的技巧的话可以试一下这个 sshuttle。\n\n按照作者的说法 sshuttle 比 sshd -D 的方式快一点，因为 It’s just data-over-TCP，而不是 TCP-over-TCP，TCP-over-TCP 的方式会带来不必要的性能问题，因为 TCP 本身就是可靠传输协议，保证了包的有序性和无差错，并确保包被接受，如果有包丢失的话 TCP 协议可以自己立即重传弥补，所以没必要两层都 TCP，一层 TCP 就比较安全了。\n\n---\n## 使用：\nsshuttle 的用法很简单，在客户端下载和运行就可以了（需要有 Python 的支持），无需在服务器端做任何配置（但是需要一个 ssh 帐号和 Python 支持）：\n\n安装：\n法1: \n\n`pip install sshuttle`\n\n法2:\n\n```python\ngit clone https://github.com/sshuttle/sshuttle.git\n./setup.py install\n```\n`sshuttle -r username@sshserver 0.0.0.0/0 -vv`\nStarting sshuttle proxy.\nBinding: 12300\nListening on ('127.0.0.1', 12300).\n[local sudo] Password: \nfirewall manager ready.\nc : connecting to server...\n...\n\n成功运行 sshuttle 后会在 Terminal 上看到一些运行时 log：\n![][image-1]\n\n[image-1]:\thttp://ofyfogrgx.bkt.clouddn.com//blog/%E7%A9%B7%E4%BA%BAvpn001.png\n\n---","source":"_posts/VPN_墙/2016-11-01-穷人VPN.md","raw":"---\ntitle: 穷人VPN\ncategories:\n  - VPN\ntags:\n  - 穷人VPN\n  - 免安装VPN\nabbrlink: 61013\ndate: 2016-11-01 16:08:50\n---\n\n# sshuttle：不需配置的 VPN\n\nsshuttle 被其作者称为 “穷人的 VPN”（A poor man’s instant VPN），甚至不需要远端服务器的 root 权限就可以用（只需要一个普通 SSH 帐号），和在 Mac/Linux 客户端直接用 ssh -D 的方式有点类似。如果不想花钱买 VPN，又懒得自己在 VPS 上安装和设置复杂的 VPN 服务，又不想用 ssh -D 这么朴素的技巧的话可以试一下这个 sshuttle。\n\n按照作者的说法 sshuttle 比 sshd -D 的方式快一点，因为 It’s just data-over-TCP，而不是 TCP-over-TCP，TCP-over-TCP 的方式会带来不必要的性能问题，因为 TCP 本身就是可靠传输协议，保证了包的有序性和无差错，并确保包被接受，如果有包丢失的话 TCP 协议可以自己立即重传弥补，所以没必要两层都 TCP，一层 TCP 就比较安全了。\n\n---\n## 使用：\nsshuttle 的用法很简单，在客户端下载和运行就可以了（需要有 Python 的支持），无需在服务器端做任何配置（但是需要一个 ssh 帐号和 Python 支持）：\n\n安装：\n法1: \n\n`pip install sshuttle`\n\n法2:\n\n```python\ngit clone https://github.com/sshuttle/sshuttle.git\n./setup.py install\n```\n`sshuttle -r username@sshserver 0.0.0.0/0 -vv`\nStarting sshuttle proxy.\nBinding: 12300\nListening on ('127.0.0.1', 12300).\n[local sudo] Password: \nfirewall manager ready.\nc : connecting to server...\n...\n\n成功运行 sshuttle 后会在 Terminal 上看到一些运行时 log：\n![][image-1]\n\n[image-1]:\thttp://ofyfogrgx.bkt.clouddn.com//blog/%E7%A9%B7%E4%BA%BAvpn001.png\n\n---","slug":"VPN-墙-2016-11-01-穷人VPN","published":1,"updated":"2016-11-13T03:36:30.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civi8ouic000z2c6ng0rngsu4","content":"<h1 id=\"sshuttle：不需配置的-VPN\"><a href=\"#sshuttle：不需配置的-VPN\" class=\"headerlink\" title=\"sshuttle：不需配置的 VPN\"></a>sshuttle：不需配置的 VPN</h1><p>sshuttle 被其作者称为 “穷人的 VPN”（A poor man’s instant VPN），甚至不需要远端服务器的 root 权限就可以用（只需要一个普通 SSH 帐号），和在 Mac/Linux 客户端直接用 ssh -D 的方式有点类似。如果不想花钱买 VPN，又懒得自己在 VPS 上安装和设置复杂的 VPN 服务，又不想用 ssh -D 这么朴素的技巧的话可以试一下这个 sshuttle。</p>\n<p>按照作者的说法 sshuttle 比 sshd -D 的方式快一点，因为 It’s just data-over-TCP，而不是 TCP-over-TCP，TCP-over-TCP 的方式会带来不必要的性能问题，因为 TCP 本身就是可靠传输协议，保证了包的有序性和无差错，并确保包被接受，如果有包丢失的话 TCP 协议可以自己立即重传弥补，所以没必要两层都 TCP，一层 TCP 就比较安全了。</p>\n<hr>\n<h2 id=\"使用：\"><a href=\"#使用：\" class=\"headerlink\" title=\"使用：\"></a>使用：</h2><p>sshuttle 的用法很简单，在客户端下载和运行就可以了（需要有 Python 的支持），无需在服务器端做任何配置（但是需要一个 ssh 帐号和 Python 支持）：</p>\n<p>安装：<br>法1: </p>\n<p><code>pip install sshuttle</code></p>\n<p>法2:</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">git clone https://github.com/sshuttle/sshuttle.git</div><div class=\"line\">./setup.py install</div></pre></td></tr></table></figure>\n<p><code>sshuttle -r username@sshserver 0.0.0.0/0 -vv</code><br>Starting sshuttle proxy.<br>Binding: 12300<br>Listening on (‘127.0.0.1’, 12300).<br>[local sudo] Password:<br>firewall manager ready.<br>c : connecting to server…<br>…</p>\n<p>成功运行 sshuttle 后会在 Terminal 上看到一些运行时 log：<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E7%A9%B7%E4%BA%BAvpn001.png\" alt=\"\"></p>\n<hr>\n","excerpt":"","more":"<h1 id=\"sshuttle：不需配置的-VPN\"><a href=\"#sshuttle：不需配置的-VPN\" class=\"headerlink\" title=\"sshuttle：不需配置的 VPN\"></a>sshuttle：不需配置的 VPN</h1><p>sshuttle 被其作者称为 “穷人的 VPN”（A poor man’s instant VPN），甚至不需要远端服务器的 root 权限就可以用（只需要一个普通 SSH 帐号），和在 Mac/Linux 客户端直接用 ssh -D 的方式有点类似。如果不想花钱买 VPN，又懒得自己在 VPS 上安装和设置复杂的 VPN 服务，又不想用 ssh -D 这么朴素的技巧的话可以试一下这个 sshuttle。</p>\n<p>按照作者的说法 sshuttle 比 sshd -D 的方式快一点，因为 It’s just data-over-TCP，而不是 TCP-over-TCP，TCP-over-TCP 的方式会带来不必要的性能问题，因为 TCP 本身就是可靠传输协议，保证了包的有序性和无差错，并确保包被接受，如果有包丢失的话 TCP 协议可以自己立即重传弥补，所以没必要两层都 TCP，一层 TCP 就比较安全了。</p>\n<hr>\n<h2 id=\"使用：\"><a href=\"#使用：\" class=\"headerlink\" title=\"使用：\"></a>使用：</h2><p>sshuttle 的用法很简单，在客户端下载和运行就可以了（需要有 Python 的支持），无需在服务器端做任何配置（但是需要一个 ssh 帐号和 Python 支持）：</p>\n<p>安装：<br>法1: </p>\n<p><code>pip install sshuttle</code></p>\n<p>法2:</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">git clone https://github.com/sshuttle/sshuttle.git</div><div class=\"line\">./setup.py install</div></pre></td></tr></table></figure>\n<p><code>sshuttle -r username@sshserver 0.0.0.0/0 -vv</code><br>Starting sshuttle proxy.<br>Binding: 12300<br>Listening on (‘127.0.0.1’, 12300).<br>[local sudo] Password:<br>firewall manager ready.<br>c : connecting to server…<br>…</p>\n<p>成功运行 sshuttle 后会在 Terminal 上看到一些运行时 log：<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E7%A9%B7%E4%BA%BAvpn001.png\" alt=\"\"></p>\n<hr>\n"},{"title":"Git教程","abbrlink":41310,"date":"2016-11-04T06:03:40.000Z","_content":"\n# 安装Git\n## Debian/Ubuntu\n`apt-get install git`\n## Centos/RedHat\n`yum install git`\n## Windows\n安装包下载：https://git-for-windows.github.io/\n## Mac\n安装包下载：https://sourceforge.net/projects/git-osx-installer/\n\n`git --version`  　查看版本\n\n---\n\n# Git配置\n`ls -a`\t或 `ls -ah`\t方便查看隐藏文件\n执行`git config`命令就是调用此文件\n`/etc/gitconfig `       全部用户生效 --system调用的文件\n`～/.gitcinfig   `      当前用户有效 --global调用的文件\n`.git/config  `         当前项目的配置文件\n**.git/config**的配置会覆盖**/etc/gitconfig** 中的同名变量。\nwin中配置文件一般在主目录下的对应用户文件夹里**C:\\Documents and Settings\\$USER**\nwin中**/etc/gitconfig**是在安装目录中。\n\n## 用户信息配置\n```\ngit config --global user.name \"leolan\"  #leolan为用户名\ngit config --global user.email 842632422@qq.com   #邮箱\n(用了global选项后当前用户的所有项目默认使用此用户信息，某一项目若使用其它的用户信息。把--global去掉重新配置，会在该项目.git/config中重新生成配置就行了。)\n以下可选：\ngit config --global color.ui true    #让Git显示颜色，会让命令输出看起来更醒目\ngit config --global core.editor emace   #指定emace为默认编辑器，不指定默认为vim\ngit config --global merge.tool vimdiff  #差异化分析工具（冲突合并），git可以理解kdiff3 ,tkdiff,meld,xxdiff,emerge,vimdiff,gvimdiff,ecmerge,opendiff等工具的输出信息。\n\ngit config user.name   #查看配置的用户名，改为user.email则为邮箱。\ngit config --list      #查看已配置的用户信息```\n\n---\n\n# 基本使用方法\n**一般进入某项目的目录后再执行以下命令。**\n```\ngit init\t        #设置当前目录为Git仓库\ngit init 目录名 \t        #指定目录为Git仓库\n\ngit clone ［源］\t\t#从源拷贝项目到本地的当前目录\ngit clone ［源］［目录］\t#指定源下载到某个目录\n例：git clone git://github.com/schacon/grit.git mygrit\n\ngit status\t\t#查看当前目录文件的状态，加 -s 显示简短信息。\"A\"是已添加到缓存、\"M\"为文件有改动、\"空格\"为未缓存的文件，组合显示如：\"AM\"代表已缓存的文件有改动，\"空格M\"代表未缓存的文件有改动。\ngit add 文件名   #添加文件到项目缓存中，没有添加的文件不属于项目文件，也不会痛不到服务器。\ngit add .  \t\t#添加当前目录到项目缓存中，如果添加多个文件，此命令更方便。\ngit commit -m \"项目的版本或简短说明\"\t#可以指定版本号及简单说明改动了哪些内容，同时会把所有改动同步到服务器上。\ngit commit -am \"项目的版本或简短说明\"\t#改动了多个文件又不想一个个添加，此命令自动添加所有改动的文件并同步到服务器。```\n\nGit的所有工作都是现在本地缓存的，只有执行**git commit -m \"简短说明\"** 后才会向服务器提交。\n```\ngit diff\t        #未缓存的改动\ngit diff --cached\t#已缓存的改动\ngit diff HEAD\t\t#已缓存和未缓存的所有改动\ngit diff --stat\t\t#显示摘要而非整个diff\ngit reset -- HEAD 文件\t#取消文件已缓存的内容，--很重要，没有加--表示切换到另一个分支。\ngit rm 文件\t\t#从项目中及本地删除文件,可不用执行。\ngit mv 文件\t\t#从项目中及本地重命名文件,可不用执行。```\n\n---\n# 创建远程仓库\n在继续阅读后续内容前，请自行注册GitHub账号。由于你的本地Git仓库和GitHub仓库之间的传输是通过SSH加密的，所以，需要一点设置：\n\n* **第1步**：创建SSH Key。在用户主目录下，看看有没有.ssh目录，如果有，再看看这个目录下有没有id_rsa和id_rsa.pub这两个文件，如果已经有了，可直接跳到下一步。如果没有，打开Shell（Windows下打开Git Bash），创建SSH Key：`ssh-keygen -t rsa -C \"842632422@qq.com\"`你需要把邮件地址换成你自己的邮件地址，然后一路回车，使用默认值即可，由于这个Key也不是用于军事目的，所以也无需设置密码。\n\n如果一切顺利的话，可以在用户主目录里找到.ssh目录，里面有id_rsa和id_rsa.pub两个文件，这两个就是SSH Key的秘钥对，**id_rsa是私钥，不能泄露出去，id_rsa.pub是公钥**，可以放心地告诉任何人。\n\n* **第2步**：登陆GitHub，打开“Account settings”，“SSH Keys”页面：\n然后，点“Add SSH Key”，填上任意Title，在Key文本框里粘贴id_rsa.pub（公钥）文件的内容：\n\n点“Add Key”，你就应该看到已经添加的Key：\n![](http://ofyfogrgx.bkt.clouddn.com//blog/git%E6%95%99%E7%A8%8B001.png)\n![](http://ofyfogrgx.bkt.clouddn.com//blog/git%E6%95%99%E7%A8%8B002.png)\n\n为什么GitHub需要SSH Key呢？因为GitHub需要识别出你推送的提交确实是你推送的，而不是别人冒充的，而Git支持SSH协议，所以，GitHub只要知道了你的公钥，就可以确认只有你自己才能推送。\n当然，GitHub允许你添加多个Key。假定你有若干电脑，你一会儿在公司提交，一会儿在家里提交，只要把每台电脑的Key都添加到GitHub，就可以在每台电脑上往GitHub推送了。\n最后友情提示，在GitHub上免费托管的Git仓库，任何人都可以看到喔（但只有你自己才能改）。所以，不要把敏感信息放进去。\n`ssh -T git@github.com\n提示：Hi MyLeoLan! You've successfully authenticated, but GitHub does not provide shell access.　　则成功添加sshkey\n\n在右上角找到“Create a new repo”按钮，创建一个新的仓库：\n![](http://ofyfogrgx.bkt.clouddn.com//blog/git%E6%95%99%E7%A8%8B003.png)\n目前，在GitHub上的这个仓库还是空的，会提示你创建README.md文件。\n\n可以从这个仓库克隆出新的仓库（克隆到本地），也可以把一个已有的本地仓库与之关联，然后，把本地仓库的内容推送到GitHub仓库（本地的项目或下载了别人的项目想要推送到自己的仓库，和**fork**的方式不同，这种方式要删除隐藏的**.git文件夹**因为**.git文件夹**包含了别人的库信息，你是推送不到自己的库上去的，删掉之后添加的才是自己的信息）。\n\n---\n# 从远程库克隆仓库\n远程库已经准备好了，下一步是用命令git clone克隆一个本地库：\n`git clone git@github.com:MyLeoLan/testgit.git`\n实际上，Git支持多种协议，默认的git://使用ssh，但也可以使用https等其他协议。\n使用https除了速度慢以外，还有个最大的麻烦是**每次推送都必须输入口令**，但是在某些只开放http端口的公司内部就无法使用ssh协议而只能用https。\n\n# 本地仓库推送到远程仓库\n把本地仓库的内容推送到远程（GitHub）仓库。在本地的XXX仓库下运行命令：\n\n`git remote add origin git@github.com:myleolan/learngit.git`\n表示把本地的XXX仓库与远程learngit.git库绑定**(添加远程库)**，以后推送都推送到这个库中。地址换成自己的库地址。你的SSH Key公钥不在我的账户列表中是推不上去的。\n\n关联后，使用命令`git push -u origin master`完成第一次推送master分支的所有内容（一般远程的master分支会自动命名为origin用于区分，而本地的master还是master分支，**-u**会关联分支，下次推送默认推送到此分支。）\n\n推送时**git push origin XXXX** （xxxx可以指定本地某分支推送到远程的origin分支）此后，每次本地提交后，只要有必要，就可以使用命令`git push origin master`推送最新修改；简化命令为：`git pull`(从远程仓库提取数据并尝试合并到当前分支)和`git push`\n\n从远程库下载分支和数据的更新到当前项目（不会合并，pull等同于fetch+merge）：`git fetch origin`\n\n查看当前项目的远程库：\n```\ngit remote 或 git remote -v\n\norigin  git@github.com:myleolan/learngit.git (fetch)\norigin  git@github.com:myleolan/learngit.git (push)```\n上面显示了可以抓取和推送的origin的地址。如果没有推送权限，就看不到push的地址。\n\n删除远程仓库：`git remote rm ［别名或仓库名］`\n\n* pull：本地 <-- 远程   (如果你本地落后远程，必然要pull)\n* push：本地 --> 远程  (如果你本地超前远程，必然要push)\n\n本质上都是同步commit\n\n分布式版本系统的最大好处之一是在本地工作完全不需要考虑远程库的存在，也就是有没有联网都可以正常工作，而SVN在没有联网的时候是拒绝干活的！当有网络的时候，再把本地提交推送一下就完成了同步！\n\n---\n# 管理修改\n第一次修改 -> **git add**（放入暂存区）-> 第二次修改 ->**git commit**（提交暂存区，准备推送到远程）\n\nGit管理的是修改，当你用git add命令后，在工作区的第一次修改被放入暂存区，准备提交，但是，在**工作区的第二次修改并没有放入暂存区**，所以，git commit**只负责把暂存区的修改提交了**，也就是第一次的修改被提交了，第二次的修改不会被提交。\n\n提交后，用`git diff HEAD`命令可以查看工作区和版本库里面最新版本的区别。\n\n怎么提交第二次修改呢？你可以继续git add再git commit，也可以别着急提交第一次修改，先git add第二次修改，再git commit，就相当于把两次修改合并后一块提交了：\n\n**第一次修改 -> git add -> 第二次修改 -> git add -> git commit**\n好啦，把第二次修改提交了。\n\n---\n# 删除文件\n一般情况下，你通常直接在文件管理器中把没用的文件删了，或者用**rm**命令删了,此时文件删除了但版本库里还有记录，文件可能恢复不了。这个时候，Git知道你删除了文件，因此，工作区和版本库就不一致了，`git status`命令会提示你哪些文件被删除了。\n\n要从版本库中删除该文件，那就用命令`git rm`删掉，并且`git commit` （git rm会同时删除版本库及文件）\n\n另一种情况是删错了，因为版本库里还有呢，所以可以很轻松地把误删的文件恢复到最新版本：`git checkout -- filename`\n\ngit checkout其实是用版本库里的版本替换工作区的版本，无论工作区是修改还是删除，都可以“一键还原”。\n\n**提交代码分两步**:\n\n* 1.从工作目录，提交到stage。\n\n从工作目录提交到stage，需要用add或者rm命令，只提交到stage，而没有提交到master，是不会自动同步到master的。\n\n* 2.从stage提交到master。\n\n从stage提交到master用commit命令。\n\n**工作区**\\-->\\--*add,rm*\\-->\\--**stage**\\-->\\--*commit*\\-->\\--**master**\n\n**退回也是要分两步**:\n\n* 1.从master退回到stage\n对于还没有提交到stage的，可以从stage用checkout命令退回，这一步会取stage中的文件状态，覆盖掉工作目录中文件的状态，跟master完全没关系。\n\n* 2.从stage退回到工作目录\n\n对于已经到达stage的，想把state中的文件状态用master中的覆盖掉，就用reset命令，这样就把stage中修改用master的状态覆盖掉了，完全跟工作目录没关系\n\n**工作区**\\--<\\--*checkout*\\--<\\--**stage**\\--<\\--*reset*\\--<\\--**master**\n\n要删除某些文件，不能简单用rm删除，远程仓库依然会保留文件（因为它不知道你什么时候就进行版本回退了，需要用到那些文件），要彻底删除，本地`git rm filename`命令删除文件再**git push**上去，或者进入github管理界面手动一个一个删除文件。\n\n---\n# 版本回退\n```\ngit status \t   #查看当前状态\ngit diff      \t   #查看做了哪些修改\ngit add file  \t   #添加到缓存\ngit commit -m \"xxx\"#提交到本地版本库\ngit log\t\t   #可查看所有的历史版本，信息太多加--pretty=oneline参数简化```\n\n首先，Git必须知道当前版本是哪个版本，在Git中，用**HEAD表示当前版本**，也就是最新的提交过commit的这个版本，**HEAD^**是上一个版本，上上一个版本就是**HEAD^^**，当然往上100个版本写100个**^**比较容易数不过来，所以写成**HEAD~100**。\n\n此节实验当我没有保存下来，所以引用廖雪峰老师的数据，实验是通过修改readme.txt文件进行的，假设我们要把当前版本“append GPL”回退到上一个版本“add distributed”，就可以使用git reset命令：`git reset --hard HEAD^ ` (退回上一个版本)\n\n`cat readme.txt`看看readme.txt的内容是不是版本add distributed：\n\nGit is a distributed version control system.\nGit is free software.\n\n果然,还可以继续回退到上一个版本wrote a readme file，不过且慢，我们用`git log`再看看现在版本库的状态：\n```\ncommit ea34578d5496d7dd233c827ed32a8cd576c5ee85\nAuthor: Michael Liao <askxuefeng@gmail.com>\nDate:   Tue Aug 20 14:53:12 2013 +0800\n\n    add distributed\n\ncommit cb926e7ea50ad11b8f9e909c05226233bf755030\nAuthor: Michael Liao <askxuefeng@gmail.com>\nDate:   Mon Aug 19 17:51:55 2013 +0800\n\n    wrote a readme file```\n\n最新的那个版本append GPL已经看不到了！好比你从21世纪坐时光穿梭机来到了19世纪，想再回去已经回不去了，肿么办？只要上面的命令行窗口还没有被关掉，你就可以顺着往上找啊找啊，找到那个append GPL的**commit id**是3628164...，于是就可以指定回到未来的某个版本：\n`git reset --hard 3628164`     (退回指定版本）。\n\n如果已经关掉了命令行，找不到新版本的commit id怎么办？Git提供了一个命令`git reflog`用来**记录你的每一次命令(历史命令，类似日志)**，其中就包含了commit id：\n```\ngit reflog      查询历史版本号\nea34578 HEAD@{0}: reset: moving to HEAD^\n3628164 HEAD@{1}: commit: append GPL\nea34578 HEAD@{2}: commit: add distributed\ncb926e7 HEAD@{3}: commit (initial): wrote a readme file```\n第二行显示append GPL的commit id是3628164，现在，你又可以乘坐时光机回到未来了。\n\n版本号没必要写全，前几位就可以了，Git会自动去找。当然也不能只写前一两位,一般7-8位就行了，因为Git可能会找到多个版本号，就无法确定是哪一个了。\nGit的版本回退速度非常快，因为Git在内部有个指向当前版本的HEAD指针，当你回退版本的时候，Git仅仅是把HEAD从指向append GPL：\n![](http://ofyfogrgx.bkt.clouddn.com//blog/git%E6%95%99%E7%A8%8B004.png)\n\n改为指向add distributed：\n\n![](http://ofyfogrgx.bkt.clouddn.com//blog/git%E6%95%99%E7%A8%8B005.png)\n\n然后顺便把工作区的文件更新了。所以你让**HEAD**指向哪个版本号，你就把当前版本定位在哪。\n\n---\n# 撤销修改\n当发现某部分代码需要撤销时`git checkout -- filename`可以丢弃工作区的修改：**git checkout \\-- readme.txt**（把readme.txt文件在工作区的修改全部撤销）\n\n这里有两种情况：\n\n* 1.**readme.txt自修改后还没有被放到暂存区**，现在，撤销修改就回到和版本库一模一样的状态；\n\n命令中的**\\--**很重要，没有**\\--**，就变成了“**切换到另一个分支**”的命令，我们在后面的分支管理中会再次遇到git checkout命令。\n\n* 2.**readme.txt已经添加到暂存区后，又作了修改**，现在，撤销修改就回到添加到暂存区后的状态。\n总之，就是让这个文件回到最近一次**git commit**或**git add**时的状态。\n\n现在假定是凌晨3点，你不但写了一些胡话，还**git add到暂存区**了,庆幸的是，在**commit**之前，你发现了这个问题。用`git status`查看一下，修改只是添加到了暂存区，还没有提交。用命令`git reset HEAD file`(可以把暂存区的修改撤销掉（unstage），不带file则撤销所有文件的更改，重新放回工作区，此时就相当于**没有git add**的状态，但文件是改动过的）\n\n`git reset`命令**既可以回退版本，也可以把暂存区的修改回退到工作区。**当我们用HEAD时，表示最新的版本。再用`git status`查看一下，现在暂存区是干净的，工作区有修改。\n丢弃工作区的修改：`git checkout -- readme.txt` 可直接恢复文件并恢复版本库的内容（丢弃所有未git add的内容，回到最近一个最新版本）\n注意：要完全撤回修改的代码，要`git reset HEAD file `后执行`git checkout -- file `才会完全包括工作区的内容也删除。\n\n\n现在，假设你不但改错了东西，还把暂存区提交到了版本库（执行了git commit），怎么办呢？还可以版本回退到上一个版本。如果**还没有把自己的本地版本库推送到远程**，可以用：`git reset --hard HEAD` 恢复到当前版本（改动了但没有commit的那个版本，如果进行了commit，此次commit就是一个新版本，只能通过`git reset --hard HEAD^`回到上一个commit）。如果**已经提交到了远程**，只能通过`git reset --hard HEAD^`版本回退了。\n\n---\n# 标签管理\n发布一个版本时，我们通常先在版本库中打一个标签（tag），这样，就唯一确定了打标签时刻的版本。将来无论什么时候，取某个标签的版本，就是把那个打标签的时刻的历史版本取出来。所以，标签也是版本库的一个快照。\nGit的标签虽然是版本库的快照，但其实它就是指向某个commit的指针（跟分支很像对不对？但是分支可以移动，标签不能移动），所以，创建和删除标签都是瞬间完成的。\n\n**Git有commit，为什么还要引入tag？**\n\n“请把上周一的那个版本打包发布，commit号是6a5819e...” ;“一串乱七八糟的数字不好找！”\n\n如果换一个办法：\n\n“请把上周一的那个版本打包发布，版本号是v1.2”  ;“按照tag v1.2查找commit就行！”\ntag就是一个让人容易记住的有意义的名字，它跟某个commit绑在一起。\n\n## 创建标签\n在Git中打标签非常简单，首先，切换到需要打标签的分支上：\n```\ngit branch    #查看有哪些分支\ngit checkout master  #切换到要打标签的分支上\n```\n然后，敲命令`git tag <name>`就可以在**当前分支的最新已提交的状态**(HEAD)打一个新标签：**git tag v1.0**\n\n默认标签是打在最新提交的commit上的。有时候，如果忘了打标签，比如，现在已经是周五了，但应该在周一打的标签没有打，怎么办？\n\n方法是找到历史提交的**commit id**，然后打上就可以了：\n```\ngit log --pretty=oneline --abbrev-commit\n\n6a5819e merged bug fix 101\ncc17032 fix bug 101\n7825a50 merge with no-ff\n6224937 add merge\n59bc1cb conflict fixed\n400b400 & simple\n75a857c AND simple\nfec145a branch test\nd17efd8 remove test.txt\n...```\n\n比方说要对**add merge**这次提交打标签，它对应的**commit id**是6224937，敲入命令：\n`git tag v0.9 6224937`\n\n还可以创建带有说明的标签，用**-a**指定标签名，**-m**指定说明文字：\n`git tag -a v0.1 -m \"version 0.1 released\" 3628164`\n\n查看所有标签：`git tag`\n\n注意，标签不是按时间顺序列出，而是按字母排序的。可以用`git show <tagname>`查看标签详细信息。\n\n还可以通过**-s**用私钥签名一个标签：\n`git tag -s v0.2 -m \"signed version 0.2 released\" fec145a`(原来的-a换为-s)\n\n签名采用PGP签名，因此，必须首先安装gpg（**GnuPG**），如果没有找到gpg，或者没有gpg密钥对，就会报错：\n```\ngpg: signing failed: secret key not available\nerror: gpg failed to sign the data\nerror: unable to sign the tag```\n\n如果报错，请参考**GnuPG**帮助文档配置Key。如果签名不成功可以加**-u** 参数，详见：http://airk000.github.io/git/2013/09/30/git-tag-with-gpg-key\n\n`git show <tagname>`也可以看到PGP的签名信息：\n```\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.12 (Darwin)\n\niQEcBAABAgAGBQJSGpMhAAoJEPUxHyDAhBpT4QQIAKeHfR3bo...\n-----END PGP SIGNATURE-----```\n\n用PGP签名的标签是不可伪造的，因为可以验证PGP签名。验证签名的方法比较复杂，这里就不介绍了。\n\n## 操作标签\n`git tag -d <tagname>`可以删除一个本地标签。\n`git push origin <tagname>`可以推送一个本地标签到远程库。\n`git push origin --tags`可以推送全部未推送过的本地标签到远程库。\n\n删除时先删除本地对应的标签，再运行命令`git push origin :refs/tags/<tagname>`删除一个远程标签。\n  \n---\n# 分支\n\n\n创建分支可以在分支上工作而不影响master分支，当分支工作完成时再合并到master分支上。\n\n一般流程：\n\n* 1.先查看分支：`git branch`\n* 2.创建+切换分支：`git checkout -b <分支name>`等价于：`创建分支：git branch <分支name>`+`切换分支：git checkout <分支name>`\n* 3.查看当前分支：`git branch`\n* 4.在**新建分支上进行工作**，工作完成时。切换回主分支：`git checkout master`\n* 5.合并某分支到当前分支（当前已切换回master分支了）：`git merge <分支name>`\n* 6.删除无用分支：`git branch -d <分支name>`\n* 7.查看当前分支：`git branch`\n \n只剩master分支啦。\n\n想要深入了解，参考：\n\n[猴子Git](http://backlogtool.com/git-guide/cn/reference/branch.html#sec2)　　[Pro Git](http://iissnan.com/progit/html/zh/ch3_2.html)　　[廖雪峰Git](http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/001375840038939c291467cc7c747b1810aab2fb8863508000)\n\n## 分支策略\n在实际开发中，我们应该按照几个基本原则进行分支管理：\n\n　　首先，**master**分支应该是非常稳定的，也就是仅用来发布新版本，平时不能在上面干活；平时干活都在dev分支上，也就是说，dev分支是不稳定的，到某个时候，比如1.0版本发布时，再把dev分支合并到master上，在master分支发布1.0版本；你和你的小伙伴们每个人都在dev分支上干活，每个人都有自己的分支，时不时地往dev分支上合并就可以了。\n所以，团队合作的分支看起来就像这样：\n![](http://ofyfogrgx.bkt.clouddn.com//blog/git%E6%95%99%E7%A8%8B006.png)\nGit分支十分强大，在团队开发中应该充分应用。合并分支时，加上**\\--no-ff**参数就可以用普通模式合并，合并后的历史有分支，能看出来曾经做过合并，而**fast forward**合并就看不出来曾经做过合并。\n\n## 分支管理策略\n合并分支时，如果可能，Git会用**Fast forward**模式，但这种模式下，删除分支后，会丢掉分支信息。如果要强制禁用**Fast forward**模式(加参数\\--no-ff)，Git就会在**merge**时生成一个新的commit，这样，从分支历史上就可以看出分支信息。\n\n下面来测试一下**\\--no-ff**方式的**git merge**：\n\n创建分支、修改文件，提交缓存，切换回master分支，准备合并dev分支，因为本次合并要创建一个新的commit，所以加上**-m**参数，把commit描述写进去。\n`git merge --no-ff -m \"merge with no-ff\" dev`\n\n用**git log**看看分支历史：\n```\ngit log --graph --pretty=oneline --abbrev-commit\n\n*   7825a50 merge with no-ff\n|\\\n| * 6224937 add merge\n|/\n*   59bc1cb conflict fixed\n...```\n\n## 冲突解决\n当合并出现冲突时，一般要手动解决。\n直接查看master分支的readme.txt（冲突文件）的内容并修改：\n```\nGit is a distributed version control system.\nGit is free software distributed under the GPL.\nGit has a mutable index called stage.\nGit tracks changes of files.\n<<<<<<< HEAD\nCreating a new branch is quick & simple.\n=======\nCreating a new branch is quick AND simple.\n>>>>>>> feature1```\n修改完毕，再次提交即可。\n\n**Git用<<<<<<<，=======，>>>>>>>标记出不同分支的内容。**\n\n用带参数的git log也可以看到分支的合并情况：`git log --graph --pretty=oneline --abbrev-commit`\n用git log --graph命令可以看到分支合并图。\n\n详见：[廖雪峰Git解决冲突](http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/001375840202368c74be33fbd884e71b570f2cc3c0d1dcf000)\n\n## 错误解决\n*  1.error: src refspec master does not match any.\n答：目录中没有文件，空目录是不能提交上去的 执行:`git commit -m “xxx”`\n\n*  2.error: insufficient permission for adding an object to repository database ./objects   \n答：服务端没有可写目录的权限［可能不是你的库，或sshkey不对］\n\n*  3.error：fatal: remote origin already exists.\n答：`git remote rm origin`\n\n*  4.error: failed to push som refs to ........\n解决办法：`git pull origin master`  \n答：先pull 下来 再push上去。\n\n*  5.error: failed to push some refs to 'git@github.com:myleolan/learnpython.git'\nTo prevent you from losing history, non-fast-forward updates were rejected\nMerge the remote changes before pushing again.  See the 'Note about\nfast-forwards' section of 'git push --help' for details.\n答：是因为远程用web创建的的库和本地不一样。`git pull origin master` (先pull 下来 再push 上去)\n\n*  6.git push时报错：The requested URL returned error: 403 Forbidden while accessing\n答：`vim /.git/config`\n把[remote \"origin\"]项中https://github.com 改为https://myleolan@github.com\n就是加上**用户名@**之后再次执行git push 输入密码即可，一般用git协议不会报此错误，地址改为git@github.com:myleolan/XXXX.git\n\n\n---\n# Bug分支\n\n当你接到一个修复一个代号101的bug的任务时，很自然地，你想创建一个分支issue-101来修复它，但是，等等，当前正在dev上进行的工作还没有提交；并不是你不想提交，而是工作只进行到一半，还没法提交，预计完成还需1天时间。但是，必须在两个小时内修复该bug，怎么办？\n\nGit还提供了一个**stash**功能，可以把当前工作现场“**储藏**”起来，等以后恢复现场后继续工作：`git stash`现在，用**git status**查看工作区，就是干净的（除非有没有被Git管理的文件），因此可以放心地创建分支来修复bug。\n\n## 修复Bug一般流程\n首先确定要在哪个分支上修复bug，假定需要在master分支上修复，就从master创建临时分支并切换分支：\n```\ngit checkout master\ngit checkout -b issue-101   #创建并切换分支```\n\n现在修复bug，需要把“Git is free software ...”改为“Git is a free software ...”，然后提交：\n```\ngit add readme.txt \ngit commit -m \"fix bug 101\"```\n\n修复完成后，**切换到master分支，并完成分支合并**，最后**删除issue-101分支**：\n ```\n git checkout master\n git merge --no-ff -m \"merged bug fix 101\" issue-101  #合并分支\n git branch -d issue-101  #删除分支```\nbug修复了，现在，可以接着回到dev分支干活了！\n```\ngit checkout dev\ngit status   #此时可以看到工作区是干净的\ngit stash list  #查看已储藏的工作现场\n\nstash@{0}: WIP on dev: 6224937 add merge```\n\n工作现场还在，Git把**stash**内容存在某个地方了，需要恢复，有两个办法：\n\n* 1.用`git stash apply`恢复，但是恢复后，**stash**内容并不删除，你需要用`git stash drop`来删除(stash只是临时封存区，建议删除)。\n* 2.用`git stash pop`恢复的同时把**stash**内容也删了。\n \n 执行`git stash pop`恢复，再用`git stash list`查看，就看不到任何stash内容了\n**可以多次stash**，恢复的时候，先用`git stash list`查看，然后**恢复指定的stash**，用命令：`git stash apply stash@{0}`  (**stash@{0}**是封存的标识)\n\n---\n\n# Feature分支\n软件开发中，总有无穷无尽的新的功能要不断添加进来。添加一个新功能时，不希望因为一些实验性质的代码，把主分支搞乱了，所以，每添加一个新功能，最好新建一个**feature**分支，在上面**开发，完成后，合并，最后，删除该feature分支**。\n```\n#当前在工作分支dev上。\ngit checkout -b feature-vulcan(name)  #创建并切换到该分支\n#修改代码完成之后\ngit add vulcan.py\ngit status\ngit commit -m \"add feature vulcan\"\ngit checkout dev   #切回dev，准备合并\n#一切顺利的话，feature分支和bug分支是类似的，合并，然后删除。\n执行以下两句就可以完成任务了：\ngit merge --no-ff -m \"merged feature-vulcan\" feature-vulcan #合并分支\ngit branch -d feature-vulcan   #删除分支```\n\n但是，就在此时，接到上级命令，因经费不足，新功能**必须取消**！虽然白干了，但是这个分支还是必须**就地销毁**：\n```\ngit branch -d feature-vulcan\n\nerror: The branch 'feature-vulcan' is not fully merged.\nIf you are sure you want to delete it, run 'git branch -D feature-vulcan'.```\nGit提示销毁失败：feature-vulcan分支还没有被合并，如果删除，将丢失掉修改，如果要强行删除，需要使用命令`git branch -D feature-vulcan`\n\n现在我们强行删除：`git branch -D feature-vulcan`　OK，现在我们切换回dev分支继续工作。\n\n---\n\n# 自定义Git配置(高级)\n我们已经配置了**user.name**和**user.email**，实际上，Git还有很多可配置项。\n\n## 忽略特殊文件\n有些时候，你必须把某些文件放到Git工作目录中，但又不能提交它们，比如保存了**数据库密码的配置文件**啦，等等，每次**git status**都会显示**Untracked files ...**，有强迫症的童鞋心里肯定不爽。好在Git考虑到了大家的感受，这个问题解决起来也很简单，在Git工作区的根目录下创建一个特殊的**.gitignore**文件，然后把要忽略的文件名填进去，Git就会自动忽略这些文件。\n\n不需要从头写**.gitignore**文件，GitHub已经为我们准备了各种配置文件，只需要组合一下就可以使用了。所有配置文件可以直接在线浏览：**https://github.com/github/gitignore**   已经配置好了要忽略的文件，下载回来要文件名要改为**.gitignore**放在项目根目录下。\n\n**忽略文件的原则是：**\n\n  1. 忽略操作系统自动生成的文件，比如缩略图等；\n  2. 忽略编译生成的中间文件、可执行文件等，也就是如果一个文件是通过另一个文件自动生成的，那自动生成的文件就没必要放进版本库，比如Java编译产生的.class文件；\n  3. 忽略你自己的带有敏感信息的配置文件，比如存放口令的配置文件。\n\n举个例子：\n\n假设你在Windows下进行Python开发，Windows会自动在有图片的目录下生成隐藏的缩略图文件，如果有自定义目录，目录下就会有Desktop.ini文件，因此你需要忽略Windows自动生成的垃圾文件；然后，继续忽略Python编译产生的.pyc、.pyo、dist等文件或目录(**忽略文件夹在文件夹名后加/**)\n\n加上你自己定义的文件，最终得到一个完整的.gitignore文件，内容如下：\n```\n# Windows:\nThumbs.db\nehthumbs.db\nDesktop.ini\n\n# Python:\n*.py[cod]\n*.so\n*.egg\n*.egg-info\ndist\nbuild\n\n# My configurations:\ndb.ini\ndeploy_key_rsa\n新建文件夹/```\n\n最后一步就是把.gitignore也提交到Git，就完成了！当然**检验.gitignore**是否生效的标准是**git status**命令是不是说working directory clean。\n\n使用Windows的童鞋注意了，如果你在资源管理器里新建一个**.gitignore**文件，它会非常弱智地提示你必须输入文件名，在第三方文本编辑器里“保存”或者“另存为”就可以把文件保存为.gitignore了。\n\n有些时候，你想添加一个文件到Git，但发现添加不了，原因是这个文件被.gitignore忽略了：\n```\ngit add App.class\n\nThe following paths are ignored by one of your .gitignore files:\nApp.class\nUse -f if you really want to add them.```\n如果你确实想添加该文件，可以用**-f**强制添加到Git：`git add -f App.class`\n\n或者你发现，可能是.gitignore写得有问题，需要找出来到底哪个规则写错了，可以用`git check-ignore`命令检查：\n```\ngit check-ignore -v App.class\n.gitignore:3:*.class    App.class```\nGit会告诉我们，.gitignore的第3行规则忽略了该文件，于是我们就可以知道应该修订哪个规则。\n\n## 配置命令别名\n有没有经常敲错命令？比如git status？status这个单词真心不好记。如果敲**git st**就表示**git status**那就简单多了。\n```\ngit config --global alias.st status   #st表示status\ngit config --global alias.co checkout #co表示checkout\ngit config --global alias.ci commit   #ci表示commit\ngit config --global alias.br branch   #br表示branch```\n\n## \\--global参数是全局参数，这些命令在这台电脑的所有Git仓库下都有用。\n在\"**撤销修改**\"一节中，我们知道，命令`git reset HEAD file`可以把暂存区的修改撤销掉（unstage），重新放回工作区。既然是一个**unstage操作**，就可以配置一个unstage别名：\n`git config --global alias.unstage 'reset HEAD'`\n\n当你敲入命令：`git unstage test.py`实际上Git执行的是：`git reset HEAD test.py`\n\n配置一个**git last**，让其显示最后一次提交信息：`git config --global alias.last 'log -3' ` (数字代表最近的几次提交);这样，用`git last`就能显示最近3次的提交：\n\n甚至还有人丧心病狂地把lg配置成了：\n```\ngit config --global alias.lg \"log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit\"```\n\n来看看git lg的效果：\n![](http://ofyfogrgx.bkt.clouddn.com//blog/git%E6%95%99%E7%A8%8B008.png)\n\n## 关于配置文件\n配置Git的时候，加上**\\--global**是针对当前用户起作用的，如果不加，那只针对当前的仓库起作用。\n\n* 每个仓库（每个项目）独立的Git配置文件都放在**.git/config**文件中：\n```\ncat .git/config \n[core]\n    repositoryformatversion = 0\n    filemode = true\n    bare = false\n    logallrefupdates = true\n    ignorecase = true\n    precomposeunicode = true\n[remote \"origin\"]\n    url = git@github.com:myleolan/learngit.git\n    fetch = +refs/heads/*:refs/remotes/origin/*\n[branch \"master\"]\n    remote = origin\n    merge = refs/heads/master\n[alias]     #命令别名，要删除别名，直接删掉对应的行即可。\n    last = log -1```\n\n* 当前用户的Git配置文件放在用户主目录下的一个隐藏文件.gitconfig中：\n```\ncat .gitconfig\n[alias]\n    co = checkout\n    ci = commit\n    br = branch\n    st = status\n[user]\n    name = Your Name\n    email = your@email.com```\n\n配置别名也可以直接修改这个文件，如果改错了，可以删掉文件重新通过命令配置(参考第2节 “Git配置”)。\n\n---\n\n# 团队协作\n## 抓取分支\n多人协作时，大家都会往master和dev分支上推送各自的修改。现在，模拟一个你的小伙伴，可以在另一台电脑（注意要把SSH Key添加到GitHub）或者同一台电脑的另一个目录下克隆：\n`git clone git@github.com:myleolan/learngit.git`\n\n当你的小伙伴从远程库clone时，默认情况下，你的小伙伴只能看到本地的**master**分支。可以用**git branch**命令看看；现在，你的小伙伴要在dev分支上开发，就必须**创建远程origin的dev分支到本地**，于是他用命令创建本地dev分支：`git checkout -b dev origin/dev`　(在origin上创建dev，-b切换到dev分支;如果本地已经有dev分支了，直接切换就好)\n\n现在，他就可以在dev上继续修改，然后，时不时地把dev分支push到远程：\n`git commit -m \"add /usr/bin/env\"`\n\n本地已经有dev分支了就不用创建了，直接执行下面的命令会自动在远程服务器新建dev分支。\n`git push origin dev`　(把本地dev推到远程origin上，会自动寻找origin的dev分支)\n\n你的小伙伴已经向**origin/dev**分支推送了他的提交，而碰巧你也对同样的文件作了修改，并试图推送：\n```\ngit add hello.py\ngit commit -m \"add coding: utf-8\"\ngit push origin dev\n\nTo git@github.com:myleolan/learngit.git\n ! [rejected]        dev -> dev (non-fast-forward)\nerror: failed to push some refs to 'git@github.com:myleolan/learngit.git'\nhint: Updates were rejected because the tip of your current branch is behind\nhint: its remote counterpart. Merge the remote changes (e.g. 'git pull')\nhint: before pushing again.\nhint: See the 'Note about fast-forwards' in 'git push --help' for details.```\n\n推送失败，因为你的小伙伴的最新提交和你试图推送的提交有冲突，解决办法也很简单，Git已经提示我们，先用**git pull**把最新的提交从**origin/dev**抓下来，然后，在本地合并，解决冲突，再推送：\n```\ngit pull\n\nremote: Counting objects: 5, done.\nremote: Compressing objects: 100% (2/2), done.\nremote: Total 3 (delta 0), reused 3 (delta 0)\nUnpacking objects: 100% (3/3), done.\nFrom github.com:myleolan/learngit\n   fc38031..291bea8  dev        -> origin/dev\nThere is no tracking information for the current branch.\nPlease specify which branch you want to merge with.\nSee git-pull(1) for details\n    git pull <remote> <branch>\nIf you wish to set tracking information for this branch you can do so with:\n    git branch --set-upstream dev origin/<branch>```\n\ngit pull也失败了，原因是没有指定**本地dev分支**与远程**origin/dev**分支的链接，根据提示，设置dev和origin/dev的链接(绑定这两个分支)：\n```\ngit branch --set-upstream dev origin/dev \n如果git pull还是失败，说明绑定不了。\n试试官方更改的命令：git branch --set-upstream-to=origin/dev dev```\n`git pull -f origin master`　强制覆盖也行，但很危险。\n\n再次**git pull**成功，但是合并有冲突，需要手动解决，解决的方法和第12节“解决冲突”完全一样。解决后，提交，再push：\n```\ngit commit -m \"merge & fix hello.py\"\ngit push origin dev```\n\n**多人协作的工作模式通常是这样：**\n  1. 首先，可以试图用`git push origin branch-name`推送自己的修改；\n  2. 如果推送失败，则因为远程分支比你的本地更新，需要先用git pull试图合并；\n  3. 如果合并有冲突，则解决冲突，并在本地提交；\n  4. 没有冲突或者解决掉冲突后，再用`git push origin branch-name`推送就能成功！\n如果**git pull**提示“**no tracking information**”，则说明本地分支和远程分支的链接关系没有创建，用命令:\n`git branch --set-upstream branch-name origin/branch-name`\n这就是多人协作的工作模式，一旦熟悉了，就非常简单。\n\n## F&Q\n签出远程分支，出现以下错误：\nfatal: Cannot update paths and switch to branch 'develop' at the same time.\n解决方法：\n先`git fetch`再`git checkout -b develop origin/develop`\n因为本地还没有\"develop\"分支信息，需要先fetch或者pull\n\n假设有人往服务器上推送了一个新的分支，但是我不知道分支的名称是什么，我如何能获取到服务器上的分支列表呢？\n      a. 你直接去问他\n      b. 如果用GitHub，直接去网站看\n      c. `git ls-remote --heads origin`\n\n## 推送分支\n推送分支，就是把该分支上的所有本地提交推送到远程库。推送时，要指定本地分支，这样，Git就会把该分支推送到远程库对应的远程分支上：`git push origin master`\n\n如果要推送其他分支，比如dev，就改成：`git push origin dev`\n\n但是，并不是一定要把本地分支往远程推送，那么，哪些分支需要推送，哪些不需要呢？\n  ● master分支是主分支，因此要时刻与远程同步；\n  ● dev分支是开发分支，团队所有成员都需要在上面工作，所以也需要与远程同步；\n  ● bug分支只用于在本地修复bug，就没必要推到远程了，除非老板要看看你每周到底修复了几个bug；\n  ● feature分支是否推到远程，取决于你是否和你的小伙伴合作在上面开发。\n总之，就是在Git中，分支完全可以在本地自己藏着玩，是否推送，视你的心情而定！\n\n---\n# 参与开源项目\n如何参与一个开源项目呢？比如人气极高的**bootstrap**项目，这是一个非常强大的CSS框架，你可以访问它的**[GitHub项目主页](https://github.com/twbs/bootstrap)**，点“**Fork**”就在自己的账号下克隆了一个bootstrap仓库，然后，从自己的账号下clone：`git clone git@github.com:**your_username**/bootstrap.git`\n\n一定要从自己的账号下clone仓库，这样你才能推送修改(在第4节 “创建远程仓库”中结尾就提到了另一种克隆方式)。如果从bootstrap的作者的仓库地址，采用`git clone git@github.com:twbs/bootstrap.git`的方式克隆，因为没有权限，你将不能推送修改（见第4节 “创建远程仓库”结尾处，**删除.git文件夹**的方法）。\n\n**Bootstrap**的官方仓库twbs/bootstrap、你在GitHub上克隆的仓库**your_username/bootstrap**，以及你自己克隆到本地电脑的仓库，他们的关系就像下图显示的那样：\n![](http://ofyfogrgx.bkt.clouddn.com//blog/git%E6%95%99%E7%A8%8B007.png)\n\n* 如果你想修复bootstrap的一个bug，或者新增一个功能，立刻就可以开始干活，干完后，往自己的仓库推送。\n* 如果**你希望bootstrap的官方库能接受你的修改**，你就可以在你的GitHub该项目页上发起一个**pull request**。当然，对方是否接受你的**pull request**就不一定了。\n\n---\n# 自己搭建Git服务器\nGitHub就是一个免费托管开源代码的远程仓库。但是对于某些视源代码如生命的商业公司来说，既不想公开源代码，又舍不得给GitHub交保护费，那就只能自己搭建一台Git服务器作为私有仓库使用。搭建Git服务器需要准备一台运行Linux的机器，强烈用Ubuntu、Debian或者Centos、redhat，这样，通过几条简单的apt命令就可以完成安装。\n**root登录**\n\n* 第一步，**安装git：**\n`sudo apt-get install git` 或 `yum install git`\n\n* 第二步，**创建一个git用户，用来运行git服务：**\n`sudo adduser git`\n\n\n* 第三步，**初始化Git仓库：**\n先选定一个目录作为Git仓库，假定是/data/git/learngit.git\n在/data/git/目录下输入命令：\n`sudo git init --bare learngit.git`\n\nGit就会创建一个裸仓库，裸仓库没有工作区，因为服务器上的Git仓库纯粹是为了共享，所以不让用户直接登录到服务器上去改工作区，并且服务器上的Git仓库通常都以.git结尾。\n`sudo chown -R git:git learngit.git`\n\nGit服务器就已经搭得差不多了。下面我们在客户端clone一下远程仓库\n`git clone git@IP:/data/git/learngit.git`\nCloning into 'learngit'...\nThe authenticity of host '192.168.8.34 (192.168.8.34)' can't be established.\nRSA key fingerprint is 2b:55:45:e7:4c:29:cc:05:33:78:03:bd:a8:cd:08:9d.\nAre you sure you want to continue connecting (yes/no)? yes\nWarning: Permanently added '192.168.8.34' (RSA) to the list of known hosts.\ngit@192.168.8.34's password:\n**能连接但要密码**，接着下一步。\n\n* 第四步，**创建证书登录（Git服务器打开RSA认证）**：然后就可以去Git服务器上添加你的公钥用来验证你的信息了。`vim /etc/ssh/sshd_config`中将RSA认证打开，即：\n```\nRSAAuthentication yes     \nPubkeyAuthentication yes     \nAuthorizedKeysFile  .ssh/authorized_keys```\n\n这里我们可以看到**公钥存放在.ssh/authorized_keys**文件中。所以我们在**/home/git下创建.ssh目录，然后创建authorized_keys文件**，收集所有需要登录的用户的公钥，就是他们自己的id_rsa.pub文件，把所有公钥导入到**/home/git/.ssh/authorized_keys文件里，一行一个。**\n此时再次连接已经可以免密钥登录啦。\n\n* 第五步，**禁用shell登录：**\n出于安全考虑，第二步创建的git用户不允许登录shell，这可以通过\n编辑/etc/passwd文件完成。找到类似下面的一行：\n`git:x:1001:1001:,,,:/home/git:/bin/bash`\n改为：\n`git:x:1001:1001:,,,:/home/git:/usr/bin/git-shell`\n\n这样，git用户可以正常通过ssh使用git，但无法登录shell，因为我们为git用户指定的git-shell每次一登录就自动退出。\n\n* 第六步，**克隆远程仓库：**\n现在，可以通过git clone命令克隆远程仓库了，在各自的电脑上运行：\n`git clone git@IP:/data/git/learngit.git`\nCloning into 'sample'...\nwarning: You appear to have cloned an empty repository.\n剩下的推送就简单了。\n\n**管理公钥**\n\n如果团队很小，把每个人的公钥收集起来放到服务器的/home/git/.ssh/authorized_keys文件里就是可行的。如果团队有几百号人，就没法这么玩了，这时，可以用**Gitosis**来管理公钥。\n这里我们不介绍怎么玩Gitosis了，几百号人的团队基本都在500强了，相信找个高水平的Linux管理员问题不大。管理公钥也可用**Gitolite**\n**管理权限**\n有很多不但视源代码如生命，而且视员工为窃贼的公司，会在版本控制系统里设置一套完善的权限控制，每个人是否有读写权限会精确到每个分支甚至每个目录下。因为Git是为Linux源代码托管而开发的，所以Git也继承了开源社区的精神，不支持权限控制。不过，因为**Git支持钩子（hook）**，所以，可以在服务器端编写一系列脚本来控制提交等操作，达到权限控制的目的。**Gitolite**就是这个工具。\n这里我们也不介绍Gitolite了，不要把有限的生命浪费到权限斗争中。\n\n搭建服务器的同时采用Gitolite来管理权限，参考：\nhttps://my.oschina.net/u/2351685/blog/509322\n\nGitolite的使用，参考：http://www.uml.org.cn/pzgl/201404092.asp\n\n---\n# 参考资料：\n连猴子都会的git：\nhttp://backlogtool.com/git-guide/cn/\n\nPro Git：http://iissnan.com/progit/\n廖雪峰git：\n\nhttp://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000\n\n外国友人git手册:\nhttps://pan.baidu.com/s/1kU5OCOB#path=%252Fpub%252Fgit\n10个迅速提升你 Git 水平的提示:\nhttp://www.oschina.net/translate/10-tips-git-next-level\n\n\n---\n\n\n","source":"_posts/Dev/2016-11-04-Git教程.md","raw":"---\ntitle: Git教程\ncategories:\n  - Dev\ntags:\n  - Git教程\nabbrlink: 41310\ndate: 2016-11-04 14:03:40\n---\n\n# 安装Git\n## Debian/Ubuntu\n`apt-get install git`\n## Centos/RedHat\n`yum install git`\n## Windows\n安装包下载：https://git-for-windows.github.io/\n## Mac\n安装包下载：https://sourceforge.net/projects/git-osx-installer/\n\n`git --version`  　查看版本\n\n---\n\n# Git配置\n`ls -a`\t或 `ls -ah`\t方便查看隐藏文件\n执行`git config`命令就是调用此文件\n`/etc/gitconfig `       全部用户生效 --system调用的文件\n`～/.gitcinfig   `      当前用户有效 --global调用的文件\n`.git/config  `         当前项目的配置文件\n**.git/config**的配置会覆盖**/etc/gitconfig** 中的同名变量。\nwin中配置文件一般在主目录下的对应用户文件夹里**C:\\Documents and Settings\\$USER**\nwin中**/etc/gitconfig**是在安装目录中。\n\n## 用户信息配置\n```\ngit config --global user.name \"leolan\"  #leolan为用户名\ngit config --global user.email 842632422@qq.com   #邮箱\n(用了global选项后当前用户的所有项目默认使用此用户信息，某一项目若使用其它的用户信息。把--global去掉重新配置，会在该项目.git/config中重新生成配置就行了。)\n以下可选：\ngit config --global color.ui true    #让Git显示颜色，会让命令输出看起来更醒目\ngit config --global core.editor emace   #指定emace为默认编辑器，不指定默认为vim\ngit config --global merge.tool vimdiff  #差异化分析工具（冲突合并），git可以理解kdiff3 ,tkdiff,meld,xxdiff,emerge,vimdiff,gvimdiff,ecmerge,opendiff等工具的输出信息。\n\ngit config user.name   #查看配置的用户名，改为user.email则为邮箱。\ngit config --list      #查看已配置的用户信息```\n\n---\n\n# 基本使用方法\n**一般进入某项目的目录后再执行以下命令。**\n```\ngit init\t        #设置当前目录为Git仓库\ngit init 目录名 \t        #指定目录为Git仓库\n\ngit clone ［源］\t\t#从源拷贝项目到本地的当前目录\ngit clone ［源］［目录］\t#指定源下载到某个目录\n例：git clone git://github.com/schacon/grit.git mygrit\n\ngit status\t\t#查看当前目录文件的状态，加 -s 显示简短信息。\"A\"是已添加到缓存、\"M\"为文件有改动、\"空格\"为未缓存的文件，组合显示如：\"AM\"代表已缓存的文件有改动，\"空格M\"代表未缓存的文件有改动。\ngit add 文件名   #添加文件到项目缓存中，没有添加的文件不属于项目文件，也不会痛不到服务器。\ngit add .  \t\t#添加当前目录到项目缓存中，如果添加多个文件，此命令更方便。\ngit commit -m \"项目的版本或简短说明\"\t#可以指定版本号及简单说明改动了哪些内容，同时会把所有改动同步到服务器上。\ngit commit -am \"项目的版本或简短说明\"\t#改动了多个文件又不想一个个添加，此命令自动添加所有改动的文件并同步到服务器。```\n\nGit的所有工作都是现在本地缓存的，只有执行**git commit -m \"简短说明\"** 后才会向服务器提交。\n```\ngit diff\t        #未缓存的改动\ngit diff --cached\t#已缓存的改动\ngit diff HEAD\t\t#已缓存和未缓存的所有改动\ngit diff --stat\t\t#显示摘要而非整个diff\ngit reset -- HEAD 文件\t#取消文件已缓存的内容，--很重要，没有加--表示切换到另一个分支。\ngit rm 文件\t\t#从项目中及本地删除文件,可不用执行。\ngit mv 文件\t\t#从项目中及本地重命名文件,可不用执行。```\n\n---\n# 创建远程仓库\n在继续阅读后续内容前，请自行注册GitHub账号。由于你的本地Git仓库和GitHub仓库之间的传输是通过SSH加密的，所以，需要一点设置：\n\n* **第1步**：创建SSH Key。在用户主目录下，看看有没有.ssh目录，如果有，再看看这个目录下有没有id_rsa和id_rsa.pub这两个文件，如果已经有了，可直接跳到下一步。如果没有，打开Shell（Windows下打开Git Bash），创建SSH Key：`ssh-keygen -t rsa -C \"842632422@qq.com\"`你需要把邮件地址换成你自己的邮件地址，然后一路回车，使用默认值即可，由于这个Key也不是用于军事目的，所以也无需设置密码。\n\n如果一切顺利的话，可以在用户主目录里找到.ssh目录，里面有id_rsa和id_rsa.pub两个文件，这两个就是SSH Key的秘钥对，**id_rsa是私钥，不能泄露出去，id_rsa.pub是公钥**，可以放心地告诉任何人。\n\n* **第2步**：登陆GitHub，打开“Account settings”，“SSH Keys”页面：\n然后，点“Add SSH Key”，填上任意Title，在Key文本框里粘贴id_rsa.pub（公钥）文件的内容：\n\n点“Add Key”，你就应该看到已经添加的Key：\n![](http://ofyfogrgx.bkt.clouddn.com//blog/git%E6%95%99%E7%A8%8B001.png)\n![](http://ofyfogrgx.bkt.clouddn.com//blog/git%E6%95%99%E7%A8%8B002.png)\n\n为什么GitHub需要SSH Key呢？因为GitHub需要识别出你推送的提交确实是你推送的，而不是别人冒充的，而Git支持SSH协议，所以，GitHub只要知道了你的公钥，就可以确认只有你自己才能推送。\n当然，GitHub允许你添加多个Key。假定你有若干电脑，你一会儿在公司提交，一会儿在家里提交，只要把每台电脑的Key都添加到GitHub，就可以在每台电脑上往GitHub推送了。\n最后友情提示，在GitHub上免费托管的Git仓库，任何人都可以看到喔（但只有你自己才能改）。所以，不要把敏感信息放进去。\n`ssh -T git@github.com\n提示：Hi MyLeoLan! You've successfully authenticated, but GitHub does not provide shell access.　　则成功添加sshkey\n\n在右上角找到“Create a new repo”按钮，创建一个新的仓库：\n![](http://ofyfogrgx.bkt.clouddn.com//blog/git%E6%95%99%E7%A8%8B003.png)\n目前，在GitHub上的这个仓库还是空的，会提示你创建README.md文件。\n\n可以从这个仓库克隆出新的仓库（克隆到本地），也可以把一个已有的本地仓库与之关联，然后，把本地仓库的内容推送到GitHub仓库（本地的项目或下载了别人的项目想要推送到自己的仓库，和**fork**的方式不同，这种方式要删除隐藏的**.git文件夹**因为**.git文件夹**包含了别人的库信息，你是推送不到自己的库上去的，删掉之后添加的才是自己的信息）。\n\n---\n# 从远程库克隆仓库\n远程库已经准备好了，下一步是用命令git clone克隆一个本地库：\n`git clone git@github.com:MyLeoLan/testgit.git`\n实际上，Git支持多种协议，默认的git://使用ssh，但也可以使用https等其他协议。\n使用https除了速度慢以外，还有个最大的麻烦是**每次推送都必须输入口令**，但是在某些只开放http端口的公司内部就无法使用ssh协议而只能用https。\n\n# 本地仓库推送到远程仓库\n把本地仓库的内容推送到远程（GitHub）仓库。在本地的XXX仓库下运行命令：\n\n`git remote add origin git@github.com:myleolan/learngit.git`\n表示把本地的XXX仓库与远程learngit.git库绑定**(添加远程库)**，以后推送都推送到这个库中。地址换成自己的库地址。你的SSH Key公钥不在我的账户列表中是推不上去的。\n\n关联后，使用命令`git push -u origin master`完成第一次推送master分支的所有内容（一般远程的master分支会自动命名为origin用于区分，而本地的master还是master分支，**-u**会关联分支，下次推送默认推送到此分支。）\n\n推送时**git push origin XXXX** （xxxx可以指定本地某分支推送到远程的origin分支）此后，每次本地提交后，只要有必要，就可以使用命令`git push origin master`推送最新修改；简化命令为：`git pull`(从远程仓库提取数据并尝试合并到当前分支)和`git push`\n\n从远程库下载分支和数据的更新到当前项目（不会合并，pull等同于fetch+merge）：`git fetch origin`\n\n查看当前项目的远程库：\n```\ngit remote 或 git remote -v\n\norigin  git@github.com:myleolan/learngit.git (fetch)\norigin  git@github.com:myleolan/learngit.git (push)```\n上面显示了可以抓取和推送的origin的地址。如果没有推送权限，就看不到push的地址。\n\n删除远程仓库：`git remote rm ［别名或仓库名］`\n\n* pull：本地 <-- 远程   (如果你本地落后远程，必然要pull)\n* push：本地 --> 远程  (如果你本地超前远程，必然要push)\n\n本质上都是同步commit\n\n分布式版本系统的最大好处之一是在本地工作完全不需要考虑远程库的存在，也就是有没有联网都可以正常工作，而SVN在没有联网的时候是拒绝干活的！当有网络的时候，再把本地提交推送一下就完成了同步！\n\n---\n# 管理修改\n第一次修改 -> **git add**（放入暂存区）-> 第二次修改 ->**git commit**（提交暂存区，准备推送到远程）\n\nGit管理的是修改，当你用git add命令后，在工作区的第一次修改被放入暂存区，准备提交，但是，在**工作区的第二次修改并没有放入暂存区**，所以，git commit**只负责把暂存区的修改提交了**，也就是第一次的修改被提交了，第二次的修改不会被提交。\n\n提交后，用`git diff HEAD`命令可以查看工作区和版本库里面最新版本的区别。\n\n怎么提交第二次修改呢？你可以继续git add再git commit，也可以别着急提交第一次修改，先git add第二次修改，再git commit，就相当于把两次修改合并后一块提交了：\n\n**第一次修改 -> git add -> 第二次修改 -> git add -> git commit**\n好啦，把第二次修改提交了。\n\n---\n# 删除文件\n一般情况下，你通常直接在文件管理器中把没用的文件删了，或者用**rm**命令删了,此时文件删除了但版本库里还有记录，文件可能恢复不了。这个时候，Git知道你删除了文件，因此，工作区和版本库就不一致了，`git status`命令会提示你哪些文件被删除了。\n\n要从版本库中删除该文件，那就用命令`git rm`删掉，并且`git commit` （git rm会同时删除版本库及文件）\n\n另一种情况是删错了，因为版本库里还有呢，所以可以很轻松地把误删的文件恢复到最新版本：`git checkout -- filename`\n\ngit checkout其实是用版本库里的版本替换工作区的版本，无论工作区是修改还是删除，都可以“一键还原”。\n\n**提交代码分两步**:\n\n* 1.从工作目录，提交到stage。\n\n从工作目录提交到stage，需要用add或者rm命令，只提交到stage，而没有提交到master，是不会自动同步到master的。\n\n* 2.从stage提交到master。\n\n从stage提交到master用commit命令。\n\n**工作区**\\-->\\--*add,rm*\\-->\\--**stage**\\-->\\--*commit*\\-->\\--**master**\n\n**退回也是要分两步**:\n\n* 1.从master退回到stage\n对于还没有提交到stage的，可以从stage用checkout命令退回，这一步会取stage中的文件状态，覆盖掉工作目录中文件的状态，跟master完全没关系。\n\n* 2.从stage退回到工作目录\n\n对于已经到达stage的，想把state中的文件状态用master中的覆盖掉，就用reset命令，这样就把stage中修改用master的状态覆盖掉了，完全跟工作目录没关系\n\n**工作区**\\--<\\--*checkout*\\--<\\--**stage**\\--<\\--*reset*\\--<\\--**master**\n\n要删除某些文件，不能简单用rm删除，远程仓库依然会保留文件（因为它不知道你什么时候就进行版本回退了，需要用到那些文件），要彻底删除，本地`git rm filename`命令删除文件再**git push**上去，或者进入github管理界面手动一个一个删除文件。\n\n---\n# 版本回退\n```\ngit status \t   #查看当前状态\ngit diff      \t   #查看做了哪些修改\ngit add file  \t   #添加到缓存\ngit commit -m \"xxx\"#提交到本地版本库\ngit log\t\t   #可查看所有的历史版本，信息太多加--pretty=oneline参数简化```\n\n首先，Git必须知道当前版本是哪个版本，在Git中，用**HEAD表示当前版本**，也就是最新的提交过commit的这个版本，**HEAD^**是上一个版本，上上一个版本就是**HEAD^^**，当然往上100个版本写100个**^**比较容易数不过来，所以写成**HEAD~100**。\n\n此节实验当我没有保存下来，所以引用廖雪峰老师的数据，实验是通过修改readme.txt文件进行的，假设我们要把当前版本“append GPL”回退到上一个版本“add distributed”，就可以使用git reset命令：`git reset --hard HEAD^ ` (退回上一个版本)\n\n`cat readme.txt`看看readme.txt的内容是不是版本add distributed：\n\nGit is a distributed version control system.\nGit is free software.\n\n果然,还可以继续回退到上一个版本wrote a readme file，不过且慢，我们用`git log`再看看现在版本库的状态：\n```\ncommit ea34578d5496d7dd233c827ed32a8cd576c5ee85\nAuthor: Michael Liao <askxuefeng@gmail.com>\nDate:   Tue Aug 20 14:53:12 2013 +0800\n\n    add distributed\n\ncommit cb926e7ea50ad11b8f9e909c05226233bf755030\nAuthor: Michael Liao <askxuefeng@gmail.com>\nDate:   Mon Aug 19 17:51:55 2013 +0800\n\n    wrote a readme file```\n\n最新的那个版本append GPL已经看不到了！好比你从21世纪坐时光穿梭机来到了19世纪，想再回去已经回不去了，肿么办？只要上面的命令行窗口还没有被关掉，你就可以顺着往上找啊找啊，找到那个append GPL的**commit id**是3628164...，于是就可以指定回到未来的某个版本：\n`git reset --hard 3628164`     (退回指定版本）。\n\n如果已经关掉了命令行，找不到新版本的commit id怎么办？Git提供了一个命令`git reflog`用来**记录你的每一次命令(历史命令，类似日志)**，其中就包含了commit id：\n```\ngit reflog      查询历史版本号\nea34578 HEAD@{0}: reset: moving to HEAD^\n3628164 HEAD@{1}: commit: append GPL\nea34578 HEAD@{2}: commit: add distributed\ncb926e7 HEAD@{3}: commit (initial): wrote a readme file```\n第二行显示append GPL的commit id是3628164，现在，你又可以乘坐时光机回到未来了。\n\n版本号没必要写全，前几位就可以了，Git会自动去找。当然也不能只写前一两位,一般7-8位就行了，因为Git可能会找到多个版本号，就无法确定是哪一个了。\nGit的版本回退速度非常快，因为Git在内部有个指向当前版本的HEAD指针，当你回退版本的时候，Git仅仅是把HEAD从指向append GPL：\n![](http://ofyfogrgx.bkt.clouddn.com//blog/git%E6%95%99%E7%A8%8B004.png)\n\n改为指向add distributed：\n\n![](http://ofyfogrgx.bkt.clouddn.com//blog/git%E6%95%99%E7%A8%8B005.png)\n\n然后顺便把工作区的文件更新了。所以你让**HEAD**指向哪个版本号，你就把当前版本定位在哪。\n\n---\n# 撤销修改\n当发现某部分代码需要撤销时`git checkout -- filename`可以丢弃工作区的修改：**git checkout \\-- readme.txt**（把readme.txt文件在工作区的修改全部撤销）\n\n这里有两种情况：\n\n* 1.**readme.txt自修改后还没有被放到暂存区**，现在，撤销修改就回到和版本库一模一样的状态；\n\n命令中的**\\--**很重要，没有**\\--**，就变成了“**切换到另一个分支**”的命令，我们在后面的分支管理中会再次遇到git checkout命令。\n\n* 2.**readme.txt已经添加到暂存区后，又作了修改**，现在，撤销修改就回到添加到暂存区后的状态。\n总之，就是让这个文件回到最近一次**git commit**或**git add**时的状态。\n\n现在假定是凌晨3点，你不但写了一些胡话，还**git add到暂存区**了,庆幸的是，在**commit**之前，你发现了这个问题。用`git status`查看一下，修改只是添加到了暂存区，还没有提交。用命令`git reset HEAD file`(可以把暂存区的修改撤销掉（unstage），不带file则撤销所有文件的更改，重新放回工作区，此时就相当于**没有git add**的状态，但文件是改动过的）\n\n`git reset`命令**既可以回退版本，也可以把暂存区的修改回退到工作区。**当我们用HEAD时，表示最新的版本。再用`git status`查看一下，现在暂存区是干净的，工作区有修改。\n丢弃工作区的修改：`git checkout -- readme.txt` 可直接恢复文件并恢复版本库的内容（丢弃所有未git add的内容，回到最近一个最新版本）\n注意：要完全撤回修改的代码，要`git reset HEAD file `后执行`git checkout -- file `才会完全包括工作区的内容也删除。\n\n\n现在，假设你不但改错了东西，还把暂存区提交到了版本库（执行了git commit），怎么办呢？还可以版本回退到上一个版本。如果**还没有把自己的本地版本库推送到远程**，可以用：`git reset --hard HEAD` 恢复到当前版本（改动了但没有commit的那个版本，如果进行了commit，此次commit就是一个新版本，只能通过`git reset --hard HEAD^`回到上一个commit）。如果**已经提交到了远程**，只能通过`git reset --hard HEAD^`版本回退了。\n\n---\n# 标签管理\n发布一个版本时，我们通常先在版本库中打一个标签（tag），这样，就唯一确定了打标签时刻的版本。将来无论什么时候，取某个标签的版本，就是把那个打标签的时刻的历史版本取出来。所以，标签也是版本库的一个快照。\nGit的标签虽然是版本库的快照，但其实它就是指向某个commit的指针（跟分支很像对不对？但是分支可以移动，标签不能移动），所以，创建和删除标签都是瞬间完成的。\n\n**Git有commit，为什么还要引入tag？**\n\n“请把上周一的那个版本打包发布，commit号是6a5819e...” ;“一串乱七八糟的数字不好找！”\n\n如果换一个办法：\n\n“请把上周一的那个版本打包发布，版本号是v1.2”  ;“按照tag v1.2查找commit就行！”\ntag就是一个让人容易记住的有意义的名字，它跟某个commit绑在一起。\n\n## 创建标签\n在Git中打标签非常简单，首先，切换到需要打标签的分支上：\n```\ngit branch    #查看有哪些分支\ngit checkout master  #切换到要打标签的分支上\n```\n然后，敲命令`git tag <name>`就可以在**当前分支的最新已提交的状态**(HEAD)打一个新标签：**git tag v1.0**\n\n默认标签是打在最新提交的commit上的。有时候，如果忘了打标签，比如，现在已经是周五了，但应该在周一打的标签没有打，怎么办？\n\n方法是找到历史提交的**commit id**，然后打上就可以了：\n```\ngit log --pretty=oneline --abbrev-commit\n\n6a5819e merged bug fix 101\ncc17032 fix bug 101\n7825a50 merge with no-ff\n6224937 add merge\n59bc1cb conflict fixed\n400b400 & simple\n75a857c AND simple\nfec145a branch test\nd17efd8 remove test.txt\n...```\n\n比方说要对**add merge**这次提交打标签，它对应的**commit id**是6224937，敲入命令：\n`git tag v0.9 6224937`\n\n还可以创建带有说明的标签，用**-a**指定标签名，**-m**指定说明文字：\n`git tag -a v0.1 -m \"version 0.1 released\" 3628164`\n\n查看所有标签：`git tag`\n\n注意，标签不是按时间顺序列出，而是按字母排序的。可以用`git show <tagname>`查看标签详细信息。\n\n还可以通过**-s**用私钥签名一个标签：\n`git tag -s v0.2 -m \"signed version 0.2 released\" fec145a`(原来的-a换为-s)\n\n签名采用PGP签名，因此，必须首先安装gpg（**GnuPG**），如果没有找到gpg，或者没有gpg密钥对，就会报错：\n```\ngpg: signing failed: secret key not available\nerror: gpg failed to sign the data\nerror: unable to sign the tag```\n\n如果报错，请参考**GnuPG**帮助文档配置Key。如果签名不成功可以加**-u** 参数，详见：http://airk000.github.io/git/2013/09/30/git-tag-with-gpg-key\n\n`git show <tagname>`也可以看到PGP的签名信息：\n```\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.12 (Darwin)\n\niQEcBAABAgAGBQJSGpMhAAoJEPUxHyDAhBpT4QQIAKeHfR3bo...\n-----END PGP SIGNATURE-----```\n\n用PGP签名的标签是不可伪造的，因为可以验证PGP签名。验证签名的方法比较复杂，这里就不介绍了。\n\n## 操作标签\n`git tag -d <tagname>`可以删除一个本地标签。\n`git push origin <tagname>`可以推送一个本地标签到远程库。\n`git push origin --tags`可以推送全部未推送过的本地标签到远程库。\n\n删除时先删除本地对应的标签，再运行命令`git push origin :refs/tags/<tagname>`删除一个远程标签。\n  \n---\n# 分支\n\n\n创建分支可以在分支上工作而不影响master分支，当分支工作完成时再合并到master分支上。\n\n一般流程：\n\n* 1.先查看分支：`git branch`\n* 2.创建+切换分支：`git checkout -b <分支name>`等价于：`创建分支：git branch <分支name>`+`切换分支：git checkout <分支name>`\n* 3.查看当前分支：`git branch`\n* 4.在**新建分支上进行工作**，工作完成时。切换回主分支：`git checkout master`\n* 5.合并某分支到当前分支（当前已切换回master分支了）：`git merge <分支name>`\n* 6.删除无用分支：`git branch -d <分支name>`\n* 7.查看当前分支：`git branch`\n \n只剩master分支啦。\n\n想要深入了解，参考：\n\n[猴子Git](http://backlogtool.com/git-guide/cn/reference/branch.html#sec2)　　[Pro Git](http://iissnan.com/progit/html/zh/ch3_2.html)　　[廖雪峰Git](http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/001375840038939c291467cc7c747b1810aab2fb8863508000)\n\n## 分支策略\n在实际开发中，我们应该按照几个基本原则进行分支管理：\n\n　　首先，**master**分支应该是非常稳定的，也就是仅用来发布新版本，平时不能在上面干活；平时干活都在dev分支上，也就是说，dev分支是不稳定的，到某个时候，比如1.0版本发布时，再把dev分支合并到master上，在master分支发布1.0版本；你和你的小伙伴们每个人都在dev分支上干活，每个人都有自己的分支，时不时地往dev分支上合并就可以了。\n所以，团队合作的分支看起来就像这样：\n![](http://ofyfogrgx.bkt.clouddn.com//blog/git%E6%95%99%E7%A8%8B006.png)\nGit分支十分强大，在团队开发中应该充分应用。合并分支时，加上**\\--no-ff**参数就可以用普通模式合并，合并后的历史有分支，能看出来曾经做过合并，而**fast forward**合并就看不出来曾经做过合并。\n\n## 分支管理策略\n合并分支时，如果可能，Git会用**Fast forward**模式，但这种模式下，删除分支后，会丢掉分支信息。如果要强制禁用**Fast forward**模式(加参数\\--no-ff)，Git就会在**merge**时生成一个新的commit，这样，从分支历史上就可以看出分支信息。\n\n下面来测试一下**\\--no-ff**方式的**git merge**：\n\n创建分支、修改文件，提交缓存，切换回master分支，准备合并dev分支，因为本次合并要创建一个新的commit，所以加上**-m**参数，把commit描述写进去。\n`git merge --no-ff -m \"merge with no-ff\" dev`\n\n用**git log**看看分支历史：\n```\ngit log --graph --pretty=oneline --abbrev-commit\n\n*   7825a50 merge with no-ff\n|\\\n| * 6224937 add merge\n|/\n*   59bc1cb conflict fixed\n...```\n\n## 冲突解决\n当合并出现冲突时，一般要手动解决。\n直接查看master分支的readme.txt（冲突文件）的内容并修改：\n```\nGit is a distributed version control system.\nGit is free software distributed under the GPL.\nGit has a mutable index called stage.\nGit tracks changes of files.\n<<<<<<< HEAD\nCreating a new branch is quick & simple.\n=======\nCreating a new branch is quick AND simple.\n>>>>>>> feature1```\n修改完毕，再次提交即可。\n\n**Git用<<<<<<<，=======，>>>>>>>标记出不同分支的内容。**\n\n用带参数的git log也可以看到分支的合并情况：`git log --graph --pretty=oneline --abbrev-commit`\n用git log --graph命令可以看到分支合并图。\n\n详见：[廖雪峰Git解决冲突](http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/001375840202368c74be33fbd884e71b570f2cc3c0d1dcf000)\n\n## 错误解决\n*  1.error: src refspec master does not match any.\n答：目录中没有文件，空目录是不能提交上去的 执行:`git commit -m “xxx”`\n\n*  2.error: insufficient permission for adding an object to repository database ./objects   \n答：服务端没有可写目录的权限［可能不是你的库，或sshkey不对］\n\n*  3.error：fatal: remote origin already exists.\n答：`git remote rm origin`\n\n*  4.error: failed to push som refs to ........\n解决办法：`git pull origin master`  \n答：先pull 下来 再push上去。\n\n*  5.error: failed to push some refs to 'git@github.com:myleolan/learnpython.git'\nTo prevent you from losing history, non-fast-forward updates were rejected\nMerge the remote changes before pushing again.  See the 'Note about\nfast-forwards' section of 'git push --help' for details.\n答：是因为远程用web创建的的库和本地不一样。`git pull origin master` (先pull 下来 再push 上去)\n\n*  6.git push时报错：The requested URL returned error: 403 Forbidden while accessing\n答：`vim /.git/config`\n把[remote \"origin\"]项中https://github.com 改为https://myleolan@github.com\n就是加上**用户名@**之后再次执行git push 输入密码即可，一般用git协议不会报此错误，地址改为git@github.com:myleolan/XXXX.git\n\n\n---\n# Bug分支\n\n当你接到一个修复一个代号101的bug的任务时，很自然地，你想创建一个分支issue-101来修复它，但是，等等，当前正在dev上进行的工作还没有提交；并不是你不想提交，而是工作只进行到一半，还没法提交，预计完成还需1天时间。但是，必须在两个小时内修复该bug，怎么办？\n\nGit还提供了一个**stash**功能，可以把当前工作现场“**储藏**”起来，等以后恢复现场后继续工作：`git stash`现在，用**git status**查看工作区，就是干净的（除非有没有被Git管理的文件），因此可以放心地创建分支来修复bug。\n\n## 修复Bug一般流程\n首先确定要在哪个分支上修复bug，假定需要在master分支上修复，就从master创建临时分支并切换分支：\n```\ngit checkout master\ngit checkout -b issue-101   #创建并切换分支```\n\n现在修复bug，需要把“Git is free software ...”改为“Git is a free software ...”，然后提交：\n```\ngit add readme.txt \ngit commit -m \"fix bug 101\"```\n\n修复完成后，**切换到master分支，并完成分支合并**，最后**删除issue-101分支**：\n ```\n git checkout master\n git merge --no-ff -m \"merged bug fix 101\" issue-101  #合并分支\n git branch -d issue-101  #删除分支```\nbug修复了，现在，可以接着回到dev分支干活了！\n```\ngit checkout dev\ngit status   #此时可以看到工作区是干净的\ngit stash list  #查看已储藏的工作现场\n\nstash@{0}: WIP on dev: 6224937 add merge```\n\n工作现场还在，Git把**stash**内容存在某个地方了，需要恢复，有两个办法：\n\n* 1.用`git stash apply`恢复，但是恢复后，**stash**内容并不删除，你需要用`git stash drop`来删除(stash只是临时封存区，建议删除)。\n* 2.用`git stash pop`恢复的同时把**stash**内容也删了。\n \n 执行`git stash pop`恢复，再用`git stash list`查看，就看不到任何stash内容了\n**可以多次stash**，恢复的时候，先用`git stash list`查看，然后**恢复指定的stash**，用命令：`git stash apply stash@{0}`  (**stash@{0}**是封存的标识)\n\n---\n\n# Feature分支\n软件开发中，总有无穷无尽的新的功能要不断添加进来。添加一个新功能时，不希望因为一些实验性质的代码，把主分支搞乱了，所以，每添加一个新功能，最好新建一个**feature**分支，在上面**开发，完成后，合并，最后，删除该feature分支**。\n```\n#当前在工作分支dev上。\ngit checkout -b feature-vulcan(name)  #创建并切换到该分支\n#修改代码完成之后\ngit add vulcan.py\ngit status\ngit commit -m \"add feature vulcan\"\ngit checkout dev   #切回dev，准备合并\n#一切顺利的话，feature分支和bug分支是类似的，合并，然后删除。\n执行以下两句就可以完成任务了：\ngit merge --no-ff -m \"merged feature-vulcan\" feature-vulcan #合并分支\ngit branch -d feature-vulcan   #删除分支```\n\n但是，就在此时，接到上级命令，因经费不足，新功能**必须取消**！虽然白干了，但是这个分支还是必须**就地销毁**：\n```\ngit branch -d feature-vulcan\n\nerror: The branch 'feature-vulcan' is not fully merged.\nIf you are sure you want to delete it, run 'git branch -D feature-vulcan'.```\nGit提示销毁失败：feature-vulcan分支还没有被合并，如果删除，将丢失掉修改，如果要强行删除，需要使用命令`git branch -D feature-vulcan`\n\n现在我们强行删除：`git branch -D feature-vulcan`　OK，现在我们切换回dev分支继续工作。\n\n---\n\n# 自定义Git配置(高级)\n我们已经配置了**user.name**和**user.email**，实际上，Git还有很多可配置项。\n\n## 忽略特殊文件\n有些时候，你必须把某些文件放到Git工作目录中，但又不能提交它们，比如保存了**数据库密码的配置文件**啦，等等，每次**git status**都会显示**Untracked files ...**，有强迫症的童鞋心里肯定不爽。好在Git考虑到了大家的感受，这个问题解决起来也很简单，在Git工作区的根目录下创建一个特殊的**.gitignore**文件，然后把要忽略的文件名填进去，Git就会自动忽略这些文件。\n\n不需要从头写**.gitignore**文件，GitHub已经为我们准备了各种配置文件，只需要组合一下就可以使用了。所有配置文件可以直接在线浏览：**https://github.com/github/gitignore**   已经配置好了要忽略的文件，下载回来要文件名要改为**.gitignore**放在项目根目录下。\n\n**忽略文件的原则是：**\n\n  1. 忽略操作系统自动生成的文件，比如缩略图等；\n  2. 忽略编译生成的中间文件、可执行文件等，也就是如果一个文件是通过另一个文件自动生成的，那自动生成的文件就没必要放进版本库，比如Java编译产生的.class文件；\n  3. 忽略你自己的带有敏感信息的配置文件，比如存放口令的配置文件。\n\n举个例子：\n\n假设你在Windows下进行Python开发，Windows会自动在有图片的目录下生成隐藏的缩略图文件，如果有自定义目录，目录下就会有Desktop.ini文件，因此你需要忽略Windows自动生成的垃圾文件；然后，继续忽略Python编译产生的.pyc、.pyo、dist等文件或目录(**忽略文件夹在文件夹名后加/**)\n\n加上你自己定义的文件，最终得到一个完整的.gitignore文件，内容如下：\n```\n# Windows:\nThumbs.db\nehthumbs.db\nDesktop.ini\n\n# Python:\n*.py[cod]\n*.so\n*.egg\n*.egg-info\ndist\nbuild\n\n# My configurations:\ndb.ini\ndeploy_key_rsa\n新建文件夹/```\n\n最后一步就是把.gitignore也提交到Git，就完成了！当然**检验.gitignore**是否生效的标准是**git status**命令是不是说working directory clean。\n\n使用Windows的童鞋注意了，如果你在资源管理器里新建一个**.gitignore**文件，它会非常弱智地提示你必须输入文件名，在第三方文本编辑器里“保存”或者“另存为”就可以把文件保存为.gitignore了。\n\n有些时候，你想添加一个文件到Git，但发现添加不了，原因是这个文件被.gitignore忽略了：\n```\ngit add App.class\n\nThe following paths are ignored by one of your .gitignore files:\nApp.class\nUse -f if you really want to add them.```\n如果你确实想添加该文件，可以用**-f**强制添加到Git：`git add -f App.class`\n\n或者你发现，可能是.gitignore写得有问题，需要找出来到底哪个规则写错了，可以用`git check-ignore`命令检查：\n```\ngit check-ignore -v App.class\n.gitignore:3:*.class    App.class```\nGit会告诉我们，.gitignore的第3行规则忽略了该文件，于是我们就可以知道应该修订哪个规则。\n\n## 配置命令别名\n有没有经常敲错命令？比如git status？status这个单词真心不好记。如果敲**git st**就表示**git status**那就简单多了。\n```\ngit config --global alias.st status   #st表示status\ngit config --global alias.co checkout #co表示checkout\ngit config --global alias.ci commit   #ci表示commit\ngit config --global alias.br branch   #br表示branch```\n\n## \\--global参数是全局参数，这些命令在这台电脑的所有Git仓库下都有用。\n在\"**撤销修改**\"一节中，我们知道，命令`git reset HEAD file`可以把暂存区的修改撤销掉（unstage），重新放回工作区。既然是一个**unstage操作**，就可以配置一个unstage别名：\n`git config --global alias.unstage 'reset HEAD'`\n\n当你敲入命令：`git unstage test.py`实际上Git执行的是：`git reset HEAD test.py`\n\n配置一个**git last**，让其显示最后一次提交信息：`git config --global alias.last 'log -3' ` (数字代表最近的几次提交);这样，用`git last`就能显示最近3次的提交：\n\n甚至还有人丧心病狂地把lg配置成了：\n```\ngit config --global alias.lg \"log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit\"```\n\n来看看git lg的效果：\n![](http://ofyfogrgx.bkt.clouddn.com//blog/git%E6%95%99%E7%A8%8B008.png)\n\n## 关于配置文件\n配置Git的时候，加上**\\--global**是针对当前用户起作用的，如果不加，那只针对当前的仓库起作用。\n\n* 每个仓库（每个项目）独立的Git配置文件都放在**.git/config**文件中：\n```\ncat .git/config \n[core]\n    repositoryformatversion = 0\n    filemode = true\n    bare = false\n    logallrefupdates = true\n    ignorecase = true\n    precomposeunicode = true\n[remote \"origin\"]\n    url = git@github.com:myleolan/learngit.git\n    fetch = +refs/heads/*:refs/remotes/origin/*\n[branch \"master\"]\n    remote = origin\n    merge = refs/heads/master\n[alias]     #命令别名，要删除别名，直接删掉对应的行即可。\n    last = log -1```\n\n* 当前用户的Git配置文件放在用户主目录下的一个隐藏文件.gitconfig中：\n```\ncat .gitconfig\n[alias]\n    co = checkout\n    ci = commit\n    br = branch\n    st = status\n[user]\n    name = Your Name\n    email = your@email.com```\n\n配置别名也可以直接修改这个文件，如果改错了，可以删掉文件重新通过命令配置(参考第2节 “Git配置”)。\n\n---\n\n# 团队协作\n## 抓取分支\n多人协作时，大家都会往master和dev分支上推送各自的修改。现在，模拟一个你的小伙伴，可以在另一台电脑（注意要把SSH Key添加到GitHub）或者同一台电脑的另一个目录下克隆：\n`git clone git@github.com:myleolan/learngit.git`\n\n当你的小伙伴从远程库clone时，默认情况下，你的小伙伴只能看到本地的**master**分支。可以用**git branch**命令看看；现在，你的小伙伴要在dev分支上开发，就必须**创建远程origin的dev分支到本地**，于是他用命令创建本地dev分支：`git checkout -b dev origin/dev`　(在origin上创建dev，-b切换到dev分支;如果本地已经有dev分支了，直接切换就好)\n\n现在，他就可以在dev上继续修改，然后，时不时地把dev分支push到远程：\n`git commit -m \"add /usr/bin/env\"`\n\n本地已经有dev分支了就不用创建了，直接执行下面的命令会自动在远程服务器新建dev分支。\n`git push origin dev`　(把本地dev推到远程origin上，会自动寻找origin的dev分支)\n\n你的小伙伴已经向**origin/dev**分支推送了他的提交，而碰巧你也对同样的文件作了修改，并试图推送：\n```\ngit add hello.py\ngit commit -m \"add coding: utf-8\"\ngit push origin dev\n\nTo git@github.com:myleolan/learngit.git\n ! [rejected]        dev -> dev (non-fast-forward)\nerror: failed to push some refs to 'git@github.com:myleolan/learngit.git'\nhint: Updates were rejected because the tip of your current branch is behind\nhint: its remote counterpart. Merge the remote changes (e.g. 'git pull')\nhint: before pushing again.\nhint: See the 'Note about fast-forwards' in 'git push --help' for details.```\n\n推送失败，因为你的小伙伴的最新提交和你试图推送的提交有冲突，解决办法也很简单，Git已经提示我们，先用**git pull**把最新的提交从**origin/dev**抓下来，然后，在本地合并，解决冲突，再推送：\n```\ngit pull\n\nremote: Counting objects: 5, done.\nremote: Compressing objects: 100% (2/2), done.\nremote: Total 3 (delta 0), reused 3 (delta 0)\nUnpacking objects: 100% (3/3), done.\nFrom github.com:myleolan/learngit\n   fc38031..291bea8  dev        -> origin/dev\nThere is no tracking information for the current branch.\nPlease specify which branch you want to merge with.\nSee git-pull(1) for details\n    git pull <remote> <branch>\nIf you wish to set tracking information for this branch you can do so with:\n    git branch --set-upstream dev origin/<branch>```\n\ngit pull也失败了，原因是没有指定**本地dev分支**与远程**origin/dev**分支的链接，根据提示，设置dev和origin/dev的链接(绑定这两个分支)：\n```\ngit branch --set-upstream dev origin/dev \n如果git pull还是失败，说明绑定不了。\n试试官方更改的命令：git branch --set-upstream-to=origin/dev dev```\n`git pull -f origin master`　强制覆盖也行，但很危险。\n\n再次**git pull**成功，但是合并有冲突，需要手动解决，解决的方法和第12节“解决冲突”完全一样。解决后，提交，再push：\n```\ngit commit -m \"merge & fix hello.py\"\ngit push origin dev```\n\n**多人协作的工作模式通常是这样：**\n  1. 首先，可以试图用`git push origin branch-name`推送自己的修改；\n  2. 如果推送失败，则因为远程分支比你的本地更新，需要先用git pull试图合并；\n  3. 如果合并有冲突，则解决冲突，并在本地提交；\n  4. 没有冲突或者解决掉冲突后，再用`git push origin branch-name`推送就能成功！\n如果**git pull**提示“**no tracking information**”，则说明本地分支和远程分支的链接关系没有创建，用命令:\n`git branch --set-upstream branch-name origin/branch-name`\n这就是多人协作的工作模式，一旦熟悉了，就非常简单。\n\n## F&Q\n签出远程分支，出现以下错误：\nfatal: Cannot update paths and switch to branch 'develop' at the same time.\n解决方法：\n先`git fetch`再`git checkout -b develop origin/develop`\n因为本地还没有\"develop\"分支信息，需要先fetch或者pull\n\n假设有人往服务器上推送了一个新的分支，但是我不知道分支的名称是什么，我如何能获取到服务器上的分支列表呢？\n      a. 你直接去问他\n      b. 如果用GitHub，直接去网站看\n      c. `git ls-remote --heads origin`\n\n## 推送分支\n推送分支，就是把该分支上的所有本地提交推送到远程库。推送时，要指定本地分支，这样，Git就会把该分支推送到远程库对应的远程分支上：`git push origin master`\n\n如果要推送其他分支，比如dev，就改成：`git push origin dev`\n\n但是，并不是一定要把本地分支往远程推送，那么，哪些分支需要推送，哪些不需要呢？\n  ● master分支是主分支，因此要时刻与远程同步；\n  ● dev分支是开发分支，团队所有成员都需要在上面工作，所以也需要与远程同步；\n  ● bug分支只用于在本地修复bug，就没必要推到远程了，除非老板要看看你每周到底修复了几个bug；\n  ● feature分支是否推到远程，取决于你是否和你的小伙伴合作在上面开发。\n总之，就是在Git中，分支完全可以在本地自己藏着玩，是否推送，视你的心情而定！\n\n---\n# 参与开源项目\n如何参与一个开源项目呢？比如人气极高的**bootstrap**项目，这是一个非常强大的CSS框架，你可以访问它的**[GitHub项目主页](https://github.com/twbs/bootstrap)**，点“**Fork**”就在自己的账号下克隆了一个bootstrap仓库，然后，从自己的账号下clone：`git clone git@github.com:**your_username**/bootstrap.git`\n\n一定要从自己的账号下clone仓库，这样你才能推送修改(在第4节 “创建远程仓库”中结尾就提到了另一种克隆方式)。如果从bootstrap的作者的仓库地址，采用`git clone git@github.com:twbs/bootstrap.git`的方式克隆，因为没有权限，你将不能推送修改（见第4节 “创建远程仓库”结尾处，**删除.git文件夹**的方法）。\n\n**Bootstrap**的官方仓库twbs/bootstrap、你在GitHub上克隆的仓库**your_username/bootstrap**，以及你自己克隆到本地电脑的仓库，他们的关系就像下图显示的那样：\n![](http://ofyfogrgx.bkt.clouddn.com//blog/git%E6%95%99%E7%A8%8B007.png)\n\n* 如果你想修复bootstrap的一个bug，或者新增一个功能，立刻就可以开始干活，干完后，往自己的仓库推送。\n* 如果**你希望bootstrap的官方库能接受你的修改**，你就可以在你的GitHub该项目页上发起一个**pull request**。当然，对方是否接受你的**pull request**就不一定了。\n\n---\n# 自己搭建Git服务器\nGitHub就是一个免费托管开源代码的远程仓库。但是对于某些视源代码如生命的商业公司来说，既不想公开源代码，又舍不得给GitHub交保护费，那就只能自己搭建一台Git服务器作为私有仓库使用。搭建Git服务器需要准备一台运行Linux的机器，强烈用Ubuntu、Debian或者Centos、redhat，这样，通过几条简单的apt命令就可以完成安装。\n**root登录**\n\n* 第一步，**安装git：**\n`sudo apt-get install git` 或 `yum install git`\n\n* 第二步，**创建一个git用户，用来运行git服务：**\n`sudo adduser git`\n\n\n* 第三步，**初始化Git仓库：**\n先选定一个目录作为Git仓库，假定是/data/git/learngit.git\n在/data/git/目录下输入命令：\n`sudo git init --bare learngit.git`\n\nGit就会创建一个裸仓库，裸仓库没有工作区，因为服务器上的Git仓库纯粹是为了共享，所以不让用户直接登录到服务器上去改工作区，并且服务器上的Git仓库通常都以.git结尾。\n`sudo chown -R git:git learngit.git`\n\nGit服务器就已经搭得差不多了。下面我们在客户端clone一下远程仓库\n`git clone git@IP:/data/git/learngit.git`\nCloning into 'learngit'...\nThe authenticity of host '192.168.8.34 (192.168.8.34)' can't be established.\nRSA key fingerprint is 2b:55:45:e7:4c:29:cc:05:33:78:03:bd:a8:cd:08:9d.\nAre you sure you want to continue connecting (yes/no)? yes\nWarning: Permanently added '192.168.8.34' (RSA) to the list of known hosts.\ngit@192.168.8.34's password:\n**能连接但要密码**，接着下一步。\n\n* 第四步，**创建证书登录（Git服务器打开RSA认证）**：然后就可以去Git服务器上添加你的公钥用来验证你的信息了。`vim /etc/ssh/sshd_config`中将RSA认证打开，即：\n```\nRSAAuthentication yes     \nPubkeyAuthentication yes     \nAuthorizedKeysFile  .ssh/authorized_keys```\n\n这里我们可以看到**公钥存放在.ssh/authorized_keys**文件中。所以我们在**/home/git下创建.ssh目录，然后创建authorized_keys文件**，收集所有需要登录的用户的公钥，就是他们自己的id_rsa.pub文件，把所有公钥导入到**/home/git/.ssh/authorized_keys文件里，一行一个。**\n此时再次连接已经可以免密钥登录啦。\n\n* 第五步，**禁用shell登录：**\n出于安全考虑，第二步创建的git用户不允许登录shell，这可以通过\n编辑/etc/passwd文件完成。找到类似下面的一行：\n`git:x:1001:1001:,,,:/home/git:/bin/bash`\n改为：\n`git:x:1001:1001:,,,:/home/git:/usr/bin/git-shell`\n\n这样，git用户可以正常通过ssh使用git，但无法登录shell，因为我们为git用户指定的git-shell每次一登录就自动退出。\n\n* 第六步，**克隆远程仓库：**\n现在，可以通过git clone命令克隆远程仓库了，在各自的电脑上运行：\n`git clone git@IP:/data/git/learngit.git`\nCloning into 'sample'...\nwarning: You appear to have cloned an empty repository.\n剩下的推送就简单了。\n\n**管理公钥**\n\n如果团队很小，把每个人的公钥收集起来放到服务器的/home/git/.ssh/authorized_keys文件里就是可行的。如果团队有几百号人，就没法这么玩了，这时，可以用**Gitosis**来管理公钥。\n这里我们不介绍怎么玩Gitosis了，几百号人的团队基本都在500强了，相信找个高水平的Linux管理员问题不大。管理公钥也可用**Gitolite**\n**管理权限**\n有很多不但视源代码如生命，而且视员工为窃贼的公司，会在版本控制系统里设置一套完善的权限控制，每个人是否有读写权限会精确到每个分支甚至每个目录下。因为Git是为Linux源代码托管而开发的，所以Git也继承了开源社区的精神，不支持权限控制。不过，因为**Git支持钩子（hook）**，所以，可以在服务器端编写一系列脚本来控制提交等操作，达到权限控制的目的。**Gitolite**就是这个工具。\n这里我们也不介绍Gitolite了，不要把有限的生命浪费到权限斗争中。\n\n搭建服务器的同时采用Gitolite来管理权限，参考：\nhttps://my.oschina.net/u/2351685/blog/509322\n\nGitolite的使用，参考：http://www.uml.org.cn/pzgl/201404092.asp\n\n---\n# 参考资料：\n连猴子都会的git：\nhttp://backlogtool.com/git-guide/cn/\n\nPro Git：http://iissnan.com/progit/\n廖雪峰git：\n\nhttp://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000\n\n外国友人git手册:\nhttps://pan.baidu.com/s/1kU5OCOB#path=%252Fpub%252Fgit\n10个迅速提升你 Git 水平的提示:\nhttp://www.oschina.net/translate/10-tips-git-next-level\n\n\n---\n\n\n","slug":"Dev-2016-11-04-Git教程","published":1,"updated":"2016-11-13T03:36:30.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civi8ouid00102c6nelu9yjrl","content":"<h1 id=\"安装Git\"><a href=\"#安装Git\" class=\"headerlink\" title=\"安装Git\"></a>安装Git</h1><h2 id=\"Debian-Ubuntu\"><a href=\"#Debian-Ubuntu\" class=\"headerlink\" title=\"Debian/Ubuntu\"></a>Debian/Ubuntu</h2><p><code>apt-get install git</code></p>\n<h2 id=\"Centos-RedHat\"><a href=\"#Centos-RedHat\" class=\"headerlink\" title=\"Centos/RedHat\"></a>Centos/RedHat</h2><p><code>yum install git</code></p>\n<h2 id=\"Windows\"><a href=\"#Windows\" class=\"headerlink\" title=\"Windows\"></a>Windows</h2><p>安装包下载：<a href=\"https://git-for-windows.github.io/\" target=\"_blank\" rel=\"external\">https://git-for-windows.github.io/</a></p>\n<h2 id=\"Mac\"><a href=\"#Mac\" class=\"headerlink\" title=\"Mac\"></a>Mac</h2><p>安装包下载：<a href=\"https://sourceforge.net/projects/git-osx-installer/\" target=\"_blank\" rel=\"external\">https://sourceforge.net/projects/git-osx-installer/</a></p>\n<p><code>git --version</code>  　查看版本</p>\n<hr>\n<h1 id=\"Git配置\"><a href=\"#Git配置\" class=\"headerlink\" title=\"Git配置\"></a>Git配置</h1><p><code>ls -a</code>    或 <code>ls -ah</code>    方便查看隐藏文件<br>执行<code>git config</code>命令就是调用此文件<br><code>/etc/gitconfig</code>       全部用户生效 –system调用的文件<br><code>～/.gitcinfig</code>      当前用户有效 –global调用的文件<br><code>.git/config</code>         当前项目的配置文件<br><strong>.git/config</strong>的配置会覆盖<strong>/etc/gitconfig</strong> 中的同名变量。<br>win中配置文件一般在主目录下的对应用户文件夹里<strong>C:\\Documents and Settings\\$USER</strong><br>win中<strong>/etc/gitconfig</strong>是在安装目录中。</p>\n<h2 id=\"用户信息配置\"><a href=\"#用户信息配置\" class=\"headerlink\" title=\"用户信息配置\"></a>用户信息配置</h2><figure class=\"highlight autoit\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">git config --<span class=\"keyword\">global</span> user.name <span class=\"string\">\"leolan\"</span>  <span class=\"meta\">#leolan为用户名</span></div><div class=\"line\">git config --<span class=\"keyword\">global</span> user.email <span class=\"number\">842632422</span><span class=\"symbol\">@qq</span>.com   <span class=\"meta\">#邮箱</span></div><div class=\"line\">(用了<span class=\"keyword\">global</span>选项后当前用户的所有项目默认使用此用户信息，某一项目若使用其它的用户信息。把--<span class=\"keyword\">global</span>去掉重新配置，会在该项目.git/config中重新生成配置就行了。)</div><div class=\"line\">以下可选：</div><div class=\"line\">git config --<span class=\"keyword\">global</span> color.ui <span class=\"literal\">true</span>    <span class=\"meta\">#让Git显示颜色，会让命令输出看起来更醒目</span></div><div class=\"line\">git config --<span class=\"keyword\">global</span> core.editor emace   <span class=\"meta\">#指定emace为默认编辑器，不指定默认为vim</span></div><div class=\"line\">git config --<span class=\"keyword\">global</span> merge.tool vimdiff  <span class=\"meta\">#差异化分析工具（冲突合并），git可以理解kdiff3 ,tkdiff,meld,xxdiff,emerge,vimdiff,gvimdiff,ecmerge,opendiff等工具的输出信息。</span></div><div class=\"line\"></div><div class=\"line\">git config user.name   <span class=\"meta\">#查看配置的用户名，改为user.email则为邮箱。</span></div><div class=\"line\">git config --list      <span class=\"meta\">#查看已配置的用户信息</span></div></pre></td></tr></table></figure>\n<hr>\n<h1 id=\"基本使用方法\"><a href=\"#基本使用方法\" class=\"headerlink\" title=\"基本使用方法\"></a>基本使用方法</h1><p><strong>一般进入某项目的目录后再执行以下命令。</strong><br><figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">git init\t        <span class=\"comment\">#设置当前目录为Git仓库</span></div><div class=\"line\">git init 目录名 \t        <span class=\"comment\">#指定目录为Git仓库</span></div><div class=\"line\"></div><div class=\"line\">git <span class=\"keyword\">clone</span> <span class=\"title\">［源］\t\t#从源拷贝项目到本地的当前目录</span></div><div class=\"line\">git <span class=\"keyword\">clone</span> <span class=\"title\">［源］［目录］\t#指定源下载到某个目录</span></div><div class=\"line\">例：git <span class=\"keyword\">clone</span> <span class=\"title\">git</span>://github.com/schacon/grit.git mygrit</div><div class=\"line\"></div><div class=\"line\">git status\t\t<span class=\"comment\">#查看当前目录文件的状态，加 -s 显示简短信息。\"A\"是已添加到缓存、\"M\"为文件有改动、\"空格\"为未缓存的文件，组合显示如：\"AM\"代表已缓存的文件有改动，\"空格M\"代表未缓存的文件有改动。</span></div><div class=\"line\">git add 文件名   <span class=\"comment\">#添加文件到项目缓存中，没有添加的文件不属于项目文件，也不会痛不到服务器。</span></div><div class=\"line\">git add .  \t\t<span class=\"comment\">#添加当前目录到项目缓存中，如果添加多个文件，此命令更方便。</span></div><div class=\"line\">git commit -m <span class=\"string\">\"项目的版本或简短说明\"</span>\t<span class=\"comment\">#可以指定版本号及简单说明改动了哪些内容，同时会把所有改动同步到服务器上。</span></div><div class=\"line\">git commit -am <span class=\"string\">\"项目的版本或简短说明\"</span>\t<span class=\"comment\">#改动了多个文件又不想一个个添加，此命令自动添加所有改动的文件并同步到服务器。</span></div></pre></td></tr></table></figure></p>\n<p>Git的所有工作都是现在本地缓存的，只有执行<strong>git commit -m “简短说明”</strong> 后才会向服务器提交。<br><figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">git <span class=\"keyword\">diff\t</span>        <span class=\"comment\">#未缓存的改动</span></div><div class=\"line\">git <span class=\"keyword\">diff </span>--<span class=\"keyword\">cached\t</span><span class=\"comment\">#已缓存的改动</span></div><div class=\"line\">git <span class=\"keyword\">diff </span>HEAD\t\t<span class=\"comment\">#已缓存和未缓存的所有改动</span></div><div class=\"line\">git <span class=\"keyword\">diff </span>--stat\t\t<span class=\"comment\">#显示摘要而非整个diff</span></div><div class=\"line\">git reset -- HEAD 文件\t<span class=\"comment\">#取消文件已缓存的内容，--很重要，没有加--表示切换到另一个分支。</span></div><div class=\"line\">git rm 文件\t\t<span class=\"comment\">#从项目中及本地删除文件,可不用执行。</span></div><div class=\"line\">git mv 文件\t\t<span class=\"comment\">#从项目中及本地重命名文件,可不用执行。</span></div></pre></td></tr></table></figure></p>\n<hr>\n<h1 id=\"创建远程仓库\"><a href=\"#创建远程仓库\" class=\"headerlink\" title=\"创建远程仓库\"></a>创建远程仓库</h1><p>在继续阅读后续内容前，请自行注册GitHub账号。由于你的本地Git仓库和GitHub仓库之间的传输是通过SSH加密的，所以，需要一点设置：</p>\n<ul>\n<li><strong>第1步</strong>：创建SSH Key。在用户主目录下，看看有没有.ssh目录，如果有，再看看这个目录下有没有id_rsa和id_rsa.pub这两个文件，如果已经有了，可直接跳到下一步。如果没有，打开Shell（Windows下打开Git Bash），创建SSH Key：<code>ssh-keygen -t rsa -C &quot;842632422@qq.com&quot;</code>你需要把邮件地址换成你自己的邮件地址，然后一路回车，使用默认值即可，由于这个Key也不是用于军事目的，所以也无需设置密码。</li>\n</ul>\n<p>如果一切顺利的话，可以在用户主目录里找到.ssh目录，里面有id_rsa和id_rsa.pub两个文件，这两个就是SSH Key的秘钥对，<strong>id_rsa是私钥，不能泄露出去，id_rsa.pub是公钥</strong>，可以放心地告诉任何人。</p>\n<ul>\n<li><strong>第2步</strong>：登陆GitHub，打开“Account settings”，“SSH Keys”页面：<br>然后，点“Add SSH Key”，填上任意Title，在Key文本框里粘贴id_rsa.pub（公钥）文件的内容：</li>\n</ul>\n<p>点“Add Key”，你就应该看到已经添加的Key：<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/git%E6%95%99%E7%A8%8B001.png\" alt=\"\"><br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/git%E6%95%99%E7%A8%8B002.png\" alt=\"\"></p>\n<p>为什么GitHub需要SSH Key呢？因为GitHub需要识别出你推送的提交确实是你推送的，而不是别人冒充的，而Git支持SSH协议，所以，GitHub只要知道了你的公钥，就可以确认只有你自己才能推送。<br>当然，GitHub允许你添加多个Key。假定你有若干电脑，你一会儿在公司提交，一会儿在家里提交，只要把每台电脑的Key都添加到GitHub，就可以在每台电脑上往GitHub推送了。<br>最后友情提示，在GitHub上免费托管的Git仓库，任何人都可以看到喔（但只有你自己才能改）。所以，不要把敏感信息放进去。<br>`ssh -T git@github.com<br>提示：Hi MyLeoLan! You’ve successfully authenticated, but GitHub does not provide shell access.　　则成功添加sshkey</p>\n<p>在右上角找到“Create a new repo”按钮，创建一个新的仓库：<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/git%E6%95%99%E7%A8%8B003.png\" alt=\"\"><br>目前，在GitHub上的这个仓库还是空的，会提示你创建README.md文件。</p>\n<p>可以从这个仓库克隆出新的仓库（克隆到本地），也可以把一个已有的本地仓库与之关联，然后，把本地仓库的内容推送到GitHub仓库（本地的项目或下载了别人的项目想要推送到自己的仓库，和<strong>fork</strong>的方式不同，这种方式要删除隐藏的<strong>.git文件夹</strong>因为<strong>.git文件夹</strong>包含了别人的库信息，你是推送不到自己的库上去的，删掉之后添加的才是自己的信息）。</p>\n<hr>\n<h1 id=\"从远程库克隆仓库\"><a href=\"#从远程库克隆仓库\" class=\"headerlink\" title=\"从远程库克隆仓库\"></a>从远程库克隆仓库</h1><p>远程库已经准备好了，下一步是用命令git clone克隆一个本地库：<br><code>git clone git@github.com:MyLeoLan/testgit.git</code><br>实际上，Git支持多种协议，默认的git://使用ssh，但也可以使用https等其他协议。<br>使用https除了速度慢以外，还有个最大的麻烦是<strong>每次推送都必须输入口令</strong>，但是在某些只开放http端口的公司内部就无法使用ssh协议而只能用https。</p>\n<h1 id=\"本地仓库推送到远程仓库\"><a href=\"#本地仓库推送到远程仓库\" class=\"headerlink\" title=\"本地仓库推送到远程仓库\"></a>本地仓库推送到远程仓库</h1><p>把本地仓库的内容推送到远程（GitHub）仓库。在本地的XXX仓库下运行命令：</p>\n<p><code>git remote add origin git@github.com:myleolan/learngit.git</code><br>表示把本地的XXX仓库与远程learngit.git库绑定<strong>(添加远程库)</strong>，以后推送都推送到这个库中。地址换成自己的库地址。你的SSH Key公钥不在我的账户列表中是推不上去的。</p>\n<p>关联后，使用命令<code>git push -u origin master</code>完成第一次推送master分支的所有内容（一般远程的master分支会自动命名为origin用于区分，而本地的master还是master分支，<strong>-u</strong>会关联分支，下次推送默认推送到此分支。）</p>\n<p>推送时<strong>git push origin XXXX</strong> （xxxx可以指定本地某分支推送到远程的origin分支）此后，每次本地提交后，只要有必要，就可以使用命令<code>git push origin master</code>推送最新修改；简化命令为：<code>git pull</code>(从远程仓库提取数据并尝试合并到当前分支)和<code>git push</code></p>\n<p>从远程库下载分支和数据的更新到当前项目（不会合并，pull等同于fetch+merge）：<code>git fetch origin</code></p>\n<p>查看当前项目的远程库：<br><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">git remote 或 git remote -v</div><div class=\"line\"></div><div class=\"line\">origin  git@github<span class=\"selector-class\">.com</span>:myleolan/learngit<span class=\"selector-class\">.git</span> (fetch)</div><div class=\"line\">origin  git@github<span class=\"selector-class\">.com</span>:myleolan/learngit<span class=\"selector-class\">.git</span> (push)</div></pre></td></tr></table></figure></p>\n<p>上面显示了可以抓取和推送的origin的地址。如果没有推送权限，就看不到push的地址。</p>\n<p>删除远程仓库：<code>git remote rm ［别名或仓库名］</code></p>\n<ul>\n<li>pull：本地 &lt;– 远程   (如果你本地落后远程，必然要pull)</li>\n<li>push：本地 –&gt; 远程  (如果你本地超前远程，必然要push)</li>\n</ul>\n<p>本质上都是同步commit</p>\n<p>分布式版本系统的最大好处之一是在本地工作完全不需要考虑远程库的存在，也就是有没有联网都可以正常工作，而SVN在没有联网的时候是拒绝干活的！当有网络的时候，再把本地提交推送一下就完成了同步！</p>\n<hr>\n<h1 id=\"管理修改\"><a href=\"#管理修改\" class=\"headerlink\" title=\"管理修改\"></a>管理修改</h1><p>第一次修改 -&gt; <strong>git add</strong>（放入暂存区）-&gt; 第二次修改 -&gt;<strong>git commit</strong>（提交暂存区，准备推送到远程）</p>\n<p>Git管理的是修改，当你用git add命令后，在工作区的第一次修改被放入暂存区，准备提交，但是，在<strong>工作区的第二次修改并没有放入暂存区</strong>，所以，git commit<strong>只负责把暂存区的修改提交了</strong>，也就是第一次的修改被提交了，第二次的修改不会被提交。</p>\n<p>提交后，用<code>git diff HEAD</code>命令可以查看工作区和版本库里面最新版本的区别。</p>\n<p>怎么提交第二次修改呢？你可以继续git add再git commit，也可以别着急提交第一次修改，先git add第二次修改，再git commit，就相当于把两次修改合并后一块提交了：</p>\n<p><strong>第一次修改 -&gt; git add -&gt; 第二次修改 -&gt; git add -&gt; git commit</strong><br>好啦，把第二次修改提交了。</p>\n<hr>\n<h1 id=\"删除文件\"><a href=\"#删除文件\" class=\"headerlink\" title=\"删除文件\"></a>删除文件</h1><p>一般情况下，你通常直接在文件管理器中把没用的文件删了，或者用<strong>rm</strong>命令删了,此时文件删除了但版本库里还有记录，文件可能恢复不了。这个时候，Git知道你删除了文件，因此，工作区和版本库就不一致了，<code>git status</code>命令会提示你哪些文件被删除了。</p>\n<p>要从版本库中删除该文件，那就用命令<code>git rm</code>删掉，并且<code>git commit</code> （git rm会同时删除版本库及文件）</p>\n<p>另一种情况是删错了，因为版本库里还有呢，所以可以很轻松地把误删的文件恢复到最新版本：<code>git checkout -- filename</code></p>\n<p>git checkout其实是用版本库里的版本替换工作区的版本，无论工作区是修改还是删除，都可以“一键还原”。</p>\n<p><strong>提交代码分两步</strong>:</p>\n<ul>\n<li>1.从工作目录，提交到stage。</li>\n</ul>\n<p>从工作目录提交到stage，需要用add或者rm命令，只提交到stage，而没有提交到master，是不会自动同步到master的。</p>\n<ul>\n<li>2.从stage提交到master。</li>\n</ul>\n<p>从stage提交到master用commit命令。</p>\n<p><strong>工作区</strong>--&gt;--<em>add,rm</em>--&gt;--<strong>stage</strong>--&gt;--<em>commit</em>--&gt;--<strong>master</strong></p>\n<p><strong>退回也是要分两步</strong>:</p>\n<ul>\n<li><p>1.从master退回到stage<br>对于还没有提交到stage的，可以从stage用checkout命令退回，这一步会取stage中的文件状态，覆盖掉工作目录中文件的状态，跟master完全没关系。</p>\n</li>\n<li><p>2.从stage退回到工作目录</p>\n</li>\n</ul>\n<p>对于已经到达stage的，想把state中的文件状态用master中的覆盖掉，就用reset命令，这样就把stage中修改用master的状态覆盖掉了，完全跟工作目录没关系</p>\n<p><strong>工作区</strong>--&lt;--<em>checkout</em>--&lt;--<strong>stage</strong>--&lt;--<em>reset</em>--&lt;--<strong>master</strong></p>\n<p>要删除某些文件，不能简单用rm删除，远程仓库依然会保留文件（因为它不知道你什么时候就进行版本回退了，需要用到那些文件），要彻底删除，本地<code>git rm filename</code>命令删除文件再<strong>git push</strong>上去，或者进入github管理界面手动一个一个删除文件。</p>\n<hr>\n<h1 id=\"版本回退\"><a href=\"#版本回退\" class=\"headerlink\" title=\"版本回退\"></a>版本回退</h1><figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">git status \t   <span class=\"comment\">#查看当前状态</span></div><div class=\"line\">git diff      \t   <span class=\"comment\">#查看做了哪些修改</span></div><div class=\"line\">git <span class=\"keyword\">add</span><span class=\"bash\"> file  \t   <span class=\"comment\">#添加到缓存</span></span></div><div class=\"line\">git commit -m <span class=\"string\">\"xxx\"</span><span class=\"comment\">#提交到本地版本库</span></div><div class=\"line\">git log\t\t   <span class=\"comment\">#可查看所有的历史版本，信息太多加--pretty=oneline参数简化</span></div></pre></td></tr></table></figure>\n<p>首先，Git必须知道当前版本是哪个版本，在Git中，用<strong>HEAD表示当前版本</strong>，也就是最新的提交过commit的这个版本，<strong>HEAD^</strong>是上一个版本，上上一个版本就是<strong>HEAD^^</strong>，当然往上100个版本写100个<strong>^</strong>比较容易数不过来，所以写成<strong>HEAD~100</strong>。</p>\n<p>此节实验当我没有保存下来，所以引用廖雪峰老师的数据，实验是通过修改readme.txt文件进行的，假设我们要把当前版本“append GPL”回退到上一个版本“add distributed”，就可以使用git reset命令：<code>git reset --hard HEAD^</code> (退回上一个版本)</p>\n<p><code>cat readme.txt</code>看看readme.txt的内容是不是版本add distributed：</p>\n<p>Git is a distributed version control system.<br>Git is free software.</p>\n<p>果然,还可以继续回退到上一个版本wrote a readme file，不过且慢，我们用<code>git log</code>再看看现在版本库的状态：<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">commit</span> ea34578d5496d7dd233c827ed32a8cd576c5ee85</div><div class=\"line\">Author: Michael Liao &lt;askxuefeng@gmail.com&gt;</div><div class=\"line\"><span class=\"built_in\">Date</span>:   Tue Aug <span class=\"number\">20</span> <span class=\"number\">14</span>:<span class=\"number\">53</span>:<span class=\"number\">12</span> <span class=\"number\">2013</span> +<span class=\"number\">0800</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">add</span> <span class=\"keyword\">distributed</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">commit</span> cb926e7ea50ad11b8f9e909c05226233bf755030</div><div class=\"line\">Author: Michael Liao &lt;askxuefeng@gmail.com&gt;</div><div class=\"line\"><span class=\"built_in\">Date</span>:   Mon Aug <span class=\"number\">19</span> <span class=\"number\">17</span>:<span class=\"number\">51</span>:<span class=\"number\">55</span> <span class=\"number\">2013</span> +<span class=\"number\">0800</span></div><div class=\"line\"></div><div class=\"line\">    wrote a readme <span class=\"keyword\">file</span></div></pre></td></tr></table></figure></p>\n<p>最新的那个版本append GPL已经看不到了！好比你从21世纪坐时光穿梭机来到了19世纪，想再回去已经回不去了，肿么办？只要上面的命令行窗口还没有被关掉，你就可以顺着往上找啊找啊，找到那个append GPL的<strong>commit id</strong>是3628164…，于是就可以指定回到未来的某个版本：<br><code>git reset --hard 3628164</code>     (退回指定版本）。</p>\n<p>如果已经关掉了命令行，找不到新版本的commit id怎么办？Git提供了一个命令<code>git reflog</code>用来<strong>记录你的每一次命令(历史命令，类似日志)</strong>，其中就包含了commit id：<br><figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">git reflog      查询历史版本号</div><div class=\"line\">ea34578 HEAD@&#123;<span class=\"number\">0</span>&#125;: rese<span class=\"variable\">t:</span> moving <span class=\"keyword\">to</span> HEAD^</div><div class=\"line\"><span class=\"number\">3628164</span> HEAD@&#123;<span class=\"number\">1</span>&#125;: commi<span class=\"variable\">t:</span> <span class=\"keyword\">append</span> GPL</div><div class=\"line\">ea34578 HEAD@&#123;<span class=\"number\">2</span>&#125;: commi<span class=\"variable\">t:</span> <span class=\"built_in\">add</span> distributed</div><div class=\"line\">cb926e7 HEAD@&#123;<span class=\"number\">3</span>&#125;: commit (initial): wrote <span class=\"keyword\">a</span> readme <span class=\"keyword\">file</span></div></pre></td></tr></table></figure></p>\n<p>第二行显示append GPL的commit id是3628164，现在，你又可以乘坐时光机回到未来了。</p>\n<p>版本号没必要写全，前几位就可以了，Git会自动去找。当然也不能只写前一两位,一般7-8位就行了，因为Git可能会找到多个版本号，就无法确定是哪一个了。<br>Git的版本回退速度非常快，因为Git在内部有个指向当前版本的HEAD指针，当你回退版本的时候，Git仅仅是把HEAD从指向append GPL：<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/git%E6%95%99%E7%A8%8B004.png\" alt=\"\"></p>\n<p>改为指向add distributed：</p>\n<p><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/git%E6%95%99%E7%A8%8B005.png\" alt=\"\"></p>\n<p>然后顺便把工作区的文件更新了。所以你让<strong>HEAD</strong>指向哪个版本号，你就把当前版本定位在哪。</p>\n<hr>\n<h1 id=\"撤销修改\"><a href=\"#撤销修改\" class=\"headerlink\" title=\"撤销修改\"></a>撤销修改</h1><p>当发现某部分代码需要撤销时<code>git checkout -- filename</code>可以丢弃工作区的修改：<strong>git checkout -- readme.txt</strong>（把readme.txt文件在工作区的修改全部撤销）</p>\n<p>这里有两种情况：</p>\n<ul>\n<li>1.<strong>readme.txt自修改后还没有被放到暂存区</strong>，现在，撤销修改就回到和版本库一模一样的状态；</li>\n</ul>\n<p>命令中的<strong>--</strong>很重要，没有<strong>--</strong>，就变成了“<strong>切换到另一个分支</strong>”的命令，我们在后面的分支管理中会再次遇到git checkout命令。</p>\n<ul>\n<li>2.<strong>readme.txt已经添加到暂存区后，又作了修改</strong>，现在，撤销修改就回到添加到暂存区后的状态。<br>总之，就是让这个文件回到最近一次<strong>git commit</strong>或<strong>git add</strong>时的状态。</li>\n</ul>\n<p>现在假定是凌晨3点，你不但写了一些胡话，还<strong>git add到暂存区</strong>了,庆幸的是，在<strong>commit</strong>之前，你发现了这个问题。用<code>git status</code>查看一下，修改只是添加到了暂存区，还没有提交。用命令<code>git reset HEAD file</code>(可以把暂存区的修改撤销掉（unstage），不带file则撤销所有文件的更改，重新放回工作区，此时就相当于<strong>没有git add</strong>的状态，但文件是改动过的）</p>\n<p><code>git reset</code>命令<strong>既可以回退版本，也可以把暂存区的修改回退到工作区。</strong>当我们用HEAD时，表示最新的版本。再用<code>git status</code>查看一下，现在暂存区是干净的，工作区有修改。<br>丢弃工作区的修改：<code>git checkout -- readme.txt</code> 可直接恢复文件并恢复版本库的内容（丢弃所有未git add的内容，回到最近一个最新版本）<br>注意：要完全撤回修改的代码，要<code>git reset HEAD file</code>后执行<code>git checkout -- file</code>才会完全包括工作区的内容也删除。</p>\n<p>现在，假设你不但改错了东西，还把暂存区提交到了版本库（执行了git commit），怎么办呢？还可以版本回退到上一个版本。如果<strong>还没有把自己的本地版本库推送到远程</strong>，可以用：<code>git reset --hard HEAD</code> 恢复到当前版本（改动了但没有commit的那个版本，如果进行了commit，此次commit就是一个新版本，只能通过<code>git reset --hard HEAD^</code>回到上一个commit）。如果<strong>已经提交到了远程</strong>，只能通过<code>git reset --hard HEAD^</code>版本回退了。</p>\n<hr>\n<h1 id=\"标签管理\"><a href=\"#标签管理\" class=\"headerlink\" title=\"标签管理\"></a>标签管理</h1><p>发布一个版本时，我们通常先在版本库中打一个标签（tag），这样，就唯一确定了打标签时刻的版本。将来无论什么时候，取某个标签的版本，就是把那个打标签的时刻的历史版本取出来。所以，标签也是版本库的一个快照。<br>Git的标签虽然是版本库的快照，但其实它就是指向某个commit的指针（跟分支很像对不对？但是分支可以移动，标签不能移动），所以，创建和删除标签都是瞬间完成的。</p>\n<p><strong>Git有commit，为什么还要引入tag？</strong></p>\n<p>“请把上周一的那个版本打包发布，commit号是6a5819e…” ;“一串乱七八糟的数字不好找！”</p>\n<p>如果换一个办法：</p>\n<p>“请把上周一的那个版本打包发布，版本号是v1.2”  ;“按照tag v1.2查找commit就行！”<br>tag就是一个让人容易记住的有意义的名字，它跟某个commit绑在一起。</p>\n<h2 id=\"创建标签\"><a href=\"#创建标签\" class=\"headerlink\" title=\"创建标签\"></a>创建标签</h2><p>在Git中打标签非常简单，首先，切换到需要打标签的分支上：<br><figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">git branch    <span class=\"comment\">#查看有哪些分支</span></div><div class=\"line\">git checkout <span class=\"keyword\">master</span>  <span class=\"title\">#切换到要打标签的分支上</span></div></pre></td></tr></table></figure></p>\n<p>然后，敲命令<code>git tag &lt;name&gt;</code>就可以在<strong>当前分支的最新已提交的状态</strong>(HEAD)打一个新标签：<strong>git tag v1.0</strong></p>\n<p>默认标签是打在最新提交的commit上的。有时候，如果忘了打标签，比如，现在已经是周五了，但应该在周一打的标签没有打，怎么办？</p>\n<p>方法是找到历史提交的<strong>commit id</strong>，然后打上就可以了：<br><figure class=\"highlight maxima\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">git <span class=\"built_in\">log</span> --pretty=oneline --abbrev-commit</div><div class=\"line\"></div><div class=\"line\">6a5819e merged bug <span class=\"built_in\">fix</span> <span class=\"number\">101</span></div><div class=\"line\">cc17032 <span class=\"built_in\">fix</span> bug <span class=\"number\">101</span></div><div class=\"line\">7825a50 merge with no-ff</div><div class=\"line\"><span class=\"number\">6224937</span> add merge</div><div class=\"line\">59bc1cb conflict fixed</div><div class=\"line\"><span class=\"number\">400b400</span> &amp; simple</div><div class=\"line\">75a857c AND simple</div><div class=\"line\">fec145a branch test</div><div class=\"line\">d17efd8 <span class=\"built_in\">remove</span> test.txt</div><div class=\"line\">...</div></pre></td></tr></table></figure></p>\n<p>比方说要对<strong>add merge</strong>这次提交打标签，它对应的<strong>commit id</strong>是6224937，敲入命令：<br><code>git tag v0.9 6224937</code></p>\n<p>还可以创建带有说明的标签，用<strong>-a</strong>指定标签名，<strong>-m</strong>指定说明文字：<br><code>git tag -a v0.1 -m &quot;version 0.1 released&quot; 3628164</code></p>\n<p>查看所有标签：<code>git tag</code></p>\n<p>注意，标签不是按时间顺序列出，而是按字母排序的。可以用<code>git show &lt;tagname&gt;</code>查看标签详细信息。</p>\n<p>还可以通过<strong>-s</strong>用私钥签名一个标签：<br><code>git tag -s v0.2 -m &quot;signed version 0.2 released&quot; fec145a</code>(原来的-a换为-s)</p>\n<p>签名采用PGP签名，因此，必须首先安装gpg（<strong>GnuPG</strong>），如果没有找到gpg，或者没有gpg密钥对，就会报错：<br><figure class=\"highlight subunit\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">gpg: signing failed: secret key not available</div><div class=\"line\"><span class=\"keyword\">error: </span>gpg failed to sign the data</div><div class=\"line\"><span class=\"keyword\">error: </span>unable to sign the tag</div></pre></td></tr></table></figure></p>\n<p>如果报错，请参考<strong>GnuPG</strong>帮助文档配置Key。如果签名不成功可以加<strong>-u</strong> 参数，详见：<a href=\"http://airk000.github.io/git/2013/09/30/git-tag-with-gpg-key\" target=\"_blank\" rel=\"external\">http://airk000.github.io/git/2013/09/30/git-tag-with-gpg-key</a></p>\n<p><code>git show &lt;tagname&gt;</code>也可以看到PGP的签名信息：<br><figure class=\"highlight haml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">-<span class=\"ruby\">----<span class=\"keyword\">BEGIN</span> PGP SIGNATURE-----</span></div><div class=\"line\">Version: GnuPG v1.4.12 (Darwin)</div><div class=\"line\"></div><div class=\"line\">iQEcBAABAgAGBQJSGpMhAAoJEPUxHyDAhBpT4QQIAKeHfR3bo...</div><div class=\"line\">-<span class=\"ruby\">----<span class=\"keyword\">END</span> PGP SIGNATURE-----</span></div></pre></td></tr></table></figure></p>\n<p>用PGP签名的标签是不可伪造的，因为可以验证PGP签名。验证签名的方法比较复杂，这里就不介绍了。</p>\n<h2 id=\"操作标签\"><a href=\"#操作标签\" class=\"headerlink\" title=\"操作标签\"></a>操作标签</h2><p><code>git tag -d &lt;tagname&gt;</code>可以删除一个本地标签。<br><code>git push origin &lt;tagname&gt;</code>可以推送一个本地标签到远程库。<br><code>git push origin --tags</code>可以推送全部未推送过的本地标签到远程库。</p>\n<p>删除时先删除本地对应的标签，再运行命令<code>git push origin :refs/tags/&lt;tagname&gt;</code>删除一个远程标签。</p>\n<hr>\n<h1 id=\"分支\"><a href=\"#分支\" class=\"headerlink\" title=\"分支\"></a>分支</h1><p>创建分支可以在分支上工作而不影响master分支，当分支工作完成时再合并到master分支上。</p>\n<p>一般流程：</p>\n<ul>\n<li>1.先查看分支：<code>git branch</code></li>\n<li>2.创建+切换分支：<code>git checkout -b &lt;分支name&gt;</code>等价于：<code>创建分支：git branch &lt;分支name&gt;</code>+<code>切换分支：git checkout &lt;分支name&gt;</code></li>\n<li>3.查看当前分支：<code>git branch</code></li>\n<li>4.在<strong>新建分支上进行工作</strong>，工作完成时。切换回主分支：<code>git checkout master</code></li>\n<li>5.合并某分支到当前分支（当前已切换回master分支了）：<code>git merge &lt;分支name&gt;</code></li>\n<li>6.删除无用分支：<code>git branch -d &lt;分支name&gt;</code></li>\n<li>7.查看当前分支：<code>git branch</code></li>\n</ul>\n<p>只剩master分支啦。</p>\n<p>想要深入了解，参考：</p>\n<p><a href=\"http://backlogtool.com/git-guide/cn/reference/branch.html#sec2\" target=\"_blank\" rel=\"external\">猴子Git</a>　　<a href=\"http://iissnan.com/progit/html/zh/ch3_2.html\" target=\"_blank\" rel=\"external\">Pro Git</a>　　<a href=\"http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/001375840038939c291467cc7c747b1810aab2fb8863508000\" target=\"_blank\" rel=\"external\">廖雪峰Git</a></p>\n<h2 id=\"分支策略\"><a href=\"#分支策略\" class=\"headerlink\" title=\"分支策略\"></a>分支策略</h2><p>在实际开发中，我们应该按照几个基本原则进行分支管理：</p>\n<p>　　首先，<strong>master</strong>分支应该是非常稳定的，也就是仅用来发布新版本，平时不能在上面干活；平时干活都在dev分支上，也就是说，dev分支是不稳定的，到某个时候，比如1.0版本发布时，再把dev分支合并到master上，在master分支发布1.0版本；你和你的小伙伴们每个人都在dev分支上干活，每个人都有自己的分支，时不时地往dev分支上合并就可以了。<br>所以，团队合作的分支看起来就像这样：<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/git%E6%95%99%E7%A8%8B006.png\" alt=\"\"><br>Git分支十分强大，在团队开发中应该充分应用。合并分支时，加上<strong>--no-ff</strong>参数就可以用普通模式合并，合并后的历史有分支，能看出来曾经做过合并，而<strong>fast forward</strong>合并就看不出来曾经做过合并。</p>\n<h2 id=\"分支管理策略\"><a href=\"#分支管理策略\" class=\"headerlink\" title=\"分支管理策略\"></a>分支管理策略</h2><p>合并分支时，如果可能，Git会用<strong>Fast forward</strong>模式，但这种模式下，删除分支后，会丢掉分支信息。如果要强制禁用<strong>Fast forward</strong>模式(加参数--no-ff)，Git就会在<strong>merge</strong>时生成一个新的commit，这样，从分支历史上就可以看出分支信息。</p>\n<p>下面来测试一下<strong>--no-ff</strong>方式的<strong>git merge</strong>：</p>\n<p>创建分支、修改文件，提交缓存，切换回master分支，准备合并dev分支，因为本次合并要创建一个新的commit，所以加上<strong>-m</strong>参数，把commit描述写进去。<br><code>git merge --no-ff -m &quot;merge with no-ff&quot; dev</code></p>\n<p>用<strong>git log</strong>看看分支历史：<br><figure class=\"highlight livecodeserver\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">git <span class=\"built_in\">log</span> <span class=\"comment\">--graph --pretty=oneline --abbrev-commit</span></div><div class=\"line\"></div><div class=\"line\">*   <span class=\"number\">7825</span>a50 <span class=\"built_in\">merge</span> <span class=\"keyword\">with</span> no-ff</div><div class=\"line\">|\\</div><div class=\"line\">| * <span class=\"number\">6224937</span> <span class=\"built_in\">add</span> <span class=\"built_in\">merge</span></div><div class=\"line\">|/</div><div class=\"line\">*   <span class=\"number\">59</span>bc1cb conflict fixed</div><div class=\"line\">...</div></pre></td></tr></table></figure></p>\n<h2 id=\"冲突解决\"><a href=\"#冲突解决\" class=\"headerlink\" title=\"冲突解决\"></a>冲突解决</h2><p>当合并出现冲突时，一般要手动解决。<br>直接查看master分支的readme.txt（冲突文件）的内容并修改：<br><figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">Git <span class=\"keyword\">is</span> <span class=\"keyword\">a</span> distributed <span class=\"keyword\">version</span> control <span class=\"built_in\">system</span>.</div><div class=\"line\">Git <span class=\"keyword\">is</span> free software distributed under the GPL.</div><div class=\"line\">Git <span class=\"built_in\">has</span> <span class=\"keyword\">a</span> mutable <span class=\"built_in\">index</span> called stage.</div><div class=\"line\">Git tracks <span class=\"keyword\">changes</span> of <span class=\"keyword\">files</span>.</div><div class=\"line\">&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD</div><div class=\"line\">Creating <span class=\"keyword\">a</span> <span class=\"keyword\">new</span> branch <span class=\"keyword\">is</span> quick &amp; simple.</div><div class=\"line\">=======</div><div class=\"line\">Creating <span class=\"keyword\">a</span> <span class=\"keyword\">new</span> branch <span class=\"keyword\">is</span> quick AND simple.</div><div class=\"line\">&gt;&gt;&gt;&gt;&gt;&gt;&gt; feature1</div></pre></td></tr></table></figure></p>\n<p>修改完毕，再次提交即可。</p>\n<p><strong>Git用&lt;&lt;&lt;&lt;&lt;&lt;&lt;，=======，&gt;&gt;&gt;&gt;&gt;&gt;&gt;标记出不同分支的内容。</strong></p>\n<p>用带参数的git log也可以看到分支的合并情况：<code>git log --graph --pretty=oneline --abbrev-commit</code><br>用git log –graph命令可以看到分支合并图。</p>\n<p>详见：<a href=\"http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/001375840202368c74be33fbd884e71b570f2cc3c0d1dcf000\" target=\"_blank\" rel=\"external\">廖雪峰Git解决冲突</a></p>\n<h2 id=\"错误解决\"><a href=\"#错误解决\" class=\"headerlink\" title=\"错误解决\"></a>错误解决</h2><ul>\n<li><p>1.error: src refspec master does not match any.<br>答：目录中没有文件，空目录是不能提交上去的 执行:<code>git commit -m “xxx”</code></p>\n</li>\n<li><p>2.error: insufficient permission for adding an object to repository database ./objects<br>答：服务端没有可写目录的权限［可能不是你的库，或sshkey不对］</p>\n</li>\n<li><p>3.error：fatal: remote origin already exists.<br>答：<code>git remote rm origin</code></p>\n</li>\n<li><p>4.error: failed to push som refs to ……..<br>解决办法：<code>git pull origin master</code><br>答：先pull 下来 再push上去。</p>\n</li>\n<li><p>5.error: failed to push some refs to ‘git@github.com:myleolan/learnpython.git’<br>To prevent you from losing history, non-fast-forward updates were rejected<br>Merge the remote changes before pushing again.  See the ‘Note about<br>fast-forwards’ section of ‘git push –help’ for details.<br>答：是因为远程用web创建的的库和本地不一样。<code>git pull origin master</code> (先pull 下来 再push 上去)</p>\n</li>\n<li><p>6.git push时报错：The requested URL returned error: 403 Forbidden while accessing<br>答：<code>vim /.git/config</code><br>把[remote “origin”]项中<a href=\"https://github.com\" target=\"_blank\" rel=\"external\">https://github.com</a> 改为<a href=\"https://myleolan@github.com\" target=\"_blank\" rel=\"external\">https://myleolan@github.com</a><br>就是加上<strong>用户名@</strong>之后再次执行git push 输入密码即可，一般用git协议不会报此错误，地址改为git@github.com:myleolan/XXXX.git</p>\n</li>\n</ul>\n<hr>\n<h1 id=\"Bug分支\"><a href=\"#Bug分支\" class=\"headerlink\" title=\"Bug分支\"></a>Bug分支</h1><p>当你接到一个修复一个代号101的bug的任务时，很自然地，你想创建一个分支issue-101来修复它，但是，等等，当前正在dev上进行的工作还没有提交；并不是你不想提交，而是工作只进行到一半，还没法提交，预计完成还需1天时间。但是，必须在两个小时内修复该bug，怎么办？</p>\n<p>Git还提供了一个<strong>stash</strong>功能，可以把当前工作现场“<strong>储藏</strong>”起来，等以后恢复现场后继续工作：<code>git stash</code>现在，用<strong>git status</strong>查看工作区，就是干净的（除非有没有被Git管理的文件），因此可以放心地创建分支来修复bug。</p>\n<h2 id=\"修复Bug一般流程\"><a href=\"#修复Bug一般流程\" class=\"headerlink\" title=\"修复Bug一般流程\"></a>修复Bug一般流程</h2><p>首先确定要在哪个分支上修复bug，假定需要在master分支上修复，就从master创建临时分支并切换分支：<br><figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">git checkout <span class=\"keyword\">master</span></div><div class=\"line\"><span class=\"title\">git</span> checkout -b issue-<span class=\"number\">101</span>   <span class=\"comment\">#创建并切换分支</span></div></pre></td></tr></table></figure></p>\n<p>现在修复bug，需要把“Git is free software …”改为“Git is a free software …”，然后提交：<br><figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">git <span class=\"keyword\">add</span><span class=\"bash\"> readme.txt </span></div><div class=\"line\">git commit -m <span class=\"string\">\"fix bug 101\"</span></div></pre></td></tr></table></figure></p>\n<p>修复完成后，<strong>切换到master分支，并完成分支合并</strong>，最后<strong>删除issue-101分支</strong>：<br> <figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">git checkout <span class=\"keyword\">master</span></div><div class=\"line\"><span class=\"title\">git</span> merge --no-ff -m <span class=\"string\">\"merged bug fix 101\"</span> issue-<span class=\"number\">101</span>  <span class=\"comment\">#合并分支</span></div><div class=\"line\">git branch -d issue-<span class=\"number\">101</span>  <span class=\"comment\">#删除分支</span></div></pre></td></tr></table></figure></p>\n<p>bug修复了，现在，可以接着回到dev分支干活了！<br><figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">git checkout dev</div><div class=\"line\">git status   <span class=\"comment\">#此时可以看到工作区是干净的</span></div><div class=\"line\">git stash <span class=\"built_in\">list</span>  <span class=\"comment\">#查看已储藏的工作现场</span></div><div class=\"line\"></div><div class=\"line\">stash@&#123;<span class=\"number\">0</span>&#125;: WIP <span class=\"keyword\">on</span> dev: <span class=\"number\">6224937</span> add merge</div></pre></td></tr></table></figure></p>\n<p>工作现场还在，Git把<strong>stash</strong>内容存在某个地方了，需要恢复，有两个办法：</p>\n<ul>\n<li>1.用<code>git stash apply</code>恢复，但是恢复后，<strong>stash</strong>内容并不删除，你需要用<code>git stash drop</code>来删除(stash只是临时封存区，建议删除)。</li>\n<li><p>2.用<code>git stash pop</code>恢复的同时把<strong>stash</strong>内容也删了。</p>\n<p>执行<code>git stash pop</code>恢复，再用<code>git stash list</code>查看，就看不到任何stash内容了<br><strong>可以多次stash</strong>，恢复的时候，先用<code>git stash list</code>查看，然后<strong>恢复指定的stash</strong>，用命令：<code>git stash apply stash@{0}</code>  (<strong>stash@{0}</strong>是封存的标识)</p>\n</li>\n</ul>\n<hr>\n<h1 id=\"Feature分支\"><a href=\"#Feature分支\" class=\"headerlink\" title=\"Feature分支\"></a>Feature分支</h1><p>软件开发中，总有无穷无尽的新的功能要不断添加进来。添加一个新功能时，不希望因为一些实验性质的代码，把主分支搞乱了，所以，每添加一个新功能，最好新建一个<strong>feature</strong>分支，在上面<strong>开发，完成后，合并，最后，删除该feature分支</strong>。<br><figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#当前在工作分支dev上。</span></div><div class=\"line\">git checkout -b feature-vulcan(name)  <span class=\"comment\">#创建并切换到该分支</span></div><div class=\"line\"><span class=\"comment\">#修改代码完成之后</span></div><div class=\"line\">git <span class=\"keyword\">add</span><span class=\"bash\"> vulcan.py</span></div><div class=\"line\">git status</div><div class=\"line\">git commit -m <span class=\"string\">\"add feature vulcan\"</span></div><div class=\"line\">git checkout dev   <span class=\"comment\">#切回dev，准备合并</span></div><div class=\"line\"><span class=\"comment\">#一切顺利的话，feature分支和bug分支是类似的，合并，然后删除。</span></div><div class=\"line\">执行以下两句就可以完成任务了：</div><div class=\"line\">git merge --no-ff -m <span class=\"string\">\"merged feature-vulcan\"</span> feature-vulcan <span class=\"comment\">#合并分支</span></div><div class=\"line\">git branch -d feature-vulcan   <span class=\"comment\">#删除分支</span></div></pre></td></tr></table></figure></p>\n<p>但是，就在此时，接到上级命令，因经费不足，新功能<strong>必须取消</strong>！虽然白干了，但是这个分支还是必须<strong>就地销毁</strong>：<br><figure class=\"highlight subunit\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">git branch -d feature-vulcan</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">error: </span>The branch 'feature-vulcan' is not fully merged.</div><div class=\"line\">If you are sure you want to delete it, run 'git branch -D feature-vulcan'.</div></pre></td></tr></table></figure></p>\n<p>Git提示销毁失败：feature-vulcan分支还没有被合并，如果删除，将丢失掉修改，如果要强行删除，需要使用命令<code>git branch -D feature-vulcan</code></p>\n<p>现在我们强行删除：<code>git branch -D feature-vulcan</code>　OK，现在我们切换回dev分支继续工作。</p>\n<hr>\n<h1 id=\"自定义Git配置-高级\"><a href=\"#自定义Git配置-高级\" class=\"headerlink\" title=\"自定义Git配置(高级)\"></a>自定义Git配置(高级)</h1><p>我们已经配置了<strong>user.name</strong>和<strong>user.email</strong>，实际上，Git还有很多可配置项。</p>\n<h2 id=\"忽略特殊文件\"><a href=\"#忽略特殊文件\" class=\"headerlink\" title=\"忽略特殊文件\"></a>忽略特殊文件</h2><p>有些时候，你必须把某些文件放到Git工作目录中，但又不能提交它们，比如保存了<strong>数据库密码的配置文件</strong>啦，等等，每次<strong>git status</strong>都会显示<strong>Untracked files …</strong>，有强迫症的童鞋心里肯定不爽。好在Git考虑到了大家的感受，这个问题解决起来也很简单，在Git工作区的根目录下创建一个特殊的<strong>.gitignore</strong>文件，然后把要忽略的文件名填进去，Git就会自动忽略这些文件。</p>\n<p>不需要从头写<strong>.gitignore</strong>文件，GitHub已经为我们准备了各种配置文件，只需要组合一下就可以使用了。所有配置文件可以直接在线浏览：<strong><a href=\"https://github.com/github/gitignore\" target=\"_blank\" rel=\"external\">https://github.com/github/gitignore</a></strong>   已经配置好了要忽略的文件，下载回来要文件名要改为<strong>.gitignore</strong>放在项目根目录下。</p>\n<p><strong>忽略文件的原则是：</strong></p>\n<ol>\n<li>忽略操作系统自动生成的文件，比如缩略图等；</li>\n<li>忽略编译生成的中间文件、可执行文件等，也就是如果一个文件是通过另一个文件自动生成的，那自动生成的文件就没必要放进版本库，比如Java编译产生的.class文件；</li>\n<li>忽略你自己的带有敏感信息的配置文件，比如存放口令的配置文件。</li>\n</ol>\n<p>举个例子：</p>\n<p>假设你在Windows下进行Python开发，Windows会自动在有图片的目录下生成隐藏的缩略图文件，如果有自定义目录，目录下就会有Desktop.ini文件，因此你需要忽略Windows自动生成的垃圾文件；然后，继续忽略Python编译产生的.pyc、.pyo、dist等文件或目录(<strong>忽略文件夹在文件夹名后加/</strong>)</p>\n<p>加上你自己定义的文件，最终得到一个完整的.gitignore文件，内容如下：<br><figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"># Windows:</div><div class=\"line\">Thumbs.<span class=\"keyword\">db</span></div><div class=\"line\">ehthumbs.<span class=\"keyword\">db</span></div><div class=\"line\">Desktop.ini</div><div class=\"line\"></div><div class=\"line\"># Python:</div><div class=\"line\"><span class=\"comment\">*.py[cod]</span></div><div class=\"line\"><span class=\"comment\">*.so</span></div><div class=\"line\"><span class=\"comment\">*.egg</span></div><div class=\"line\"><span class=\"comment\">*.egg-info</span></div><div class=\"line\">dist</div><div class=\"line\">build</div><div class=\"line\"></div><div class=\"line\"># My configurations:</div><div class=\"line\"><span class=\"keyword\">db</span>.ini</div><div class=\"line\">deploy_key_rsa</div><div class=\"line\">新建文件夹/</div></pre></td></tr></table></figure></p>\n<p>最后一步就是把.gitignore也提交到Git，就完成了！当然<strong>检验.gitignore</strong>是否生效的标准是<strong>git status</strong>命令是不是说working directory clean。</p>\n<p>使用Windows的童鞋注意了，如果你在资源管理器里新建一个<strong>.gitignore</strong>文件，它会非常弱智地提示你必须输入文件名，在第三方文本编辑器里“保存”或者“另存为”就可以把文件保存为.gitignore了。</p>\n<p>有些时候，你想添加一个文件到Git，但发现添加不了，原因是这个文件被.gitignore忽略了：<br><figure class=\"highlight livecodeserver\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">git <span class=\"built_in\">add</span> App.class</div><div class=\"line\"></div><div class=\"line\">The following paths are ignored <span class=\"keyword\">by</span> <span class=\"literal\">one</span> <span class=\"keyword\">of</span> your .gitignore <span class=\"built_in\">files</span>:</div><div class=\"line\">App.class</div><div class=\"line\">Use -f <span class=\"keyword\">if</span> you really want <span class=\"built_in\">to</span> <span class=\"built_in\">add</span> them.</div></pre></td></tr></table></figure></p>\n<p>如果你确实想添加该文件，可以用<strong>-f</strong>强制添加到Git：<code>git add -f App.class</code></p>\n<p>或者你发现，可能是.gitignore写得有问题，需要找出来到底哪个规则写错了，可以用<code>git check-ignore</code>命令检查：<br><figure class=\"highlight smali\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">git<span class=\"built_in\"> check-ignore </span>-v App.class</div><div class=\"line\"><span class=\"keyword\">.gitignore</span>:3:*.class    App.class</div></pre></td></tr></table></figure></p>\n<p>Git会告诉我们，.gitignore的第3行规则忽略了该文件，于是我们就可以知道应该修订哪个规则。</p>\n<h2 id=\"配置命令别名\"><a href=\"#配置命令别名\" class=\"headerlink\" title=\"配置命令别名\"></a>配置命令别名</h2><p>有没有经常敲错命令？比如git status？status这个单词真心不好记。如果敲<strong>git st</strong>就表示<strong>git status</strong>那就简单多了。<br><figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">git config --<span class=\"keyword\">global</span> <span class=\"keyword\">alias</span>.st status   <span class=\"meta\">#st表示status</span></div><div class=\"line\">git config --<span class=\"keyword\">global</span> <span class=\"keyword\">alias</span>.co checkout <span class=\"meta\">#co表示checkout</span></div><div class=\"line\">git config --<span class=\"keyword\">global</span> <span class=\"keyword\">alias</span>.ci commit   <span class=\"meta\">#ci表示commit</span></div><div class=\"line\">git config --<span class=\"keyword\">global</span> <span class=\"keyword\">alias</span>.br branch   <span class=\"meta\">#br表示branch</span></div></pre></td></tr></table></figure></p>\n<h2 id=\"global参数是全局参数，这些命令在这台电脑的所有Git仓库下都有用。\"><a href=\"#global参数是全局参数，这些命令在这台电脑的所有Git仓库下都有用。\" class=\"headerlink\" title=\"--global参数是全局参数，这些命令在这台电脑的所有Git仓库下都有用。\"></a>--global参数是全局参数，这些命令在这台电脑的所有Git仓库下都有用。</h2><p>在”<strong>撤销修改</strong>“一节中，我们知道，命令<code>git reset HEAD file</code>可以把暂存区的修改撤销掉（unstage），重新放回工作区。既然是一个<strong>unstage操作</strong>，就可以配置一个unstage别名：<br><code>git config --global alias.unstage &#39;reset HEAD&#39;</code></p>\n<p>当你敲入命令：<code>git unstage test.py</code>实际上Git执行的是：<code>git reset HEAD test.py</code></p>\n<p>配置一个<strong>git last</strong>，让其显示最后一次提交信息：<code>git config --global alias.last &#39;log -3&#39;</code> (数字代表最近的几次提交);这样，用<code>git last</code>就能显示最近3次的提交：</p>\n<p>甚至还有人丧心病狂地把lg配置成了：<br><figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git config --global alias.lg <span class=\"string\">\"log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)&lt;%an&gt;%Creset' --abbrev-commit\"</span></div></pre></td></tr></table></figure></p>\n<p>来看看git lg的效果：<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/git%E6%95%99%E7%A8%8B008.png\" alt=\"\"></p>\n<h2 id=\"关于配置文件\"><a href=\"#关于配置文件\" class=\"headerlink\" title=\"关于配置文件\"></a>关于配置文件</h2><p>配置Git的时候，加上<strong>--global</strong>是针对当前用户起作用的，如果不加，那只针对当前的仓库起作用。</p>\n<ul>\n<li><p>每个仓库（每个项目）独立的Git配置文件都放在<strong>.git/config</strong>文件中：</p>\n<figure class=\"highlight elixir\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\">cat .git/config </div><div class=\"line\">[core]</div><div class=\"line\">    repositoryformatversion = <span class=\"number\">0</span></div><div class=\"line\">    filemode = <span class=\"keyword\">true</span></div><div class=\"line\">    bare = <span class=\"keyword\">false</span></div><div class=\"line\">    logallrefupdates = <span class=\"keyword\">true</span></div><div class=\"line\">    ignorecase = <span class=\"keyword\">true</span></div><div class=\"line\">    precomposeunicode = <span class=\"keyword\">true</span></div><div class=\"line\">[remote <span class=\"string\">\"origin\"</span>]</div><div class=\"line\">    url = git<span class=\"variable\">@github</span>.<span class=\"symbol\">com:</span>myleolan/learngit.git</div><div class=\"line\">    fetch = +refs/heads/*<span class=\"symbol\">:refs/remotes/origin/*</span></div><div class=\"line\">[branch <span class=\"string\">\"master\"</span>]</div><div class=\"line\">    remote = origin</div><div class=\"line\">    merge = refs/heads/master</div><div class=\"line\">[<span class=\"keyword\">alias</span>]     <span class=\"comment\">#命令别名，要删除别名，直接删掉对应的行即可。</span></div><div class=\"line\">    last = log -<span class=\"number\">1</span></div></pre></td></tr></table></figure>\n</li>\n<li><p>当前用户的Git配置文件放在用户主目录下的一个隐藏文件.gitconfig中：</p>\n<figure class=\"highlight nix\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">cat .gitconfig</div><div class=\"line\">[alias]</div><div class=\"line\">    <span class=\"attr\">co</span> = checkout</div><div class=\"line\">    <span class=\"attr\">ci</span> = commit</div><div class=\"line\">    <span class=\"attr\">br</span> = branch</div><div class=\"line\">    <span class=\"attr\">st</span> = status</div><div class=\"line\">[user]</div><div class=\"line\">    <span class=\"attr\">name</span> = Your Name</div><div class=\"line\">    <span class=\"attr\">email</span> = your@email.com</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>配置别名也可以直接修改这个文件，如果改错了，可以删掉文件重新通过命令配置(参考第2节 “Git配置”)。</p>\n<hr>\n<h1 id=\"团队协作\"><a href=\"#团队协作\" class=\"headerlink\" title=\"团队协作\"></a>团队协作</h1><h2 id=\"抓取分支\"><a href=\"#抓取分支\" class=\"headerlink\" title=\"抓取分支\"></a>抓取分支</h2><p>多人协作时，大家都会往master和dev分支上推送各自的修改。现在，模拟一个你的小伙伴，可以在另一台电脑（注意要把SSH Key添加到GitHub）或者同一台电脑的另一个目录下克隆：<br><code>git clone git@github.com:myleolan/learngit.git</code></p>\n<p>当你的小伙伴从远程库clone时，默认情况下，你的小伙伴只能看到本地的<strong>master</strong>分支。可以用<strong>git branch</strong>命令看看；现在，你的小伙伴要在dev分支上开发，就必须<strong>创建远程origin的dev分支到本地</strong>，于是他用命令创建本地dev分支：<code>git checkout -b dev origin/dev</code>　(在origin上创建dev，-b切换到dev分支;如果本地已经有dev分支了，直接切换就好)</p>\n<p>现在，他就可以在dev上继续修改，然后，时不时地把dev分支push到远程：<br><code>git commit -m &quot;add /usr/bin/env&quot;</code></p>\n<p>本地已经有dev分支了就不用创建了，直接执行下面的命令会自动在远程服务器新建dev分支。<br><code>git push origin dev</code>　(把本地dev推到远程origin上，会自动寻找origin的dev分支)</p>\n<p>你的小伙伴已经向<strong>origin/dev</strong>分支推送了他的提交，而碰巧你也对同样的文件作了修改，并试图推送：<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">git add hello.py</div><div class=\"line\">git <span class=\"keyword\">commit</span> -m <span class=\"string\">\"add coding: utf-8\"</span></div><div class=\"line\">git push origin dev</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">To</span> git@github.com:myleolan/learngit.git</div><div class=\"line\"> ! [rejected]        dev -&gt; dev (non-<span class=\"keyword\">fast</span>-forward)</div><div class=\"line\"><span class=\"keyword\">error</span>: <span class=\"keyword\">failed</span> <span class=\"keyword\">to</span> push <span class=\"keyword\">some</span> refs <span class=\"keyword\">to</span> <span class=\"string\">'git@github.com:myleolan/learngit.git'</span></div><div class=\"line\">hint: Updates were rejected because the tip <span class=\"keyword\">of</span> your <span class=\"keyword\">current</span> branch <span class=\"keyword\">is</span> behind</div><div class=\"line\">hint: its remote counterpart. <span class=\"keyword\">Merge</span> the remote changes (e.g. <span class=\"string\">'git pull'</span>)</div><div class=\"line\">hint: <span class=\"keyword\">before</span> pushing again.</div><div class=\"line\">hint: See the <span class=\"string\">'Note about fast-forwards'</span> <span class=\"keyword\">in</span> <span class=\"string\">'git push --help'</span> <span class=\"keyword\">for</span> details.</div></pre></td></tr></table></figure></p>\n<p>推送失败，因为你的小伙伴的最新提交和你试图推送的提交有冲突，解决办法也很简单，Git已经提示我们，先用<strong>git pull</strong>把最新的提交从<strong>origin/dev</strong>抓下来，然后，在本地合并，解决冲突，再推送：<br><figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">git pull</div><div class=\"line\"></div><div class=\"line\">remote: Counting object<span class=\"variable\">s:</span> <span class=\"number\">5</span>, done.</div><div class=\"line\">remote: Compressing object<span class=\"variable\">s:</span> <span class=\"number\">100</span>% (<span class=\"number\">2</span>/<span class=\"number\">2</span>), done.</div><div class=\"line\">remote: Total <span class=\"number\">3</span> (delta <span class=\"number\">0</span>), reused <span class=\"number\">3</span> (delta <span class=\"number\">0</span>)</div><div class=\"line\">Unpacking object<span class=\"variable\">s:</span> <span class=\"number\">100</span>% (<span class=\"number\">3</span>/<span class=\"number\">3</span>), done.</div><div class=\"line\">From github.<span class=\"keyword\">com</span>:myleolan/learngit</div><div class=\"line\">   fc38031..<span class=\"number\">291</span>bea8  dev        -&gt; origin/dev</div><div class=\"line\">There <span class=\"keyword\">is</span> <span class=\"keyword\">no</span> tracking information <span class=\"keyword\">for</span> the current branch.</div><div class=\"line\">Please specify which branch you want <span class=\"keyword\">to</span> merge with.</div><div class=\"line\">See git-pull(<span class=\"number\">1</span>) <span class=\"keyword\">for</span> details</div><div class=\"line\">    git pull <span class=\"symbol\">&lt;remote&gt;</span> <span class=\"symbol\">&lt;branch&gt;</span></div><div class=\"line\">If you wish <span class=\"keyword\">to</span> <span class=\"keyword\">set</span> tracking information <span class=\"keyword\">for</span> this branch you can <span class=\"keyword\">do</span> <span class=\"keyword\">so</span> with:</div><div class=\"line\">    git branch --<span class=\"keyword\">set</span>-upstream dev origin/<span class=\"symbol\">&lt;branch&gt;</span></div></pre></td></tr></table></figure></p>\n<p>git pull也失败了，原因是没有指定<strong>本地dev分支</strong>与远程<strong>origin/dev</strong>分支的链接，根据提示，设置dev和origin/dev的链接(绑定这两个分支)：<br><figure class=\"highlight q\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">git branch --<span class=\"built_in\">set</span>-upstream <span class=\"built_in\">dev</span> origin/<span class=\"built_in\">dev</span> </div><div class=\"line\">如果git pull还是失败，说明绑定不了。</div><div class=\"line\">试试官方更改的命令：git branch --<span class=\"built_in\">set</span>-upstream-to=origin/<span class=\"built_in\">dev</span> <span class=\"built_in\">dev</span></div></pre></td></tr></table></figure></p>\n<p><code>git pull -f origin master</code>　强制覆盖也行，但很危险。</p>\n<p>再次<strong>git pull</strong>成功，但是合并有冲突，需要手动解决，解决的方法和第12节“解决冲突”完全一样。解决后，提交，再push：<br><figure class=\"highlight maxima\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">git commit -m <span class=\"string\">\"merge &amp; fix hello.py\"</span></div><div class=\"line\">git <span class=\"built_in\">push</span> <span class=\"built_in\">origin</span> dev</div></pre></td></tr></table></figure></p>\n<p><strong>多人协作的工作模式通常是这样：</strong></p>\n<ol>\n<li>首先，可以试图用<code>git push origin branch-name</code>推送自己的修改；</li>\n<li>如果推送失败，则因为远程分支比你的本地更新，需要先用git pull试图合并；</li>\n<li>如果合并有冲突，则解决冲突，并在本地提交；</li>\n<li>没有冲突或者解决掉冲突后，再用<code>git push origin branch-name</code>推送就能成功！<br>如果<strong>git pull</strong>提示“<strong>no tracking information</strong>”，则说明本地分支和远程分支的链接关系没有创建，用命令:<br><code>git branch --set-upstream branch-name origin/branch-name</code><br>这就是多人协作的工作模式，一旦熟悉了，就非常简单。</li>\n</ol>\n<h2 id=\"F-amp-Q\"><a href=\"#F-amp-Q\" class=\"headerlink\" title=\"F&amp;Q\"></a>F&amp;Q</h2><p>签出远程分支，出现以下错误：<br>fatal: Cannot update paths and switch to branch ‘develop’ at the same time.<br>解决方法：<br>先<code>git fetch</code>再<code>git checkout -b develop origin/develop</code><br>因为本地还没有”develop”分支信息，需要先fetch或者pull</p>\n<p>假设有人往服务器上推送了一个新的分支，但是我不知道分支的名称是什么，我如何能获取到服务器上的分支列表呢？<br>      a. 你直接去问他<br>      b. 如果用GitHub，直接去网站看<br>      c. <code>git ls-remote --heads origin</code></p>\n<h2 id=\"推送分支\"><a href=\"#推送分支\" class=\"headerlink\" title=\"推送分支\"></a>推送分支</h2><p>推送分支，就是把该分支上的所有本地提交推送到远程库。推送时，要指定本地分支，这样，Git就会把该分支推送到远程库对应的远程分支上：<code>git push origin master</code></p>\n<p>如果要推送其他分支，比如dev，就改成：<code>git push origin dev</code></p>\n<p>但是，并不是一定要把本地分支往远程推送，那么，哪些分支需要推送，哪些不需要呢？<br>  ● master分支是主分支，因此要时刻与远程同步；<br>  ● dev分支是开发分支，团队所有成员都需要在上面工作，所以也需要与远程同步；<br>  ● bug分支只用于在本地修复bug，就没必要推到远程了，除非老板要看看你每周到底修复了几个bug；<br>  ● feature分支是否推到远程，取决于你是否和你的小伙伴合作在上面开发。<br>总之，就是在Git中，分支完全可以在本地自己藏着玩，是否推送，视你的心情而定！</p>\n<hr>\n<h1 id=\"参与开源项目\"><a href=\"#参与开源项目\" class=\"headerlink\" title=\"参与开源项目\"></a>参与开源项目</h1><p>如何参与一个开源项目呢？比如人气极高的<strong>bootstrap</strong>项目，这是一个非常强大的CSS框架，你可以访问它的<strong><a href=\"https://github.com/twbs/bootstrap\" target=\"_blank\" rel=\"external\">GitHub项目主页</a></strong>，点“<strong>Fork</strong>”就在自己的账号下克隆了一个bootstrap仓库，然后，从自己的账号下clone：<code>git clone git@github.com:**your_username**/bootstrap.git</code></p>\n<p>一定要从自己的账号下clone仓库，这样你才能推送修改(在第4节 “创建远程仓库”中结尾就提到了另一种克隆方式)。如果从bootstrap的作者的仓库地址，采用<code>git clone git@github.com:twbs/bootstrap.git</code>的方式克隆，因为没有权限，你将不能推送修改（见第4节 “创建远程仓库”结尾处，<strong>删除.git文件夹</strong>的方法）。</p>\n<p><strong>Bootstrap</strong>的官方仓库twbs/bootstrap、你在GitHub上克隆的仓库<strong>your_username/bootstrap</strong>，以及你自己克隆到本地电脑的仓库，他们的关系就像下图显示的那样：<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/git%E6%95%99%E7%A8%8B007.png\" alt=\"\"></p>\n<ul>\n<li>如果你想修复bootstrap的一个bug，或者新增一个功能，立刻就可以开始干活，干完后，往自己的仓库推送。</li>\n<li>如果<strong>你希望bootstrap的官方库能接受你的修改</strong>，你就可以在你的GitHub该项目页上发起一个<strong>pull request</strong>。当然，对方是否接受你的<strong>pull request</strong>就不一定了。</li>\n</ul>\n<hr>\n<h1 id=\"自己搭建Git服务器\"><a href=\"#自己搭建Git服务器\" class=\"headerlink\" title=\"自己搭建Git服务器\"></a>自己搭建Git服务器</h1><p>GitHub就是一个免费托管开源代码的远程仓库。但是对于某些视源代码如生命的商业公司来说，既不想公开源代码，又舍不得给GitHub交保护费，那就只能自己搭建一台Git服务器作为私有仓库使用。搭建Git服务器需要准备一台运行Linux的机器，强烈用Ubuntu、Debian或者Centos、redhat，这样，通过几条简单的apt命令就可以完成安装。<br><strong>root登录</strong></p>\n<ul>\n<li><p>第一步，<strong>安装git：</strong><br><code>sudo apt-get install git</code> 或 <code>yum install git</code></p>\n</li>\n<li><p>第二步，<strong>创建一个git用户，用来运行git服务：</strong><br><code>sudo adduser git</code></p>\n</li>\n</ul>\n<ul>\n<li>第三步，<strong>初始化Git仓库：</strong><br>先选定一个目录作为Git仓库，假定是/data/git/learngit.git<br>在/data/git/目录下输入命令：<br><code>sudo git init --bare learngit.git</code></li>\n</ul>\n<p>Git就会创建一个裸仓库，裸仓库没有工作区，因为服务器上的Git仓库纯粹是为了共享，所以不让用户直接登录到服务器上去改工作区，并且服务器上的Git仓库通常都以.git结尾。<br><code>sudo chown -R git:git learngit.git</code></p>\n<p>Git服务器就已经搭得差不多了。下面我们在客户端clone一下远程仓库<br><code>git clone git@IP:/data/git/learngit.git</code><br>Cloning into ‘learngit’…<br>The authenticity of host ‘192.168.8.34 (192.168.8.34)’ can’t be established.<br>RSA key fingerprint is 2b:55:45:e7:4c:29:cc:05:33:78:03:bd:a8:cd:08:9d.<br>Are you sure you want to continue connecting (yes/no)? yes<br>Warning: Permanently added ‘192.168.8.34’ (RSA) to the list of known hosts.<br>git@192.168.8.34’s password:<br><strong>能连接但要密码</strong>，接着下一步。</p>\n<ul>\n<li>第四步，<strong>创建证书登录（Git服务器打开RSA认证）</strong>：然后就可以去Git服务器上添加你的公钥用来验证你的信息了。<code>vim /etc/ssh/sshd_config</code>中将RSA认证打开，即：<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attribute\">RSAAuthentication</span> <span class=\"literal\">yes</span>     </div><div class=\"line\">PubkeyAuthentication <span class=\"literal\">yes</span>     </div><div class=\"line\">AuthorizedKeysFile  .ssh/authorized_keys</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>这里我们可以看到<strong>公钥存放在.ssh/authorized_keys</strong>文件中。所以我们在<strong>/home/git下创建.ssh目录，然后创建authorized_keys文件</strong>，收集所有需要登录的用户的公钥，就是他们自己的id_rsa.pub文件，把所有公钥导入到<strong>/home/git/.ssh/authorized_keys文件里，一行一个。</strong><br>此时再次连接已经可以免密钥登录啦。</p>\n<ul>\n<li>第五步，<strong>禁用shell登录：</strong><br>出于安全考虑，第二步创建的git用户不允许登录shell，这可以通过<br>编辑/etc/passwd文件完成。找到类似下面的一行：<br><code>git:x:1001:1001:,,,:/home/git:/bin/bash</code><br>改为：<br><code>git:x:1001:1001:,,,:/home/git:/usr/bin/git-shell</code></li>\n</ul>\n<p>这样，git用户可以正常通过ssh使用git，但无法登录shell，因为我们为git用户指定的git-shell每次一登录就自动退出。</p>\n<ul>\n<li>第六步，<strong>克隆远程仓库：</strong><br>现在，可以通过git clone命令克隆远程仓库了，在各自的电脑上运行：<br><code>git clone git@IP:/data/git/learngit.git</code><br>Cloning into ‘sample’…<br>warning: You appear to have cloned an empty repository.<br>剩下的推送就简单了。</li>\n</ul>\n<p><strong>管理公钥</strong></p>\n<p>如果团队很小，把每个人的公钥收集起来放到服务器的/home/git/.ssh/authorized_keys文件里就是可行的。如果团队有几百号人，就没法这么玩了，这时，可以用<strong>Gitosis</strong>来管理公钥。<br>这里我们不介绍怎么玩Gitosis了，几百号人的团队基本都在500强了，相信找个高水平的Linux管理员问题不大。管理公钥也可用<strong>Gitolite</strong><br><strong>管理权限</strong><br>有很多不但视源代码如生命，而且视员工为窃贼的公司，会在版本控制系统里设置一套完善的权限控制，每个人是否有读写权限会精确到每个分支甚至每个目录下。因为Git是为Linux源代码托管而开发的，所以Git也继承了开源社区的精神，不支持权限控制。不过，因为<strong>Git支持钩子（hook）</strong>，所以，可以在服务器端编写一系列脚本来控制提交等操作，达到权限控制的目的。<strong>Gitolite</strong>就是这个工具。<br>这里我们也不介绍Gitolite了，不要把有限的生命浪费到权限斗争中。</p>\n<p>搭建服务器的同时采用Gitolite来管理权限，参考：<br><a href=\"https://my.oschina.net/u/2351685/blog/509322\" target=\"_blank\" rel=\"external\">https://my.oschina.net/u/2351685/blog/509322</a></p>\n<p>Gitolite的使用，参考：<a href=\"http://www.uml.org.cn/pzgl/201404092.asp\" target=\"_blank\" rel=\"external\">http://www.uml.org.cn/pzgl/201404092.asp</a></p>\n<hr>\n<h1 id=\"参考资料：\"><a href=\"#参考资料：\" class=\"headerlink\" title=\"参考资料：\"></a>参考资料：</h1><p>连猴子都会的git：<br><a href=\"http://backlogtool.com/git-guide/cn/\" target=\"_blank\" rel=\"external\">http://backlogtool.com/git-guide/cn/</a></p>\n<p>Pro Git：<a href=\"http://iissnan.com/progit/\" target=\"_blank\" rel=\"external\">http://iissnan.com/progit/</a><br>廖雪峰git：</p>\n<p><a href=\"http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000\" target=\"_blank\" rel=\"external\">http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000</a></p>\n<p>外国友人git手册:<br><a href=\"https://pan.baidu.com/s/1kU5OCOB#path=%252Fpub%252Fgit\" target=\"_blank\" rel=\"external\">https://pan.baidu.com/s/1kU5OCOB#path=%252Fpub%252Fgit</a><br>10个迅速提升你 Git 水平的提示:<br><a href=\"http://www.oschina.net/translate/10-tips-git-next-level\" target=\"_blank\" rel=\"external\">http://www.oschina.net/translate/10-tips-git-next-level</a></p>\n<hr>\n","excerpt":"","more":"<h1 id=\"安装Git\"><a href=\"#安装Git\" class=\"headerlink\" title=\"安装Git\"></a>安装Git</h1><h2 id=\"Debian-Ubuntu\"><a href=\"#Debian-Ubuntu\" class=\"headerlink\" title=\"Debian/Ubuntu\"></a>Debian/Ubuntu</h2><p><code>apt-get install git</code></p>\n<h2 id=\"Centos-RedHat\"><a href=\"#Centos-RedHat\" class=\"headerlink\" title=\"Centos/RedHat\"></a>Centos/RedHat</h2><p><code>yum install git</code></p>\n<h2 id=\"Windows\"><a href=\"#Windows\" class=\"headerlink\" title=\"Windows\"></a>Windows</h2><p>安装包下载：<a href=\"https://git-for-windows.github.io/\">https://git-for-windows.github.io/</a></p>\n<h2 id=\"Mac\"><a href=\"#Mac\" class=\"headerlink\" title=\"Mac\"></a>Mac</h2><p>安装包下载：<a href=\"https://sourceforge.net/projects/git-osx-installer/\">https://sourceforge.net/projects/git-osx-installer/</a></p>\n<p><code>git --version</code>  　查看版本</p>\n<hr>\n<h1 id=\"Git配置\"><a href=\"#Git配置\" class=\"headerlink\" title=\"Git配置\"></a>Git配置</h1><p><code>ls -a</code>    或 <code>ls -ah</code>    方便查看隐藏文件<br>执行<code>git config</code>命令就是调用此文件<br><code>/etc/gitconfig</code>       全部用户生效 –system调用的文件<br><code>～/.gitcinfig</code>      当前用户有效 –global调用的文件<br><code>.git/config</code>         当前项目的配置文件<br><strong>.git/config</strong>的配置会覆盖<strong>/etc/gitconfig</strong> 中的同名变量。<br>win中配置文件一般在主目录下的对应用户文件夹里<strong>C:\\Documents and Settings\\$USER</strong><br>win中<strong>/etc/gitconfig</strong>是在安装目录中。</p>\n<h2 id=\"用户信息配置\"><a href=\"#用户信息配置\" class=\"headerlink\" title=\"用户信息配置\"></a>用户信息配置</h2><figure class=\"highlight autoit\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">git config --<span class=\"keyword\">global</span> user.name <span class=\"string\">\"leolan\"</span>  <span class=\"meta\">#leolan为用户名</span></div><div class=\"line\">git config --<span class=\"keyword\">global</span> user.email <span class=\"number\">842632422</span><span class=\"symbol\">@qq</span>.com   <span class=\"meta\">#邮箱</span></div><div class=\"line\">(用了<span class=\"keyword\">global</span>选项后当前用户的所有项目默认使用此用户信息，某一项目若使用其它的用户信息。把--<span class=\"keyword\">global</span>去掉重新配置，会在该项目.git/config中重新生成配置就行了。)</div><div class=\"line\">以下可选：</div><div class=\"line\">git config --<span class=\"keyword\">global</span> color.ui <span class=\"literal\">true</span>    <span class=\"meta\">#让Git显示颜色，会让命令输出看起来更醒目</span></div><div class=\"line\">git config --<span class=\"keyword\">global</span> core.editor emace   <span class=\"meta\">#指定emace为默认编辑器，不指定默认为vim</span></div><div class=\"line\">git config --<span class=\"keyword\">global</span> merge.tool vimdiff  <span class=\"meta\">#差异化分析工具（冲突合并），git可以理解kdiff3 ,tkdiff,meld,xxdiff,emerge,vimdiff,gvimdiff,ecmerge,opendiff等工具的输出信息。</span></div><div class=\"line\"></div><div class=\"line\">git config user.name   <span class=\"meta\">#查看配置的用户名，改为user.email则为邮箱。</span></div><div class=\"line\">git config --list      <span class=\"meta\">#查看已配置的用户信息</span></div></pre></td></tr></table></figure>\n<hr>\n<h1 id=\"基本使用方法\"><a href=\"#基本使用方法\" class=\"headerlink\" title=\"基本使用方法\"></a>基本使用方法</h1><p><strong>一般进入某项目的目录后再执行以下命令。</strong><br><figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">git init\t        <span class=\"comment\">#设置当前目录为Git仓库</span></div><div class=\"line\">git init 目录名 \t        <span class=\"comment\">#指定目录为Git仓库</span></div><div class=\"line\"></div><div class=\"line\">git <span class=\"keyword\">clone</span> <span class=\"title\">［源］\t\t#从源拷贝项目到本地的当前目录</div><div class=\"line\">git</span> <span class=\"keyword\">clone</span> <span class=\"title\">［源］［目录］\t#指定源下载到某个目录</div><div class=\"line\">例：git</span> <span class=\"keyword\">clone</span> <span class=\"title\">git</span>://github.com/schacon/grit.git mygrit</div><div class=\"line\"></div><div class=\"line\">git status\t\t<span class=\"comment\">#查看当前目录文件的状态，加 -s 显示简短信息。\"A\"是已添加到缓存、\"M\"为文件有改动、\"空格\"为未缓存的文件，组合显示如：\"AM\"代表已缓存的文件有改动，\"空格M\"代表未缓存的文件有改动。</span></div><div class=\"line\">git add 文件名   <span class=\"comment\">#添加文件到项目缓存中，没有添加的文件不属于项目文件，也不会痛不到服务器。</span></div><div class=\"line\">git add .  \t\t<span class=\"comment\">#添加当前目录到项目缓存中，如果添加多个文件，此命令更方便。</span></div><div class=\"line\">git commit -m <span class=\"string\">\"项目的版本或简短说明\"</span>\t<span class=\"comment\">#可以指定版本号及简单说明改动了哪些内容，同时会把所有改动同步到服务器上。</span></div><div class=\"line\">git commit -am <span class=\"string\">\"项目的版本或简短说明\"</span>\t<span class=\"comment\">#改动了多个文件又不想一个个添加，此命令自动添加所有改动的文件并同步到服务器。</span></div></pre></td></tr></table></figure></p>\n<p>Git的所有工作都是现在本地缓存的，只有执行<strong>git commit -m “简短说明”</strong> 后才会向服务器提交。<br><figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">git <span class=\"keyword\">diff\t</span>        <span class=\"comment\">#未缓存的改动</span></div><div class=\"line\">git <span class=\"keyword\">diff </span>--<span class=\"keyword\">cached\t</span><span class=\"comment\">#已缓存的改动</span></div><div class=\"line\">git <span class=\"keyword\">diff </span>HEAD\t\t<span class=\"comment\">#已缓存和未缓存的所有改动</span></div><div class=\"line\">git <span class=\"keyword\">diff </span>--stat\t\t<span class=\"comment\">#显示摘要而非整个diff</span></div><div class=\"line\">git reset -- HEAD 文件\t<span class=\"comment\">#取消文件已缓存的内容，--很重要，没有加--表示切换到另一个分支。</span></div><div class=\"line\">git rm 文件\t\t<span class=\"comment\">#从项目中及本地删除文件,可不用执行。</span></div><div class=\"line\">git mv 文件\t\t<span class=\"comment\">#从项目中及本地重命名文件,可不用执行。</span></div></pre></td></tr></table></figure></p>\n<hr>\n<h1 id=\"创建远程仓库\"><a href=\"#创建远程仓库\" class=\"headerlink\" title=\"创建远程仓库\"></a>创建远程仓库</h1><p>在继续阅读后续内容前，请自行注册GitHub账号。由于你的本地Git仓库和GitHub仓库之间的传输是通过SSH加密的，所以，需要一点设置：</p>\n<ul>\n<li><strong>第1步</strong>：创建SSH Key。在用户主目录下，看看有没有.ssh目录，如果有，再看看这个目录下有没有id_rsa和id_rsa.pub这两个文件，如果已经有了，可直接跳到下一步。如果没有，打开Shell（Windows下打开Git Bash），创建SSH Key：<code>ssh-keygen -t rsa -C &quot;842632422@qq.com&quot;</code>你需要把邮件地址换成你自己的邮件地址，然后一路回车，使用默认值即可，由于这个Key也不是用于军事目的，所以也无需设置密码。</li>\n</ul>\n<p>如果一切顺利的话，可以在用户主目录里找到.ssh目录，里面有id_rsa和id_rsa.pub两个文件，这两个就是SSH Key的秘钥对，<strong>id_rsa是私钥，不能泄露出去，id_rsa.pub是公钥</strong>，可以放心地告诉任何人。</p>\n<ul>\n<li><strong>第2步</strong>：登陆GitHub，打开“Account settings”，“SSH Keys”页面：<br>然后，点“Add SSH Key”，填上任意Title，在Key文本框里粘贴id_rsa.pub（公钥）文件的内容：</li>\n</ul>\n<p>点“Add Key”，你就应该看到已经添加的Key：<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/git%E6%95%99%E7%A8%8B001.png\" alt=\"\"><br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/git%E6%95%99%E7%A8%8B002.png\" alt=\"\"></p>\n<p>为什么GitHub需要SSH Key呢？因为GitHub需要识别出你推送的提交确实是你推送的，而不是别人冒充的，而Git支持SSH协议，所以，GitHub只要知道了你的公钥，就可以确认只有你自己才能推送。<br>当然，GitHub允许你添加多个Key。假定你有若干电脑，你一会儿在公司提交，一会儿在家里提交，只要把每台电脑的Key都添加到GitHub，就可以在每台电脑上往GitHub推送了。<br>最后友情提示，在GitHub上免费托管的Git仓库，任何人都可以看到喔（但只有你自己才能改）。所以，不要把敏感信息放进去。<br>`ssh -T git@github.com<br>提示：Hi MyLeoLan! You’ve successfully authenticated, but GitHub does not provide shell access.　　则成功添加sshkey</p>\n<p>在右上角找到“Create a new repo”按钮，创建一个新的仓库：<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/git%E6%95%99%E7%A8%8B003.png\" alt=\"\"><br>目前，在GitHub上的这个仓库还是空的，会提示你创建README.md文件。</p>\n<p>可以从这个仓库克隆出新的仓库（克隆到本地），也可以把一个已有的本地仓库与之关联，然后，把本地仓库的内容推送到GitHub仓库（本地的项目或下载了别人的项目想要推送到自己的仓库，和<strong>fork</strong>的方式不同，这种方式要删除隐藏的<strong>.git文件夹</strong>因为<strong>.git文件夹</strong>包含了别人的库信息，你是推送不到自己的库上去的，删掉之后添加的才是自己的信息）。</p>\n<hr>\n<h1 id=\"从远程库克隆仓库\"><a href=\"#从远程库克隆仓库\" class=\"headerlink\" title=\"从远程库克隆仓库\"></a>从远程库克隆仓库</h1><p>远程库已经准备好了，下一步是用命令git clone克隆一个本地库：<br><code>git clone git@github.com:MyLeoLan/testgit.git</code><br>实际上，Git支持多种协议，默认的git://使用ssh，但也可以使用https等其他协议。<br>使用https除了速度慢以外，还有个最大的麻烦是<strong>每次推送都必须输入口令</strong>，但是在某些只开放http端口的公司内部就无法使用ssh协议而只能用https。</p>\n<h1 id=\"本地仓库推送到远程仓库\"><a href=\"#本地仓库推送到远程仓库\" class=\"headerlink\" title=\"本地仓库推送到远程仓库\"></a>本地仓库推送到远程仓库</h1><p>把本地仓库的内容推送到远程（GitHub）仓库。在本地的XXX仓库下运行命令：</p>\n<p><code>git remote add origin git@github.com:myleolan/learngit.git</code><br>表示把本地的XXX仓库与远程learngit.git库绑定<strong>(添加远程库)</strong>，以后推送都推送到这个库中。地址换成自己的库地址。你的SSH Key公钥不在我的账户列表中是推不上去的。</p>\n<p>关联后，使用命令<code>git push -u origin master</code>完成第一次推送master分支的所有内容（一般远程的master分支会自动命名为origin用于区分，而本地的master还是master分支，<strong>-u</strong>会关联分支，下次推送默认推送到此分支。）</p>\n<p>推送时<strong>git push origin XXXX</strong> （xxxx可以指定本地某分支推送到远程的origin分支）此后，每次本地提交后，只要有必要，就可以使用命令<code>git push origin master</code>推送最新修改；简化命令为：<code>git pull</code>(从远程仓库提取数据并尝试合并到当前分支)和<code>git push</code></p>\n<p>从远程库下载分支和数据的更新到当前项目（不会合并，pull等同于fetch+merge）：<code>git fetch origin</code></p>\n<p>查看当前项目的远程库：<br><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">git remote 或 git remote -v</div><div class=\"line\"></div><div class=\"line\">origin  git@github<span class=\"selector-class\">.com</span>:myleolan/learngit<span class=\"selector-class\">.git</span> (fetch)</div><div class=\"line\">origin  git@github<span class=\"selector-class\">.com</span>:myleolan/learngit<span class=\"selector-class\">.git</span> (push)</div></pre></td></tr></table></figure></p>\n<p>上面显示了可以抓取和推送的origin的地址。如果没有推送权限，就看不到push的地址。</p>\n<p>删除远程仓库：<code>git remote rm ［别名或仓库名］</code></p>\n<ul>\n<li>pull：本地 &lt;– 远程   (如果你本地落后远程，必然要pull)</li>\n<li>push：本地 –&gt; 远程  (如果你本地超前远程，必然要push)</li>\n</ul>\n<p>本质上都是同步commit</p>\n<p>分布式版本系统的最大好处之一是在本地工作完全不需要考虑远程库的存在，也就是有没有联网都可以正常工作，而SVN在没有联网的时候是拒绝干活的！当有网络的时候，再把本地提交推送一下就完成了同步！</p>\n<hr>\n<h1 id=\"管理修改\"><a href=\"#管理修改\" class=\"headerlink\" title=\"管理修改\"></a>管理修改</h1><p>第一次修改 -&gt; <strong>git add</strong>（放入暂存区）-&gt; 第二次修改 -&gt;<strong>git commit</strong>（提交暂存区，准备推送到远程）</p>\n<p>Git管理的是修改，当你用git add命令后，在工作区的第一次修改被放入暂存区，准备提交，但是，在<strong>工作区的第二次修改并没有放入暂存区</strong>，所以，git commit<strong>只负责把暂存区的修改提交了</strong>，也就是第一次的修改被提交了，第二次的修改不会被提交。</p>\n<p>提交后，用<code>git diff HEAD</code>命令可以查看工作区和版本库里面最新版本的区别。</p>\n<p>怎么提交第二次修改呢？你可以继续git add再git commit，也可以别着急提交第一次修改，先git add第二次修改，再git commit，就相当于把两次修改合并后一块提交了：</p>\n<p><strong>第一次修改 -&gt; git add -&gt; 第二次修改 -&gt; git add -&gt; git commit</strong><br>好啦，把第二次修改提交了。</p>\n<hr>\n<h1 id=\"删除文件\"><a href=\"#删除文件\" class=\"headerlink\" title=\"删除文件\"></a>删除文件</h1><p>一般情况下，你通常直接在文件管理器中把没用的文件删了，或者用<strong>rm</strong>命令删了,此时文件删除了但版本库里还有记录，文件可能恢复不了。这个时候，Git知道你删除了文件，因此，工作区和版本库就不一致了，<code>git status</code>命令会提示你哪些文件被删除了。</p>\n<p>要从版本库中删除该文件，那就用命令<code>git rm</code>删掉，并且<code>git commit</code> （git rm会同时删除版本库及文件）</p>\n<p>另一种情况是删错了，因为版本库里还有呢，所以可以很轻松地把误删的文件恢复到最新版本：<code>git checkout -- filename</code></p>\n<p>git checkout其实是用版本库里的版本替换工作区的版本，无论工作区是修改还是删除，都可以“一键还原”。</p>\n<p><strong>提交代码分两步</strong>:</p>\n<ul>\n<li>1.从工作目录，提交到stage。</li>\n</ul>\n<p>从工作目录提交到stage，需要用add或者rm命令，只提交到stage，而没有提交到master，是不会自动同步到master的。</p>\n<ul>\n<li>2.从stage提交到master。</li>\n</ul>\n<p>从stage提交到master用commit命令。</p>\n<p><strong>工作区</strong>--&gt;--<em>add,rm</em>--&gt;--<strong>stage</strong>--&gt;--<em>commit</em>--&gt;--<strong>master</strong></p>\n<p><strong>退回也是要分两步</strong>:</p>\n<ul>\n<li><p>1.从master退回到stage<br>对于还没有提交到stage的，可以从stage用checkout命令退回，这一步会取stage中的文件状态，覆盖掉工作目录中文件的状态，跟master完全没关系。</p>\n</li>\n<li><p>2.从stage退回到工作目录</p>\n</li>\n</ul>\n<p>对于已经到达stage的，想把state中的文件状态用master中的覆盖掉，就用reset命令，这样就把stage中修改用master的状态覆盖掉了，完全跟工作目录没关系</p>\n<p><strong>工作区</strong>--&lt;--<em>checkout</em>--&lt;--<strong>stage</strong>--&lt;--<em>reset</em>--&lt;--<strong>master</strong></p>\n<p>要删除某些文件，不能简单用rm删除，远程仓库依然会保留文件（因为它不知道你什么时候就进行版本回退了，需要用到那些文件），要彻底删除，本地<code>git rm filename</code>命令删除文件再<strong>git push</strong>上去，或者进入github管理界面手动一个一个删除文件。</p>\n<hr>\n<h1 id=\"版本回退\"><a href=\"#版本回退\" class=\"headerlink\" title=\"版本回退\"></a>版本回退</h1><figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">git status \t   <span class=\"comment\">#查看当前状态</span></div><div class=\"line\">git diff      \t   <span class=\"comment\">#查看做了哪些修改</span></div><div class=\"line\">git <span class=\"keyword\">add</span><span class=\"bash\"> file  \t   <span class=\"comment\">#添加到缓存</span></div><div class=\"line\"></span>git commit -m <span class=\"string\">\"xxx\"</span><span class=\"comment\">#提交到本地版本库</span></div><div class=\"line\">git log\t\t   <span class=\"comment\">#可查看所有的历史版本，信息太多加--pretty=oneline参数简化</span></div></pre></td></tr></table></figure>\n<p>首先，Git必须知道当前版本是哪个版本，在Git中，用<strong>HEAD表示当前版本</strong>，也就是最新的提交过commit的这个版本，<strong>HEAD^</strong>是上一个版本，上上一个版本就是<strong>HEAD^^</strong>，当然往上100个版本写100个<strong>^</strong>比较容易数不过来，所以写成<strong>HEAD~100</strong>。</p>\n<p>此节实验当我没有保存下来，所以引用廖雪峰老师的数据，实验是通过修改readme.txt文件进行的，假设我们要把当前版本“append GPL”回退到上一个版本“add distributed”，就可以使用git reset命令：<code>git reset --hard HEAD^</code> (退回上一个版本)</p>\n<p><code>cat readme.txt</code>看看readme.txt的内容是不是版本add distributed：</p>\n<p>Git is a distributed version control system.<br>Git is free software.</p>\n<p>果然,还可以继续回退到上一个版本wrote a readme file，不过且慢，我们用<code>git log</code>再看看现在版本库的状态：<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">commit</span> ea34578d5496d7dd233c827ed32a8cd576c5ee85</div><div class=\"line\">Author: Michael Liao &lt;askxuefeng@gmail.com&gt;</div><div class=\"line\"><span class=\"built_in\">Date</span>:   Tue Aug <span class=\"number\">20</span> <span class=\"number\">14</span>:<span class=\"number\">53</span>:<span class=\"number\">12</span> <span class=\"number\">2013</span> +<span class=\"number\">0800</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">add</span> <span class=\"keyword\">distributed</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">commit</span> cb926e7ea50ad11b8f9e909c05226233bf755030</div><div class=\"line\">Author: Michael Liao &lt;askxuefeng@gmail.com&gt;</div><div class=\"line\"><span class=\"built_in\">Date</span>:   Mon Aug <span class=\"number\">19</span> <span class=\"number\">17</span>:<span class=\"number\">51</span>:<span class=\"number\">55</span> <span class=\"number\">2013</span> +<span class=\"number\">0800</span></div><div class=\"line\"></div><div class=\"line\">    wrote a readme <span class=\"keyword\">file</span></div></pre></td></tr></table></figure></p>\n<p>最新的那个版本append GPL已经看不到了！好比你从21世纪坐时光穿梭机来到了19世纪，想再回去已经回不去了，肿么办？只要上面的命令行窗口还没有被关掉，你就可以顺着往上找啊找啊，找到那个append GPL的<strong>commit id</strong>是3628164…，于是就可以指定回到未来的某个版本：<br><code>git reset --hard 3628164</code>     (退回指定版本）。</p>\n<p>如果已经关掉了命令行，找不到新版本的commit id怎么办？Git提供了一个命令<code>git reflog</code>用来<strong>记录你的每一次命令(历史命令，类似日志)</strong>，其中就包含了commit id：<br><figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">git reflog      查询历史版本号</div><div class=\"line\">ea34578 HEAD@&#123;<span class=\"number\">0</span>&#125;: rese<span class=\"variable\">t:</span> moving <span class=\"keyword\">to</span> HEAD^</div><div class=\"line\"><span class=\"number\">3628164</span> HEAD@&#123;<span class=\"number\">1</span>&#125;: commi<span class=\"variable\">t:</span> <span class=\"keyword\">append</span> GPL</div><div class=\"line\">ea34578 HEAD@&#123;<span class=\"number\">2</span>&#125;: commi<span class=\"variable\">t:</span> <span class=\"built_in\">add</span> distributed</div><div class=\"line\">cb926e7 HEAD@&#123;<span class=\"number\">3</span>&#125;: commit (initial): wrote <span class=\"keyword\">a</span> readme <span class=\"keyword\">file</span></div></pre></td></tr></table></figure></p>\n<p>第二行显示append GPL的commit id是3628164，现在，你又可以乘坐时光机回到未来了。</p>\n<p>版本号没必要写全，前几位就可以了，Git会自动去找。当然也不能只写前一两位,一般7-8位就行了，因为Git可能会找到多个版本号，就无法确定是哪一个了。<br>Git的版本回退速度非常快，因为Git在内部有个指向当前版本的HEAD指针，当你回退版本的时候，Git仅仅是把HEAD从指向append GPL：<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/git%E6%95%99%E7%A8%8B004.png\" alt=\"\"></p>\n<p>改为指向add distributed：</p>\n<p><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/git%E6%95%99%E7%A8%8B005.png\" alt=\"\"></p>\n<p>然后顺便把工作区的文件更新了。所以你让<strong>HEAD</strong>指向哪个版本号，你就把当前版本定位在哪。</p>\n<hr>\n<h1 id=\"撤销修改\"><a href=\"#撤销修改\" class=\"headerlink\" title=\"撤销修改\"></a>撤销修改</h1><p>当发现某部分代码需要撤销时<code>git checkout -- filename</code>可以丢弃工作区的修改：<strong>git checkout -- readme.txt</strong>（把readme.txt文件在工作区的修改全部撤销）</p>\n<p>这里有两种情况：</p>\n<ul>\n<li>1.<strong>readme.txt自修改后还没有被放到暂存区</strong>，现在，撤销修改就回到和版本库一模一样的状态；</li>\n</ul>\n<p>命令中的<strong>--</strong>很重要，没有<strong>--</strong>，就变成了“<strong>切换到另一个分支</strong>”的命令，我们在后面的分支管理中会再次遇到git checkout命令。</p>\n<ul>\n<li>2.<strong>readme.txt已经添加到暂存区后，又作了修改</strong>，现在，撤销修改就回到添加到暂存区后的状态。<br>总之，就是让这个文件回到最近一次<strong>git commit</strong>或<strong>git add</strong>时的状态。</li>\n</ul>\n<p>现在假定是凌晨3点，你不但写了一些胡话，还<strong>git add到暂存区</strong>了,庆幸的是，在<strong>commit</strong>之前，你发现了这个问题。用<code>git status</code>查看一下，修改只是添加到了暂存区，还没有提交。用命令<code>git reset HEAD file</code>(可以把暂存区的修改撤销掉（unstage），不带file则撤销所有文件的更改，重新放回工作区，此时就相当于<strong>没有git add</strong>的状态，但文件是改动过的）</p>\n<p><code>git reset</code>命令<strong>既可以回退版本，也可以把暂存区的修改回退到工作区。</strong>当我们用HEAD时，表示最新的版本。再用<code>git status</code>查看一下，现在暂存区是干净的，工作区有修改。<br>丢弃工作区的修改：<code>git checkout -- readme.txt</code> 可直接恢复文件并恢复版本库的内容（丢弃所有未git add的内容，回到最近一个最新版本）<br>注意：要完全撤回修改的代码，要<code>git reset HEAD file</code>后执行<code>git checkout -- file</code>才会完全包括工作区的内容也删除。</p>\n<p>现在，假设你不但改错了东西，还把暂存区提交到了版本库（执行了git commit），怎么办呢？还可以版本回退到上一个版本。如果<strong>还没有把自己的本地版本库推送到远程</strong>，可以用：<code>git reset --hard HEAD</code> 恢复到当前版本（改动了但没有commit的那个版本，如果进行了commit，此次commit就是一个新版本，只能通过<code>git reset --hard HEAD^</code>回到上一个commit）。如果<strong>已经提交到了远程</strong>，只能通过<code>git reset --hard HEAD^</code>版本回退了。</p>\n<hr>\n<h1 id=\"标签管理\"><a href=\"#标签管理\" class=\"headerlink\" title=\"标签管理\"></a>标签管理</h1><p>发布一个版本时，我们通常先在版本库中打一个标签（tag），这样，就唯一确定了打标签时刻的版本。将来无论什么时候，取某个标签的版本，就是把那个打标签的时刻的历史版本取出来。所以，标签也是版本库的一个快照。<br>Git的标签虽然是版本库的快照，但其实它就是指向某个commit的指针（跟分支很像对不对？但是分支可以移动，标签不能移动），所以，创建和删除标签都是瞬间完成的。</p>\n<p><strong>Git有commit，为什么还要引入tag？</strong></p>\n<p>“请把上周一的那个版本打包发布，commit号是6a5819e…” ;“一串乱七八糟的数字不好找！”</p>\n<p>如果换一个办法：</p>\n<p>“请把上周一的那个版本打包发布，版本号是v1.2”  ;“按照tag v1.2查找commit就行！”<br>tag就是一个让人容易记住的有意义的名字，它跟某个commit绑在一起。</p>\n<h2 id=\"创建标签\"><a href=\"#创建标签\" class=\"headerlink\" title=\"创建标签\"></a>创建标签</h2><p>在Git中打标签非常简单，首先，切换到需要打标签的分支上：<br><figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">git branch    <span class=\"comment\">#查看有哪些分支</span></div><div class=\"line\">git checkout <span class=\"keyword\">master</span>  <span class=\"title\">#切换到要打标签的分支上</span></div></pre></td></tr></table></figure></p>\n<p>然后，敲命令<code>git tag &lt;name&gt;</code>就可以在<strong>当前分支的最新已提交的状态</strong>(HEAD)打一个新标签：<strong>git tag v1.0</strong></p>\n<p>默认标签是打在最新提交的commit上的。有时候，如果忘了打标签，比如，现在已经是周五了，但应该在周一打的标签没有打，怎么办？</p>\n<p>方法是找到历史提交的<strong>commit id</strong>，然后打上就可以了：<br><figure class=\"highlight maxima\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">git <span class=\"built_in\">log</span> --pretty=oneline --abbrev-commit</div><div class=\"line\"></div><div class=\"line\">6a5819e merged bug <span class=\"built_in\">fix</span> <span class=\"number\">101</span></div><div class=\"line\">cc17032 <span class=\"built_in\">fix</span> bug <span class=\"number\">101</span></div><div class=\"line\">7825a50 merge with no-ff</div><div class=\"line\"><span class=\"number\">6224937</span> add merge</div><div class=\"line\">59bc1cb conflict fixed</div><div class=\"line\"><span class=\"number\">400b400</span> &amp; simple</div><div class=\"line\">75a857c AND simple</div><div class=\"line\">fec145a branch test</div><div class=\"line\">d17efd8 <span class=\"built_in\">remove</span> test.txt</div><div class=\"line\">...</div></pre></td></tr></table></figure></p>\n<p>比方说要对<strong>add merge</strong>这次提交打标签，它对应的<strong>commit id</strong>是6224937，敲入命令：<br><code>git tag v0.9 6224937</code></p>\n<p>还可以创建带有说明的标签，用<strong>-a</strong>指定标签名，<strong>-m</strong>指定说明文字：<br><code>git tag -a v0.1 -m &quot;version 0.1 released&quot; 3628164</code></p>\n<p>查看所有标签：<code>git tag</code></p>\n<p>注意，标签不是按时间顺序列出，而是按字母排序的。可以用<code>git show &lt;tagname&gt;</code>查看标签详细信息。</p>\n<p>还可以通过<strong>-s</strong>用私钥签名一个标签：<br><code>git tag -s v0.2 -m &quot;signed version 0.2 released&quot; fec145a</code>(原来的-a换为-s)</p>\n<p>签名采用PGP签名，因此，必须首先安装gpg（<strong>GnuPG</strong>），如果没有找到gpg，或者没有gpg密钥对，就会报错：<br><figure class=\"highlight subunit\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">gpg: signing failed: secret key not available</div><div class=\"line\"><span class=\"keyword\">error: </span>gpg failed to sign the data</div><div class=\"line\"><span class=\"keyword\">error: </span>unable to sign the tag</div></pre></td></tr></table></figure></p>\n<p>如果报错，请参考<strong>GnuPG</strong>帮助文档配置Key。如果签名不成功可以加<strong>-u</strong> 参数，详见：<a href=\"http://airk000.github.io/git/2013/09/30/git-tag-with-gpg-key\">http://airk000.github.io/git/2013/09/30/git-tag-with-gpg-key</a></p>\n<p><code>git show &lt;tagname&gt;</code>也可以看到PGP的签名信息：<br><figure class=\"highlight haml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">-<span class=\"ruby\">----<span class=\"keyword\">BEGIN</span> PGP SIGNATURE-----</div><div class=\"line\"></span>Version: GnuPG v1.4.12 (Darwin)</div><div class=\"line\"></div><div class=\"line\">iQEcBAABAgAGBQJSGpMhAAoJEPUxHyDAhBpT4QQIAKeHfR3bo...</div><div class=\"line\">-<span class=\"ruby\">----<span class=\"keyword\">END</span> PGP SIGNATURE-----</span></div></pre></td></tr></table></figure></p>\n<p>用PGP签名的标签是不可伪造的，因为可以验证PGP签名。验证签名的方法比较复杂，这里就不介绍了。</p>\n<h2 id=\"操作标签\"><a href=\"#操作标签\" class=\"headerlink\" title=\"操作标签\"></a>操作标签</h2><p><code>git tag -d &lt;tagname&gt;</code>可以删除一个本地标签。<br><code>git push origin &lt;tagname&gt;</code>可以推送一个本地标签到远程库。<br><code>git push origin --tags</code>可以推送全部未推送过的本地标签到远程库。</p>\n<p>删除时先删除本地对应的标签，再运行命令<code>git push origin :refs/tags/&lt;tagname&gt;</code>删除一个远程标签。</p>\n<hr>\n<h1 id=\"分支\"><a href=\"#分支\" class=\"headerlink\" title=\"分支\"></a>分支</h1><p>创建分支可以在分支上工作而不影响master分支，当分支工作完成时再合并到master分支上。</p>\n<p>一般流程：</p>\n<ul>\n<li>1.先查看分支：<code>git branch</code></li>\n<li>2.创建+切换分支：<code>git checkout -b &lt;分支name&gt;</code>等价于：<code>创建分支：git branch &lt;分支name&gt;</code>+<code>切换分支：git checkout &lt;分支name&gt;</code></li>\n<li>3.查看当前分支：<code>git branch</code></li>\n<li>4.在<strong>新建分支上进行工作</strong>，工作完成时。切换回主分支：<code>git checkout master</code></li>\n<li>5.合并某分支到当前分支（当前已切换回master分支了）：<code>git merge &lt;分支name&gt;</code></li>\n<li>6.删除无用分支：<code>git branch -d &lt;分支name&gt;</code></li>\n<li>7.查看当前分支：<code>git branch</code></li>\n</ul>\n<p>只剩master分支啦。</p>\n<p>想要深入了解，参考：</p>\n<p><a href=\"http://backlogtool.com/git-guide/cn/reference/branch.html#sec2\">猴子Git</a>　　<a href=\"http://iissnan.com/progit/html/zh/ch3_2.html\">Pro Git</a>　　<a href=\"http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/001375840038939c291467cc7c747b1810aab2fb8863508000\">廖雪峰Git</a></p>\n<h2 id=\"分支策略\"><a href=\"#分支策略\" class=\"headerlink\" title=\"分支策略\"></a>分支策略</h2><p>在实际开发中，我们应该按照几个基本原则进行分支管理：</p>\n<p>　　首先，<strong>master</strong>分支应该是非常稳定的，也就是仅用来发布新版本，平时不能在上面干活；平时干活都在dev分支上，也就是说，dev分支是不稳定的，到某个时候，比如1.0版本发布时，再把dev分支合并到master上，在master分支发布1.0版本；你和你的小伙伴们每个人都在dev分支上干活，每个人都有自己的分支，时不时地往dev分支上合并就可以了。<br>所以，团队合作的分支看起来就像这样：<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/git%E6%95%99%E7%A8%8B006.png\" alt=\"\"><br>Git分支十分强大，在团队开发中应该充分应用。合并分支时，加上<strong>--no-ff</strong>参数就可以用普通模式合并，合并后的历史有分支，能看出来曾经做过合并，而<strong>fast forward</strong>合并就看不出来曾经做过合并。</p>\n<h2 id=\"分支管理策略\"><a href=\"#分支管理策略\" class=\"headerlink\" title=\"分支管理策略\"></a>分支管理策略</h2><p>合并分支时，如果可能，Git会用<strong>Fast forward</strong>模式，但这种模式下，删除分支后，会丢掉分支信息。如果要强制禁用<strong>Fast forward</strong>模式(加参数--no-ff)，Git就会在<strong>merge</strong>时生成一个新的commit，这样，从分支历史上就可以看出分支信息。</p>\n<p>下面来测试一下<strong>--no-ff</strong>方式的<strong>git merge</strong>：</p>\n<p>创建分支、修改文件，提交缓存，切换回master分支，准备合并dev分支，因为本次合并要创建一个新的commit，所以加上<strong>-m</strong>参数，把commit描述写进去。<br><code>git merge --no-ff -m &quot;merge with no-ff&quot; dev</code></p>\n<p>用<strong>git log</strong>看看分支历史：<br><figure class=\"highlight livecodeserver\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">git <span class=\"built_in\">log</span> <span class=\"comment\">--graph --pretty=oneline --abbrev-commit</span></div><div class=\"line\"></div><div class=\"line\">*   <span class=\"number\">7825</span>a50 <span class=\"built_in\">merge</span> <span class=\"keyword\">with</span> no-ff</div><div class=\"line\">|\\</div><div class=\"line\">| * <span class=\"number\">6224937</span> <span class=\"built_in\">add</span> <span class=\"built_in\">merge</span></div><div class=\"line\">|/</div><div class=\"line\">*   <span class=\"number\">59</span>bc1cb conflict fixed</div><div class=\"line\">...</div></pre></td></tr></table></figure></p>\n<h2 id=\"冲突解决\"><a href=\"#冲突解决\" class=\"headerlink\" title=\"冲突解决\"></a>冲突解决</h2><p>当合并出现冲突时，一般要手动解决。<br>直接查看master分支的readme.txt（冲突文件）的内容并修改：<br><figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">Git <span class=\"keyword\">is</span> <span class=\"keyword\">a</span> distributed <span class=\"keyword\">version</span> control <span class=\"built_in\">system</span>.</div><div class=\"line\">Git <span class=\"keyword\">is</span> free software distributed under the GPL.</div><div class=\"line\">Git <span class=\"built_in\">has</span> <span class=\"keyword\">a</span> mutable <span class=\"built_in\">index</span> called stage.</div><div class=\"line\">Git tracks <span class=\"keyword\">changes</span> of <span class=\"keyword\">files</span>.</div><div class=\"line\">&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD</div><div class=\"line\">Creating <span class=\"keyword\">a</span> <span class=\"keyword\">new</span> branch <span class=\"keyword\">is</span> quick &amp; simple.</div><div class=\"line\">=======</div><div class=\"line\">Creating <span class=\"keyword\">a</span> <span class=\"keyword\">new</span> branch <span class=\"keyword\">is</span> quick AND simple.</div><div class=\"line\">&gt;&gt;&gt;&gt;&gt;&gt;&gt; feature1</div></pre></td></tr></table></figure></p>\n<p>修改完毕，再次提交即可。</p>\n<p><strong>Git用&lt;&lt;&lt;&lt;&lt;&lt;&lt;，=======，&gt;&gt;&gt;&gt;&gt;&gt;&gt;标记出不同分支的内容。</strong></p>\n<p>用带参数的git log也可以看到分支的合并情况：<code>git log --graph --pretty=oneline --abbrev-commit</code><br>用git log –graph命令可以看到分支合并图。</p>\n<p>详见：<a href=\"http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/001375840202368c74be33fbd884e71b570f2cc3c0d1dcf000\">廖雪峰Git解决冲突</a></p>\n<h2 id=\"错误解决\"><a href=\"#错误解决\" class=\"headerlink\" title=\"错误解决\"></a>错误解决</h2><ul>\n<li><p>1.error: src refspec master does not match any.<br>答：目录中没有文件，空目录是不能提交上去的 执行:<code>git commit -m “xxx”</code></p>\n</li>\n<li><p>2.error: insufficient permission for adding an object to repository database ./objects<br>答：服务端没有可写目录的权限［可能不是你的库，或sshkey不对］</p>\n</li>\n<li><p>3.error：fatal: remote origin already exists.<br>答：<code>git remote rm origin</code></p>\n</li>\n<li><p>4.error: failed to push som refs to ……..<br>解决办法：<code>git pull origin master</code><br>答：先pull 下来 再push上去。</p>\n</li>\n<li><p>5.error: failed to push some refs to ‘git@github.com:myleolan/learnpython.git’<br>To prevent you from losing history, non-fast-forward updates were rejected<br>Merge the remote changes before pushing again.  See the ‘Note about<br>fast-forwards’ section of ‘git push –help’ for details.<br>答：是因为远程用web创建的的库和本地不一样。<code>git pull origin master</code> (先pull 下来 再push 上去)</p>\n</li>\n<li><p>6.git push时报错：The requested URL returned error: 403 Forbidden while accessing<br>答：<code>vim /.git/config</code><br>把[remote “origin”]项中<a href=\"https://github.com\">https://github.com</a> 改为<a href=\"https://myleolan@github.com\">https://myleolan@github.com</a><br>就是加上<strong>用户名@</strong>之后再次执行git push 输入密码即可，一般用git协议不会报此错误，地址改为git@github.com:myleolan/XXXX.git</p>\n</li>\n</ul>\n<hr>\n<h1 id=\"Bug分支\"><a href=\"#Bug分支\" class=\"headerlink\" title=\"Bug分支\"></a>Bug分支</h1><p>当你接到一个修复一个代号101的bug的任务时，很自然地，你想创建一个分支issue-101来修复它，但是，等等，当前正在dev上进行的工作还没有提交；并不是你不想提交，而是工作只进行到一半，还没法提交，预计完成还需1天时间。但是，必须在两个小时内修复该bug，怎么办？</p>\n<p>Git还提供了一个<strong>stash</strong>功能，可以把当前工作现场“<strong>储藏</strong>”起来，等以后恢复现场后继续工作：<code>git stash</code>现在，用<strong>git status</strong>查看工作区，就是干净的（除非有没有被Git管理的文件），因此可以放心地创建分支来修复bug。</p>\n<h2 id=\"修复Bug一般流程\"><a href=\"#修复Bug一般流程\" class=\"headerlink\" title=\"修复Bug一般流程\"></a>修复Bug一般流程</h2><p>首先确定要在哪个分支上修复bug，假定需要在master分支上修复，就从master创建临时分支并切换分支：<br><figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">git checkout <span class=\"keyword\">master</span></div><div class=\"line\"><span class=\"title\">git</span> checkout -b issue-<span class=\"number\">101</span>   <span class=\"comment\">#创建并切换分支</span></div></pre></td></tr></table></figure></p>\n<p>现在修复bug，需要把“Git is free software …”改为“Git is a free software …”，然后提交：<br><figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">git <span class=\"keyword\">add</span><span class=\"bash\"> readme.txt </div><div class=\"line\"></span>git commit -m <span class=\"string\">\"fix bug 101\"</span></div></pre></td></tr></table></figure></p>\n<p>修复完成后，<strong>切换到master分支，并完成分支合并</strong>，最后<strong>删除issue-101分支</strong>：<br> <figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">git checkout <span class=\"keyword\">master</span></div><div class=\"line\"><span class=\"title\">git</span> merge --no-ff -m <span class=\"string\">\"merged bug fix 101\"</span> issue-<span class=\"number\">101</span>  <span class=\"comment\">#合并分支</span></div><div class=\"line\">git branch -d issue-<span class=\"number\">101</span>  <span class=\"comment\">#删除分支</span></div></pre></td></tr></table></figure></p>\n<p>bug修复了，现在，可以接着回到dev分支干活了！<br><figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">git checkout dev</div><div class=\"line\">git status   <span class=\"comment\">#此时可以看到工作区是干净的</span></div><div class=\"line\">git stash <span class=\"built_in\">list</span>  <span class=\"comment\">#查看已储藏的工作现场</span></div><div class=\"line\"></div><div class=\"line\">stash@&#123;<span class=\"number\">0</span>&#125;: WIP <span class=\"keyword\">on</span> dev: <span class=\"number\">6224937</span> add merge</div></pre></td></tr></table></figure></p>\n<p>工作现场还在，Git把<strong>stash</strong>内容存在某个地方了，需要恢复，有两个办法：</p>\n<ul>\n<li>1.用<code>git stash apply</code>恢复，但是恢复后，<strong>stash</strong>内容并不删除，你需要用<code>git stash drop</code>来删除(stash只是临时封存区，建议删除)。</li>\n<li><p>2.用<code>git stash pop</code>恢复的同时把<strong>stash</strong>内容也删了。</p>\n<p>执行<code>git stash pop</code>恢复，再用<code>git stash list</code>查看，就看不到任何stash内容了<br><strong>可以多次stash</strong>，恢复的时候，先用<code>git stash list</code>查看，然后<strong>恢复指定的stash</strong>，用命令：<code>git stash apply stash@{0}</code>  (<strong>stash@{0}</strong>是封存的标识)</p>\n</li>\n</ul>\n<hr>\n<h1 id=\"Feature分支\"><a href=\"#Feature分支\" class=\"headerlink\" title=\"Feature分支\"></a>Feature分支</h1><p>软件开发中，总有无穷无尽的新的功能要不断添加进来。添加一个新功能时，不希望因为一些实验性质的代码，把主分支搞乱了，所以，每添加一个新功能，最好新建一个<strong>feature</strong>分支，在上面<strong>开发，完成后，合并，最后，删除该feature分支</strong>。<br><figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#当前在工作分支dev上。</span></div><div class=\"line\">git checkout -b feature-vulcan(name)  <span class=\"comment\">#创建并切换到该分支</span></div><div class=\"line\"><span class=\"comment\">#修改代码完成之后</span></div><div class=\"line\">git <span class=\"keyword\">add</span><span class=\"bash\"> vulcan.py</div><div class=\"line\"></span>git status</div><div class=\"line\">git commit -m <span class=\"string\">\"add feature vulcan\"</span></div><div class=\"line\">git checkout dev   <span class=\"comment\">#切回dev，准备合并</span></div><div class=\"line\"><span class=\"comment\">#一切顺利的话，feature分支和bug分支是类似的，合并，然后删除。</span></div><div class=\"line\">执行以下两句就可以完成任务了：</div><div class=\"line\">git merge --no-ff -m <span class=\"string\">\"merged feature-vulcan\"</span> feature-vulcan <span class=\"comment\">#合并分支</span></div><div class=\"line\">git branch -d feature-vulcan   <span class=\"comment\">#删除分支</span></div></pre></td></tr></table></figure></p>\n<p>但是，就在此时，接到上级命令，因经费不足，新功能<strong>必须取消</strong>！虽然白干了，但是这个分支还是必须<strong>就地销毁</strong>：<br><figure class=\"highlight subunit\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">git branch -d feature-vulcan</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">error: </span>The branch 'feature-vulcan' is not fully merged.</div><div class=\"line\">If you are sure you want to delete it, run 'git branch -D feature-vulcan'.</div></pre></td></tr></table></figure></p>\n<p>Git提示销毁失败：feature-vulcan分支还没有被合并，如果删除，将丢失掉修改，如果要强行删除，需要使用命令<code>git branch -D feature-vulcan</code></p>\n<p>现在我们强行删除：<code>git branch -D feature-vulcan</code>　OK，现在我们切换回dev分支继续工作。</p>\n<hr>\n<h1 id=\"自定义Git配置-高级\"><a href=\"#自定义Git配置-高级\" class=\"headerlink\" title=\"自定义Git配置(高级)\"></a>自定义Git配置(高级)</h1><p>我们已经配置了<strong>user.name</strong>和<strong>user.email</strong>，实际上，Git还有很多可配置项。</p>\n<h2 id=\"忽略特殊文件\"><a href=\"#忽略特殊文件\" class=\"headerlink\" title=\"忽略特殊文件\"></a>忽略特殊文件</h2><p>有些时候，你必须把某些文件放到Git工作目录中，但又不能提交它们，比如保存了<strong>数据库密码的配置文件</strong>啦，等等，每次<strong>git status</strong>都会显示<strong>Untracked files …</strong>，有强迫症的童鞋心里肯定不爽。好在Git考虑到了大家的感受，这个问题解决起来也很简单，在Git工作区的根目录下创建一个特殊的<strong>.gitignore</strong>文件，然后把要忽略的文件名填进去，Git就会自动忽略这些文件。</p>\n<p>不需要从头写<strong>.gitignore</strong>文件，GitHub已经为我们准备了各种配置文件，只需要组合一下就可以使用了。所有配置文件可以直接在线浏览：<strong><a href=\"https://github.com/github/gitignore\">https://github.com/github/gitignore</a></strong>   已经配置好了要忽略的文件，下载回来要文件名要改为<strong>.gitignore</strong>放在项目根目录下。</p>\n<p><strong>忽略文件的原则是：</strong></p>\n<ol>\n<li>忽略操作系统自动生成的文件，比如缩略图等；</li>\n<li>忽略编译生成的中间文件、可执行文件等，也就是如果一个文件是通过另一个文件自动生成的，那自动生成的文件就没必要放进版本库，比如Java编译产生的.class文件；</li>\n<li>忽略你自己的带有敏感信息的配置文件，比如存放口令的配置文件。</li>\n</ol>\n<p>举个例子：</p>\n<p>假设你在Windows下进行Python开发，Windows会自动在有图片的目录下生成隐藏的缩略图文件，如果有自定义目录，目录下就会有Desktop.ini文件，因此你需要忽略Windows自动生成的垃圾文件；然后，继续忽略Python编译产生的.pyc、.pyo、dist等文件或目录(<strong>忽略文件夹在文件夹名后加/</strong>)</p>\n<p>加上你自己定义的文件，最终得到一个完整的.gitignore文件，内容如下：<br><figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"># Windows:</div><div class=\"line\">Thumbs.<span class=\"keyword\">db</span></div><div class=\"line\">ehthumbs.<span class=\"keyword\">db</span></div><div class=\"line\">Desktop.ini</div><div class=\"line\"></div><div class=\"line\"># Python:</div><div class=\"line\"><span class=\"comment\">*.py[cod]</span></div><div class=\"line\"><span class=\"comment\">*.so</span></div><div class=\"line\"><span class=\"comment\">*.egg</span></div><div class=\"line\"><span class=\"comment\">*.egg-info</span></div><div class=\"line\">dist</div><div class=\"line\">build</div><div class=\"line\"></div><div class=\"line\"># My configurations:</div><div class=\"line\"><span class=\"keyword\">db</span>.ini</div><div class=\"line\">deploy_key_rsa</div><div class=\"line\">新建文件夹/</div></pre></td></tr></table></figure></p>\n<p>最后一步就是把.gitignore也提交到Git，就完成了！当然<strong>检验.gitignore</strong>是否生效的标准是<strong>git status</strong>命令是不是说working directory clean。</p>\n<p>使用Windows的童鞋注意了，如果你在资源管理器里新建一个<strong>.gitignore</strong>文件，它会非常弱智地提示你必须输入文件名，在第三方文本编辑器里“保存”或者“另存为”就可以把文件保存为.gitignore了。</p>\n<p>有些时候，你想添加一个文件到Git，但发现添加不了，原因是这个文件被.gitignore忽略了：<br><figure class=\"highlight livecodeserver\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">git <span class=\"built_in\">add</span> App.class</div><div class=\"line\"></div><div class=\"line\">The following paths are ignored <span class=\"keyword\">by</span> <span class=\"literal\">one</span> <span class=\"keyword\">of</span> your .gitignore <span class=\"built_in\">files</span>:</div><div class=\"line\">App.class</div><div class=\"line\">Use -f <span class=\"keyword\">if</span> you really want <span class=\"built_in\">to</span> <span class=\"built_in\">add</span> them.</div></pre></td></tr></table></figure></p>\n<p>如果你确实想添加该文件，可以用<strong>-f</strong>强制添加到Git：<code>git add -f App.class</code></p>\n<p>或者你发现，可能是.gitignore写得有问题，需要找出来到底哪个规则写错了，可以用<code>git check-ignore</code>命令检查：<br><figure class=\"highlight smali\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">git<span class=\"built_in\"> check-ignore </span>-v App.class</div><div class=\"line\"><span class=\"keyword\">.gitignore</span>:3:*.class    App.class</div></pre></td></tr></table></figure></p>\n<p>Git会告诉我们，.gitignore的第3行规则忽略了该文件，于是我们就可以知道应该修订哪个规则。</p>\n<h2 id=\"配置命令别名\"><a href=\"#配置命令别名\" class=\"headerlink\" title=\"配置命令别名\"></a>配置命令别名</h2><p>有没有经常敲错命令？比如git status？status这个单词真心不好记。如果敲<strong>git st</strong>就表示<strong>git status</strong>那就简单多了。<br><figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">git config --<span class=\"keyword\">global</span> <span class=\"keyword\">alias</span>.st status   <span class=\"meta\">#st表示status</span></div><div class=\"line\">git config --<span class=\"keyword\">global</span> <span class=\"keyword\">alias</span>.co checkout <span class=\"meta\">#co表示checkout</span></div><div class=\"line\">git config --<span class=\"keyword\">global</span> <span class=\"keyword\">alias</span>.ci commit   <span class=\"meta\">#ci表示commit</span></div><div class=\"line\">git config --<span class=\"keyword\">global</span> <span class=\"keyword\">alias</span>.br branch   <span class=\"meta\">#br表示branch</span></div></pre></td></tr></table></figure></p>\n<h2 id=\"global参数是全局参数，这些命令在这台电脑的所有Git仓库下都有用。\"><a href=\"#global参数是全局参数，这些命令在这台电脑的所有Git仓库下都有用。\" class=\"headerlink\" title=\"--global参数是全局参数，这些命令在这台电脑的所有Git仓库下都有用。\"></a>--global参数是全局参数，这些命令在这台电脑的所有Git仓库下都有用。</h2><p>在”<strong>撤销修改</strong>“一节中，我们知道，命令<code>git reset HEAD file</code>可以把暂存区的修改撤销掉（unstage），重新放回工作区。既然是一个<strong>unstage操作</strong>，就可以配置一个unstage别名：<br><code>git config --global alias.unstage &#39;reset HEAD&#39;</code></p>\n<p>当你敲入命令：<code>git unstage test.py</code>实际上Git执行的是：<code>git reset HEAD test.py</code></p>\n<p>配置一个<strong>git last</strong>，让其显示最后一次提交信息：<code>git config --global alias.last &#39;log -3&#39;</code> (数字代表最近的几次提交);这样，用<code>git last</code>就能显示最近3次的提交：</p>\n<p>甚至还有人丧心病狂地把lg配置成了：<br><figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git config --global alias.lg <span class=\"string\">\"log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)&lt;%an&gt;%Creset' --abbrev-commit\"</span></div></pre></td></tr></table></figure></p>\n<p>来看看git lg的效果：<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/git%E6%95%99%E7%A8%8B008.png\" alt=\"\"></p>\n<h2 id=\"关于配置文件\"><a href=\"#关于配置文件\" class=\"headerlink\" title=\"关于配置文件\"></a>关于配置文件</h2><p>配置Git的时候，加上<strong>--global</strong>是针对当前用户起作用的，如果不加，那只针对当前的仓库起作用。</p>\n<ul>\n<li><p>每个仓库（每个项目）独立的Git配置文件都放在<strong>.git/config</strong>文件中：</p>\n<figure class=\"highlight elixir\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\">cat .git/config </div><div class=\"line\">[core]</div><div class=\"line\">    repositoryformatversion = <span class=\"number\">0</span></div><div class=\"line\">    filemode = <span class=\"keyword\">true</span></div><div class=\"line\">    bare = <span class=\"keyword\">false</span></div><div class=\"line\">    logallrefupdates = <span class=\"keyword\">true</span></div><div class=\"line\">    ignorecase = <span class=\"keyword\">true</span></div><div class=\"line\">    precomposeunicode = <span class=\"keyword\">true</span></div><div class=\"line\">[remote <span class=\"string\">\"origin\"</span>]</div><div class=\"line\">    url = git<span class=\"variable\">@github</span>.<span class=\"symbol\">com:</span>myleolan/learngit.git</div><div class=\"line\">    fetch = +refs/heads/*<span class=\"symbol\">:refs/remotes/origin/*</span></div><div class=\"line\">[branch <span class=\"string\">\"master\"</span>]</div><div class=\"line\">    remote = origin</div><div class=\"line\">    merge = refs/heads/master</div><div class=\"line\">[<span class=\"keyword\">alias</span>]     <span class=\"comment\">#命令别名，要删除别名，直接删掉对应的行即可。</span></div><div class=\"line\">    last = log -<span class=\"number\">1</span></div></pre></td></tr></table></figure>\n</li>\n<li><p>当前用户的Git配置文件放在用户主目录下的一个隐藏文件.gitconfig中：</p>\n<figure class=\"highlight nix\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">cat .gitconfig</div><div class=\"line\">[alias]</div><div class=\"line\">    <span class=\"attr\">co</span> = checkout</div><div class=\"line\">    <span class=\"attr\">ci</span> = commit</div><div class=\"line\">    <span class=\"attr\">br</span> = branch</div><div class=\"line\">    <span class=\"attr\">st</span> = status</div><div class=\"line\">[user]</div><div class=\"line\">    <span class=\"attr\">name</span> = Your Name</div><div class=\"line\">    <span class=\"attr\">email</span> = your@email.com</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>配置别名也可以直接修改这个文件，如果改错了，可以删掉文件重新通过命令配置(参考第2节 “Git配置”)。</p>\n<hr>\n<h1 id=\"团队协作\"><a href=\"#团队协作\" class=\"headerlink\" title=\"团队协作\"></a>团队协作</h1><h2 id=\"抓取分支\"><a href=\"#抓取分支\" class=\"headerlink\" title=\"抓取分支\"></a>抓取分支</h2><p>多人协作时，大家都会往master和dev分支上推送各自的修改。现在，模拟一个你的小伙伴，可以在另一台电脑（注意要把SSH Key添加到GitHub）或者同一台电脑的另一个目录下克隆：<br><code>git clone git@github.com:myleolan/learngit.git</code></p>\n<p>当你的小伙伴从远程库clone时，默认情况下，你的小伙伴只能看到本地的<strong>master</strong>分支。可以用<strong>git branch</strong>命令看看；现在，你的小伙伴要在dev分支上开发，就必须<strong>创建远程origin的dev分支到本地</strong>，于是他用命令创建本地dev分支：<code>git checkout -b dev origin/dev</code>　(在origin上创建dev，-b切换到dev分支;如果本地已经有dev分支了，直接切换就好)</p>\n<p>现在，他就可以在dev上继续修改，然后，时不时地把dev分支push到远程：<br><code>git commit -m &quot;add /usr/bin/env&quot;</code></p>\n<p>本地已经有dev分支了就不用创建了，直接执行下面的命令会自动在远程服务器新建dev分支。<br><code>git push origin dev</code>　(把本地dev推到远程origin上，会自动寻找origin的dev分支)</p>\n<p>你的小伙伴已经向<strong>origin/dev</strong>分支推送了他的提交，而碰巧你也对同样的文件作了修改，并试图推送：<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">git add hello.py</div><div class=\"line\">git <span class=\"keyword\">commit</span> -m <span class=\"string\">\"add coding: utf-8\"</span></div><div class=\"line\">git push origin dev</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">To</span> git@github.com:myleolan/learngit.git</div><div class=\"line\"> ! [rejected]        dev -&gt; dev (non-<span class=\"keyword\">fast</span>-forward)</div><div class=\"line\"><span class=\"keyword\">error</span>: <span class=\"keyword\">failed</span> <span class=\"keyword\">to</span> push <span class=\"keyword\">some</span> refs <span class=\"keyword\">to</span> <span class=\"string\">'git@github.com:myleolan/learngit.git'</span></div><div class=\"line\">hint: Updates were rejected because the tip <span class=\"keyword\">of</span> your <span class=\"keyword\">current</span> branch <span class=\"keyword\">is</span> behind</div><div class=\"line\">hint: its remote counterpart. <span class=\"keyword\">Merge</span> the remote changes (e.g. <span class=\"string\">'git pull'</span>)</div><div class=\"line\">hint: <span class=\"keyword\">before</span> pushing again.</div><div class=\"line\">hint: See the <span class=\"string\">'Note about fast-forwards'</span> <span class=\"keyword\">in</span> <span class=\"string\">'git push --help'</span> <span class=\"keyword\">for</span> details.</div></pre></td></tr></table></figure></p>\n<p>推送失败，因为你的小伙伴的最新提交和你试图推送的提交有冲突，解决办法也很简单，Git已经提示我们，先用<strong>git pull</strong>把最新的提交从<strong>origin/dev</strong>抓下来，然后，在本地合并，解决冲突，再推送：<br><figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">git pull</div><div class=\"line\"></div><div class=\"line\">remote: Counting object<span class=\"variable\">s:</span> <span class=\"number\">5</span>, done.</div><div class=\"line\">remote: Compressing object<span class=\"variable\">s:</span> <span class=\"number\">100</span>% (<span class=\"number\">2</span>/<span class=\"number\">2</span>), done.</div><div class=\"line\">remote: Total <span class=\"number\">3</span> (delta <span class=\"number\">0</span>), reused <span class=\"number\">3</span> (delta <span class=\"number\">0</span>)</div><div class=\"line\">Unpacking object<span class=\"variable\">s:</span> <span class=\"number\">100</span>% (<span class=\"number\">3</span>/<span class=\"number\">3</span>), done.</div><div class=\"line\">From github.<span class=\"keyword\">com</span>:myleolan/learngit</div><div class=\"line\">   fc38031..<span class=\"number\">291</span>bea8  dev        -&gt; origin/dev</div><div class=\"line\">There <span class=\"keyword\">is</span> <span class=\"keyword\">no</span> tracking information <span class=\"keyword\">for</span> the current branch.</div><div class=\"line\">Please specify which branch you want <span class=\"keyword\">to</span> merge with.</div><div class=\"line\">See git-pull(<span class=\"number\">1</span>) <span class=\"keyword\">for</span> details</div><div class=\"line\">    git pull <span class=\"symbol\">&lt;remote&gt;</span> <span class=\"symbol\">&lt;branch&gt;</span></div><div class=\"line\">If you wish <span class=\"keyword\">to</span> <span class=\"keyword\">set</span> tracking information <span class=\"keyword\">for</span> this branch you can <span class=\"keyword\">do</span> <span class=\"keyword\">so</span> with:</div><div class=\"line\">    git branch --<span class=\"keyword\">set</span>-upstream dev origin/<span class=\"symbol\">&lt;branch&gt;</span></div></pre></td></tr></table></figure></p>\n<p>git pull也失败了，原因是没有指定<strong>本地dev分支</strong>与远程<strong>origin/dev</strong>分支的链接，根据提示，设置dev和origin/dev的链接(绑定这两个分支)：<br><figure class=\"highlight q\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">git branch --<span class=\"built_in\">set</span>-upstream <span class=\"built_in\">dev</span> origin/<span class=\"built_in\">dev</span> </div><div class=\"line\">如果git pull还是失败，说明绑定不了。</div><div class=\"line\">试试官方更改的命令：git branch --<span class=\"built_in\">set</span>-upstream-to=origin/<span class=\"built_in\">dev</span> <span class=\"built_in\">dev</span></div></pre></td></tr></table></figure></p>\n<p><code>git pull -f origin master</code>　强制覆盖也行，但很危险。</p>\n<p>再次<strong>git pull</strong>成功，但是合并有冲突，需要手动解决，解决的方法和第12节“解决冲突”完全一样。解决后，提交，再push：<br><figure class=\"highlight maxima\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">git commit -m <span class=\"string\">\"merge &amp; fix hello.py\"</span></div><div class=\"line\">git <span class=\"built_in\">push</span> <span class=\"built_in\">origin</span> dev</div></pre></td></tr></table></figure></p>\n<p><strong>多人协作的工作模式通常是这样：</strong></p>\n<ol>\n<li>首先，可以试图用<code>git push origin branch-name</code>推送自己的修改；</li>\n<li>如果推送失败，则因为远程分支比你的本地更新，需要先用git pull试图合并；</li>\n<li>如果合并有冲突，则解决冲突，并在本地提交；</li>\n<li>没有冲突或者解决掉冲突后，再用<code>git push origin branch-name</code>推送就能成功！<br>如果<strong>git pull</strong>提示“<strong>no tracking information</strong>”，则说明本地分支和远程分支的链接关系没有创建，用命令:<br><code>git branch --set-upstream branch-name origin/branch-name</code><br>这就是多人协作的工作模式，一旦熟悉了，就非常简单。</li>\n</ol>\n<h2 id=\"F-amp-Q\"><a href=\"#F-amp-Q\" class=\"headerlink\" title=\"F&amp;Q\"></a>F&amp;Q</h2><p>签出远程分支，出现以下错误：<br>fatal: Cannot update paths and switch to branch ‘develop’ at the same time.<br>解决方法：<br>先<code>git fetch</code>再<code>git checkout -b develop origin/develop</code><br>因为本地还没有”develop”分支信息，需要先fetch或者pull</p>\n<p>假设有人往服务器上推送了一个新的分支，但是我不知道分支的名称是什么，我如何能获取到服务器上的分支列表呢？<br>      a. 你直接去问他<br>      b. 如果用GitHub，直接去网站看<br>      c. <code>git ls-remote --heads origin</code></p>\n<h2 id=\"推送分支\"><a href=\"#推送分支\" class=\"headerlink\" title=\"推送分支\"></a>推送分支</h2><p>推送分支，就是把该分支上的所有本地提交推送到远程库。推送时，要指定本地分支，这样，Git就会把该分支推送到远程库对应的远程分支上：<code>git push origin master</code></p>\n<p>如果要推送其他分支，比如dev，就改成：<code>git push origin dev</code></p>\n<p>但是，并不是一定要把本地分支往远程推送，那么，哪些分支需要推送，哪些不需要呢？<br>  ● master分支是主分支，因此要时刻与远程同步；<br>  ● dev分支是开发分支，团队所有成员都需要在上面工作，所以也需要与远程同步；<br>  ● bug分支只用于在本地修复bug，就没必要推到远程了，除非老板要看看你每周到底修复了几个bug；<br>  ● feature分支是否推到远程，取决于你是否和你的小伙伴合作在上面开发。<br>总之，就是在Git中，分支完全可以在本地自己藏着玩，是否推送，视你的心情而定！</p>\n<hr>\n<h1 id=\"参与开源项目\"><a href=\"#参与开源项目\" class=\"headerlink\" title=\"参与开源项目\"></a>参与开源项目</h1><p>如何参与一个开源项目呢？比如人气极高的<strong>bootstrap</strong>项目，这是一个非常强大的CSS框架，你可以访问它的<strong><a href=\"https://github.com/twbs/bootstrap\">GitHub项目主页</a></strong>，点“<strong>Fork</strong>”就在自己的账号下克隆了一个bootstrap仓库，然后，从自己的账号下clone：<code>git clone git@github.com:**your_username**/bootstrap.git</code></p>\n<p>一定要从自己的账号下clone仓库，这样你才能推送修改(在第4节 “创建远程仓库”中结尾就提到了另一种克隆方式)。如果从bootstrap的作者的仓库地址，采用<code>git clone git@github.com:twbs/bootstrap.git</code>的方式克隆，因为没有权限，你将不能推送修改（见第4节 “创建远程仓库”结尾处，<strong>删除.git文件夹</strong>的方法）。</p>\n<p><strong>Bootstrap</strong>的官方仓库twbs/bootstrap、你在GitHub上克隆的仓库<strong>your_username/bootstrap</strong>，以及你自己克隆到本地电脑的仓库，他们的关系就像下图显示的那样：<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/git%E6%95%99%E7%A8%8B007.png\" alt=\"\"></p>\n<ul>\n<li>如果你想修复bootstrap的一个bug，或者新增一个功能，立刻就可以开始干活，干完后，往自己的仓库推送。</li>\n<li>如果<strong>你希望bootstrap的官方库能接受你的修改</strong>，你就可以在你的GitHub该项目页上发起一个<strong>pull request</strong>。当然，对方是否接受你的<strong>pull request</strong>就不一定了。</li>\n</ul>\n<hr>\n<h1 id=\"自己搭建Git服务器\"><a href=\"#自己搭建Git服务器\" class=\"headerlink\" title=\"自己搭建Git服务器\"></a>自己搭建Git服务器</h1><p>GitHub就是一个免费托管开源代码的远程仓库。但是对于某些视源代码如生命的商业公司来说，既不想公开源代码，又舍不得给GitHub交保护费，那就只能自己搭建一台Git服务器作为私有仓库使用。搭建Git服务器需要准备一台运行Linux的机器，强烈用Ubuntu、Debian或者Centos、redhat，这样，通过几条简单的apt命令就可以完成安装。<br><strong>root登录</strong></p>\n<ul>\n<li><p>第一步，<strong>安装git：</strong><br><code>sudo apt-get install git</code> 或 <code>yum install git</code></p>\n</li>\n<li><p>第二步，<strong>创建一个git用户，用来运行git服务：</strong><br><code>sudo adduser git</code></p>\n</li>\n</ul>\n<ul>\n<li>第三步，<strong>初始化Git仓库：</strong><br>先选定一个目录作为Git仓库，假定是/data/git/learngit.git<br>在/data/git/目录下输入命令：<br><code>sudo git init --bare learngit.git</code></li>\n</ul>\n<p>Git就会创建一个裸仓库，裸仓库没有工作区，因为服务器上的Git仓库纯粹是为了共享，所以不让用户直接登录到服务器上去改工作区，并且服务器上的Git仓库通常都以.git结尾。<br><code>sudo chown -R git:git learngit.git</code></p>\n<p>Git服务器就已经搭得差不多了。下面我们在客户端clone一下远程仓库<br><code>git clone git@IP:/data/git/learngit.git</code><br>Cloning into ‘learngit’…<br>The authenticity of host ‘192.168.8.34 (192.168.8.34)’ can’t be established.<br>RSA key fingerprint is 2b:55:45:e7:4c:29:cc:05:33:78:03:bd:a8:cd:08:9d.<br>Are you sure you want to continue connecting (yes/no)? yes<br>Warning: Permanently added ‘192.168.8.34’ (RSA) to the list of known hosts.<br>git@192.168.8.34’s password:<br><strong>能连接但要密码</strong>，接着下一步。</p>\n<ul>\n<li>第四步，<strong>创建证书登录（Git服务器打开RSA认证）</strong>：然后就可以去Git服务器上添加你的公钥用来验证你的信息了。<code>vim /etc/ssh/sshd_config</code>中将RSA认证打开，即：<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attribute\">RSAAuthentication</span> <span class=\"literal\">yes</span>     </div><div class=\"line\">PubkeyAuthentication <span class=\"literal\">yes</span>     </div><div class=\"line\">AuthorizedKeysFile  .ssh/authorized_keys</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>这里我们可以看到<strong>公钥存放在.ssh/authorized_keys</strong>文件中。所以我们在<strong>/home/git下创建.ssh目录，然后创建authorized_keys文件</strong>，收集所有需要登录的用户的公钥，就是他们自己的id_rsa.pub文件，把所有公钥导入到<strong>/home/git/.ssh/authorized_keys文件里，一行一个。</strong><br>此时再次连接已经可以免密钥登录啦。</p>\n<ul>\n<li>第五步，<strong>禁用shell登录：</strong><br>出于安全考虑，第二步创建的git用户不允许登录shell，这可以通过<br>编辑/etc/passwd文件完成。找到类似下面的一行：<br><code>git:x:1001:1001:,,,:/home/git:/bin/bash</code><br>改为：<br><code>git:x:1001:1001:,,,:/home/git:/usr/bin/git-shell</code></li>\n</ul>\n<p>这样，git用户可以正常通过ssh使用git，但无法登录shell，因为我们为git用户指定的git-shell每次一登录就自动退出。</p>\n<ul>\n<li>第六步，<strong>克隆远程仓库：</strong><br>现在，可以通过git clone命令克隆远程仓库了，在各自的电脑上运行：<br><code>git clone git@IP:/data/git/learngit.git</code><br>Cloning into ‘sample’…<br>warning: You appear to have cloned an empty repository.<br>剩下的推送就简单了。</li>\n</ul>\n<p><strong>管理公钥</strong></p>\n<p>如果团队很小，把每个人的公钥收集起来放到服务器的/home/git/.ssh/authorized_keys文件里就是可行的。如果团队有几百号人，就没法这么玩了，这时，可以用<strong>Gitosis</strong>来管理公钥。<br>这里我们不介绍怎么玩Gitosis了，几百号人的团队基本都在500强了，相信找个高水平的Linux管理员问题不大。管理公钥也可用<strong>Gitolite</strong><br><strong>管理权限</strong><br>有很多不但视源代码如生命，而且视员工为窃贼的公司，会在版本控制系统里设置一套完善的权限控制，每个人是否有读写权限会精确到每个分支甚至每个目录下。因为Git是为Linux源代码托管而开发的，所以Git也继承了开源社区的精神，不支持权限控制。不过，因为<strong>Git支持钩子（hook）</strong>，所以，可以在服务器端编写一系列脚本来控制提交等操作，达到权限控制的目的。<strong>Gitolite</strong>就是这个工具。<br>这里我们也不介绍Gitolite了，不要把有限的生命浪费到权限斗争中。</p>\n<p>搭建服务器的同时采用Gitolite来管理权限，参考：<br><a href=\"https://my.oschina.net/u/2351685/blog/509322\">https://my.oschina.net/u/2351685/blog/509322</a></p>\n<p>Gitolite的使用，参考：<a href=\"http://www.uml.org.cn/pzgl/201404092.asp\">http://www.uml.org.cn/pzgl/201404092.asp</a></p>\n<hr>\n<h1 id=\"参考资料：\"><a href=\"#参考资料：\" class=\"headerlink\" title=\"参考资料：\"></a>参考资料：</h1><p>连猴子都会的git：<br><a href=\"http://backlogtool.com/git-guide/cn/\">http://backlogtool.com/git-guide/cn/</a></p>\n<p>Pro Git：<a href=\"http://iissnan.com/progit/\">http://iissnan.com/progit/</a><br>廖雪峰git：</p>\n<p><a href=\"http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000\">http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000</a></p>\n<p>外国友人git手册:<br><a href=\"https://pan.baidu.com/s/1kU5OCOB#path=%252Fpub%252Fgit\">https://pan.baidu.com/s/1kU5OCOB#path=%252Fpub%252Fgit</a><br>10个迅速提升你 Git 水平的提示:<br><a href=\"http://www.oschina.net/translate/10-tips-git-next-level\">http://www.oschina.net/translate/10-tips-git-next-level</a></p>\n<hr>\n"},{"layout":"post","title":"OpenResty（高性能web服务器）","abbrlink":29074,"date":"2016-10-31T02:21:24.000Z","_content":"\n# OpenResty#\n\n参考资料：\n\n官方: http://openresty.org/\nGithub: https://github.com/agentzh/ngx_openresty      https://github.com/openresty/\n\n视频学习：http://www.stuq.org/course/detail/1015\n\nOpenResty最佳实践：https://moonbingbing.gitbooks.io/openresty-best-practices/content/ （https://github.com/moonbingbing/openresty-best-practices）\n\n---\n\n# 安装OpenResty #\n默认安装路径如下\n\n* /usr/local/openresty/\n\nOpenResty，也被称为“ngx_openresty”，是一个基于Nginx的核心Web应用程序服务器，它包含了大量的第三方的Nginx模块和大部分系统依赖包。 OpenResty不是Nginx的分支，它只是一个软件包。主要有章亦春维护。\n为什么是OpenResty？\nOpenResty允许开发人员使用lua编程语言构建现有的Nginx的C模块，支持高流量的应用程序。\n\n依赖的软件包：\n> * perl 5.6.1+\n> * libreadline\n> * libpcre\n> * libssl\n\nDebian 和 Ubuntu系统：\n```\napt-get install libreadline-dev libncurses5-dev libpcre3-dev libssl-dev perl make\n```\n\nFedora 、RedHat 和 centos系统：\n```\nyum install readline-devel pcre-devel openssl-devel gc-c++ -y\n```\n\n下载OpenResty、解压、编译、安装：\n版本选择：https://openresty.org/en/download.html\n```\nwget http://openresty.org/download/ngx_openresty-1.5.8.1.tar.gz\ntar xzvf ngx_openresty-1.5.8.1.tar.gz\ncd ngx_openresty-1.5.8.1/\n./configure --with-luajit\nmake\nmake install\n```\n另外的配置选项：\n```\n./configure --prefix=/opt/openresty \n--with-luajit \n--without-http_redis2_module \n--with-http_iconv_module \n--with-http_postgres_module \n-j2\n--help to see more options\n```\n此时安装完成，打开localhost就可以看到nginx页面了。\n\n---","source":"_posts/web服务器/2016-10-21-OpenResty_install.md","raw":"---\nlayout: post\ntitle: OpenResty（高性能web服务器）\ncategories:\n  - web服务器\ntags:\n  - OpenResty\n  - 高性能web服务器\nabbrlink: 29074\ndate: 2016-10-31 10:21:24\n---\n\n# OpenResty#\n\n参考资料：\n\n官方: http://openresty.org/\nGithub: https://github.com/agentzh/ngx_openresty      https://github.com/openresty/\n\n视频学习：http://www.stuq.org/course/detail/1015\n\nOpenResty最佳实践：https://moonbingbing.gitbooks.io/openresty-best-practices/content/ （https://github.com/moonbingbing/openresty-best-practices）\n\n---\n\n# 安装OpenResty #\n默认安装路径如下\n\n* /usr/local/openresty/\n\nOpenResty，也被称为“ngx_openresty”，是一个基于Nginx的核心Web应用程序服务器，它包含了大量的第三方的Nginx模块和大部分系统依赖包。 OpenResty不是Nginx的分支，它只是一个软件包。主要有章亦春维护。\n为什么是OpenResty？\nOpenResty允许开发人员使用lua编程语言构建现有的Nginx的C模块，支持高流量的应用程序。\n\n依赖的软件包：\n> * perl 5.6.1+\n> * libreadline\n> * libpcre\n> * libssl\n\nDebian 和 Ubuntu系统：\n```\napt-get install libreadline-dev libncurses5-dev libpcre3-dev libssl-dev perl make\n```\n\nFedora 、RedHat 和 centos系统：\n```\nyum install readline-devel pcre-devel openssl-devel gc-c++ -y\n```\n\n下载OpenResty、解压、编译、安装：\n版本选择：https://openresty.org/en/download.html\n```\nwget http://openresty.org/download/ngx_openresty-1.5.8.1.tar.gz\ntar xzvf ngx_openresty-1.5.8.1.tar.gz\ncd ngx_openresty-1.5.8.1/\n./configure --with-luajit\nmake\nmake install\n```\n另外的配置选项：\n```\n./configure --prefix=/opt/openresty \n--with-luajit \n--without-http_redis2_module \n--with-http_iconv_module \n--with-http_postgres_module \n-j2\n--help to see more options\n```\n此时安装完成，打开localhost就可以看到nginx页面了。\n\n---","slug":"web服务器-2016-10-21-OpenResty-install","published":1,"updated":"2016-11-13T03:36:30.000Z","comments":1,"photos":[],"link":"","_id":"civi8ouif00142c6n385hot20","content":"<h1 id=\"OpenResty\"><a href=\"#OpenResty\" class=\"headerlink\" title=\"OpenResty\"></a>OpenResty</h1><p>参考资料：</p>\n<p>官方: <a href=\"http://openresty.org/\" target=\"_blank\" rel=\"external\">http://openresty.org/</a><br>Github: <a href=\"https://github.com/agentzh/ngx_openresty\" target=\"_blank\" rel=\"external\">https://github.com/agentzh/ngx_openresty</a>      <a href=\"https://github.com/openresty/\" target=\"_blank\" rel=\"external\">https://github.com/openresty/</a></p>\n<p>视频学习：<a href=\"http://www.stuq.org/course/detail/1015\" target=\"_blank\" rel=\"external\">http://www.stuq.org/course/detail/1015</a></p>\n<p>OpenResty最佳实践：<a href=\"https://moonbingbing.gitbooks.io/openresty-best-practices/content/\" target=\"_blank\" rel=\"external\">https://moonbingbing.gitbooks.io/openresty-best-practices/content/</a> （<a href=\"https://github.com/moonbingbing/openresty-best-practices）\" target=\"_blank\" rel=\"external\">https://github.com/moonbingbing/openresty-best-practices）</a></p>\n<hr>\n<h1 id=\"安装OpenResty\"><a href=\"#安装OpenResty\" class=\"headerlink\" title=\"安装OpenResty\"></a>安装OpenResty</h1><p>默认安装路径如下</p>\n<ul>\n<li>/usr/local/openresty/</li>\n</ul>\n<p>OpenResty，也被称为“ngx_openresty”，是一个基于Nginx的核心Web应用程序服务器，它包含了大量的第三方的Nginx模块和大部分系统依赖包。 OpenResty不是Nginx的分支，它只是一个软件包。主要有章亦春维护。<br>为什么是OpenResty？<br>OpenResty允许开发人员使用lua编程语言构建现有的Nginx的C模块，支持高流量的应用程序。</p>\n<p>依赖的软件包：</p>\n<blockquote>\n<ul>\n<li>perl 5.6.1+</li>\n<li>libreadline</li>\n<li>libpcre</li>\n<li>libssl</li>\n</ul>\n</blockquote>\n<p>Debian 和 Ubuntu系统：<br><figure class=\"highlight q\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">apt-<span class=\"built_in\">get</span> install libreadline-<span class=\"built_in\">dev</span> libncurses5-<span class=\"built_in\">dev</span> libpcre3-<span class=\"built_in\">dev</span> libssl-<span class=\"built_in\">dev</span> perl make</div></pre></td></tr></table></figure></p>\n<p>Fedora 、RedHat 和 centos系统：<br><figure class=\"highlight brainfuck\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">yum</span> <span class=\"comment\">install</span> <span class=\"comment\">readline</span><span class=\"literal\">-</span><span class=\"comment\">devel</span> <span class=\"comment\">pcre</span><span class=\"literal\">-</span><span class=\"comment\">devel</span> <span class=\"comment\">openssl</span><span class=\"literal\">-</span><span class=\"comment\">devel</span> <span class=\"comment\">gc</span><span class=\"literal\">-</span><span class=\"comment\">c</span><span class=\"literal\">+</span><span class=\"literal\">+</span> <span class=\"literal\">-</span><span class=\"comment\">y</span></div></pre></td></tr></table></figure></p>\n<p>下载OpenResty、解压、编译、安装：<br>版本选择：<a href=\"https://openresty.org/en/download.html\" target=\"_blank\" rel=\"external\">https://openresty.org/en/download.html</a><br><figure class=\"highlight x86asm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">wget http://openresty.org/download/ngx_openresty-<span class=\"number\">1.5</span><span class=\"meta\">.8</span><span class=\"meta\">.1</span>.tar.gz</div><div class=\"line\">tar xzvf ngx_openresty-<span class=\"number\">1.5</span><span class=\"meta\">.8</span><span class=\"meta\">.1</span>.tar.gz</div><div class=\"line\">cd ngx_openresty-<span class=\"number\">1.5</span><span class=\"meta\">.8</span><span class=\"meta\">.1</span>/</div><div class=\"line\">./configure --with-luajit</div><div class=\"line\">make</div><div class=\"line\">make install</div></pre></td></tr></table></figure></p>\n<p>另外的配置选项：<br><figure class=\"highlight haml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">./configure --prefix=/opt/openresty </div><div class=\"line\">-<span class=\"ruby\">-with-luajit </span></div><div class=\"line\">-<span class=\"ruby\">-without-http_redis2_module </span></div><div class=\"line\">-<span class=\"ruby\">-with-http_iconv_module </span></div><div class=\"line\">-<span class=\"ruby\">-with-http_postgres_module </span></div><div class=\"line\">-<span class=\"ruby\">j2</span></div><div class=\"line\">-<span class=\"ruby\">-help to see more options</span></div></pre></td></tr></table></figure></p>\n<p>此时安装完成，打开localhost就可以看到nginx页面了。</p>\n<hr>\n","excerpt":"","more":"<h1 id=\"OpenResty\"><a href=\"#OpenResty\" class=\"headerlink\" title=\"OpenResty\"></a>OpenResty</h1><p>参考资料：</p>\n<p>官方: <a href=\"http://openresty.org/\">http://openresty.org/</a><br>Github: <a href=\"https://github.com/agentzh/ngx_openresty\">https://github.com/agentzh/ngx_openresty</a>      <a href=\"https://github.com/openresty/\">https://github.com/openresty/</a></p>\n<p>视频学习：<a href=\"http://www.stuq.org/course/detail/1015\">http://www.stuq.org/course/detail/1015</a></p>\n<p>OpenResty最佳实践：<a href=\"https://moonbingbing.gitbooks.io/openresty-best-practices/content/\">https://moonbingbing.gitbooks.io/openresty-best-practices/content/</a> （<a href=\"https://github.com/moonbingbing/openresty-best-practices）\">https://github.com/moonbingbing/openresty-best-practices）</a></p>\n<hr>\n<h1 id=\"安装OpenResty\"><a href=\"#安装OpenResty\" class=\"headerlink\" title=\"安装OpenResty\"></a>安装OpenResty</h1><p>默认安装路径如下</p>\n<ul>\n<li>/usr/local/openresty/</li>\n</ul>\n<p>OpenResty，也被称为“ngx_openresty”，是一个基于Nginx的核心Web应用程序服务器，它包含了大量的第三方的Nginx模块和大部分系统依赖包。 OpenResty不是Nginx的分支，它只是一个软件包。主要有章亦春维护。<br>为什么是OpenResty？<br>OpenResty允许开发人员使用lua编程语言构建现有的Nginx的C模块，支持高流量的应用程序。</p>\n<p>依赖的软件包：</p>\n<blockquote>\n<ul>\n<li>perl 5.6.1+</li>\n<li>libreadline</li>\n<li>libpcre</li>\n<li>libssl</li>\n</ul>\n</blockquote>\n<p>Debian 和 Ubuntu系统：<br><figure class=\"highlight q\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">apt-<span class=\"built_in\">get</span> install libreadline-<span class=\"built_in\">dev</span> libncurses5-<span class=\"built_in\">dev</span> libpcre3-<span class=\"built_in\">dev</span> libssl-<span class=\"built_in\">dev</span> perl make</div></pre></td></tr></table></figure></p>\n<p>Fedora 、RedHat 和 centos系统：<br><figure class=\"highlight brainfuck\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">yum</span> <span class=\"comment\">install</span> <span class=\"comment\">readline</span><span class=\"literal\">-</span><span class=\"comment\">devel</span> <span class=\"comment\">pcre</span><span class=\"literal\">-</span><span class=\"comment\">devel</span> <span class=\"comment\">openssl</span><span class=\"literal\">-</span><span class=\"comment\">devel</span> <span class=\"comment\">gc</span><span class=\"literal\">-</span><span class=\"comment\">c</span><span class=\"literal\">+</span><span class=\"literal\">+</span> <span class=\"literal\">-</span><span class=\"comment\">y</span></div></pre></td></tr></table></figure></p>\n<p>下载OpenResty、解压、编译、安装：<br>版本选择：<a href=\"https://openresty.org/en/download.html\">https://openresty.org/en/download.html</a><br><figure class=\"highlight x86asm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">wget http://openresty.org/download/ngx_openresty-<span class=\"number\">1.5</span><span class=\"meta\">.8</span><span class=\"meta\">.1</span>.tar.gz</div><div class=\"line\">tar xzvf ngx_openresty-<span class=\"number\">1.5</span><span class=\"meta\">.8</span><span class=\"meta\">.1</span>.tar.gz</div><div class=\"line\">cd ngx_openresty-<span class=\"number\">1.5</span><span class=\"meta\">.8</span><span class=\"meta\">.1</span>/</div><div class=\"line\">./configure --with-luajit</div><div class=\"line\">make</div><div class=\"line\">make install</div></pre></td></tr></table></figure></p>\n<p>另外的配置选项：<br><figure class=\"highlight haml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">./configure --prefix=/opt/openresty </div><div class=\"line\">-<span class=\"ruby\">-with-luajit </div><div class=\"line\"></span>-<span class=\"ruby\">-without-http_redis2_module </div><div class=\"line\"></span>-<span class=\"ruby\">-with-http_iconv_module </div><div class=\"line\"></span>-<span class=\"ruby\">-with-http_postgres_module </div><div class=\"line\"></span>-<span class=\"ruby\">j2</div><div class=\"line\"></span>-<span class=\"ruby\">-help to see more options</span></div></pre></td></tr></table></figure></p>\n<p>此时安装完成，打开localhost就可以看到nginx页面了。</p>\n<hr>\n"},{"title":"MySQL数据库","abbrlink":37198,"date":"2016-11-03T02:46:10.000Z","_content":"\nMySql\n### 特别要注意大小写和命令后的英文;号。\n**新安装默认密码为空**`mysql -u root` 即可进入，不要`mysql -u root -p `进不去的\n大于5.7的版本默认有随机密码，执行`cat  /var/log/mysqld.log | grep password | grep 'root@localhost' | awk -F 'root@localhost: ' '{print $2}'`查看随机生成的密码。\n\n\n## 查看数据库\n`SHOW DATABASES;`\n\n## 查看表\n\tUSE blog;\n\tSHOW TABLES;\n## 查看表中的列\n\tSHOW COLUMNS FROM auth_user; 或：DESCRIBE auth_user;\n**describe 表名** 是 **show columns from 表名** 的一种快捷方式。\n\n## 创建数据库\n```mysql\nmysql> CREATE DATABASE 库名;\nmysql> USE 库名;\nmysql> CREATE TABLE 表名 (字段名 VARCHAR(20), 字段名 CHAR(1));```\n例：\n## 创建表\n```\nuse demo;\ncreate table pet(\n        name varchar(20),        #名字\n        owner varchar(20),       #主人\n        species varchar(20),     #种类\n        sex char(1),             #性别\n        birth date,              #出生日期\n        death date               #死亡日期\n)```\n\n为了验证你的表是按你期望的方式创建，使用一个**DESCRIBE**语句：\n![](http://ofyfogrgx.bkt.clouddn.com//blog/mysql%E6%95%B0%E6%8D%AE%E5%BA%93001.jpg)\n\n## 删除数据库：\nmysql> `DROP DATABASE 库名;`\n## 删除数据表：\nmysql> `DROP TABLE 表名；`\n## 将表中记录清空：\nmysql> `DELETE FROM 表名;`\n\n## 创建表(复杂形式)：\n### 创建customer表：\n```\ncreate table customers(\n    id int not null auto_increment,\n    name char(20) not null,\n    address char(50) null,\n    city char(50) null,\n    age int not null,\n    love char(50) not null default 'No habbit',\n    primary key(id)\n)engine=InnoDB;```\n\n**SELECT last_insert_id();**这个函数可以获得返回最后一个**auto_increment**值。默认值为：default 'No habbit',\n引擎类型，多为**engine = InnoDB**，如果省略了**engine=**语句，则使用默认的引擎(MyISAM)\n\n## 更改表结构：\n\n- 增加一列：\n\t`alter table pet add des char(100) null;`\n- 删除：\n    `alter table pet drop column des;`\n- 重命名表：\n\t`rename table pet to animals;`\n- 添加id字段：\n```\nalter table pet add id int not null\nprimary key auto_increment first;```\n详见：http://www.cnblogs.com/beginman/p/3249472.html\n\n\n\n## 查看密码\n* 1.用root 进入mysql后\nmysql>`set password =password('你的密码');`\nmysql>`flush privileges;`\n\n* 2.使用GRANT语句 \nmysql>`grant all on *.* to 'root'@'localhost' IDENTIFIED BY '你的密码'with grant option ;`\nmysql>`flush privileges;`\n\n* 3.进入mysql库修改user表\nmysql>`use mysql;`\nmysql>`update user set password=password('你的密码') where user='root'; `\nmysql>`flush privileges;`\n\n## 设置数据库密码\n```\nmysql -u root -p\n> （输入密码）\n> create user '用户名'@'localhost' identified by '密码';\n> grant all privileges on 库名.* to '用户名'@'localhost';\n> flush privileges;\n> exit;```\n\n## 修改Mysql密码\n- 方法一：\n使用phpmyadmin，直接修改Mysql库的user 表。或者使用Navicat for Mysql 直接修改连接属性。\n【据说可以用直接修改user表文件的方法：\n**法一：**关闭MySQL，Windows下打开Mysql\\data\\mysql，有三个文件user.frm,user.MYD,user.MYI找个知道密码的MySQL，替换相应的这三个文件，如果user表结构没改过，一般也没人去改，替换user.MYD就可以了。\n**法二：**也可以直接编辑user.MYD，找个十六进制编辑器，UltraEdit就有这个功能。关闭MySQL，打开user.MYD。将用户名root后面的八个字符改为565491d704013245，新密码就是123456。或者将它们对应的十六进制数字，（左边那里，一个字符对应两个数字），改为 00 02 02 02 02 02 02 02,这就是空密码，在编辑器右边看到的都是星号*，看起来很象小数点。重开MySQL，输入root和你的新密码。】\n\n- 方法二：使用mysqladmin\ncd到mysql的bin文件夹，然后执行如下\nD:\\Mysql\\bin>`mysqladmin -u root -p password 新密码`\nEnter password:(在此输入原密码)\n格式：**mysqladmin -u用户名 -p旧密码 password 新密码。**\n\n#### 忘记密码：\n- 1.用root或者运行mysqld的用户登录系统； \n- 2．利用kill命令结束掉mysqld的进程； \n- 3．使用**--skip-grant-tables**参数启动MySQL Server \n- shell>`mysqld_safe --skip-grant-tables &` \n- UPDATE user SET password=PASSWORD(\"new password\") WHERE user='root';\n- 4.为root@localhost设置新密码 \n- shell>`mysqladmin -u root flush-privileges password \"newpassword\"`\n- 5．重启MySQL Server\n\n---\n\n看提示，PHP执行时看错误，是用mysql还是mysqli\n语法\n**mysql_connect(servername,username,password);**\n\n参数描述servername可选。规定要连接的服务器。默认是 \"localhost:3306\"。username可选。规定登录所使用的用户名。默认值是拥有服务器进程的用户的名称。password可选。规定登录所用的密码。默认是 \"\"。\n\n语法\n**CREATE DATABASE database_name**\n\n|参数|描述|\n|-----|-------|\n|servername|可选。规定要连接的服务器。默认是 \"localhost:3306\"。|\n|username|可选。规定登录所使用的用户名。默认值是拥有服务器进程的用户的名称。|\n|passwd|可选。规定登录所用的密码。默认是 \"\"。|\n\n为了让 PHP 执行上面的语句，我们必须使用 mysql_query() 函数。此函数用于向 MySQL 连接发送查询或命令。\n连接：\n例子:\n```php\n<?php\n//在一个变量中 ($con) 存放了在脚本中供稍后使用的连接。如果连接失败，将执行 \"die\" 部分：\n$con = mysql_connect(\"localhost\",\"peter\",\"abc123\");\nif (!$con)\n  {\n  die('Could not connect: ' . mysql_error());\n  }```\n\n\n创建：\n```mysql\n// Create database\n//创建了一个名为 \"my_db\" 的数据库：\nif (mysql_query(\"CREATE DATABASE my_db\",$con))\n  {\n  echo \"Database created\";\n  }\nelse\n  {\n  echo \"Error creating database: \" . mysql_error();\n  }\n\n// Create table in my_db database\n//创建一个名为 \"Persons\" 的表，此表有三列。列名是 \"FirstName\", \"LastName\" 以及 \"Age\"：\n//重要事项：在创建表之前，必须首先选择数据库。通过 mysql_select_db() 函数选取数据库。\n//注释：当您创建 varchar 类型的数据库字段时，必须规定该字段的最大长度，例如：varchar(15)。\nmysql_select_db(\"my_db\", $con);\n$sql = \"CREATE TABLE Persons \n(\nFirstName varchar(15),\nLastName varchar(15),\nAge int\n)\";\nmysql_query($sql,$con);\n\nmysql_close($con);   //提前关闭连接，请使用 mysql_close() 函数,不加此句则脚本结束后关闭。\n?>```\n\n---\n\nMySQL 数据类型\n下面的可使用的各种 MySQL 数据类型：\n\n|数值类型|描述|\n|---|---|\n| int(size)|仅支持整数。在 size 参数中规定数字的最大值。|\n| smallint(size)|仅支持整数。在 size 参数中规定数字的最大值。|\n| tinyint(size)|仅支持整数。在 size 参数中规定数字的最大值。|\n| mediumint(size)|仅支持整数。在 size 参数中规定数字的最大值。|\n| bigint(size)|仅支持整数。在 size 参数中规定数字的最大值。|\n|---|---|\n| decimal(size,d)|支持带有小数的数字。在 size 参数中规定数字的最大值。在 d 参数中规定小数点右侧的数字的最大值。|\n| double(size,d)|支持带有小数的数字。在 size 参数中规定数字的最大值。在 d 参数中规定小数点右侧的数字的最大值。|\n| float(size,d) |支持带有小数的数字。在 size 参数中规定数字的最大值。在 d 参数中规定小数点右侧的数字的最大值。|\n\n\n|文本数据类型|描述|\n|-------|-----|\n|char(size)|支持固定长度的字符串。（可包含字母、数字以及特殊符号）。在 size 参数中规定固定长度。|\n|varchar(size)|支持可变长度的字符串。（可包含字母、数字以及特殊符号）。在 size 参数中规定最大长度。|\n|tinytext|支持可变长度的字符串，最大长度是 255 个字符。|\n|text blob|支持可变长度的字符串，最大长度是 65535 个字符。|\n|mediumtext mediumblob|支持可变长度的字符串，最大长度是 16777215 个字符。|\n|longtext longblob|支持可变长度的字符串，最大长度是 4294967295 个字符。|\n\n|日期数据类型|描述|\n|----|----|\n|date(yyyy-mm-dd)|支持日期或时间|\n|datetime(yyyy-mm-dd hh:mm:ss)|支持日期或时间|\n|timestamp(yyyymmddhhmmss)|支持日期或时间|\n|time(hh:mm:ss)|支持日期或时间|\n\n|杂项数据类型|描述|\n|---|---|\n|enum(value1,value2,ect)|ENUM 是 ENUMERATED 列表的缩写。可以在括号中存放最多 65535 个值。|\n|set|SET 与 ENUM 相似。但是，SET 可拥有最多 64 个列表项目，并可存放不止一个 choice|\n\n#### 主键和自动递增字段\n每个表都应有一个主键字段。\n主键用于对表中的行进行唯一标识。每个主键值在表中必须是唯一的。此外，主键字段不能为空，这是由于数据库引擎需要一个值来对记录进行定位。\n主键字段永远要被编入索引。这条规则没有例外。你必须对主键字段进行索引，这样数据库引擎才能快速定位给予该键值的行。\n下面的例子把 **personID** 字段设置为主键字段。主键字段通常是 ID 号，且通常使用 **AUTO_INCREMENT** 设置。**AUTO_INCREMENT** 会在新记录被添加时逐一增加该字段的值。要确保主键字段不为空，我们必须向该字段添加 **NOT NULL** 设置。\n例：\n```mysql\n$sql = \"CREATE TABLE Persons \n(\npersonID int NOT NULL AUTO_INCREMENT, \nPRIMARY KEY(personID),\nFirstName varchar(15),\nLastName varchar(15),\nAge int\n)\";\n\nmysql_query($sql,$con);```\n\n#### 插入：\n语法\n```\nINSERT INTO table_name\nVALUES (value1, value2,....)```\n您还可以规定希望在其中插入数据的列：\n```\nINSERT INTO table_name (column1, column2,...)\nVALUES (value1, value2,....)```\n注释：SQL 语句对大小写不敏感。**INSERT INTO 与 insert into** 相同。\n\n\n为了让 PHP 执行该语句，我们必须使用 **mysql_query()** 函数。该函数用于向 MySQL 连接发送查询或命令。\n例子\n在前面的章节，我们创建了一个名为 \"Persons\" 的表，有三个列：\"Firstname\", \"Lastname\" 以及 \"Age\"。我们将在本例中使用同样的表。下面的例子向 \"Persons\" 表添加了两个新记录：\n```php\n<?php\n$con = mysql_connect(\"localhost\",\"peter\",\"abc123\");\nif (!$con)\n  {\n  die('Could not connect: ' . mysql_error());\n  }\n\nmysql_select_db(\"my_db\", $con);\n\nmysql_query(\"INSERT INTO Persons (FirstName, LastName, Age) \nVALUES ('Peter', 'Griffin', '35')\");\n\nmysql_query(\"INSERT INTO Persons (FirstName, LastName, Age) \nVALUES ('Glenn', 'Quagmire', '33')\");\n\nmysql_close($con);\n?>```\n\n#### 把来自表单的数据插入数据库\n现在，我们创建一个 HTML 表单，这个表单可把新记录插入 \"Persons\" 表。\n这是这个 HTML 表单：\n```html\n<html>\n<body>\n\n<form action=\"insert.php\" method=\"post\">\nFirstname: <input type=\"text\" name=\"firstname\" />\nLastname: <input type=\"text\" name=\"lastname\" />\nAge: <input type=\"text\" name=\"age\" />\n<input type=\"submit\" />\n</form>\n\n</body>\n</html>```\n\n当用户点击上例中 HTML 表单中的提交按钮时，表单数据被发送到 \"insert.php\"。\"insert.php\" 文件连接数据库，并通过 **$_POST** 变量从表单取回值。然后，mysql_query() 函数执行 **INSERT INTO** 语句，一条新的记录会添加到数据库表中。\n下面是 \"insert.php\" 页面的代码：\n```php\n<?php\n$con = mysql_connect(\"localhost\",\"peter\",\"abc123\");\nif (!$con)\n  {\n  die('Could not connect: ' . mysql_error());\n  }\n\nmysql_select_db(\"my_db\", $con);\n\n$sql=\"INSERT INTO Persons (FirstName, LastName, Age)\nVALUES\n('$_POST[firstname]','$_POST[lastname]','$_POST[age]')\";\n\nif (!mysql_query($sql,$con))\n  {\n  die('Error: ' . mysql_error());\n  }\necho \"1 record added\";\n\nmysql_close($con)\n?>```\n\n\n#### 修改：\n`UPDATE` 语句用于修改数据库表中的数据。\n语法\n```mysql\nUPDATE table_name\nSET column_name = new_value\nWHERE column_name = some_value```\n\n注释：SQL 对大小写不敏感。UPDATE 与 update 等效。\n为了让 PHP 执行上面的语句，我们必须使用 mysql_query( 函数。该函数用于向 SQL 连接发送查询和命令。\n例子\n稍早时，我们在本教程中创建了一个名为 \"Persons\" 的表。它看起来类似这样：\n\n|FirstName|LastName|Age|\n|---|---|---|\n|Peter|Griffin|35|\n|Glenn|Quagmire|33|\n下面的例子更新 \"Persons\" 表的一些数据：\n```php\n<?php\n$con = mysql_connect(\"localhost\",\"peter\",\"abc123\");\nif (!$con)\n  {\n  die('Could not connect: ' . mysql_error());\n  }\n\nmysql_select_db(\"my_db\", $con);\n\nmysql_query(\"UPDATE Persons SET Age = '36'\nWHERE FirstName = 'Peter' AND LastName = 'Griffin'\");\n\nmysql_close($con);\n?>```\n在这次更新后，\"Persons\" 表格是这样的：\n\n|FirstName|LastName|Age|\n|---|---|---|\n|Peter|Griffin|36|\n|Glenn|Quagmire|33|\n\n#### 删除：\n删除数据库中的数据\n`DELETE FROM` 语句用于从数据库表中删除记录。\n语法\n```mysql\nDELETE FROM table_name\nWHERE column_name = some_value```\n\n注释：SQL 对大小写不敏感。DELETE FROM 与 delete from 等效。\n为了让 PHP 执行上面的语句，我们必须使用 **mysql_query**( 函数。该函数用于向 SQL 连接发送查询和命令。\n例子\n稍早时，我们在本教程中创建了一个名为 \"Persons\" 的表。它看起来类似这样：\n\n|FirstName|LastName|Age|\n|---|---|---|\n|Peter|Griffin|35|\n|Glenn|Quagmire|33|\n下面的例子删除 \"Persons\" 表中所有 LastName='Griffin' 的记录：\n```php\n<?php\n$con = mysql_connect(\"localhost\",\"peter\",\"abc123\");\nif (!$con)\n  {\n  die('Could not connect: ' . mysql_error());\n  }\n\nmysql_select_db(\"my_db\", $con);\n\nmysql_query(\"DELETE FROM Persons WHERE LastName='Griffin'\");\n\nmysql_close($con);\n?>```\n在这次删除之后，表是这样的：\n\n|FirstName|LastName|Age|\n|---|---|---|\n|Glenn|Quagmire|33|\n\n#### 查询：\n`SELECT` 语句用于从数据库中选取数据。\n语法\nSELECT column_name(s) FROM table_name\n注释：SQL 语句对大小写不敏感。SELECT 与 select 等效。\n为了让 PHP 执行上面的语句，我们必须使用** mysql_query()** 函数。该函数用于向 MySQL 发送查询或命令。\n例子\n下面的例子选取存储在 \"Persons\" 表中的所有数据（* 字符选取表中所有数据）：\n```php\n<?php\n$con = mysql_connect(\"localhost\",\"peter\",\"abc123\");\nif (!$con)\n  {\n  die('Could not connect: ' . mysql_error());\n  }\n\nmysql_select_db(\"my_db\", $con);\n\n$result = mysql_query(\"SELECT * FROM Persons\");\n\nwhile($row = mysql_fetch_array($result))\n  {\n  echo $row['FirstName'] . \" \" . $row['LastName'];\n  echo \"<br />\";\n  }\n\nmysql_close($con);\n?>```\n上面这个例子在 $result 变量中存放由 mysql_query() 函数返回的数据。接下来，我们使用 mysql_fetch_array() 函数以数组的形式从记录集返回第一行。每个随后对 mysql_fetch_array() 函数的调用都会返回记录集中的下一行。 while loop 语句会循环记录集中的所有记录。为了输出每行的值，我们使用了 PHP 的 $row 变量 ($row['FirstName'] 和 $row['LastName'])。\n以上代码的输出：\nPeter Griffin\nGlenn Quagmire\n\n#### 在 HTML 表格中显示结果\n下面的例子选取的数据与上面的例子相同，但是将把数据显示在一个 HTML 表格中：\n```php\n<?php\n$con = mysql_connect(\"localhost\",\"peter\",\"abc123\");\nif (!$con)\n  {\n  die('Could not connect: ' . mysql_error());\n  }\n\nmysql_select_db(\"my_db\", $con);\n\n$result = mysql_query(\"SELECT * FROM Persons\");\n\necho \"<table border='1'>\n<tr>\n<th>Firstname</th>\n<th>Lastname</th>\n</tr>\";\n\nwhile($row = mysql_fetch_array($result))\n  {\n  echo \"<tr>\";\n  echo \"<td>\" . $row['FirstName'] . \"</td>\";\n  echo \"<td>\" . $row['LastName'] . \"</td>\";\n  echo \"</tr>\";\n  }\necho \"</table>\";\n\nmysql_close($con);\n?>```\n以上代码的输出：\n\n|FirstName|LastName|\n|---|---|\n|Peter|Griffin|\n|Glenn|Quagmire|\n\n\n---\n","source":"_posts/数据库/2016-11-03-MySQL数据库.md","raw":"---\ntitle: MySQL数据库\ncategories:\n  - 数据库\ntags:\n  - MySQL常用命令\nabbrlink: 37198\ndate: 2016-11-03 10:46:10\n---\n\nMySql\n### 特别要注意大小写和命令后的英文;号。\n**新安装默认密码为空**`mysql -u root` 即可进入，不要`mysql -u root -p `进不去的\n大于5.7的版本默认有随机密码，执行`cat  /var/log/mysqld.log | grep password | grep 'root@localhost' | awk -F 'root@localhost: ' '{print $2}'`查看随机生成的密码。\n\n\n## 查看数据库\n`SHOW DATABASES;`\n\n## 查看表\n\tUSE blog;\n\tSHOW TABLES;\n## 查看表中的列\n\tSHOW COLUMNS FROM auth_user; 或：DESCRIBE auth_user;\n**describe 表名** 是 **show columns from 表名** 的一种快捷方式。\n\n## 创建数据库\n```mysql\nmysql> CREATE DATABASE 库名;\nmysql> USE 库名;\nmysql> CREATE TABLE 表名 (字段名 VARCHAR(20), 字段名 CHAR(1));```\n例：\n## 创建表\n```\nuse demo;\ncreate table pet(\n        name varchar(20),        #名字\n        owner varchar(20),       #主人\n        species varchar(20),     #种类\n        sex char(1),             #性别\n        birth date,              #出生日期\n        death date               #死亡日期\n)```\n\n为了验证你的表是按你期望的方式创建，使用一个**DESCRIBE**语句：\n![](http://ofyfogrgx.bkt.clouddn.com//blog/mysql%E6%95%B0%E6%8D%AE%E5%BA%93001.jpg)\n\n## 删除数据库：\nmysql> `DROP DATABASE 库名;`\n## 删除数据表：\nmysql> `DROP TABLE 表名；`\n## 将表中记录清空：\nmysql> `DELETE FROM 表名;`\n\n## 创建表(复杂形式)：\n### 创建customer表：\n```\ncreate table customers(\n    id int not null auto_increment,\n    name char(20) not null,\n    address char(50) null,\n    city char(50) null,\n    age int not null,\n    love char(50) not null default 'No habbit',\n    primary key(id)\n)engine=InnoDB;```\n\n**SELECT last_insert_id();**这个函数可以获得返回最后一个**auto_increment**值。默认值为：default 'No habbit',\n引擎类型，多为**engine = InnoDB**，如果省略了**engine=**语句，则使用默认的引擎(MyISAM)\n\n## 更改表结构：\n\n- 增加一列：\n\t`alter table pet add des char(100) null;`\n- 删除：\n    `alter table pet drop column des;`\n- 重命名表：\n\t`rename table pet to animals;`\n- 添加id字段：\n```\nalter table pet add id int not null\nprimary key auto_increment first;```\n详见：http://www.cnblogs.com/beginman/p/3249472.html\n\n\n\n## 查看密码\n* 1.用root 进入mysql后\nmysql>`set password =password('你的密码');`\nmysql>`flush privileges;`\n\n* 2.使用GRANT语句 \nmysql>`grant all on *.* to 'root'@'localhost' IDENTIFIED BY '你的密码'with grant option ;`\nmysql>`flush privileges;`\n\n* 3.进入mysql库修改user表\nmysql>`use mysql;`\nmysql>`update user set password=password('你的密码') where user='root'; `\nmysql>`flush privileges;`\n\n## 设置数据库密码\n```\nmysql -u root -p\n> （输入密码）\n> create user '用户名'@'localhost' identified by '密码';\n> grant all privileges on 库名.* to '用户名'@'localhost';\n> flush privileges;\n> exit;```\n\n## 修改Mysql密码\n- 方法一：\n使用phpmyadmin，直接修改Mysql库的user 表。或者使用Navicat for Mysql 直接修改连接属性。\n【据说可以用直接修改user表文件的方法：\n**法一：**关闭MySQL，Windows下打开Mysql\\data\\mysql，有三个文件user.frm,user.MYD,user.MYI找个知道密码的MySQL，替换相应的这三个文件，如果user表结构没改过，一般也没人去改，替换user.MYD就可以了。\n**法二：**也可以直接编辑user.MYD，找个十六进制编辑器，UltraEdit就有这个功能。关闭MySQL，打开user.MYD。将用户名root后面的八个字符改为565491d704013245，新密码就是123456。或者将它们对应的十六进制数字，（左边那里，一个字符对应两个数字），改为 00 02 02 02 02 02 02 02,这就是空密码，在编辑器右边看到的都是星号*，看起来很象小数点。重开MySQL，输入root和你的新密码。】\n\n- 方法二：使用mysqladmin\ncd到mysql的bin文件夹，然后执行如下\nD:\\Mysql\\bin>`mysqladmin -u root -p password 新密码`\nEnter password:(在此输入原密码)\n格式：**mysqladmin -u用户名 -p旧密码 password 新密码。**\n\n#### 忘记密码：\n- 1.用root或者运行mysqld的用户登录系统； \n- 2．利用kill命令结束掉mysqld的进程； \n- 3．使用**--skip-grant-tables**参数启动MySQL Server \n- shell>`mysqld_safe --skip-grant-tables &` \n- UPDATE user SET password=PASSWORD(\"new password\") WHERE user='root';\n- 4.为root@localhost设置新密码 \n- shell>`mysqladmin -u root flush-privileges password \"newpassword\"`\n- 5．重启MySQL Server\n\n---\n\n看提示，PHP执行时看错误，是用mysql还是mysqli\n语法\n**mysql_connect(servername,username,password);**\n\n参数描述servername可选。规定要连接的服务器。默认是 \"localhost:3306\"。username可选。规定登录所使用的用户名。默认值是拥有服务器进程的用户的名称。password可选。规定登录所用的密码。默认是 \"\"。\n\n语法\n**CREATE DATABASE database_name**\n\n|参数|描述|\n|-----|-------|\n|servername|可选。规定要连接的服务器。默认是 \"localhost:3306\"。|\n|username|可选。规定登录所使用的用户名。默认值是拥有服务器进程的用户的名称。|\n|passwd|可选。规定登录所用的密码。默认是 \"\"。|\n\n为了让 PHP 执行上面的语句，我们必须使用 mysql_query() 函数。此函数用于向 MySQL 连接发送查询或命令。\n连接：\n例子:\n```php\n<?php\n//在一个变量中 ($con) 存放了在脚本中供稍后使用的连接。如果连接失败，将执行 \"die\" 部分：\n$con = mysql_connect(\"localhost\",\"peter\",\"abc123\");\nif (!$con)\n  {\n  die('Could not connect: ' . mysql_error());\n  }```\n\n\n创建：\n```mysql\n// Create database\n//创建了一个名为 \"my_db\" 的数据库：\nif (mysql_query(\"CREATE DATABASE my_db\",$con))\n  {\n  echo \"Database created\";\n  }\nelse\n  {\n  echo \"Error creating database: \" . mysql_error();\n  }\n\n// Create table in my_db database\n//创建一个名为 \"Persons\" 的表，此表有三列。列名是 \"FirstName\", \"LastName\" 以及 \"Age\"：\n//重要事项：在创建表之前，必须首先选择数据库。通过 mysql_select_db() 函数选取数据库。\n//注释：当您创建 varchar 类型的数据库字段时，必须规定该字段的最大长度，例如：varchar(15)。\nmysql_select_db(\"my_db\", $con);\n$sql = \"CREATE TABLE Persons \n(\nFirstName varchar(15),\nLastName varchar(15),\nAge int\n)\";\nmysql_query($sql,$con);\n\nmysql_close($con);   //提前关闭连接，请使用 mysql_close() 函数,不加此句则脚本结束后关闭。\n?>```\n\n---\n\nMySQL 数据类型\n下面的可使用的各种 MySQL 数据类型：\n\n|数值类型|描述|\n|---|---|\n| int(size)|仅支持整数。在 size 参数中规定数字的最大值。|\n| smallint(size)|仅支持整数。在 size 参数中规定数字的最大值。|\n| tinyint(size)|仅支持整数。在 size 参数中规定数字的最大值。|\n| mediumint(size)|仅支持整数。在 size 参数中规定数字的最大值。|\n| bigint(size)|仅支持整数。在 size 参数中规定数字的最大值。|\n|---|---|\n| decimal(size,d)|支持带有小数的数字。在 size 参数中规定数字的最大值。在 d 参数中规定小数点右侧的数字的最大值。|\n| double(size,d)|支持带有小数的数字。在 size 参数中规定数字的最大值。在 d 参数中规定小数点右侧的数字的最大值。|\n| float(size,d) |支持带有小数的数字。在 size 参数中规定数字的最大值。在 d 参数中规定小数点右侧的数字的最大值。|\n\n\n|文本数据类型|描述|\n|-------|-----|\n|char(size)|支持固定长度的字符串。（可包含字母、数字以及特殊符号）。在 size 参数中规定固定长度。|\n|varchar(size)|支持可变长度的字符串。（可包含字母、数字以及特殊符号）。在 size 参数中规定最大长度。|\n|tinytext|支持可变长度的字符串，最大长度是 255 个字符。|\n|text blob|支持可变长度的字符串，最大长度是 65535 个字符。|\n|mediumtext mediumblob|支持可变长度的字符串，最大长度是 16777215 个字符。|\n|longtext longblob|支持可变长度的字符串，最大长度是 4294967295 个字符。|\n\n|日期数据类型|描述|\n|----|----|\n|date(yyyy-mm-dd)|支持日期或时间|\n|datetime(yyyy-mm-dd hh:mm:ss)|支持日期或时间|\n|timestamp(yyyymmddhhmmss)|支持日期或时间|\n|time(hh:mm:ss)|支持日期或时间|\n\n|杂项数据类型|描述|\n|---|---|\n|enum(value1,value2,ect)|ENUM 是 ENUMERATED 列表的缩写。可以在括号中存放最多 65535 个值。|\n|set|SET 与 ENUM 相似。但是，SET 可拥有最多 64 个列表项目，并可存放不止一个 choice|\n\n#### 主键和自动递增字段\n每个表都应有一个主键字段。\n主键用于对表中的行进行唯一标识。每个主键值在表中必须是唯一的。此外，主键字段不能为空，这是由于数据库引擎需要一个值来对记录进行定位。\n主键字段永远要被编入索引。这条规则没有例外。你必须对主键字段进行索引，这样数据库引擎才能快速定位给予该键值的行。\n下面的例子把 **personID** 字段设置为主键字段。主键字段通常是 ID 号，且通常使用 **AUTO_INCREMENT** 设置。**AUTO_INCREMENT** 会在新记录被添加时逐一增加该字段的值。要确保主键字段不为空，我们必须向该字段添加 **NOT NULL** 设置。\n例：\n```mysql\n$sql = \"CREATE TABLE Persons \n(\npersonID int NOT NULL AUTO_INCREMENT, \nPRIMARY KEY(personID),\nFirstName varchar(15),\nLastName varchar(15),\nAge int\n)\";\n\nmysql_query($sql,$con);```\n\n#### 插入：\n语法\n```\nINSERT INTO table_name\nVALUES (value1, value2,....)```\n您还可以规定希望在其中插入数据的列：\n```\nINSERT INTO table_name (column1, column2,...)\nVALUES (value1, value2,....)```\n注释：SQL 语句对大小写不敏感。**INSERT INTO 与 insert into** 相同。\n\n\n为了让 PHP 执行该语句，我们必须使用 **mysql_query()** 函数。该函数用于向 MySQL 连接发送查询或命令。\n例子\n在前面的章节，我们创建了一个名为 \"Persons\" 的表，有三个列：\"Firstname\", \"Lastname\" 以及 \"Age\"。我们将在本例中使用同样的表。下面的例子向 \"Persons\" 表添加了两个新记录：\n```php\n<?php\n$con = mysql_connect(\"localhost\",\"peter\",\"abc123\");\nif (!$con)\n  {\n  die('Could not connect: ' . mysql_error());\n  }\n\nmysql_select_db(\"my_db\", $con);\n\nmysql_query(\"INSERT INTO Persons (FirstName, LastName, Age) \nVALUES ('Peter', 'Griffin', '35')\");\n\nmysql_query(\"INSERT INTO Persons (FirstName, LastName, Age) \nVALUES ('Glenn', 'Quagmire', '33')\");\n\nmysql_close($con);\n?>```\n\n#### 把来自表单的数据插入数据库\n现在，我们创建一个 HTML 表单，这个表单可把新记录插入 \"Persons\" 表。\n这是这个 HTML 表单：\n```html\n<html>\n<body>\n\n<form action=\"insert.php\" method=\"post\">\nFirstname: <input type=\"text\" name=\"firstname\" />\nLastname: <input type=\"text\" name=\"lastname\" />\nAge: <input type=\"text\" name=\"age\" />\n<input type=\"submit\" />\n</form>\n\n</body>\n</html>```\n\n当用户点击上例中 HTML 表单中的提交按钮时，表单数据被发送到 \"insert.php\"。\"insert.php\" 文件连接数据库，并通过 **$_POST** 变量从表单取回值。然后，mysql_query() 函数执行 **INSERT INTO** 语句，一条新的记录会添加到数据库表中。\n下面是 \"insert.php\" 页面的代码：\n```php\n<?php\n$con = mysql_connect(\"localhost\",\"peter\",\"abc123\");\nif (!$con)\n  {\n  die('Could not connect: ' . mysql_error());\n  }\n\nmysql_select_db(\"my_db\", $con);\n\n$sql=\"INSERT INTO Persons (FirstName, LastName, Age)\nVALUES\n('$_POST[firstname]','$_POST[lastname]','$_POST[age]')\";\n\nif (!mysql_query($sql,$con))\n  {\n  die('Error: ' . mysql_error());\n  }\necho \"1 record added\";\n\nmysql_close($con)\n?>```\n\n\n#### 修改：\n`UPDATE` 语句用于修改数据库表中的数据。\n语法\n```mysql\nUPDATE table_name\nSET column_name = new_value\nWHERE column_name = some_value```\n\n注释：SQL 对大小写不敏感。UPDATE 与 update 等效。\n为了让 PHP 执行上面的语句，我们必须使用 mysql_query( 函数。该函数用于向 SQL 连接发送查询和命令。\n例子\n稍早时，我们在本教程中创建了一个名为 \"Persons\" 的表。它看起来类似这样：\n\n|FirstName|LastName|Age|\n|---|---|---|\n|Peter|Griffin|35|\n|Glenn|Quagmire|33|\n下面的例子更新 \"Persons\" 表的一些数据：\n```php\n<?php\n$con = mysql_connect(\"localhost\",\"peter\",\"abc123\");\nif (!$con)\n  {\n  die('Could not connect: ' . mysql_error());\n  }\n\nmysql_select_db(\"my_db\", $con);\n\nmysql_query(\"UPDATE Persons SET Age = '36'\nWHERE FirstName = 'Peter' AND LastName = 'Griffin'\");\n\nmysql_close($con);\n?>```\n在这次更新后，\"Persons\" 表格是这样的：\n\n|FirstName|LastName|Age|\n|---|---|---|\n|Peter|Griffin|36|\n|Glenn|Quagmire|33|\n\n#### 删除：\n删除数据库中的数据\n`DELETE FROM` 语句用于从数据库表中删除记录。\n语法\n```mysql\nDELETE FROM table_name\nWHERE column_name = some_value```\n\n注释：SQL 对大小写不敏感。DELETE FROM 与 delete from 等效。\n为了让 PHP 执行上面的语句，我们必须使用 **mysql_query**( 函数。该函数用于向 SQL 连接发送查询和命令。\n例子\n稍早时，我们在本教程中创建了一个名为 \"Persons\" 的表。它看起来类似这样：\n\n|FirstName|LastName|Age|\n|---|---|---|\n|Peter|Griffin|35|\n|Glenn|Quagmire|33|\n下面的例子删除 \"Persons\" 表中所有 LastName='Griffin' 的记录：\n```php\n<?php\n$con = mysql_connect(\"localhost\",\"peter\",\"abc123\");\nif (!$con)\n  {\n  die('Could not connect: ' . mysql_error());\n  }\n\nmysql_select_db(\"my_db\", $con);\n\nmysql_query(\"DELETE FROM Persons WHERE LastName='Griffin'\");\n\nmysql_close($con);\n?>```\n在这次删除之后，表是这样的：\n\n|FirstName|LastName|Age|\n|---|---|---|\n|Glenn|Quagmire|33|\n\n#### 查询：\n`SELECT` 语句用于从数据库中选取数据。\n语法\nSELECT column_name(s) FROM table_name\n注释：SQL 语句对大小写不敏感。SELECT 与 select 等效。\n为了让 PHP 执行上面的语句，我们必须使用** mysql_query()** 函数。该函数用于向 MySQL 发送查询或命令。\n例子\n下面的例子选取存储在 \"Persons\" 表中的所有数据（* 字符选取表中所有数据）：\n```php\n<?php\n$con = mysql_connect(\"localhost\",\"peter\",\"abc123\");\nif (!$con)\n  {\n  die('Could not connect: ' . mysql_error());\n  }\n\nmysql_select_db(\"my_db\", $con);\n\n$result = mysql_query(\"SELECT * FROM Persons\");\n\nwhile($row = mysql_fetch_array($result))\n  {\n  echo $row['FirstName'] . \" \" . $row['LastName'];\n  echo \"<br />\";\n  }\n\nmysql_close($con);\n?>```\n上面这个例子在 $result 变量中存放由 mysql_query() 函数返回的数据。接下来，我们使用 mysql_fetch_array() 函数以数组的形式从记录集返回第一行。每个随后对 mysql_fetch_array() 函数的调用都会返回记录集中的下一行。 while loop 语句会循环记录集中的所有记录。为了输出每行的值，我们使用了 PHP 的 $row 变量 ($row['FirstName'] 和 $row['LastName'])。\n以上代码的输出：\nPeter Griffin\nGlenn Quagmire\n\n#### 在 HTML 表格中显示结果\n下面的例子选取的数据与上面的例子相同，但是将把数据显示在一个 HTML 表格中：\n```php\n<?php\n$con = mysql_connect(\"localhost\",\"peter\",\"abc123\");\nif (!$con)\n  {\n  die('Could not connect: ' . mysql_error());\n  }\n\nmysql_select_db(\"my_db\", $con);\n\n$result = mysql_query(\"SELECT * FROM Persons\");\n\necho \"<table border='1'>\n<tr>\n<th>Firstname</th>\n<th>Lastname</th>\n</tr>\";\n\nwhile($row = mysql_fetch_array($result))\n  {\n  echo \"<tr>\";\n  echo \"<td>\" . $row['FirstName'] . \"</td>\";\n  echo \"<td>\" . $row['LastName'] . \"</td>\";\n  echo \"</tr>\";\n  }\necho \"</table>\";\n\nmysql_close($con);\n?>```\n以上代码的输出：\n\n|FirstName|LastName|\n|---|---|\n|Peter|Griffin|\n|Glenn|Quagmire|\n\n\n---\n","slug":"数据库-2016-11-03-MySQL数据库","published":1,"updated":"2016-11-13T03:36:30.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civi8ouim00162c6n6bmbtch1","content":"<p>MySql</p>\n<h3 id=\"特别要注意大小写和命令后的英文-号。\"><a href=\"#特别要注意大小写和命令后的英文-号。\" class=\"headerlink\" title=\"特别要注意大小写和命令后的英文;号。\"></a>特别要注意大小写和命令后的英文;号。</h3><p><strong>新安装默认密码为空</strong><code>mysql -u root</code> 即可进入，不要<code>mysql -u root -p</code>进不去的<br>大于5.7的版本默认有随机密码，执行<code>cat  /var/log/mysqld.log | grep password | grep &#39;root@localhost&#39; | awk -F &#39;root@localhost: &#39; &#39;{print $2}&#39;</code>查看随机生成的密码。</p>\n<h2 id=\"查看数据库\"><a href=\"#查看数据库\" class=\"headerlink\" title=\"查看数据库\"></a>查看数据库</h2><p><code>SHOW DATABASES;</code></p>\n<h2 id=\"查看表\"><a href=\"#查看表\" class=\"headerlink\" title=\"查看表\"></a>查看表</h2><pre><code>USE blog;\nSHOW TABLES;\n</code></pre><h2 id=\"查看表中的列\"><a href=\"#查看表中的列\" class=\"headerlink\" title=\"查看表中的列\"></a>查看表中的列</h2><pre><code>SHOW COLUMNS FROM auth_user; 或：DESCRIBE auth_user;\n</code></pre><p><strong>describe 表名</strong> 是 <strong>show columns from 表名</strong> 的一种快捷方式。</p>\n<h2 id=\"创建数据库\"><a href=\"#创建数据库\" class=\"headerlink\" title=\"创建数据库\"></a>创建数据库</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">mysql&gt; CREATE DATABASE 库名;</div><div class=\"line\">mysql&gt; USE 库名;</div><div class=\"line\">mysql&gt; CREATE TABLE 表名 (字段名 VARCHAR(20), 字段名 CHAR(1));</div></pre></td></tr></table></figure>\n<p>例：</p>\n<h2 id=\"创建表\"><a href=\"#创建表\" class=\"headerlink\" title=\"创建表\"></a>创建表</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">use</span> demo;</div><div class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span> pet(</div><div class=\"line\">        <span class=\"keyword\">name</span> <span class=\"built_in\">varchar</span>(<span class=\"number\">20</span>),        #名字</div><div class=\"line\">        owner <span class=\"built_in\">varchar</span>(<span class=\"number\">20</span>),       #主人</div><div class=\"line\">        species <span class=\"built_in\">varchar</span>(<span class=\"number\">20</span>),     #种类</div><div class=\"line\">        sex <span class=\"built_in\">char</span>(<span class=\"number\">1</span>),             #性别</div><div class=\"line\">        birth <span class=\"built_in\">date</span>,              #出生日期</div><div class=\"line\">        death <span class=\"built_in\">date</span>               #死亡日期</div><div class=\"line\">)</div></pre></td></tr></table></figure>\n<p>为了验证你的表是按你期望的方式创建，使用一个<strong>DESCRIBE</strong>语句：<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/mysql%E6%95%B0%E6%8D%AE%E5%BA%93001.jpg\" alt=\"\"></p>\n<h2 id=\"删除数据库：\"><a href=\"#删除数据库：\" class=\"headerlink\" title=\"删除数据库：\"></a>删除数据库：</h2><p>mysql&gt; <code>DROP DATABASE 库名;</code></p>\n<h2 id=\"删除数据表：\"><a href=\"#删除数据表：\" class=\"headerlink\" title=\"删除数据表：\"></a>删除数据表：</h2><p>mysql&gt; <code>DROP TABLE 表名；</code></p>\n<h2 id=\"将表中记录清空：\"><a href=\"#将表中记录清空：\" class=\"headerlink\" title=\"将表中记录清空：\"></a>将表中记录清空：</h2><p>mysql&gt; <code>DELETE FROM 表名;</code></p>\n<h2 id=\"创建表-复杂形式-：\"><a href=\"#创建表-复杂形式-：\" class=\"headerlink\" title=\"创建表(复杂形式)：\"></a>创建表(复杂形式)：</h2><h3 id=\"创建customer表：\"><a href=\"#创建customer表：\" class=\"headerlink\" title=\"创建customer表：\"></a>创建customer表：</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span> customers(</div><div class=\"line\">    <span class=\"keyword\">id</span> <span class=\"built_in\">int</span> <span class=\"keyword\">not</span> <span class=\"literal\">null</span> auto_increment,</div><div class=\"line\">    <span class=\"keyword\">name</span> <span class=\"built_in\">char</span>(<span class=\"number\">20</span>) <span class=\"keyword\">not</span> <span class=\"literal\">null</span>,</div><div class=\"line\">    address <span class=\"built_in\">char</span>(<span class=\"number\">50</span>) <span class=\"literal\">null</span>,</div><div class=\"line\">    city <span class=\"built_in\">char</span>(<span class=\"number\">50</span>) <span class=\"literal\">null</span>,</div><div class=\"line\">    age <span class=\"built_in\">int</span> <span class=\"keyword\">not</span> <span class=\"literal\">null</span>,</div><div class=\"line\">    love <span class=\"built_in\">char</span>(<span class=\"number\">50</span>) <span class=\"keyword\">not</span> <span class=\"literal\">null</span> <span class=\"keyword\">default</span> <span class=\"string\">'No habbit'</span>,</div><div class=\"line\">    primary <span class=\"keyword\">key</span>(<span class=\"keyword\">id</span>)</div><div class=\"line\">)<span class=\"keyword\">engine</span>=<span class=\"keyword\">InnoDB</span>;</div></pre></td></tr></table></figure>\n<p><strong>SELECT last_insert_id();</strong>这个函数可以获得返回最后一个<strong>auto_increment</strong>值。默认值为：default ‘No habbit’,<br>引擎类型，多为<strong>engine = InnoDB</strong>，如果省略了<strong>engine=</strong>语句，则使用默认的引擎(MyISAM)</p>\n<h2 id=\"更改表结构：\"><a href=\"#更改表结构：\" class=\"headerlink\" title=\"更改表结构：\"></a>更改表结构：</h2><ul>\n<li>增加一列：<br>  <code>alter table pet add des char(100) null;</code></li>\n<li>删除：<br>  <code>alter table pet drop column des;</code></li>\n<li>重命名表：<br>  <code>rename table pet to animals;</code></li>\n<li>添加id字段：<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">alter</span> <span class=\"keyword\">table</span> pet <span class=\"keyword\">add</span> <span class=\"keyword\">id</span> <span class=\"built_in\">int</span> <span class=\"keyword\">not</span> <span class=\"literal\">null</span></div><div class=\"line\">primary <span class=\"keyword\">key</span> auto_increment <span class=\"keyword\">first</span>;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>详见：<a href=\"http://www.cnblogs.com/beginman/p/3249472.html\" target=\"_blank\" rel=\"external\">http://www.cnblogs.com/beginman/p/3249472.html</a></p>\n<h2 id=\"查看密码\"><a href=\"#查看密码\" class=\"headerlink\" title=\"查看密码\"></a>查看密码</h2><ul>\n<li><p>1.用root 进入mysql后<br>mysql&gt;<code>set password =password(&#39;你的密码&#39;);</code><br>mysql&gt;<code>flush privileges;</code></p>\n</li>\n<li><p>2.使用GRANT语句<br>mysql&gt;<code>grant all on *.* to &#39;root&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;你的密码&#39;with grant option ;</code><br>mysql&gt;<code>flush privileges;</code></p>\n</li>\n<li><p>3.进入mysql库修改user表<br>mysql&gt;<code>use mysql;</code><br>mysql&gt;<code>update user set password=password(&#39;你的密码&#39;) where user=&#39;root&#39;;</code><br>mysql&gt;<code>flush privileges;</code></p>\n</li>\n</ul>\n<h2 id=\"设置数据库密码\"><a href=\"#设置数据库密码\" class=\"headerlink\" title=\"设置数据库密码\"></a>设置数据库密码</h2><figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">mysql -u root -p</div><div class=\"line\">&gt; （输入密码）</div><div class=\"line\">&gt; create user <span class=\"string\">'用户名'</span>@<span class=\"string\">'localhost'</span> identified by <span class=\"string\">'密码'</span>;</div><div class=\"line\">&gt; grant all privileges on 库名.* to <span class=\"string\">'用户名'</span>@<span class=\"string\">'localhost'</span>;</div><div class=\"line\">&gt; flush privileges;</div><div class=\"line\">&gt; <span class=\"keyword\">exit</span>;</div></pre></td></tr></table></figure>\n<h2 id=\"修改Mysql密码\"><a href=\"#修改Mysql密码\" class=\"headerlink\" title=\"修改Mysql密码\"></a>修改Mysql密码</h2><ul>\n<li><p>方法一：<br>使用phpmyadmin，直接修改Mysql库的user 表。或者使用Navicat for Mysql 直接修改连接属性。<br>【据说可以用直接修改user表文件的方法：<br><strong>法一：</strong>关闭MySQL，Windows下打开Mysql\\data\\mysql，有三个文件user.frm,user.MYD,user.MYI找个知道密码的MySQL，替换相应的这三个文件，如果user表结构没改过，一般也没人去改，替换user.MYD就可以了。<br><strong>法二：</strong>也可以直接编辑user.MYD，找个十六进制编辑器，UltraEdit就有这个功能。关闭MySQL，打开user.MYD。将用户名root后面的八个字符改为565491d704013245，新密码就是123456。或者将它们对应的十六进制数字，（左边那里，一个字符对应两个数字），改为 00 02 02 02 02 02 02 02,这就是空密码，在编辑器右边看到的都是星号*，看起来很象小数点。重开MySQL，输入root和你的新密码。】</p>\n</li>\n<li><p>方法二：使用mysqladmin<br>cd到mysql的bin文件夹，然后执行如下<br>D:\\Mysql\\bin&gt;<code>mysqladmin -u root -p password 新密码</code><br>Enter password:(在此输入原密码)<br>格式：<strong>mysqladmin -u用户名 -p旧密码 password 新密码。</strong></p>\n</li>\n</ul>\n<h4 id=\"忘记密码：\"><a href=\"#忘记密码：\" class=\"headerlink\" title=\"忘记密码：\"></a>忘记密码：</h4><ul>\n<li>1.用root或者运行mysqld的用户登录系统； </li>\n<li>2．利用kill命令结束掉mysqld的进程； </li>\n<li>3．使用<strong>–skip-grant-tables</strong>参数启动MySQL Server </li>\n<li>shell&gt;<code>mysqld_safe --skip-grant-tables &amp;</code> </li>\n<li>UPDATE user SET password=PASSWORD(“new password”) WHERE user=’root’;</li>\n<li>4.为root@localhost设置新密码 </li>\n<li>shell&gt;<code>mysqladmin -u root flush-privileges password &quot;newpassword&quot;</code></li>\n<li>5．重启MySQL Server</li>\n</ul>\n<hr>\n<p>看提示，PHP执行时看错误，是用mysql还是mysqli<br>语法<br><strong>mysql_connect(servername,username,password);</strong></p>\n<p>参数描述servername可选。规定要连接的服务器。默认是 “localhost:3306”。username可选。规定登录所使用的用户名。默认值是拥有服务器进程的用户的名称。password可选。规定登录所用的密码。默认是 “”。</p>\n<p>语法<br><strong>CREATE DATABASE database_name</strong></p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>servername</td>\n<td>可选。规定要连接的服务器。默认是 “localhost:3306”。</td>\n</tr>\n<tr>\n<td>username</td>\n<td>可选。规定登录所使用的用户名。默认值是拥有服务器进程的用户的名称。</td>\n</tr>\n<tr>\n<td>passwd</td>\n<td>可选。规定登录所用的密码。默认是 “”。</td>\n</tr>\n</tbody>\n</table>\n<p>为了让 PHP 执行上面的语句，我们必须使用 mysql_query() 函数。此函数用于向 MySQL 连接发送查询或命令。<br>连接：<br>例子:<br><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;?php</span></div><div class=\"line\"><span class=\"comment\">//在一个变量中 ($con) 存放了在脚本中供稍后使用的连接。如果连接失败，将执行 \"die\" 部分：</span></div><div class=\"line\">$con = mysql_connect(<span class=\"string\">\"localhost\"</span>,<span class=\"string\">\"peter\"</span>,<span class=\"string\">\"abc123\"</span>);</div><div class=\"line\"><span class=\"keyword\">if</span> (!$con)</div><div class=\"line\">  &#123;</div><div class=\"line\">  <span class=\"keyword\">die</span>(<span class=\"string\">'Could not connect: '</span> . mysql_error());</div><div class=\"line\">  &#125;</div></pre></td></tr></table></figure></p>\n<p>创建：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div></pre></td><td class=\"code\"><pre><div class=\"line\">// Create database</div><div class=\"line\">//创建了一个名为 &quot;my_db&quot; 的数据库：</div><div class=\"line\">if (mysql_query(&quot;CREATE DATABASE my_db&quot;,$con))</div><div class=\"line\">  &#123;</div><div class=\"line\">  echo &quot;Database created&quot;;</div><div class=\"line\">  &#125;</div><div class=\"line\">else</div><div class=\"line\">  &#123;</div><div class=\"line\">  echo &quot;Error creating database: &quot; . mysql_error();</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">// Create table in my_db database</div><div class=\"line\">//创建一个名为 &quot;Persons&quot; 的表，此表有三列。列名是 &quot;FirstName&quot;, &quot;LastName&quot; 以及 &quot;Age&quot;：</div><div class=\"line\">//重要事项：在创建表之前，必须首先选择数据库。通过 mysql_select_db() 函数选取数据库。</div><div class=\"line\">//注释：当您创建 varchar 类型的数据库字段时，必须规定该字段的最大长度，例如：varchar(15)。</div><div class=\"line\">mysql_select_db(&quot;my_db&quot;, $con);</div><div class=\"line\">$sql = &quot;CREATE TABLE Persons </div><div class=\"line\">(</div><div class=\"line\">FirstName varchar(15),</div><div class=\"line\">LastName varchar(15),</div><div class=\"line\">Age int</div><div class=\"line\">)&quot;;</div><div class=\"line\">mysql_query($sql,$con);</div><div class=\"line\"></div><div class=\"line\">mysql_close($con);   //提前关闭连接，请使用 mysql_close() 函数,不加此句则脚本结束后关闭。</div><div class=\"line\">?&gt;</div></pre></td></tr></table></figure></p>\n<hr>\n<p>MySQL 数据类型<br>下面的可使用的各种 MySQL 数据类型：</p>\n<table>\n<thead>\n<tr>\n<th>数值类型</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>int(size)</td>\n<td>仅支持整数。在 size 参数中规定数字的最大值。</td>\n</tr>\n<tr>\n<td>smallint(size)</td>\n<td>仅支持整数。在 size 参数中规定数字的最大值。</td>\n</tr>\n<tr>\n<td>tinyint(size)</td>\n<td>仅支持整数。在 size 参数中规定数字的最大值。</td>\n</tr>\n<tr>\n<td>mediumint(size)</td>\n<td>仅支持整数。在 size 参数中规定数字的最大值。</td>\n</tr>\n<tr>\n<td>bigint(size)</td>\n<td>仅支持整数。在 size 参数中规定数字的最大值。</td>\n</tr>\n<tr>\n<td>—</td>\n<td>—</td>\n</tr>\n<tr>\n<td>decimal(size,d)</td>\n<td>支持带有小数的数字。在 size 参数中规定数字的最大值。在 d 参数中规定小数点右侧的数字的最大值。</td>\n</tr>\n<tr>\n<td>double(size,d)</td>\n<td>支持带有小数的数字。在 size 参数中规定数字的最大值。在 d 参数中规定小数点右侧的数字的最大值。</td>\n</tr>\n<tr>\n<td>float(size,d)</td>\n<td>支持带有小数的数字。在 size 参数中规定数字的最大值。在 d 参数中规定小数点右侧的数字的最大值。</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th>文本数据类型</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>char(size)</td>\n<td>支持固定长度的字符串。（可包含字母、数字以及特殊符号）。在 size 参数中规定固定长度。</td>\n</tr>\n<tr>\n<td>varchar(size)</td>\n<td>支持可变长度的字符串。（可包含字母、数字以及特殊符号）。在 size 参数中规定最大长度。</td>\n</tr>\n<tr>\n<td>tinytext</td>\n<td>支持可变长度的字符串，最大长度是 255 个字符。</td>\n</tr>\n<tr>\n<td>text blob</td>\n<td>支持可变长度的字符串，最大长度是 65535 个字符。</td>\n</tr>\n<tr>\n<td>mediumtext mediumblob</td>\n<td>支持可变长度的字符串，最大长度是 16777215 个字符。</td>\n</tr>\n<tr>\n<td>longtext longblob</td>\n<td>支持可变长度的字符串，最大长度是 4294967295 个字符。</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th>日期数据类型</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>date(yyyy-mm-dd)</td>\n<td>支持日期或时间</td>\n</tr>\n<tr>\n<td>datetime(yyyy-mm-dd hh:mm:ss)</td>\n<td>支持日期或时间</td>\n</tr>\n<tr>\n<td>timestamp(yyyymmddhhmmss)</td>\n<td>支持日期或时间</td>\n</tr>\n<tr>\n<td>time(hh:mm:ss)</td>\n<td>支持日期或时间</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th>杂项数据类型</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>enum(value1,value2,ect)</td>\n<td>ENUM 是 ENUMERATED 列表的缩写。可以在括号中存放最多 65535 个值。</td>\n</tr>\n<tr>\n<td>set</td>\n<td>SET 与 ENUM 相似。但是，SET 可拥有最多 64 个列表项目，并可存放不止一个 choice</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"主键和自动递增字段\"><a href=\"#主键和自动递增字段\" class=\"headerlink\" title=\"主键和自动递增字段\"></a>主键和自动递增字段</h4><p>每个表都应有一个主键字段。<br>主键用于对表中的行进行唯一标识。每个主键值在表中必须是唯一的。此外，主键字段不能为空，这是由于数据库引擎需要一个值来对记录进行定位。<br>主键字段永远要被编入索引。这条规则没有例外。你必须对主键字段进行索引，这样数据库引擎才能快速定位给予该键值的行。<br>下面的例子把 <strong>personID</strong> 字段设置为主键字段。主键字段通常是 ID 号，且通常使用 <strong>AUTO_INCREMENT</strong> 设置。<strong>AUTO_INCREMENT</strong> 会在新记录被添加时逐一增加该字段的值。要确保主键字段不为空，我们必须向该字段添加 <strong>NOT NULL</strong> 设置。<br>例：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">$sql = &quot;CREATE TABLE Persons </div><div class=\"line\">(</div><div class=\"line\">personID int NOT NULL AUTO_INCREMENT, </div><div class=\"line\">PRIMARY KEY(personID),</div><div class=\"line\">FirstName varchar(15),</div><div class=\"line\">LastName varchar(15),</div><div class=\"line\">Age int</div><div class=\"line\">)&quot;;</div><div class=\"line\"></div><div class=\"line\">mysql_query($sql,$con);</div></pre></td></tr></table></figure></p>\n<h4 id=\"插入：\"><a href=\"#插入：\" class=\"headerlink\" title=\"插入：\"></a>插入：</h4><p>语法<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> table_name</div><div class=\"line\"><span class=\"keyword\">VALUES</span> (value1, value2,....)</div></pre></td></tr></table></figure></p>\n<p>您还可以规定希望在其中插入数据的列：<br><figure class=\"highlight gams\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"title\">INSERT</span></span> INTO table_name (column1, column2,...)</div><div class=\"line\"><span class=\"function\"><span class=\"title\">VALUES</span></span> (value1, value2,....)</div></pre></td></tr></table></figure></p>\n<p>注释：SQL 语句对大小写不敏感。<strong>INSERT INTO 与 insert into</strong> 相同。</p>\n<p>为了让 PHP 执行该语句，我们必须使用 <strong>mysql_query()</strong> 函数。该函数用于向 MySQL 连接发送查询或命令。<br>例子<br>在前面的章节，我们创建了一个名为 “Persons” 的表，有三个列：”Firstname”, “Lastname” 以及 “Age”。我们将在本例中使用同样的表。下面的例子向 “Persons” 表添加了两个新记录：<br><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;?php</span></div><div class=\"line\">$con = mysql_connect(<span class=\"string\">\"localhost\"</span>,<span class=\"string\">\"peter\"</span>,<span class=\"string\">\"abc123\"</span>);</div><div class=\"line\"><span class=\"keyword\">if</span> (!$con)</div><div class=\"line\">  &#123;</div><div class=\"line\">  <span class=\"keyword\">die</span>(<span class=\"string\">'Could not connect: '</span> . mysql_error());</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">mysql_select_db(<span class=\"string\">\"my_db\"</span>, $con);</div><div class=\"line\"></div><div class=\"line\">mysql_query(<span class=\"string\">\"INSERT INTO Persons (FirstName, LastName, Age) </span></div><div class=\"line\">VALUES ('Peter', 'Griffin', '35')\");</div><div class=\"line\"></div><div class=\"line\">mysql_query(<span class=\"string\">\"INSERT INTO Persons (FirstName, LastName, Age) </span></div><div class=\"line\">VALUES ('Glenn', 'Quagmire', '33')\");</div><div class=\"line\"></div><div class=\"line\">mysql_close($con);</div><div class=\"line\"><span class=\"meta\">?&gt;</span></div></pre></td></tr></table></figure></p>\n<h4 id=\"把来自表单的数据插入数据库\"><a href=\"#把来自表单的数据插入数据库\" class=\"headerlink\" title=\"把来自表单的数据插入数据库\"></a>把来自表单的数据插入数据库</h4><p>现在，我们创建一个 HTML 表单，这个表单可把新记录插入 “Persons” 表。<br>这是这个 HTML 表单：<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">action</span>=<span class=\"string\">\"insert.php\"</span> <span class=\"attr\">method</span>=<span class=\"string\">\"post\"</span>&gt;</span></div><div class=\"line\">Firstname: <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"firstname\"</span> /&gt;</span></div><div class=\"line\">Lastname: <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"lastname\"</span> /&gt;</span></div><div class=\"line\">Age: <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"age\"</span> /&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"submit\"</span> /&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>当用户点击上例中 HTML 表单中的提交按钮时，表单数据被发送到 “insert.php”。”insert.php” 文件连接数据库，并通过 <strong>$_POST</strong> 变量从表单取回值。然后，mysql_query() 函数执行 <strong>INSERT INTO</strong> 语句，一条新的记录会添加到数据库表中。<br>下面是 “insert.php” 页面的代码：<br><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;?php</span></div><div class=\"line\">$con = mysql_connect(<span class=\"string\">\"localhost\"</span>,<span class=\"string\">\"peter\"</span>,<span class=\"string\">\"abc123\"</span>);</div><div class=\"line\"><span class=\"keyword\">if</span> (!$con)</div><div class=\"line\">  &#123;</div><div class=\"line\">  <span class=\"keyword\">die</span>(<span class=\"string\">'Could not connect: '</span> . mysql_error());</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">mysql_select_db(<span class=\"string\">\"my_db\"</span>, $con);</div><div class=\"line\"></div><div class=\"line\">$sql=<span class=\"string\">\"INSERT INTO Persons (FirstName, LastName, Age)</span></div><div class=\"line\">VALUES</div><div class=\"line\">('$_POST[firstname]','$_POST[lastname]','$_POST[age]')\";</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">if</span> (!mysql_query($sql,$con))</div><div class=\"line\">  &#123;</div><div class=\"line\">  <span class=\"keyword\">die</span>(<span class=\"string\">'Error: '</span> . mysql_error());</div><div class=\"line\">  &#125;</div><div class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">\"1 record added\"</span>;</div><div class=\"line\"></div><div class=\"line\">mysql_close($con)</div><div class=\"line\"><span class=\"meta\">?&gt;</span></div></pre></td></tr></table></figure></p>\n<h4 id=\"修改：\"><a href=\"#修改：\" class=\"headerlink\" title=\"修改：\"></a>修改：</h4><p><code>UPDATE</code> 语句用于修改数据库表中的数据。<br>语法<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">UPDATE table_name</div><div class=\"line\">SET column_name = new_value</div><div class=\"line\">WHERE column_name = some_value</div></pre></td></tr></table></figure></p>\n<p>注释：SQL 对大小写不敏感。UPDATE 与 update 等效。<br>为了让 PHP 执行上面的语句，我们必须使用 mysql_query( 函数。该函数用于向 SQL 连接发送查询和命令。<br>例子<br>稍早时，我们在本教程中创建了一个名为 “Persons” 的表。它看起来类似这样：</p>\n<table>\n<thead>\n<tr>\n<th>FirstName</th>\n<th>LastName</th>\n<th>Age</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Peter</td>\n<td>Griffin</td>\n<td>35</td>\n</tr>\n<tr>\n<td>Glenn</td>\n<td>Quagmire</td>\n<td>33</td>\n</tr>\n</tbody>\n</table>\n<p>下面的例子更新 “Persons” 表的一些数据：<br><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;?php</span></div><div class=\"line\">$con = mysql_connect(<span class=\"string\">\"localhost\"</span>,<span class=\"string\">\"peter\"</span>,<span class=\"string\">\"abc123\"</span>);</div><div class=\"line\"><span class=\"keyword\">if</span> (!$con)</div><div class=\"line\">  &#123;</div><div class=\"line\">  <span class=\"keyword\">die</span>(<span class=\"string\">'Could not connect: '</span> . mysql_error());</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">mysql_select_db(<span class=\"string\">\"my_db\"</span>, $con);</div><div class=\"line\"></div><div class=\"line\">mysql_query(<span class=\"string\">\"UPDATE Persons SET Age = '36'</span></div><div class=\"line\">WHERE FirstName = 'Peter' AND LastName = 'Griffin'\");</div><div class=\"line\"></div><div class=\"line\">mysql_close($con);</div><div class=\"line\"><span class=\"meta\">?&gt;</span></div></pre></td></tr></table></figure></p>\n<p>在这次更新后，”Persons” 表格是这样的：</p>\n<table>\n<thead>\n<tr>\n<th>FirstName</th>\n<th>LastName</th>\n<th>Age</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Peter</td>\n<td>Griffin</td>\n<td>36</td>\n</tr>\n<tr>\n<td>Glenn</td>\n<td>Quagmire</td>\n<td>33</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"删除：\"><a href=\"#删除：\" class=\"headerlink\" title=\"删除：\"></a>删除：</h4><p>删除数据库中的数据<br><code>DELETE FROM</code> 语句用于从数据库表中删除记录。<br>语法<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">DELETE FROM table_name</div><div class=\"line\">WHERE column_name = some_value</div></pre></td></tr></table></figure></p>\n<p>注释：SQL 对大小写不敏感。DELETE FROM 与 delete from 等效。<br>为了让 PHP 执行上面的语句，我们必须使用 <strong>mysql_query</strong>( 函数。该函数用于向 SQL 连接发送查询和命令。<br>例子<br>稍早时，我们在本教程中创建了一个名为 “Persons” 的表。它看起来类似这样：</p>\n<table>\n<thead>\n<tr>\n<th>FirstName</th>\n<th>LastName</th>\n<th>Age</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Peter</td>\n<td>Griffin</td>\n<td>35</td>\n</tr>\n<tr>\n<td>Glenn</td>\n<td>Quagmire</td>\n<td>33</td>\n</tr>\n</tbody>\n</table>\n<p>下面的例子删除 “Persons” 表中所有 LastName=’Griffin’ 的记录：<br><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;?php</span></div><div class=\"line\">$con = mysql_connect(<span class=\"string\">\"localhost\"</span>,<span class=\"string\">\"peter\"</span>,<span class=\"string\">\"abc123\"</span>);</div><div class=\"line\"><span class=\"keyword\">if</span> (!$con)</div><div class=\"line\">  &#123;</div><div class=\"line\">  <span class=\"keyword\">die</span>(<span class=\"string\">'Could not connect: '</span> . mysql_error());</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">mysql_select_db(<span class=\"string\">\"my_db\"</span>, $con);</div><div class=\"line\"></div><div class=\"line\">mysql_query(<span class=\"string\">\"DELETE FROM Persons WHERE LastName='Griffin'\"</span>);</div><div class=\"line\"></div><div class=\"line\">mysql_close($con);</div><div class=\"line\"><span class=\"meta\">?&gt;</span></div></pre></td></tr></table></figure></p>\n<p>在这次删除之后，表是这样的：</p>\n<table>\n<thead>\n<tr>\n<th>FirstName</th>\n<th>LastName</th>\n<th>Age</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Glenn</td>\n<td>Quagmire</td>\n<td>33</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"查询：\"><a href=\"#查询：\" class=\"headerlink\" title=\"查询：\"></a>查询：</h4><p><code>SELECT</code> 语句用于从数据库中选取数据。<br>语法<br>SELECT column_name(s) FROM table_name<br>注释：SQL 语句对大小写不敏感。SELECT 与 select 等效。<br>为了让 PHP 执行上面的语句，我们必须使用<strong> mysql_query()</strong> 函数。该函数用于向 MySQL 发送查询或命令。<br>例子<br>下面的例子选取存储在 “Persons” 表中的所有数据（* 字符选取表中所有数据）：<br><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;?php</span></div><div class=\"line\">$con = mysql_connect(<span class=\"string\">\"localhost\"</span>,<span class=\"string\">\"peter\"</span>,<span class=\"string\">\"abc123\"</span>);</div><div class=\"line\"><span class=\"keyword\">if</span> (!$con)</div><div class=\"line\">  &#123;</div><div class=\"line\">  <span class=\"keyword\">die</span>(<span class=\"string\">'Could not connect: '</span> . mysql_error());</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">mysql_select_db(<span class=\"string\">\"my_db\"</span>, $con);</div><div class=\"line\"></div><div class=\"line\">$result = mysql_query(<span class=\"string\">\"SELECT * FROM Persons\"</span>);</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">while</span>($row = mysql_fetch_array($result))</div><div class=\"line\">  &#123;</div><div class=\"line\">  <span class=\"keyword\">echo</span> $row[<span class=\"string\">'FirstName'</span>] . <span class=\"string\">\" \"</span> . $row[<span class=\"string\">'LastName'</span>];</div><div class=\"line\">  <span class=\"keyword\">echo</span> <span class=\"string\">\"&lt;br /&gt;\"</span>;</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">mysql_close($con);</div><div class=\"line\"><span class=\"meta\">?&gt;</span></div></pre></td></tr></table></figure></p>\n<p>上面这个例子在 $result 变量中存放由 mysql_query() 函数返回的数据。接下来，我们使用 mysql_fetch_array() 函数以数组的形式从记录集返回第一行。每个随后对 mysql_fetch_array() 函数的调用都会返回记录集中的下一行。 while loop 语句会循环记录集中的所有记录。为了输出每行的值，我们使用了 PHP 的 $row 变量 ($row[‘FirstName’] 和 $row[‘LastName’])。<br>以上代码的输出：<br>Peter Griffin<br>Glenn Quagmire</p>\n<h4 id=\"在-HTML-表格中显示结果\"><a href=\"#在-HTML-表格中显示结果\" class=\"headerlink\" title=\"在 HTML 表格中显示结果\"></a>在 HTML 表格中显示结果</h4><p>下面的例子选取的数据与上面的例子相同，但是将把数据显示在一个 HTML 表格中：<br><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;?php</span></div><div class=\"line\">$con = mysql_connect(<span class=\"string\">\"localhost\"</span>,<span class=\"string\">\"peter\"</span>,<span class=\"string\">\"abc123\"</span>);</div><div class=\"line\"><span class=\"keyword\">if</span> (!$con)</div><div class=\"line\">  &#123;</div><div class=\"line\">  <span class=\"keyword\">die</span>(<span class=\"string\">'Could not connect: '</span> . mysql_error());</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">mysql_select_db(<span class=\"string\">\"my_db\"</span>, $con);</div><div class=\"line\"></div><div class=\"line\">$result = mysql_query(<span class=\"string\">\"SELECT * FROM Persons\"</span>);</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">\"&lt;table border='1'&gt;</span></div><div class=\"line\">&lt;tr&gt;</div><div class=\"line\">&lt;th&gt;Firstname&lt;/th&gt;</div><div class=\"line\">&lt;th&gt;Lastname&lt;/th&gt;</div><div class=\"line\">&lt;/tr&gt;\";</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">while</span>($row = mysql_fetch_array($result))</div><div class=\"line\">  &#123;</div><div class=\"line\">  <span class=\"keyword\">echo</span> <span class=\"string\">\"&lt;tr&gt;\"</span>;</div><div class=\"line\">  <span class=\"keyword\">echo</span> <span class=\"string\">\"&lt;td&gt;\"</span> . $row[<span class=\"string\">'FirstName'</span>] . <span class=\"string\">\"&lt;/td&gt;\"</span>;</div><div class=\"line\">  <span class=\"keyword\">echo</span> <span class=\"string\">\"&lt;td&gt;\"</span> . $row[<span class=\"string\">'LastName'</span>] . <span class=\"string\">\"&lt;/td&gt;\"</span>;</div><div class=\"line\">  <span class=\"keyword\">echo</span> <span class=\"string\">\"&lt;/tr&gt;\"</span>;</div><div class=\"line\">  &#125;</div><div class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">\"&lt;/table&gt;\"</span>;</div><div class=\"line\"></div><div class=\"line\">mysql_close($con);</div><div class=\"line\"><span class=\"meta\">?&gt;</span></div></pre></td></tr></table></figure></p>\n<p>以上代码的输出：</p>\n<table>\n<thead>\n<tr>\n<th>FirstName</th>\n<th>LastName</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Peter</td>\n<td>Griffin</td>\n</tr>\n<tr>\n<td>Glenn</td>\n<td>Quagmire</td>\n</tr>\n</tbody>\n</table>\n<hr>\n","excerpt":"","more":"<p>MySql</p>\n<h3 id=\"特别要注意大小写和命令后的英文-号。\"><a href=\"#特别要注意大小写和命令后的英文-号。\" class=\"headerlink\" title=\"特别要注意大小写和命令后的英文;号。\"></a>特别要注意大小写和命令后的英文;号。</h3><p><strong>新安装默认密码为空</strong><code>mysql -u root</code> 即可进入，不要<code>mysql -u root -p</code>进不去的<br>大于5.7的版本默认有随机密码，执行<code>cat  /var/log/mysqld.log | grep password | grep &#39;root@localhost&#39; | awk -F &#39;root@localhost: &#39; &#39;{print $2}&#39;</code>查看随机生成的密码。</p>\n<h2 id=\"查看数据库\"><a href=\"#查看数据库\" class=\"headerlink\" title=\"查看数据库\"></a>查看数据库</h2><p><code>SHOW DATABASES;</code></p>\n<h2 id=\"查看表\"><a href=\"#查看表\" class=\"headerlink\" title=\"查看表\"></a>查看表</h2><pre><code>USE blog;\nSHOW TABLES;\n</code></pre><h2 id=\"查看表中的列\"><a href=\"#查看表中的列\" class=\"headerlink\" title=\"查看表中的列\"></a>查看表中的列</h2><pre><code>SHOW COLUMNS FROM auth_user; 或：DESCRIBE auth_user;\n</code></pre><p><strong>describe 表名</strong> 是 <strong>show columns from 表名</strong> 的一种快捷方式。</p>\n<h2 id=\"创建数据库\"><a href=\"#创建数据库\" class=\"headerlink\" title=\"创建数据库\"></a>创建数据库</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">mysql&gt; CREATE DATABASE 库名;</div><div class=\"line\">mysql&gt; USE 库名;</div><div class=\"line\">mysql&gt; CREATE TABLE 表名 (字段名 VARCHAR(20), 字段名 CHAR(1));</div></pre></td></tr></table></figure>\n<p>例：</p>\n<h2 id=\"创建表\"><a href=\"#创建表\" class=\"headerlink\" title=\"创建表\"></a>创建表</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">use</span> demo;</div><div class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span> pet(</div><div class=\"line\">        <span class=\"keyword\">name</span> <span class=\"built_in\">varchar</span>(<span class=\"number\">20</span>),        #名字</div><div class=\"line\">        owner <span class=\"built_in\">varchar</span>(<span class=\"number\">20</span>),       #主人</div><div class=\"line\">        species <span class=\"built_in\">varchar</span>(<span class=\"number\">20</span>),     #种类</div><div class=\"line\">        sex <span class=\"built_in\">char</span>(<span class=\"number\">1</span>),             #性别</div><div class=\"line\">        birth <span class=\"built_in\">date</span>,              #出生日期</div><div class=\"line\">        death <span class=\"built_in\">date</span>               #死亡日期</div><div class=\"line\">)</div></pre></td></tr></table></figure>\n<p>为了验证你的表是按你期望的方式创建，使用一个<strong>DESCRIBE</strong>语句：<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/mysql%E6%95%B0%E6%8D%AE%E5%BA%93001.jpg\" alt=\"\"></p>\n<h2 id=\"删除数据库：\"><a href=\"#删除数据库：\" class=\"headerlink\" title=\"删除数据库：\"></a>删除数据库：</h2><p>mysql&gt; <code>DROP DATABASE 库名;</code></p>\n<h2 id=\"删除数据表：\"><a href=\"#删除数据表：\" class=\"headerlink\" title=\"删除数据表：\"></a>删除数据表：</h2><p>mysql&gt; <code>DROP TABLE 表名；</code></p>\n<h2 id=\"将表中记录清空：\"><a href=\"#将表中记录清空：\" class=\"headerlink\" title=\"将表中记录清空：\"></a>将表中记录清空：</h2><p>mysql&gt; <code>DELETE FROM 表名;</code></p>\n<h2 id=\"创建表-复杂形式-：\"><a href=\"#创建表-复杂形式-：\" class=\"headerlink\" title=\"创建表(复杂形式)：\"></a>创建表(复杂形式)：</h2><h3 id=\"创建customer表：\"><a href=\"#创建customer表：\" class=\"headerlink\" title=\"创建customer表：\"></a>创建customer表：</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span> customers(</div><div class=\"line\">    <span class=\"keyword\">id</span> <span class=\"built_in\">int</span> <span class=\"keyword\">not</span> <span class=\"literal\">null</span> auto_increment,</div><div class=\"line\">    <span class=\"keyword\">name</span> <span class=\"built_in\">char</span>(<span class=\"number\">20</span>) <span class=\"keyword\">not</span> <span class=\"literal\">null</span>,</div><div class=\"line\">    address <span class=\"built_in\">char</span>(<span class=\"number\">50</span>) <span class=\"literal\">null</span>,</div><div class=\"line\">    city <span class=\"built_in\">char</span>(<span class=\"number\">50</span>) <span class=\"literal\">null</span>,</div><div class=\"line\">    age <span class=\"built_in\">int</span> <span class=\"keyword\">not</span> <span class=\"literal\">null</span>,</div><div class=\"line\">    love <span class=\"built_in\">char</span>(<span class=\"number\">50</span>) <span class=\"keyword\">not</span> <span class=\"literal\">null</span> <span class=\"keyword\">default</span> <span class=\"string\">'No habbit'</span>,</div><div class=\"line\">    primary <span class=\"keyword\">key</span>(<span class=\"keyword\">id</span>)</div><div class=\"line\">)<span class=\"keyword\">engine</span>=<span class=\"keyword\">InnoDB</span>;</div></pre></td></tr></table></figure>\n<p><strong>SELECT last_insert_id();</strong>这个函数可以获得返回最后一个<strong>auto_increment</strong>值。默认值为：default ‘No habbit’,<br>引擎类型，多为<strong>engine = InnoDB</strong>，如果省略了<strong>engine=</strong>语句，则使用默认的引擎(MyISAM)</p>\n<h2 id=\"更改表结构：\"><a href=\"#更改表结构：\" class=\"headerlink\" title=\"更改表结构：\"></a>更改表结构：</h2><ul>\n<li>增加一列：<br>  <code>alter table pet add des char(100) null;</code></li>\n<li>删除：<br>  <code>alter table pet drop column des;</code></li>\n<li>重命名表：<br>  <code>rename table pet to animals;</code></li>\n<li>添加id字段：<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">alter</span> <span class=\"keyword\">table</span> pet <span class=\"keyword\">add</span> <span class=\"keyword\">id</span> <span class=\"built_in\">int</span> <span class=\"keyword\">not</span> <span class=\"literal\">null</span></div><div class=\"line\">primary <span class=\"keyword\">key</span> auto_increment <span class=\"keyword\">first</span>;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>详见：<a href=\"http://www.cnblogs.com/beginman/p/3249472.html\">http://www.cnblogs.com/beginman/p/3249472.html</a></p>\n<h2 id=\"查看密码\"><a href=\"#查看密码\" class=\"headerlink\" title=\"查看密码\"></a>查看密码</h2><ul>\n<li><p>1.用root 进入mysql后<br>mysql&gt;<code>set password =password(&#39;你的密码&#39;);</code><br>mysql&gt;<code>flush privileges;</code></p>\n</li>\n<li><p>2.使用GRANT语句<br>mysql&gt;<code>grant all on *.* to &#39;root&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;你的密码&#39;with grant option ;</code><br>mysql&gt;<code>flush privileges;</code></p>\n</li>\n<li><p>3.进入mysql库修改user表<br>mysql&gt;<code>use mysql;</code><br>mysql&gt;<code>update user set password=password(&#39;你的密码&#39;) where user=&#39;root&#39;;</code><br>mysql&gt;<code>flush privileges;</code></p>\n</li>\n</ul>\n<h2 id=\"设置数据库密码\"><a href=\"#设置数据库密码\" class=\"headerlink\" title=\"设置数据库密码\"></a>设置数据库密码</h2><figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">mysql -u root -p</div><div class=\"line\">&gt; （输入密码）</div><div class=\"line\">&gt; create user <span class=\"string\">'用户名'</span>@<span class=\"string\">'localhost'</span> identified by <span class=\"string\">'密码'</span>;</div><div class=\"line\">&gt; grant all privileges on 库名.* to <span class=\"string\">'用户名'</span>@<span class=\"string\">'localhost'</span>;</div><div class=\"line\">&gt; flush privileges;</div><div class=\"line\">&gt; <span class=\"keyword\">exit</span>;</div></pre></td></tr></table></figure>\n<h2 id=\"修改Mysql密码\"><a href=\"#修改Mysql密码\" class=\"headerlink\" title=\"修改Mysql密码\"></a>修改Mysql密码</h2><ul>\n<li><p>方法一：<br>使用phpmyadmin，直接修改Mysql库的user 表。或者使用Navicat for Mysql 直接修改连接属性。<br>【据说可以用直接修改user表文件的方法：<br><strong>法一：</strong>关闭MySQL，Windows下打开Mysql\\data\\mysql，有三个文件user.frm,user.MYD,user.MYI找个知道密码的MySQL，替换相应的这三个文件，如果user表结构没改过，一般也没人去改，替换user.MYD就可以了。<br><strong>法二：</strong>也可以直接编辑user.MYD，找个十六进制编辑器，UltraEdit就有这个功能。关闭MySQL，打开user.MYD。将用户名root后面的八个字符改为565491d704013245，新密码就是123456。或者将它们对应的十六进制数字，（左边那里，一个字符对应两个数字），改为 00 02 02 02 02 02 02 02,这就是空密码，在编辑器右边看到的都是星号*，看起来很象小数点。重开MySQL，输入root和你的新密码。】</p>\n</li>\n<li><p>方法二：使用mysqladmin<br>cd到mysql的bin文件夹，然后执行如下<br>D:\\Mysql\\bin&gt;<code>mysqladmin -u root -p password 新密码</code><br>Enter password:(在此输入原密码)<br>格式：<strong>mysqladmin -u用户名 -p旧密码 password 新密码。</strong></p>\n</li>\n</ul>\n<h4 id=\"忘记密码：\"><a href=\"#忘记密码：\" class=\"headerlink\" title=\"忘记密码：\"></a>忘记密码：</h4><ul>\n<li>1.用root或者运行mysqld的用户登录系统； </li>\n<li>2．利用kill命令结束掉mysqld的进程； </li>\n<li>3．使用<strong>–skip-grant-tables</strong>参数启动MySQL Server </li>\n<li>shell&gt;<code>mysqld_safe --skip-grant-tables &amp;</code> </li>\n<li>UPDATE user SET password=PASSWORD(“new password”) WHERE user=’root’;</li>\n<li>4.为root@localhost设置新密码 </li>\n<li>shell&gt;<code>mysqladmin -u root flush-privileges password &quot;newpassword&quot;</code></li>\n<li>5．重启MySQL Server</li>\n</ul>\n<hr>\n<p>看提示，PHP执行时看错误，是用mysql还是mysqli<br>语法<br><strong>mysql_connect(servername,username,password);</strong></p>\n<p>参数描述servername可选。规定要连接的服务器。默认是 “localhost:3306”。username可选。规定登录所使用的用户名。默认值是拥有服务器进程的用户的名称。password可选。规定登录所用的密码。默认是 “”。</p>\n<p>语法<br><strong>CREATE DATABASE database_name</strong></p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>servername</td>\n<td>可选。规定要连接的服务器。默认是 “localhost:3306”。</td>\n</tr>\n<tr>\n<td>username</td>\n<td>可选。规定登录所使用的用户名。默认值是拥有服务器进程的用户的名称。</td>\n</tr>\n<tr>\n<td>passwd</td>\n<td>可选。规定登录所用的密码。默认是 “”。</td>\n</tr>\n</tbody>\n</table>\n<p>为了让 PHP 执行上面的语句，我们必须使用 mysql_query() 函数。此函数用于向 MySQL 连接发送查询或命令。<br>连接：<br>例子:<br><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;?php</span></div><div class=\"line\"><span class=\"comment\">//在一个变量中 ($con) 存放了在脚本中供稍后使用的连接。如果连接失败，将执行 \"die\" 部分：</span></div><div class=\"line\">$con = mysql_connect(<span class=\"string\">\"localhost\"</span>,<span class=\"string\">\"peter\"</span>,<span class=\"string\">\"abc123\"</span>);</div><div class=\"line\"><span class=\"keyword\">if</span> (!$con)</div><div class=\"line\">  &#123;</div><div class=\"line\">  <span class=\"keyword\">die</span>(<span class=\"string\">'Could not connect: '</span> . mysql_error());</div><div class=\"line\">  &#125;</div></pre></td></tr></table></figure></p>\n<p>创建：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div></pre></td><td class=\"code\"><pre><div class=\"line\">// Create database</div><div class=\"line\">//创建了一个名为 &quot;my_db&quot; 的数据库：</div><div class=\"line\">if (mysql_query(&quot;CREATE DATABASE my_db&quot;,$con))</div><div class=\"line\">  &#123;</div><div class=\"line\">  echo &quot;Database created&quot;;</div><div class=\"line\">  &#125;</div><div class=\"line\">else</div><div class=\"line\">  &#123;</div><div class=\"line\">  echo &quot;Error creating database: &quot; . mysql_error();</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">// Create table in my_db database</div><div class=\"line\">//创建一个名为 &quot;Persons&quot; 的表，此表有三列。列名是 &quot;FirstName&quot;, &quot;LastName&quot; 以及 &quot;Age&quot;：</div><div class=\"line\">//重要事项：在创建表之前，必须首先选择数据库。通过 mysql_select_db() 函数选取数据库。</div><div class=\"line\">//注释：当您创建 varchar 类型的数据库字段时，必须规定该字段的最大长度，例如：varchar(15)。</div><div class=\"line\">mysql_select_db(&quot;my_db&quot;, $con);</div><div class=\"line\">$sql = &quot;CREATE TABLE Persons </div><div class=\"line\">(</div><div class=\"line\">FirstName varchar(15),</div><div class=\"line\">LastName varchar(15),</div><div class=\"line\">Age int</div><div class=\"line\">)&quot;;</div><div class=\"line\">mysql_query($sql,$con);</div><div class=\"line\"></div><div class=\"line\">mysql_close($con);   //提前关闭连接，请使用 mysql_close() 函数,不加此句则脚本结束后关闭。</div><div class=\"line\">?&gt;</div></pre></td></tr></table></figure></p>\n<hr>\n<p>MySQL 数据类型<br>下面的可使用的各种 MySQL 数据类型：</p>\n<table>\n<thead>\n<tr>\n<th>数值类型</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>int(size)</td>\n<td>仅支持整数。在 size 参数中规定数字的最大值。</td>\n</tr>\n<tr>\n<td>smallint(size)</td>\n<td>仅支持整数。在 size 参数中规定数字的最大值。</td>\n</tr>\n<tr>\n<td>tinyint(size)</td>\n<td>仅支持整数。在 size 参数中规定数字的最大值。</td>\n</tr>\n<tr>\n<td>mediumint(size)</td>\n<td>仅支持整数。在 size 参数中规定数字的最大值。</td>\n</tr>\n<tr>\n<td>bigint(size)</td>\n<td>仅支持整数。在 size 参数中规定数字的最大值。</td>\n</tr>\n<tr>\n<td>—</td>\n<td>—</td>\n</tr>\n<tr>\n<td>decimal(size,d)</td>\n<td>支持带有小数的数字。在 size 参数中规定数字的最大值。在 d 参数中规定小数点右侧的数字的最大值。</td>\n</tr>\n<tr>\n<td>double(size,d)</td>\n<td>支持带有小数的数字。在 size 参数中规定数字的最大值。在 d 参数中规定小数点右侧的数字的最大值。</td>\n</tr>\n<tr>\n<td>float(size,d)</td>\n<td>支持带有小数的数字。在 size 参数中规定数字的最大值。在 d 参数中规定小数点右侧的数字的最大值。</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th>文本数据类型</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>char(size)</td>\n<td>支持固定长度的字符串。（可包含字母、数字以及特殊符号）。在 size 参数中规定固定长度。</td>\n</tr>\n<tr>\n<td>varchar(size)</td>\n<td>支持可变长度的字符串。（可包含字母、数字以及特殊符号）。在 size 参数中规定最大长度。</td>\n</tr>\n<tr>\n<td>tinytext</td>\n<td>支持可变长度的字符串，最大长度是 255 个字符。</td>\n</tr>\n<tr>\n<td>text blob</td>\n<td>支持可变长度的字符串，最大长度是 65535 个字符。</td>\n</tr>\n<tr>\n<td>mediumtext mediumblob</td>\n<td>支持可变长度的字符串，最大长度是 16777215 个字符。</td>\n</tr>\n<tr>\n<td>longtext longblob</td>\n<td>支持可变长度的字符串，最大长度是 4294967295 个字符。</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th>日期数据类型</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>date(yyyy-mm-dd)</td>\n<td>支持日期或时间</td>\n</tr>\n<tr>\n<td>datetime(yyyy-mm-dd hh:mm:ss)</td>\n<td>支持日期或时间</td>\n</tr>\n<tr>\n<td>timestamp(yyyymmddhhmmss)</td>\n<td>支持日期或时间</td>\n</tr>\n<tr>\n<td>time(hh:mm:ss)</td>\n<td>支持日期或时间</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th>杂项数据类型</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>enum(value1,value2,ect)</td>\n<td>ENUM 是 ENUMERATED 列表的缩写。可以在括号中存放最多 65535 个值。</td>\n</tr>\n<tr>\n<td>set</td>\n<td>SET 与 ENUM 相似。但是，SET 可拥有最多 64 个列表项目，并可存放不止一个 choice</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"主键和自动递增字段\"><a href=\"#主键和自动递增字段\" class=\"headerlink\" title=\"主键和自动递增字段\"></a>主键和自动递增字段</h4><p>每个表都应有一个主键字段。<br>主键用于对表中的行进行唯一标识。每个主键值在表中必须是唯一的。此外，主键字段不能为空，这是由于数据库引擎需要一个值来对记录进行定位。<br>主键字段永远要被编入索引。这条规则没有例外。你必须对主键字段进行索引，这样数据库引擎才能快速定位给予该键值的行。<br>下面的例子把 <strong>personID</strong> 字段设置为主键字段。主键字段通常是 ID 号，且通常使用 <strong>AUTO_INCREMENT</strong> 设置。<strong>AUTO_INCREMENT</strong> 会在新记录被添加时逐一增加该字段的值。要确保主键字段不为空，我们必须向该字段添加 <strong>NOT NULL</strong> 设置。<br>例：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">$sql = &quot;CREATE TABLE Persons </div><div class=\"line\">(</div><div class=\"line\">personID int NOT NULL AUTO_INCREMENT, </div><div class=\"line\">PRIMARY KEY(personID),</div><div class=\"line\">FirstName varchar(15),</div><div class=\"line\">LastName varchar(15),</div><div class=\"line\">Age int</div><div class=\"line\">)&quot;;</div><div class=\"line\"></div><div class=\"line\">mysql_query($sql,$con);</div></pre></td></tr></table></figure></p>\n<h4 id=\"插入：\"><a href=\"#插入：\" class=\"headerlink\" title=\"插入：\"></a>插入：</h4><p>语法<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> table_name</div><div class=\"line\"><span class=\"keyword\">VALUES</span> (value1, value2,....)</div></pre></td></tr></table></figure></p>\n<p>您还可以规定希望在其中插入数据的列：<br><figure class=\"highlight gams\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"title\">INSERT</span></span> INTO table_name (column1, column2,...)</div><div class=\"line\"><span class=\"function\"><span class=\"title\">VALUES</span></span> (value1, value2,....)</div></pre></td></tr></table></figure></p>\n<p>注释：SQL 语句对大小写不敏感。<strong>INSERT INTO 与 insert into</strong> 相同。</p>\n<p>为了让 PHP 执行该语句，我们必须使用 <strong>mysql_query()</strong> 函数。该函数用于向 MySQL 连接发送查询或命令。<br>例子<br>在前面的章节，我们创建了一个名为 “Persons” 的表，有三个列：”Firstname”, “Lastname” 以及 “Age”。我们将在本例中使用同样的表。下面的例子向 “Persons” 表添加了两个新记录：<br><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;?php</span></div><div class=\"line\">$con = mysql_connect(<span class=\"string\">\"localhost\"</span>,<span class=\"string\">\"peter\"</span>,<span class=\"string\">\"abc123\"</span>);</div><div class=\"line\"><span class=\"keyword\">if</span> (!$con)</div><div class=\"line\">  &#123;</div><div class=\"line\">  <span class=\"keyword\">die</span>(<span class=\"string\">'Could not connect: '</span> . mysql_error());</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">mysql_select_db(<span class=\"string\">\"my_db\"</span>, $con);</div><div class=\"line\"></div><div class=\"line\">mysql_query(<span class=\"string\">\"INSERT INTO Persons (FirstName, LastName, Age) </div><div class=\"line\">VALUES ('Peter', 'Griffin', '35')\"</span>);</div><div class=\"line\"></div><div class=\"line\">mysql_query(<span class=\"string\">\"INSERT INTO Persons (FirstName, LastName, Age) </div><div class=\"line\">VALUES ('Glenn', 'Quagmire', '33')\"</span>);</div><div class=\"line\"></div><div class=\"line\">mysql_close($con);</div><div class=\"line\"><span class=\"meta\">?&gt;</span></div></pre></td></tr></table></figure></p>\n<h4 id=\"把来自表单的数据插入数据库\"><a href=\"#把来自表单的数据插入数据库\" class=\"headerlink\" title=\"把来自表单的数据插入数据库\"></a>把来自表单的数据插入数据库</h4><p>现在，我们创建一个 HTML 表单，这个表单可把新记录插入 “Persons” 表。<br>这是这个 HTML 表单：<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">action</span>=<span class=\"string\">\"insert.php\"</span> <span class=\"attr\">method</span>=<span class=\"string\">\"post\"</span>&gt;</span></div><div class=\"line\">Firstname: <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"firstname\"</span> /&gt;</span></div><div class=\"line\">Lastname: <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"lastname\"</span> /&gt;</span></div><div class=\"line\">Age: <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"age\"</span> /&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"submit\"</span> /&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>当用户点击上例中 HTML 表单中的提交按钮时，表单数据被发送到 “insert.php”。”insert.php” 文件连接数据库，并通过 <strong>$_POST</strong> 变量从表单取回值。然后，mysql_query() 函数执行 <strong>INSERT INTO</strong> 语句，一条新的记录会添加到数据库表中。<br>下面是 “insert.php” 页面的代码：<br><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;?php</span></div><div class=\"line\">$con = mysql_connect(<span class=\"string\">\"localhost\"</span>,<span class=\"string\">\"peter\"</span>,<span class=\"string\">\"abc123\"</span>);</div><div class=\"line\"><span class=\"keyword\">if</span> (!$con)</div><div class=\"line\">  &#123;</div><div class=\"line\">  <span class=\"keyword\">die</span>(<span class=\"string\">'Could not connect: '</span> . mysql_error());</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">mysql_select_db(<span class=\"string\">\"my_db\"</span>, $con);</div><div class=\"line\"></div><div class=\"line\">$sql=<span class=\"string\">\"INSERT INTO Persons (FirstName, LastName, Age)</div><div class=\"line\">VALUES</div><div class=\"line\">('$_POST[firstname]','$_POST[lastname]','$_POST[age]')\"</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">if</span> (!mysql_query($sql,$con))</div><div class=\"line\">  &#123;</div><div class=\"line\">  <span class=\"keyword\">die</span>(<span class=\"string\">'Error: '</span> . mysql_error());</div><div class=\"line\">  &#125;</div><div class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">\"1 record added\"</span>;</div><div class=\"line\"></div><div class=\"line\">mysql_close($con)</div><div class=\"line\"><span class=\"meta\">?&gt;</span></div></pre></td></tr></table></figure></p>\n<h4 id=\"修改：\"><a href=\"#修改：\" class=\"headerlink\" title=\"修改：\"></a>修改：</h4><p><code>UPDATE</code> 语句用于修改数据库表中的数据。<br>语法<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">UPDATE table_name</div><div class=\"line\">SET column_name = new_value</div><div class=\"line\">WHERE column_name = some_value</div></pre></td></tr></table></figure></p>\n<p>注释：SQL 对大小写不敏感。UPDATE 与 update 等效。<br>为了让 PHP 执行上面的语句，我们必须使用 mysql_query( 函数。该函数用于向 SQL 连接发送查询和命令。<br>例子<br>稍早时，我们在本教程中创建了一个名为 “Persons” 的表。它看起来类似这样：</p>\n<table>\n<thead>\n<tr>\n<th>FirstName</th>\n<th>LastName</th>\n<th>Age</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Peter</td>\n<td>Griffin</td>\n<td>35</td>\n</tr>\n<tr>\n<td>Glenn</td>\n<td>Quagmire</td>\n<td>33</td>\n</tr>\n</tbody>\n</table>\n<p>下面的例子更新 “Persons” 表的一些数据：<br><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;?php</span></div><div class=\"line\">$con = mysql_connect(<span class=\"string\">\"localhost\"</span>,<span class=\"string\">\"peter\"</span>,<span class=\"string\">\"abc123\"</span>);</div><div class=\"line\"><span class=\"keyword\">if</span> (!$con)</div><div class=\"line\">  &#123;</div><div class=\"line\">  <span class=\"keyword\">die</span>(<span class=\"string\">'Could not connect: '</span> . mysql_error());</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">mysql_select_db(<span class=\"string\">\"my_db\"</span>, $con);</div><div class=\"line\"></div><div class=\"line\">mysql_query(<span class=\"string\">\"UPDATE Persons SET Age = '36'</div><div class=\"line\">WHERE FirstName = 'Peter' AND LastName = 'Griffin'\"</span>);</div><div class=\"line\"></div><div class=\"line\">mysql_close($con);</div><div class=\"line\"><span class=\"meta\">?&gt;</span></div></pre></td></tr></table></figure></p>\n<p>在这次更新后，”Persons” 表格是这样的：</p>\n<table>\n<thead>\n<tr>\n<th>FirstName</th>\n<th>LastName</th>\n<th>Age</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Peter</td>\n<td>Griffin</td>\n<td>36</td>\n</tr>\n<tr>\n<td>Glenn</td>\n<td>Quagmire</td>\n<td>33</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"删除：\"><a href=\"#删除：\" class=\"headerlink\" title=\"删除：\"></a>删除：</h4><p>删除数据库中的数据<br><code>DELETE FROM</code> 语句用于从数据库表中删除记录。<br>语法<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">DELETE FROM table_name</div><div class=\"line\">WHERE column_name = some_value</div></pre></td></tr></table></figure></p>\n<p>注释：SQL 对大小写不敏感。DELETE FROM 与 delete from 等效。<br>为了让 PHP 执行上面的语句，我们必须使用 <strong>mysql_query</strong>( 函数。该函数用于向 SQL 连接发送查询和命令。<br>例子<br>稍早时，我们在本教程中创建了一个名为 “Persons” 的表。它看起来类似这样：</p>\n<table>\n<thead>\n<tr>\n<th>FirstName</th>\n<th>LastName</th>\n<th>Age</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Peter</td>\n<td>Griffin</td>\n<td>35</td>\n</tr>\n<tr>\n<td>Glenn</td>\n<td>Quagmire</td>\n<td>33</td>\n</tr>\n</tbody>\n</table>\n<p>下面的例子删除 “Persons” 表中所有 LastName=’Griffin’ 的记录：<br><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;?php</span></div><div class=\"line\">$con = mysql_connect(<span class=\"string\">\"localhost\"</span>,<span class=\"string\">\"peter\"</span>,<span class=\"string\">\"abc123\"</span>);</div><div class=\"line\"><span class=\"keyword\">if</span> (!$con)</div><div class=\"line\">  &#123;</div><div class=\"line\">  <span class=\"keyword\">die</span>(<span class=\"string\">'Could not connect: '</span> . mysql_error());</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">mysql_select_db(<span class=\"string\">\"my_db\"</span>, $con);</div><div class=\"line\"></div><div class=\"line\">mysql_query(<span class=\"string\">\"DELETE FROM Persons WHERE LastName='Griffin'\"</span>);</div><div class=\"line\"></div><div class=\"line\">mysql_close($con);</div><div class=\"line\"><span class=\"meta\">?&gt;</span></div></pre></td></tr></table></figure></p>\n<p>在这次删除之后，表是这样的：</p>\n<table>\n<thead>\n<tr>\n<th>FirstName</th>\n<th>LastName</th>\n<th>Age</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Glenn</td>\n<td>Quagmire</td>\n<td>33</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"查询：\"><a href=\"#查询：\" class=\"headerlink\" title=\"查询：\"></a>查询：</h4><p><code>SELECT</code> 语句用于从数据库中选取数据。<br>语法<br>SELECT column_name(s) FROM table_name<br>注释：SQL 语句对大小写不敏感。SELECT 与 select 等效。<br>为了让 PHP 执行上面的语句，我们必须使用<strong> mysql_query()</strong> 函数。该函数用于向 MySQL 发送查询或命令。<br>例子<br>下面的例子选取存储在 “Persons” 表中的所有数据（* 字符选取表中所有数据）：<br><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;?php</span></div><div class=\"line\">$con = mysql_connect(<span class=\"string\">\"localhost\"</span>,<span class=\"string\">\"peter\"</span>,<span class=\"string\">\"abc123\"</span>);</div><div class=\"line\"><span class=\"keyword\">if</span> (!$con)</div><div class=\"line\">  &#123;</div><div class=\"line\">  <span class=\"keyword\">die</span>(<span class=\"string\">'Could not connect: '</span> . mysql_error());</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">mysql_select_db(<span class=\"string\">\"my_db\"</span>, $con);</div><div class=\"line\"></div><div class=\"line\">$result = mysql_query(<span class=\"string\">\"SELECT * FROM Persons\"</span>);</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">while</span>($row = mysql_fetch_array($result))</div><div class=\"line\">  &#123;</div><div class=\"line\">  <span class=\"keyword\">echo</span> $row[<span class=\"string\">'FirstName'</span>] . <span class=\"string\">\" \"</span> . $row[<span class=\"string\">'LastName'</span>];</div><div class=\"line\">  <span class=\"keyword\">echo</span> <span class=\"string\">\"&lt;br /&gt;\"</span>;</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">mysql_close($con);</div><div class=\"line\"><span class=\"meta\">?&gt;</span></div></pre></td></tr></table></figure></p>\n<p>上面这个例子在 $result 变量中存放由 mysql_query() 函数返回的数据。接下来，我们使用 mysql_fetch_array() 函数以数组的形式从记录集返回第一行。每个随后对 mysql_fetch_array() 函数的调用都会返回记录集中的下一行。 while loop 语句会循环记录集中的所有记录。为了输出每行的值，我们使用了 PHP 的 $row 变量 ($row[‘FirstName’] 和 $row[‘LastName’])。<br>以上代码的输出：<br>Peter Griffin<br>Glenn Quagmire</p>\n<h4 id=\"在-HTML-表格中显示结果\"><a href=\"#在-HTML-表格中显示结果\" class=\"headerlink\" title=\"在 HTML 表格中显示结果\"></a>在 HTML 表格中显示结果</h4><p>下面的例子选取的数据与上面的例子相同，但是将把数据显示在一个 HTML 表格中：<br><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;?php</span></div><div class=\"line\">$con = mysql_connect(<span class=\"string\">\"localhost\"</span>,<span class=\"string\">\"peter\"</span>,<span class=\"string\">\"abc123\"</span>);</div><div class=\"line\"><span class=\"keyword\">if</span> (!$con)</div><div class=\"line\">  &#123;</div><div class=\"line\">  <span class=\"keyword\">die</span>(<span class=\"string\">'Could not connect: '</span> . mysql_error());</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">mysql_select_db(<span class=\"string\">\"my_db\"</span>, $con);</div><div class=\"line\"></div><div class=\"line\">$result = mysql_query(<span class=\"string\">\"SELECT * FROM Persons\"</span>);</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">\"&lt;table border='1'&gt;</div><div class=\"line\">&lt;tr&gt;</div><div class=\"line\">&lt;th&gt;Firstname&lt;/th&gt;</div><div class=\"line\">&lt;th&gt;Lastname&lt;/th&gt;</div><div class=\"line\">&lt;/tr&gt;\"</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">while</span>($row = mysql_fetch_array($result))</div><div class=\"line\">  &#123;</div><div class=\"line\">  <span class=\"keyword\">echo</span> <span class=\"string\">\"&lt;tr&gt;\"</span>;</div><div class=\"line\">  <span class=\"keyword\">echo</span> <span class=\"string\">\"&lt;td&gt;\"</span> . $row[<span class=\"string\">'FirstName'</span>] . <span class=\"string\">\"&lt;/td&gt;\"</span>;</div><div class=\"line\">  <span class=\"keyword\">echo</span> <span class=\"string\">\"&lt;td&gt;\"</span> . $row[<span class=\"string\">'LastName'</span>] . <span class=\"string\">\"&lt;/td&gt;\"</span>;</div><div class=\"line\">  <span class=\"keyword\">echo</span> <span class=\"string\">\"&lt;/tr&gt;\"</span>;</div><div class=\"line\">  &#125;</div><div class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">\"&lt;/table&gt;\"</span>;</div><div class=\"line\"></div><div class=\"line\">mysql_close($con);</div><div class=\"line\"><span class=\"meta\">?&gt;</span></div></pre></td></tr></table></figure></p>\n<p>以上代码的输出：</p>\n<table>\n<thead>\n<tr>\n<th>FirstName</th>\n<th>LastName</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Peter</td>\n<td>Griffin</td>\n</tr>\n<tr>\n<td>Glenn</td>\n<td>Quagmire</td>\n</tr>\n</tbody>\n</table>\n<hr>\n"},{"title":"vim常用命令","abbrlink":22091,"date":"2016-11-03T15:31:47.000Z","_content":"\n![](http://ofyfogrgx.bkt.clouddn.com//blog/vim%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4001.jpeg)\n\n# 插入模式\n按「i」切换进入插入模式「insert mode」，按\"i\"进入插入模式后是从光标\n当前位置开始输入文件；\n  \n### 按「a」进入插入模式后，从当前光标所在位置的下一个位置开始输入文字。\n### 按「o」进入插入模式后，是插入新的一行，从行首开始输入文字。\n  : **w filename** （输入 「w filename」将文章以指定的文件名filename保存）\n  : **wq** (输入「wq」，存盘并退出vim)\n  : **q!** (输入q!， 不存盘强制退出vim)\n  :**ZZ** (输入「ZZ」，存盘并退出vim)\n\n---\n# 移动光标\nvi可以直接用键盘上的光标来上下左右移动，但正规的vi是用小写英文字母\n「h」、「j」、「k」、「l」，分别控制光标左、下、上、右移一格。\n* 按数字「0」：移到行首。\n* 按「G」：移动到文章的开头。\n* 按「w」：光标跳到下个字符串的开头\n* 按「e」：光标跳到下个字符串的字尾\n* 按「b」：光标回到上个字符串的开头\n* 按「#」：光标移到某个字符串后，按#会高亮所有的这个字符串。\n\n# 删除文字\n* 「x」：每按一次，删除光标所在位置的\"后面\"一个字符。\n* 「\\*x」：例如，「6x」表示删除光标所在位置的\"后面\"6个字符。\n* 「X」：大写的X，每按一次，删除光标所在位置的\"前面\"一个字符。\n* 「\\*X」：例如，「20X」表示删除光标所在位置的\"前面\"20个字符。\n* 「dd」：删除光标所在行。\n* 「\\*dd」：从光标所在行开始删除#行\n\n# 复制\n* 「yw」：将光标所在之处到字尾的字符复制到缓冲区中。\n* 「\\*yw」：复制#个字到缓冲区\n* 「yy」：复制光标所在行到缓冲区。\n* 「\\*yy」：例如，「6yy」表示拷贝从光标所在的该行\"往下数\"6行文字。\n* 「p」：将缓冲区内的字符贴到光标所在位置。注意：所有与\"y\"有关的复制\n  命令都必须与\"p\"配合才能完成复制与粘贴功能。\n\n# 替换\n* 「r」：替换光标所在处的字符。\n* 「R」：替换光标所到之处的字符，直到按下「ESC」键为止。\n\n# 撤销\n* 「u」：如果您误执行一个命令，可以马上按下「u」撤销，回到上一个操作。按多\n 次\"u\"可以执行多次回复。\n\n# 更改\n* 「cw」：更改光标所在处的字到字尾处[更改某个字符串]()\n* 「c\\*w」：例如，「c3w」表示更改3个字\n\n# 跳至指定的行\n* 「ctrl」+「g」列出光标所在行的行号，及总行数。\n* 「\\*G」：例如，「15G」，表示移动光标至文章的第15行行首。\n\n---\n\n先按「ESC」键确定您已经处于「command mode」下后，\n再按「：」冒号即可进入「last line mode」。\n# 列出行号\n  :**set nu** 会在文件中的每一行前面列出行号。\n# 跳到文件中的某一行\n :**行号**  在冒号后输入一个数字，再按回车键就会跳到该行了。\n# 查找字符\n :**/关键字**  可以一直按「n」会往后寻找到您要的关键字为止。\n\n\n---","source":"_posts/杂项/2016-11-03-vim常用命令.md","raw":"---\ntitle: vim常用命令\ncategories:\n  - 杂项\ntags:\n  - vim常用命令\nabbrlink: 22091\ndate: 2016-11-03 23:31:47\n---\n\n![](http://ofyfogrgx.bkt.clouddn.com//blog/vim%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4001.jpeg)\n\n# 插入模式\n按「i」切换进入插入模式「insert mode」，按\"i\"进入插入模式后是从光标\n当前位置开始输入文件；\n  \n### 按「a」进入插入模式后，从当前光标所在位置的下一个位置开始输入文字。\n### 按「o」进入插入模式后，是插入新的一行，从行首开始输入文字。\n  : **w filename** （输入 「w filename」将文章以指定的文件名filename保存）\n  : **wq** (输入「wq」，存盘并退出vim)\n  : **q!** (输入q!， 不存盘强制退出vim)\n  :**ZZ** (输入「ZZ」，存盘并退出vim)\n\n---\n# 移动光标\nvi可以直接用键盘上的光标来上下左右移动，但正规的vi是用小写英文字母\n「h」、「j」、「k」、「l」，分别控制光标左、下、上、右移一格。\n* 按数字「0」：移到行首。\n* 按「G」：移动到文章的开头。\n* 按「w」：光标跳到下个字符串的开头\n* 按「e」：光标跳到下个字符串的字尾\n* 按「b」：光标回到上个字符串的开头\n* 按「#」：光标移到某个字符串后，按#会高亮所有的这个字符串。\n\n# 删除文字\n* 「x」：每按一次，删除光标所在位置的\"后面\"一个字符。\n* 「\\*x」：例如，「6x」表示删除光标所在位置的\"后面\"6个字符。\n* 「X」：大写的X，每按一次，删除光标所在位置的\"前面\"一个字符。\n* 「\\*X」：例如，「20X」表示删除光标所在位置的\"前面\"20个字符。\n* 「dd」：删除光标所在行。\n* 「\\*dd」：从光标所在行开始删除#行\n\n# 复制\n* 「yw」：将光标所在之处到字尾的字符复制到缓冲区中。\n* 「\\*yw」：复制#个字到缓冲区\n* 「yy」：复制光标所在行到缓冲区。\n* 「\\*yy」：例如，「6yy」表示拷贝从光标所在的该行\"往下数\"6行文字。\n* 「p」：将缓冲区内的字符贴到光标所在位置。注意：所有与\"y\"有关的复制\n  命令都必须与\"p\"配合才能完成复制与粘贴功能。\n\n# 替换\n* 「r」：替换光标所在处的字符。\n* 「R」：替换光标所到之处的字符，直到按下「ESC」键为止。\n\n# 撤销\n* 「u」：如果您误执行一个命令，可以马上按下「u」撤销，回到上一个操作。按多\n 次\"u\"可以执行多次回复。\n\n# 更改\n* 「cw」：更改光标所在处的字到字尾处[更改某个字符串]()\n* 「c\\*w」：例如，「c3w」表示更改3个字\n\n# 跳至指定的行\n* 「ctrl」+「g」列出光标所在行的行号，及总行数。\n* 「\\*G」：例如，「15G」，表示移动光标至文章的第15行行首。\n\n---\n\n先按「ESC」键确定您已经处于「command mode」下后，\n再按「：」冒号即可进入「last line mode」。\n# 列出行号\n  :**set nu** 会在文件中的每一行前面列出行号。\n# 跳到文件中的某一行\n :**行号**  在冒号后输入一个数字，再按回车键就会跳到该行了。\n# 查找字符\n :**/关键字**  可以一直按「n」会往后寻找到您要的关键字为止。\n\n\n---","slug":"杂项-2016-11-03-vim常用命令","published":1,"updated":"2016-11-13T03:36:30.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civi8ouir001a2c6n5ht9qj5n","content":"<p><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/vim%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4001.jpeg\" alt=\"\"></p>\n<h1 id=\"插入模式\"><a href=\"#插入模式\" class=\"headerlink\" title=\"插入模式\"></a>插入模式</h1><p>按「i」切换进入插入模式「insert mode」，按”i”进入插入模式后是从光标<br>当前位置开始输入文件；</p>\n<h3 id=\"按「a」进入插入模式后，从当前光标所在位置的下一个位置开始输入文字。\"><a href=\"#按「a」进入插入模式后，从当前光标所在位置的下一个位置开始输入文字。\" class=\"headerlink\" title=\"按「a」进入插入模式后，从当前光标所在位置的下一个位置开始输入文字。\"></a>按「a」进入插入模式后，从当前光标所在位置的下一个位置开始输入文字。</h3><h3 id=\"按「o」进入插入模式后，是插入新的一行，从行首开始输入文字。\"><a href=\"#按「o」进入插入模式后，是插入新的一行，从行首开始输入文字。\" class=\"headerlink\" title=\"按「o」进入插入模式后，是插入新的一行，从行首开始输入文字。\"></a>按「o」进入插入模式后，是插入新的一行，从行首开始输入文字。</h3><p>  : <strong>w filename</strong> （输入 「w filename」将文章以指定的文件名filename保存）<br>  : <strong>wq</strong> (输入「wq」，存盘并退出vim)<br>  : <strong>q!</strong> (输入q!， 不存盘强制退出vim)<br>  :<strong>ZZ</strong> (输入「ZZ」，存盘并退出vim)</p>\n<hr>\n<h1 id=\"移动光标\"><a href=\"#移动光标\" class=\"headerlink\" title=\"移动光标\"></a>移动光标</h1><p>vi可以直接用键盘上的光标来上下左右移动，但正规的vi是用小写英文字母<br>「h」、「j」、「k」、「l」，分别控制光标左、下、上、右移一格。</p>\n<ul>\n<li>按数字「0」：移到行首。</li>\n<li>按「G」：移动到文章的开头。</li>\n<li>按「w」：光标跳到下个字符串的开头</li>\n<li>按「e」：光标跳到下个字符串的字尾</li>\n<li>按「b」：光标回到上个字符串的开头</li>\n<li>按「#」：光标移到某个字符串后，按#会高亮所有的这个字符串。</li>\n</ul>\n<h1 id=\"删除文字\"><a href=\"#删除文字\" class=\"headerlink\" title=\"删除文字\"></a>删除文字</h1><ul>\n<li>「x」：每按一次，删除光标所在位置的”后面”一个字符。</li>\n<li>「*x」：例如，「6x」表示删除光标所在位置的”后面”6个字符。</li>\n<li>「X」：大写的X，每按一次，删除光标所在位置的”前面”一个字符。</li>\n<li>「*X」：例如，「20X」表示删除光标所在位置的”前面”20个字符。</li>\n<li>「dd」：删除光标所在行。</li>\n<li>「*dd」：从光标所在行开始删除#行</li>\n</ul>\n<h1 id=\"复制\"><a href=\"#复制\" class=\"headerlink\" title=\"复制\"></a>复制</h1><ul>\n<li>「yw」：将光标所在之处到字尾的字符复制到缓冲区中。</li>\n<li>「*yw」：复制#个字到缓冲区</li>\n<li>「yy」：复制光标所在行到缓冲区。</li>\n<li>「*yy」：例如，「6yy」表示拷贝从光标所在的该行”往下数”6行文字。</li>\n<li>「p」：将缓冲区内的字符贴到光标所在位置。注意：所有与”y”有关的复制<br>命令都必须与”p”配合才能完成复制与粘贴功能。</li>\n</ul>\n<h1 id=\"替换\"><a href=\"#替换\" class=\"headerlink\" title=\"替换\"></a>替换</h1><ul>\n<li>「r」：替换光标所在处的字符。</li>\n<li>「R」：替换光标所到之处的字符，直到按下「ESC」键为止。</li>\n</ul>\n<h1 id=\"撤销\"><a href=\"#撤销\" class=\"headerlink\" title=\"撤销\"></a>撤销</h1><ul>\n<li>「u」：如果您误执行一个命令，可以马上按下「u」撤销，回到上一个操作。按多<br>次”u”可以执行多次回复。</li>\n</ul>\n<h1 id=\"更改\"><a href=\"#更改\" class=\"headerlink\" title=\"更改\"></a>更改</h1><ul>\n<li>「cw」：更改光标所在处的字到字尾处<a href=\"\">更改某个字符串</a></li>\n<li>「c*w」：例如，「c3w」表示更改3个字</li>\n</ul>\n<h1 id=\"跳至指定的行\"><a href=\"#跳至指定的行\" class=\"headerlink\" title=\"跳至指定的行\"></a>跳至指定的行</h1><ul>\n<li>「ctrl」+「g」列出光标所在行的行号，及总行数。</li>\n<li>「*G」：例如，「15G」，表示移动光标至文章的第15行行首。</li>\n</ul>\n<hr>\n<p>先按「ESC」键确定您已经处于「command mode」下后，<br>再按「：」冒号即可进入「last line mode」。</p>\n<h1 id=\"列出行号\"><a href=\"#列出行号\" class=\"headerlink\" title=\"列出行号\"></a>列出行号</h1><p>  :<strong>set nu</strong> 会在文件中的每一行前面列出行号。</p>\n<h1 id=\"跳到文件中的某一行\"><a href=\"#跳到文件中的某一行\" class=\"headerlink\" title=\"跳到文件中的某一行\"></a>跳到文件中的某一行</h1><p> :<strong>行号</strong>  在冒号后输入一个数字，再按回车键就会跳到该行了。</p>\n<h1 id=\"查找字符\"><a href=\"#查找字符\" class=\"headerlink\" title=\"查找字符\"></a>查找字符</h1><p> :<strong>/关键字</strong>  可以一直按「n」会往后寻找到您要的关键字为止。</p>\n<hr>\n","excerpt":"","more":"<p><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/vim%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4001.jpeg\" alt=\"\"></p>\n<h1 id=\"插入模式\"><a href=\"#插入模式\" class=\"headerlink\" title=\"插入模式\"></a>插入模式</h1><p>按「i」切换进入插入模式「insert mode」，按”i”进入插入模式后是从光标<br>当前位置开始输入文件；</p>\n<h3 id=\"按「a」进入插入模式后，从当前光标所在位置的下一个位置开始输入文字。\"><a href=\"#按「a」进入插入模式后，从当前光标所在位置的下一个位置开始输入文字。\" class=\"headerlink\" title=\"按「a」进入插入模式后，从当前光标所在位置的下一个位置开始输入文字。\"></a>按「a」进入插入模式后，从当前光标所在位置的下一个位置开始输入文字。</h3><h3 id=\"按「o」进入插入模式后，是插入新的一行，从行首开始输入文字。\"><a href=\"#按「o」进入插入模式后，是插入新的一行，从行首开始输入文字。\" class=\"headerlink\" title=\"按「o」进入插入模式后，是插入新的一行，从行首开始输入文字。\"></a>按「o」进入插入模式后，是插入新的一行，从行首开始输入文字。</h3><p>  : <strong>w filename</strong> （输入 「w filename」将文章以指定的文件名filename保存）<br>  : <strong>wq</strong> (输入「wq」，存盘并退出vim)<br>  : <strong>q!</strong> (输入q!， 不存盘强制退出vim)<br>  :<strong>ZZ</strong> (输入「ZZ」，存盘并退出vim)</p>\n<hr>\n<h1 id=\"移动光标\"><a href=\"#移动光标\" class=\"headerlink\" title=\"移动光标\"></a>移动光标</h1><p>vi可以直接用键盘上的光标来上下左右移动，但正规的vi是用小写英文字母<br>「h」、「j」、「k」、「l」，分别控制光标左、下、上、右移一格。</p>\n<ul>\n<li>按数字「0」：移到行首。</li>\n<li>按「G」：移动到文章的开头。</li>\n<li>按「w」：光标跳到下个字符串的开头</li>\n<li>按「e」：光标跳到下个字符串的字尾</li>\n<li>按「b」：光标回到上个字符串的开头</li>\n<li>按「#」：光标移到某个字符串后，按#会高亮所有的这个字符串。</li>\n</ul>\n<h1 id=\"删除文字\"><a href=\"#删除文字\" class=\"headerlink\" title=\"删除文字\"></a>删除文字</h1><ul>\n<li>「x」：每按一次，删除光标所在位置的”后面”一个字符。</li>\n<li>「*x」：例如，「6x」表示删除光标所在位置的”后面”6个字符。</li>\n<li>「X」：大写的X，每按一次，删除光标所在位置的”前面”一个字符。</li>\n<li>「*X」：例如，「20X」表示删除光标所在位置的”前面”20个字符。</li>\n<li>「dd」：删除光标所在行。</li>\n<li>「*dd」：从光标所在行开始删除#行</li>\n</ul>\n<h1 id=\"复制\"><a href=\"#复制\" class=\"headerlink\" title=\"复制\"></a>复制</h1><ul>\n<li>「yw」：将光标所在之处到字尾的字符复制到缓冲区中。</li>\n<li>「*yw」：复制#个字到缓冲区</li>\n<li>「yy」：复制光标所在行到缓冲区。</li>\n<li>「*yy」：例如，「6yy」表示拷贝从光标所在的该行”往下数”6行文字。</li>\n<li>「p」：将缓冲区内的字符贴到光标所在位置。注意：所有与”y”有关的复制<br>命令都必须与”p”配合才能完成复制与粘贴功能。</li>\n</ul>\n<h1 id=\"替换\"><a href=\"#替换\" class=\"headerlink\" title=\"替换\"></a>替换</h1><ul>\n<li>「r」：替换光标所在处的字符。</li>\n<li>「R」：替换光标所到之处的字符，直到按下「ESC」键为止。</li>\n</ul>\n<h1 id=\"撤销\"><a href=\"#撤销\" class=\"headerlink\" title=\"撤销\"></a>撤销</h1><ul>\n<li>「u」：如果您误执行一个命令，可以马上按下「u」撤销，回到上一个操作。按多<br>次”u”可以执行多次回复。</li>\n</ul>\n<h1 id=\"更改\"><a href=\"#更改\" class=\"headerlink\" title=\"更改\"></a>更改</h1><ul>\n<li>「cw」：更改光标所在处的字到字尾处<a href=\"\">更改某个字符串</a></li>\n<li>「c*w」：例如，「c3w」表示更改3个字</li>\n</ul>\n<h1 id=\"跳至指定的行\"><a href=\"#跳至指定的行\" class=\"headerlink\" title=\"跳至指定的行\"></a>跳至指定的行</h1><ul>\n<li>「ctrl」+「g」列出光标所在行的行号，及总行数。</li>\n<li>「*G」：例如，「15G」，表示移动光标至文章的第15行行首。</li>\n</ul>\n<hr>\n<p>先按「ESC」键确定您已经处于「command mode」下后，<br>再按「：」冒号即可进入「last line mode」。</p>\n<h1 id=\"列出行号\"><a href=\"#列出行号\" class=\"headerlink\" title=\"列出行号\"></a>列出行号</h1><p>  :<strong>set nu</strong> 会在文件中的每一行前面列出行号。</p>\n<h1 id=\"跳到文件中的某一行\"><a href=\"#跳到文件中的某一行\" class=\"headerlink\" title=\"跳到文件中的某一行\"></a>跳到文件中的某一行</h1><p> :<strong>行号</strong>  在冒号后输入一个数字，再按回车键就会跳到该行了。</p>\n<h1 id=\"查找字符\"><a href=\"#查找字符\" class=\"headerlink\" title=\"查找字符\"></a>查找字符</h1><p> :<strong>/关键字</strong>  可以一直按「n」会往后寻找到您要的关键字为止。</p>\n<hr>\n"},{"title":"数据库主主互备（高可用）","abbrlink":27740,"date":"2016-11-11T01:39:13.000Z","_content":"\n本文是在[Neil](http://blog.byneil.com/)的博客上看到的一篇博文，由于没有试验环境，没有经过测试，以后测试后会更新并删除本段文字，摘录分享，仅供参考。\n\n# mysql 主主互备\n双机热备的概念简单说一下，就是要保持两个数据库的状态自动同步。对任何一个数据库的操作都自动应用到另外一个数据库，始终保持两个数据库数据一致。 这样做的好处多。\n \n* 1.可以做灾备，其中一个坏了可以切换到另一个。 \n* 2.可以做负载均衡，可以将请求分摊到其中任何一台上，提高网站吞吐量。 \n* 3.对于异地热备，尤其适合灾备。\n \n`mysql -v`,查看使用的是mysql 5.5.34，\n\n## mysql 备份工作原理\n简单的说就是把 一个服务器上执行过的sql语句在别的服务器上也重复执行一遍， 这样只要两个数据库的初态是一样的，那么它们就能一直同步。\n \n当然这种复制和重复都是mysql自动实现的，我们只需要配置即可。\n![](http://ofyfogrgx.bkt.clouddn.com/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87001.gif)\n上图中有两个服务器， 演示了从一个主服务器（master） 把数据同步到从服务器（slave）的过程。\n这是一个主-从复制的例子。 主-主互相复制只是把上面的例子反过来再做一遍。 所以我们以这个例子介绍原理。\n\n对于一个mysql服务器， 一般有两个线程来负责复制和被复制。当开启复制之后。\n \n* 1.作为主服务器Master，  会把自己的每一次改动都记录到 二进制日志 Binarylog 中。 （从服务器会负责来读取这个log， 然后在自己那里再执行一遍。）\n* 2.作为从服务器Slave， 会用master上的账号登陆到 master上， 读取master的Binarylog,  写入到自己的中继日志 Relaylog， 然后自己的sql线程会负责读取这个中继日志，并执行一遍。  到这里主服务器上的更改就同步到从服务器上了。\n \n在mysql上可以查看当前服务器的主，从状态。 其实就是当前服务器的 Binary（作为主服务器角色）状态和位置。 以及其RelayLog（作为从服务器）的复制进度。\n\n例如我们在主服务器上查看主状态：\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87002.png)\n**第一行**表明 当前正在记录的 binarylog文件名是： mysql-bin.000014.\n我们可以在mysql数据目录下，找到这个文件：\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87003.png)\n\n**第二行**， 107. 表示当前的文件偏移量， 就是写入在mysql-bin.000014 文件的记录位置。\n这两点就构成了 主服务器的状态。  配置从服务器的时候，需要用到这两个值。 告诉从服务器从哪读取主服务器的数据。 （从服务器会登录之后，找到这个日志文件，并从这个偏移量之后开始复制。）\n \n**第三行，和第四行**，表示需要记录的数据库和需要忽略的数据库。 只有需要记录的数据库，其变化才会被写入到mysql-bin.000014日志文件中。  后面会再次介绍这两个参数。\n \n我们还可以在从服务器上，查看从服务器的复制状态：`mysql> show slave status\\G`\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87004.png)\n我们还是来重点解释途中的红圈的部分：\n\n1.  Master_host 指的是 主服务器的地址。 \n2. Master_user 指的是主服务器上用来复制的用户。  从服务器会用此账号来登录主服务。进行复制。\n3. Master_log_file 就是前面提到的， 主服务器上的日志文件名.\n4. Read_Master_log_pos 就是前面提到的主服务器的日志记录位置， 从服务器根据这两个条件来选择复制的文件和位置。\n5. Slave_IO_Running:  指的就是从服务器上负责读取主服务器的线程工作状态。 从服务器用这个专门的线程链接到主服务器上，并把日志拷贝回来。\n6. Slave_SQL_Running: 指的就是专门执行sql的线程。 它负责把复制回来的Relaylog执行到自己的数据库中。 这两个参数必须都为Yes 才表明复制在正常工作。\n \n其他的参数之后再介绍。\n\n---\n## mysql 双机热备实战\n### 主从复制\n了解了上面的原理之后， 我们来实战。 这里有两个重点， 要想同步数据库状态， 需要相同的初态，然后配置同步才有意义。 当然你可以不要初态，这是你的自由。 我们这里从头开始配置一遍。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87005.png)\n\n我们先以A服务器为起点，  配置它的数据库同步到B。  这就是主-从复制了。 之后再反过来做一次，就可以互相备份了。\n \n#### 在A上面创建专门用于备份的用户\n```\ngrant replication slave on *.* to 'repl_userl'@''\ngrant replication slave on *.* to 'repl_user'@'192.***.***.***' identified by 'hj34$%&mnkb';```\n上面把ip地址换成B机器的ip地址。 只允许B登录。安全。\n用户名为： repl_user\n密码为： hj34$********nkb\n这个等会在B上面要用。\n \n#### 开启主服务器的 binarylog。\n很多服务器是默认开启的，我们这里检查一下：\n打开 /etc/my.cnf\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87006.png)\n解释一下红框中的配置：\n前面三行， 你可能已经有了。\n**binlog-do-db** 用来表示，只把哪些数据库的改动记录到binary日志中。 可以写上关注hello数据库。 但是我把它注释掉了。 只是展示一下。 可以写多行，表示关注多个数据库。\n**binlog-ignore-db**表示，需要忽略哪些数据库。我这里忽略了其他的4个数据库。\n \n**最后两行**用于在 双主（多主循环）互相备份。 因为每台数据库服务器都可能在同一个表中插入数据，如果表有一个自动增长的主键，那么就会在多服务器上出现主键冲突。  解决这个问题的办法就是让每个数据库的自增主键不连续。  上图说是， 我假设需要将来可能需要10台服务器做备份， 所以**auto-increment-increment 设为10**。   而 **auto-increment-offset=1 **表示这台服务器的序号。 从1开始， 不超过auto-increment-increment。\n这样做之后， 我在这台服务器上插入的第一个id就是 1， 第二行的id就是 11了， 而不是2。\n（同理，在第二台服务器上插入的第一个id就是2， 第二行就是12， 这个后面再介绍） 这样就不会出现主键冲突了。 后面我们会演示这个id的效果。\n\n#### 获取主服务器状态， 和同步初态。\n假设我现在有这些数据库在A上面。\n如果你是全新安装的， 那么不需要同步初态，直接跳过这一步，到后面直接查看主服务器状态。\n这里我们假设有一个 hello 数据库作为初态。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87008.png)\n\n先锁定 hello数据库：`FLUSH TABLES WITH READ LOCK;`\n\n然后导出数据：\n我这里只需要导出hello数据库， 如果你有多个数据库作为初态的话， 需要导出所有这些数据库：\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87007.png)\n\n然后查看A服务器的binary日志位置：\n记住这个文件名和 位置， 等会在从服务器上会用到。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87009.png)\n\n主服务器已经做完了， 可以解除锁定了：`UNLOCK TABLES;`\n\n#### 设置从服务器 B 需要复制的数据库\n打开从服务器 B 的 /etc/my.cnf 文件：\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87010.png)\n\n解释一下上面的内容:\n\n* **server-id** 必须保证每个服务器不一样。 这可能和循环同步有关。 防止进入死循环。\n* **replicate-do-db** 可以指定需要复制的数据库， 我这里注掉了。 演示一下。\n* **replicate-ignore-db** 复制时需要排除的数据库， 我使用了，这个。 除开系统的几个数据库之外，所有的数据库都复制。\n* **relay_log** 中继日志的名字。 前面说到了， 复制线程需要先把远程的变化拷贝到这个中继日志中， 在执行。\n* **log-slave-updates **意思是，中继日志执行之后，这些变化是否需要计入自己的binarylog。 当你的B服务器需要作为另外一个服务器的主服务器的时候需要打开。  就是双主互相备份，或者多主循环备份。 我们这里需要， 所以打开。\n\n保存， 重启mysql。\n\n#### 导入初态， 开始同步。\n把刚才从A服务器上导出的 hello.sql 导入到 B的hello数据库中， 如果B现在没有hello数据库，请先创建一个， 然后再导入：\n创建数据库：\nmysql> `create database hello default charset utf8;`\n把hello.sql 上传到B上， 然后导入：`mysql -uroot -p hello < hello.sql`\n如果你刚才导出了多个数据库， 需要把他们都一一上传导入。\n \n开启同步, 在B服务器上执行：\n```\n CHANGE MASTER TO \n       MASTER_HOST='192.***.***.***', \n       MASTER_USER='repl_user', \n       MASTER_PASSWORD='hj3****', \n       MASTER_LOG_FILE='mysql-bin.000004', \n       MASTER_LOG_POS=7145;```\n \n上面几个参数就不解释了,前面说过了。\n \n重启mysql，然后查看slave线程开启了没：\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87011.png)\n注意图中的红框， 两个都是Yes， 说明开启成功。如果其中一个是No， 那就说明不成功。需要查看mysql的错误日志。有时候密码填错了， 有时候防火墙的3306没有打开。ip地址不对，等等。 都会导致失败。\nmysql的错误日志一般在：**/usr/local/mysql/data/**;文件名应该是你的机器名， **hostname.err** 你换成你自己的。\n\n到这里主-从复制已经打开了。 我们先来实验一下。\n我们在A的数据库里面去 添加数据：\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87012.png)\n我在A的 hello数据库的test表中 连续插入了3条数据，  注意看他们的自增长id， 分别是1,11,21.  知道这是为什么吗。 前面已经说过了，不懂再回去看。\n \n我们去看一下B数据库有没有这三条数据：\n打开B的数据库：\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87013.png)\n\n**此时不要在B中修改数据。 我们接着配置从B到A的复制。  如果你只需要主从复制的话， 到这里就结束了。后面可以不看了。 所有A中的修改都能自动同步到B， 但是对B的修改却不能同步到A。 因为是单向的。 如果需要双向同步的话，需要再做一次从B到A的复制。**\n\n---\n### 主主复制\n基本跟上面一样：我们简单一点介绍：\n \n#### 在B中创建用户\n```\ngrant replication slave on *.* to 'repl_user'@'192.***.***.***' identified by 'hj34$%&mnkb';```\n#### 打开 /etc/my.cnf ， 开启B的binarylog\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87014.png)\n注意红框中所新添加的部分。\n\n#### 我们不需要导出B的初态了，因为它刚刚才从A导过来。  直接记住它的master日志状态\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87015.png)\n记住这两个数值，等会在A上面要用。\nB服务器就设置完了。\n \n#### 登录到A 服务器。 开启中继：\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87016.png)\n\n注意框中心添加的部分， 不解释了。\n\n#### 启动同步：\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87017.png)\n上面的ip地址是B的ip地址， 因为A把B当做master了。 不解释了。\n \n然后重启mysql服务。\n然后查看，slave状态是否正常：\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87018.png)\n图中出现了两个No。说明slave没有成功， 即，从B到A的同步没有成功。 我们去查看mysql错误日志，前面说过位置：**/usr/local/mysql/data/** 查看**hostname.err** 文件，打开看看\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87019.png)\n看图中的error信息。  说找不到中继日志文件。\n这是因为我们在配置A的中继文件时改了中继文件名，但是mysql没有同步。解决办法很简单。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87020.png)\n\n先停掉mysql服务。  找到这三个文件，把他们删掉。 **一定要先停掉mysql服务**。不然还是不成功。你需要重启一下机器了。 或者手动`kill mysqld`。\n改好之后， 启动mysql之后。 我们在来检查一下slave状态：\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87021.png)\n完成，现在就是**A<--->B**主主互备啦！\n\n---\n\n# 深入了解复制\n已经讨论了关于复制的一些基本东西，下面深入讨论一下复制。\n## 基于语句的复制(Statement-Based Replication)\nMySQL 5.0及之前的版本仅支持基于语句的复制（也叫做**逻辑复制**，logical replication），这在数据库并不常见。master记录下改变数据的查询，然后，slave从中继日志中读取事件，并执行它，这些SQL语句与master执行的语句一样。\n这种方式的优点就是实现简单。此外，基于语句的复制的二进制日志可以很好的进行压缩，而且日志的数据量也较小，占用带宽少——例如，一个更新GB的数据的查询仅需要几十个字节的二进制日志。而mysqlbinlog对于基于语句的日志处理十分方便。\n \n但是，基于语句的复制并不是像它看起来那么简单，因为一些查询语句依赖于master的特定条件，例如，master与slave可能有不同的时间。所以，MySQL的二进制日志的格式不仅仅是查询语句，还包括一些元数据信息，例如，当前的时间戳。即使如此，还是有一些语句，比如，CURRENT USER函数，不能正确的进行复制。此外，存储过程和触发器也是一个问题。\n\n另外一个问题就是基于语句的复制必须是串行化的。这要求大量特殊的代码，配置，例如InnoDB的next-key锁等。并不是所有的存储引擎都支持基于语句的复制。\n\n## 基于记录的复制(Row-Based Replication)\nMySQL增加基于记录的复制，在二进制日志中记录下实际数据的改变，这与其它一些DBMS的实现方式类似。这种方式有优点，也有缺点。优点就是可以对任何语句都能正确工作，一些语句的效率更高。主要的缺点就是二进制日志可能会很大，而且不直观，所以，你不能使用**mysqlbinlog**来查看二进制日志。\n\n对于一些语句，基于记录的复制能够更有效的工作，如：\n```mysql\nmysql> INSERT INTO summary_table(col1, col2, sum_col3)\n    -> SELECT col1, col2, sum(col3)\n    -> FROM enormous_table\n    -> GROUP BY col1, col2;```\n假设，只有三种唯一的col1和col2的组合，但是，该查询会扫描原表的许多行，却仅返回三条记录。此时，基于记录的复制效率更高。\n\n另一方面，下面的语句，基于语句的复制更有效：\n```\nmysql> UPDATE enormous_table SET col1 = 0;```\n此时使用基于记录的复制代价会非常高。由于两种方式不能对所有情况都能很好的处理，所以，MySQL 5.1支持在基于语句的复制和基于记录的复制之前动态交换。你可以通过设置session变量binlog_format来进行控制。\n\n## 复制相关的文件\n除了二进制日志和中继日志文件外，还有其它一些与复制相关的文件。如下\n\n* mysql-bin.index\n\n服务器一旦开启二进制日志，会产生一个与二日志文件同名，但是以.index结尾的文件。它用于跟踪磁盘上存在哪些二进制日志文件。MySQL用它来定位二进制日志文件。内容与下面类似\n```\n.\\mysql-01-bin.000003\n.\\mysql-01-bin.000004```\n\n* mysql-relay-bin.index\n该文件的功能与mysql-bin.index类似，但是它是针对中继日志，而不是二进制日志。内容与下面类似\n```\n.\\mysql-02-relay-bin.000017\n.\\mysql-02-relay-bin.000018```\n\n* master.info\n保存master的相关信息。不要删除它，否则，slave重启后不能连接master。内容与下面类似\n```\nmysql-01-bin.000010\n286\nlocalhost\nrepl\n1234\n3306```\n I/O线程更新master.info文件，内容与下面类似\n```\n.\\mysql-02-relay-bin.000019\n254\nmysql-01-bin.000010\n286\n0\n52813```\n\n* relay-log.info \n包含slave中当前二进制日志和中继日志的信息。\n \n \n \n## 发送复制事件到其它slave\n当设置**log_slave_updates**时，你可以让slave扮演其它slave的master。此时，slave把SQL线程执行的事件写进行自己的二进制日志(binary log)，然后，它的slave可以获取这些事件并执行它。如下：\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87022.JPG)\n\n## 复制过滤(Replication Filters)\n复制过滤可以让你只复制服务器中的一部分数据，有两种复制过滤：在master上过滤二进制日志中的事件；在slave上过滤中继日志中的事件。如下：\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87023.JPG)\n\n---\n# 复制的常用拓扑结构\n复制的体系结构有以下一些基本原则：\n(1)    每个slave只能有一个master；\n(2)    每个slave只能有一个唯一的服务器ID；\n(3)    每个master可以有很多slave；\n(4)    如果你设置log_slave_updates，slave可以是其它slave的master，从而扩散master的更新。\n \nMySQL不支持多主服务器复制(Multimaster Replication)——即一个slave可以有多个master。但是，通过一些简单的组合，我们却可以建立灵活而强大的复制体系结构。\n \n## 1.单一master和多slave\n由一个master和一个slave组成复制系统是最简单的情况。Slave之间并不相互通信，只能与master进行通信。\n在实际应用场景中，MySQL复制90%以上都是一个Master复制到一个或者多个Slave的架构模式，主要用于读压力比较大的应用的数据库端廉价扩展解决方案。因为只要Master和Slave的压力不是太大（尤其是Slave端压力）的话，异步复制的延时一般都很少很少。尤其是自从Slave端的复制方式改成两个线程处理之后，更是减小了Slave端的延时问题。而带来的效益是，对于数据实时性要求不是特别Critical的应用，只需要通过廉价的pcserver来扩展Slave的数量，将读压力分散到多台Slave的机器上面，即可通过分散单台数据库服务器的读压力来解决数据库端的读性能瓶颈，毕竟在大多数数据库应用系统中的读压力还是要比写压力大很多。这在很大程度上解决了目前很多中小型网站的数据库压力瓶颈问题，甚至有些大型网站也在使用类似方案解决数据库瓶颈。\n如图：\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87024.JPG)\n\n 如果写操作较少，而读操作很时，可以采取这种结构。你可以将读操作分布到其它的slave，从而减小master的压力。但是，当slave增加到一定数量时，slave对master的负载以及网络带宽都会成为一个严重的问题。\n这种结构虽然简单，但是，它却非常灵活，足够满足大多数应用需求。一些建议：\n* (1)不同的slave扮演不同的作用(例如使用不同的索引，或者不同的存储引擎)；\n* (2)用一个slave作为备用master，只进行复制；\n* (3)用一个远程的slave，用于灾难恢复；\n \n大家应该都比较清楚，从一个Master节点可以复制出多个Slave节点，可能有人会想，那一个Slave节点是否可以从多个Master节点上面进行复制呢？至少在目前来看，MySQL是做不到的，以后是否会支持就不清楚了。\nMySQL不支持一个Slave节点从多个Master节点来进行复制的架构，主要是为了避免冲突的问题，防止多个数据源之间的数据出现冲突，而造成最后数据的不一致性。不过听说已经有人开发了相关的patch，让MySQL支持一个Slave节点从多个Master结点作为数据源来进行复制，这也正是MySQL开源的性质所带来的好处。\n \n \n## 2.主动模式的Master-Master(Master-Master in Active-Active Mode)\nMaster-Master复制的两台服务器，既是master，又是另一台服务器的slave。这样，任何一方所做的变更，都会通过复制应用到另外一方的数据库中。\n可能有些人可能会担心，这样搭建复制环境之后，难道不会造成两台MySQL之间的循环复制么？实际上MySQL自己早就想到了这一点，所以在MySQL的BinaryLog中记录了当前MySQL的server-id，而且这个参数也是我们搭建MySQLReplication的时候必须明确指定，而且Master和Slave的**server-id**参数值比需要不一致才能使**MySQLReplication**搭建成功。一旦有了server-id的值之后，MySQL就很容易判断某个变更是从哪一个MySQLServer最初产生的，所以就很容易避免出现循环复制的情况。而且，如果我们不打开记录**Slave**的**BinaryLog**的选项（**\\--log-slave-update**）的时候，MySQL根本就不会记录复制过程中的变更到BinaryLog中，就更不用担心可能会出现循环复制的情形了。\n如图：\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87025.JPG)\n \n主动的Master-Master复制有一些特殊的用处。例如，地理上分布的两个部分都需要自己的可写的数据副本。这种结构最大的问题就是更新冲突。假设一个表只有一行(一列)的数据，其值为1，如果两个服务器分别同时执行如下语句：\n在第一个服务器上执行：`mysql> UPDATE tbl SET col=col + 1;`\n在第二个服务器上执行：`mysql> UPDATE tbl SET col=col * 2;`\n那么结果是多少呢？一台服务器是4，另一个服务器是3，但是，这并不会产生错误。\n实际上，MySQL并不支持其它一些DBMS支持的多主服务器复制(Multimaster Replication)，这是MySQL的复制功能很大的一个限制(多主服务器的难点在于解决更新冲突)，但是，如果你实在有这种需求，你可以采用MySQL Cluster，以及将Cluster和Replication结合起来，可以建立强大的高性能的数据库平台。但是，可以通过其它一些方式来模拟这种多主服务器的复制。\n \n## 3.主动-被动模式的Master-Master(Master-Master in Active-Passive Mode)\n这是master-master结构变化而来的，它避免了M-M的缺点，实际上，这是一种具有容错和高可用性的系统。它的不同点在于其中一个服务只能进行只读操作。如图：\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87026.JPG)\n \n \n## 4.级联复制架构 Master –Slaves - Slaves\n在有些应用场景中，可能读写压力差别比较大，读压力特别的大，一个Master可能需要上10台甚至更多的Slave才能够支撑注读的压力。这时候，Master就会比较吃力了，因为仅仅连上来的SlaveIO线程就比较多了，这样写的压力稍微大一点的时候，Master端因为复制就会消耗较多的资源，很容易造成复制的延时。\n遇到这种情况如何解决呢？这时候我们就可以利用MySQL可以在Slave端记录复制所产生变更的BinaryLog信息的功能，也就是打开**\\--log-slave-update**选项。然后，通过二级（或者是更多级别）复制来减少Master端因为复制所带来的压力。也就是说，我们首先通过少数几台MySQL从Master来进行复制，这几台机器我们姑且称之为第一级Slave集群，然后其他的Slave再从第一级Slave集群来进行复制。从第一级Slave进行复制的Slave，我称之为第二级Slave集群。如果有需要，我们可以继续往下增加更多层次的复制。这样，我们很容易就控制了每一台MySQL上面所附属Slave的数量。这种架构我称之为Master-Slaves-Slaves架构\n这种多层级联复制的架构，很容易就解决了Master端因为附属Slave太多而成为瓶颈的风险。下图展示了多层级联复制的Replication架构。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87027.jpg)\n当然，如果条件允许，我更倾向于建议大家通过拆分成多个Replication集群来解决\n上述瓶颈问题。毕竟Slave并没有减少写的量，所有Slave实际上仍然还是应用了所有的数据变更操作，没有减少任何写IO。相反，Slave越多，整个集群的写IO总量也就会越多，我们没有非常明显的感觉，仅仅只是因为分散到了多台机器上面，所以不是很容易表现出来。\n此外，增加复制的级联层次，同一个变更传到最底层的Slave所需要经过的MySQL也会更多，同样可能造成延时较长的风险。\n而如果我们通过分拆集群的方式来解决的话，可能就会要好很多了，当然，分拆集群也需要更复杂的技术和更复杂的应用系统架构。\n\n## 5.带从服务器的Master-Master结构(Master-Master with Slaves)\n这种结构的优点就是提供了冗余。在地理上分布的复制结构，它不存在单一节点故障问题，而且还可以将读密集型的请求放到slave上。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87028.JPG)\n级联复制在一定程度上面确实解决了Master因为所附属的Slave过多而成为瓶颈的问题，但是他并不能解决人工维护和出现异常需要切换后可能存在重新搭建Replication的问题。这样就很自然的引申出了DualMaster与级联复制结合的Replication架构，我称之为Master-Master-Slaves架构\n和Master-Slaves-Slaves架构相比，区别仅仅只是将第一级Slave集群换成了一台单独的Master，作为备用Master，然后再从这个备用的Master进行复制到一个Slave集群。\n\n这种DualMaster与级联复制结合的架构，**最大的好处就是既可以避免主Master的写入操作不会受到Slave集群的复制所带来的影响，同时主Master需要切换的时候也基本上不会出现重搭Replication的情况。但是，这个架构也有一个弊端，那就是备用的Master有可能成为瓶颈，因为如果后面的Slave集群比较大的话，备用Master可能会因为过多的SlaveIO线程请求而成为瓶颈。**当然，该备用Master不提供任何的读服务的时候，瓶颈出现的可能性并不是特别高，如果出现瓶颈，也可以在备用Master后面再次进行级联复制，架设多层Slave集群。当然，级联复制的级别越多，Slave集群可能出现的数据延时也会更为明显，所以考虑使用多层级联复制之前，也需要评估数据延时对应用系统的影响。\n\n---","source":"_posts/数据库/2016-11-11-数据库主主互备（高可用）.md","raw":"---\ntitle: 数据库主主互备（高可用）\ncategories:\n  - 数据库\ntags:\n  - 数据库主主互备（高可用）\nabbrlink: 27740\ndate: 2016-11-11 09:39:13\n---\n\n本文是在[Neil](http://blog.byneil.com/)的博客上看到的一篇博文，由于没有试验环境，没有经过测试，以后测试后会更新并删除本段文字，摘录分享，仅供参考。\n\n# mysql 主主互备\n双机热备的概念简单说一下，就是要保持两个数据库的状态自动同步。对任何一个数据库的操作都自动应用到另外一个数据库，始终保持两个数据库数据一致。 这样做的好处多。\n \n* 1.可以做灾备，其中一个坏了可以切换到另一个。 \n* 2.可以做负载均衡，可以将请求分摊到其中任何一台上，提高网站吞吐量。 \n* 3.对于异地热备，尤其适合灾备。\n \n`mysql -v`,查看使用的是mysql 5.5.34，\n\n## mysql 备份工作原理\n简单的说就是把 一个服务器上执行过的sql语句在别的服务器上也重复执行一遍， 这样只要两个数据库的初态是一样的，那么它们就能一直同步。\n \n当然这种复制和重复都是mysql自动实现的，我们只需要配置即可。\n![](http://ofyfogrgx.bkt.clouddn.com/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87001.gif)\n上图中有两个服务器， 演示了从一个主服务器（master） 把数据同步到从服务器（slave）的过程。\n这是一个主-从复制的例子。 主-主互相复制只是把上面的例子反过来再做一遍。 所以我们以这个例子介绍原理。\n\n对于一个mysql服务器， 一般有两个线程来负责复制和被复制。当开启复制之后。\n \n* 1.作为主服务器Master，  会把自己的每一次改动都记录到 二进制日志 Binarylog 中。 （从服务器会负责来读取这个log， 然后在自己那里再执行一遍。）\n* 2.作为从服务器Slave， 会用master上的账号登陆到 master上， 读取master的Binarylog,  写入到自己的中继日志 Relaylog， 然后自己的sql线程会负责读取这个中继日志，并执行一遍。  到这里主服务器上的更改就同步到从服务器上了。\n \n在mysql上可以查看当前服务器的主，从状态。 其实就是当前服务器的 Binary（作为主服务器角色）状态和位置。 以及其RelayLog（作为从服务器）的复制进度。\n\n例如我们在主服务器上查看主状态：\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87002.png)\n**第一行**表明 当前正在记录的 binarylog文件名是： mysql-bin.000014.\n我们可以在mysql数据目录下，找到这个文件：\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87003.png)\n\n**第二行**， 107. 表示当前的文件偏移量， 就是写入在mysql-bin.000014 文件的记录位置。\n这两点就构成了 主服务器的状态。  配置从服务器的时候，需要用到这两个值。 告诉从服务器从哪读取主服务器的数据。 （从服务器会登录之后，找到这个日志文件，并从这个偏移量之后开始复制。）\n \n**第三行，和第四行**，表示需要记录的数据库和需要忽略的数据库。 只有需要记录的数据库，其变化才会被写入到mysql-bin.000014日志文件中。  后面会再次介绍这两个参数。\n \n我们还可以在从服务器上，查看从服务器的复制状态：`mysql> show slave status\\G`\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87004.png)\n我们还是来重点解释途中的红圈的部分：\n\n1.  Master_host 指的是 主服务器的地址。 \n2. Master_user 指的是主服务器上用来复制的用户。  从服务器会用此账号来登录主服务。进行复制。\n3. Master_log_file 就是前面提到的， 主服务器上的日志文件名.\n4. Read_Master_log_pos 就是前面提到的主服务器的日志记录位置， 从服务器根据这两个条件来选择复制的文件和位置。\n5. Slave_IO_Running:  指的就是从服务器上负责读取主服务器的线程工作状态。 从服务器用这个专门的线程链接到主服务器上，并把日志拷贝回来。\n6. Slave_SQL_Running: 指的就是专门执行sql的线程。 它负责把复制回来的Relaylog执行到自己的数据库中。 这两个参数必须都为Yes 才表明复制在正常工作。\n \n其他的参数之后再介绍。\n\n---\n## mysql 双机热备实战\n### 主从复制\n了解了上面的原理之后， 我们来实战。 这里有两个重点， 要想同步数据库状态， 需要相同的初态，然后配置同步才有意义。 当然你可以不要初态，这是你的自由。 我们这里从头开始配置一遍。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87005.png)\n\n我们先以A服务器为起点，  配置它的数据库同步到B。  这就是主-从复制了。 之后再反过来做一次，就可以互相备份了。\n \n#### 在A上面创建专门用于备份的用户\n```\ngrant replication slave on *.* to 'repl_userl'@''\ngrant replication slave on *.* to 'repl_user'@'192.***.***.***' identified by 'hj34$%&mnkb';```\n上面把ip地址换成B机器的ip地址。 只允许B登录。安全。\n用户名为： repl_user\n密码为： hj34$********nkb\n这个等会在B上面要用。\n \n#### 开启主服务器的 binarylog。\n很多服务器是默认开启的，我们这里检查一下：\n打开 /etc/my.cnf\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87006.png)\n解释一下红框中的配置：\n前面三行， 你可能已经有了。\n**binlog-do-db** 用来表示，只把哪些数据库的改动记录到binary日志中。 可以写上关注hello数据库。 但是我把它注释掉了。 只是展示一下。 可以写多行，表示关注多个数据库。\n**binlog-ignore-db**表示，需要忽略哪些数据库。我这里忽略了其他的4个数据库。\n \n**最后两行**用于在 双主（多主循环）互相备份。 因为每台数据库服务器都可能在同一个表中插入数据，如果表有一个自动增长的主键，那么就会在多服务器上出现主键冲突。  解决这个问题的办法就是让每个数据库的自增主键不连续。  上图说是， 我假设需要将来可能需要10台服务器做备份， 所以**auto-increment-increment 设为10**。   而 **auto-increment-offset=1 **表示这台服务器的序号。 从1开始， 不超过auto-increment-increment。\n这样做之后， 我在这台服务器上插入的第一个id就是 1， 第二行的id就是 11了， 而不是2。\n（同理，在第二台服务器上插入的第一个id就是2， 第二行就是12， 这个后面再介绍） 这样就不会出现主键冲突了。 后面我们会演示这个id的效果。\n\n#### 获取主服务器状态， 和同步初态。\n假设我现在有这些数据库在A上面。\n如果你是全新安装的， 那么不需要同步初态，直接跳过这一步，到后面直接查看主服务器状态。\n这里我们假设有一个 hello 数据库作为初态。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87008.png)\n\n先锁定 hello数据库：`FLUSH TABLES WITH READ LOCK;`\n\n然后导出数据：\n我这里只需要导出hello数据库， 如果你有多个数据库作为初态的话， 需要导出所有这些数据库：\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87007.png)\n\n然后查看A服务器的binary日志位置：\n记住这个文件名和 位置， 等会在从服务器上会用到。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87009.png)\n\n主服务器已经做完了， 可以解除锁定了：`UNLOCK TABLES;`\n\n#### 设置从服务器 B 需要复制的数据库\n打开从服务器 B 的 /etc/my.cnf 文件：\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87010.png)\n\n解释一下上面的内容:\n\n* **server-id** 必须保证每个服务器不一样。 这可能和循环同步有关。 防止进入死循环。\n* **replicate-do-db** 可以指定需要复制的数据库， 我这里注掉了。 演示一下。\n* **replicate-ignore-db** 复制时需要排除的数据库， 我使用了，这个。 除开系统的几个数据库之外，所有的数据库都复制。\n* **relay_log** 中继日志的名字。 前面说到了， 复制线程需要先把远程的变化拷贝到这个中继日志中， 在执行。\n* **log-slave-updates **意思是，中继日志执行之后，这些变化是否需要计入自己的binarylog。 当你的B服务器需要作为另外一个服务器的主服务器的时候需要打开。  就是双主互相备份，或者多主循环备份。 我们这里需要， 所以打开。\n\n保存， 重启mysql。\n\n#### 导入初态， 开始同步。\n把刚才从A服务器上导出的 hello.sql 导入到 B的hello数据库中， 如果B现在没有hello数据库，请先创建一个， 然后再导入：\n创建数据库：\nmysql> `create database hello default charset utf8;`\n把hello.sql 上传到B上， 然后导入：`mysql -uroot -p hello < hello.sql`\n如果你刚才导出了多个数据库， 需要把他们都一一上传导入。\n \n开启同步, 在B服务器上执行：\n```\n CHANGE MASTER TO \n       MASTER_HOST='192.***.***.***', \n       MASTER_USER='repl_user', \n       MASTER_PASSWORD='hj3****', \n       MASTER_LOG_FILE='mysql-bin.000004', \n       MASTER_LOG_POS=7145;```\n \n上面几个参数就不解释了,前面说过了。\n \n重启mysql，然后查看slave线程开启了没：\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87011.png)\n注意图中的红框， 两个都是Yes， 说明开启成功。如果其中一个是No， 那就说明不成功。需要查看mysql的错误日志。有时候密码填错了， 有时候防火墙的3306没有打开。ip地址不对，等等。 都会导致失败。\nmysql的错误日志一般在：**/usr/local/mysql/data/**;文件名应该是你的机器名， **hostname.err** 你换成你自己的。\n\n到这里主-从复制已经打开了。 我们先来实验一下。\n我们在A的数据库里面去 添加数据：\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87012.png)\n我在A的 hello数据库的test表中 连续插入了3条数据，  注意看他们的自增长id， 分别是1,11,21.  知道这是为什么吗。 前面已经说过了，不懂再回去看。\n \n我们去看一下B数据库有没有这三条数据：\n打开B的数据库：\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87013.png)\n\n**此时不要在B中修改数据。 我们接着配置从B到A的复制。  如果你只需要主从复制的话， 到这里就结束了。后面可以不看了。 所有A中的修改都能自动同步到B， 但是对B的修改却不能同步到A。 因为是单向的。 如果需要双向同步的话，需要再做一次从B到A的复制。**\n\n---\n### 主主复制\n基本跟上面一样：我们简单一点介绍：\n \n#### 在B中创建用户\n```\ngrant replication slave on *.* to 'repl_user'@'192.***.***.***' identified by 'hj34$%&mnkb';```\n#### 打开 /etc/my.cnf ， 开启B的binarylog\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87014.png)\n注意红框中所新添加的部分。\n\n#### 我们不需要导出B的初态了，因为它刚刚才从A导过来。  直接记住它的master日志状态\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87015.png)\n记住这两个数值，等会在A上面要用。\nB服务器就设置完了。\n \n#### 登录到A 服务器。 开启中继：\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87016.png)\n\n注意框中心添加的部分， 不解释了。\n\n#### 启动同步：\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87017.png)\n上面的ip地址是B的ip地址， 因为A把B当做master了。 不解释了。\n \n然后重启mysql服务。\n然后查看，slave状态是否正常：\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87018.png)\n图中出现了两个No。说明slave没有成功， 即，从B到A的同步没有成功。 我们去查看mysql错误日志，前面说过位置：**/usr/local/mysql/data/** 查看**hostname.err** 文件，打开看看\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87019.png)\n看图中的error信息。  说找不到中继日志文件。\n这是因为我们在配置A的中继文件时改了中继文件名，但是mysql没有同步。解决办法很简单。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87020.png)\n\n先停掉mysql服务。  找到这三个文件，把他们删掉。 **一定要先停掉mysql服务**。不然还是不成功。你需要重启一下机器了。 或者手动`kill mysqld`。\n改好之后， 启动mysql之后。 我们在来检查一下slave状态：\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87021.png)\n完成，现在就是**A<--->B**主主互备啦！\n\n---\n\n# 深入了解复制\n已经讨论了关于复制的一些基本东西，下面深入讨论一下复制。\n## 基于语句的复制(Statement-Based Replication)\nMySQL 5.0及之前的版本仅支持基于语句的复制（也叫做**逻辑复制**，logical replication），这在数据库并不常见。master记录下改变数据的查询，然后，slave从中继日志中读取事件，并执行它，这些SQL语句与master执行的语句一样。\n这种方式的优点就是实现简单。此外，基于语句的复制的二进制日志可以很好的进行压缩，而且日志的数据量也较小，占用带宽少——例如，一个更新GB的数据的查询仅需要几十个字节的二进制日志。而mysqlbinlog对于基于语句的日志处理十分方便。\n \n但是，基于语句的复制并不是像它看起来那么简单，因为一些查询语句依赖于master的特定条件，例如，master与slave可能有不同的时间。所以，MySQL的二进制日志的格式不仅仅是查询语句，还包括一些元数据信息，例如，当前的时间戳。即使如此，还是有一些语句，比如，CURRENT USER函数，不能正确的进行复制。此外，存储过程和触发器也是一个问题。\n\n另外一个问题就是基于语句的复制必须是串行化的。这要求大量特殊的代码，配置，例如InnoDB的next-key锁等。并不是所有的存储引擎都支持基于语句的复制。\n\n## 基于记录的复制(Row-Based Replication)\nMySQL增加基于记录的复制，在二进制日志中记录下实际数据的改变，这与其它一些DBMS的实现方式类似。这种方式有优点，也有缺点。优点就是可以对任何语句都能正确工作，一些语句的效率更高。主要的缺点就是二进制日志可能会很大，而且不直观，所以，你不能使用**mysqlbinlog**来查看二进制日志。\n\n对于一些语句，基于记录的复制能够更有效的工作，如：\n```mysql\nmysql> INSERT INTO summary_table(col1, col2, sum_col3)\n    -> SELECT col1, col2, sum(col3)\n    -> FROM enormous_table\n    -> GROUP BY col1, col2;```\n假设，只有三种唯一的col1和col2的组合，但是，该查询会扫描原表的许多行，却仅返回三条记录。此时，基于记录的复制效率更高。\n\n另一方面，下面的语句，基于语句的复制更有效：\n```\nmysql> UPDATE enormous_table SET col1 = 0;```\n此时使用基于记录的复制代价会非常高。由于两种方式不能对所有情况都能很好的处理，所以，MySQL 5.1支持在基于语句的复制和基于记录的复制之前动态交换。你可以通过设置session变量binlog_format来进行控制。\n\n## 复制相关的文件\n除了二进制日志和中继日志文件外，还有其它一些与复制相关的文件。如下\n\n* mysql-bin.index\n\n服务器一旦开启二进制日志，会产生一个与二日志文件同名，但是以.index结尾的文件。它用于跟踪磁盘上存在哪些二进制日志文件。MySQL用它来定位二进制日志文件。内容与下面类似\n```\n.\\mysql-01-bin.000003\n.\\mysql-01-bin.000004```\n\n* mysql-relay-bin.index\n该文件的功能与mysql-bin.index类似，但是它是针对中继日志，而不是二进制日志。内容与下面类似\n```\n.\\mysql-02-relay-bin.000017\n.\\mysql-02-relay-bin.000018```\n\n* master.info\n保存master的相关信息。不要删除它，否则，slave重启后不能连接master。内容与下面类似\n```\nmysql-01-bin.000010\n286\nlocalhost\nrepl\n1234\n3306```\n I/O线程更新master.info文件，内容与下面类似\n```\n.\\mysql-02-relay-bin.000019\n254\nmysql-01-bin.000010\n286\n0\n52813```\n\n* relay-log.info \n包含slave中当前二进制日志和中继日志的信息。\n \n \n \n## 发送复制事件到其它slave\n当设置**log_slave_updates**时，你可以让slave扮演其它slave的master。此时，slave把SQL线程执行的事件写进行自己的二进制日志(binary log)，然后，它的slave可以获取这些事件并执行它。如下：\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87022.JPG)\n\n## 复制过滤(Replication Filters)\n复制过滤可以让你只复制服务器中的一部分数据，有两种复制过滤：在master上过滤二进制日志中的事件；在slave上过滤中继日志中的事件。如下：\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87023.JPG)\n\n---\n# 复制的常用拓扑结构\n复制的体系结构有以下一些基本原则：\n(1)    每个slave只能有一个master；\n(2)    每个slave只能有一个唯一的服务器ID；\n(3)    每个master可以有很多slave；\n(4)    如果你设置log_slave_updates，slave可以是其它slave的master，从而扩散master的更新。\n \nMySQL不支持多主服务器复制(Multimaster Replication)——即一个slave可以有多个master。但是，通过一些简单的组合，我们却可以建立灵活而强大的复制体系结构。\n \n## 1.单一master和多slave\n由一个master和一个slave组成复制系统是最简单的情况。Slave之间并不相互通信，只能与master进行通信。\n在实际应用场景中，MySQL复制90%以上都是一个Master复制到一个或者多个Slave的架构模式，主要用于读压力比较大的应用的数据库端廉价扩展解决方案。因为只要Master和Slave的压力不是太大（尤其是Slave端压力）的话，异步复制的延时一般都很少很少。尤其是自从Slave端的复制方式改成两个线程处理之后，更是减小了Slave端的延时问题。而带来的效益是，对于数据实时性要求不是特别Critical的应用，只需要通过廉价的pcserver来扩展Slave的数量，将读压力分散到多台Slave的机器上面，即可通过分散单台数据库服务器的读压力来解决数据库端的读性能瓶颈，毕竟在大多数数据库应用系统中的读压力还是要比写压力大很多。这在很大程度上解决了目前很多中小型网站的数据库压力瓶颈问题，甚至有些大型网站也在使用类似方案解决数据库瓶颈。\n如图：\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87024.JPG)\n\n 如果写操作较少，而读操作很时，可以采取这种结构。你可以将读操作分布到其它的slave，从而减小master的压力。但是，当slave增加到一定数量时，slave对master的负载以及网络带宽都会成为一个严重的问题。\n这种结构虽然简单，但是，它却非常灵活，足够满足大多数应用需求。一些建议：\n* (1)不同的slave扮演不同的作用(例如使用不同的索引，或者不同的存储引擎)；\n* (2)用一个slave作为备用master，只进行复制；\n* (3)用一个远程的slave，用于灾难恢复；\n \n大家应该都比较清楚，从一个Master节点可以复制出多个Slave节点，可能有人会想，那一个Slave节点是否可以从多个Master节点上面进行复制呢？至少在目前来看，MySQL是做不到的，以后是否会支持就不清楚了。\nMySQL不支持一个Slave节点从多个Master节点来进行复制的架构，主要是为了避免冲突的问题，防止多个数据源之间的数据出现冲突，而造成最后数据的不一致性。不过听说已经有人开发了相关的patch，让MySQL支持一个Slave节点从多个Master结点作为数据源来进行复制，这也正是MySQL开源的性质所带来的好处。\n \n \n## 2.主动模式的Master-Master(Master-Master in Active-Active Mode)\nMaster-Master复制的两台服务器，既是master，又是另一台服务器的slave。这样，任何一方所做的变更，都会通过复制应用到另外一方的数据库中。\n可能有些人可能会担心，这样搭建复制环境之后，难道不会造成两台MySQL之间的循环复制么？实际上MySQL自己早就想到了这一点，所以在MySQL的BinaryLog中记录了当前MySQL的server-id，而且这个参数也是我们搭建MySQLReplication的时候必须明确指定，而且Master和Slave的**server-id**参数值比需要不一致才能使**MySQLReplication**搭建成功。一旦有了server-id的值之后，MySQL就很容易判断某个变更是从哪一个MySQLServer最初产生的，所以就很容易避免出现循环复制的情况。而且，如果我们不打开记录**Slave**的**BinaryLog**的选项（**\\--log-slave-update**）的时候，MySQL根本就不会记录复制过程中的变更到BinaryLog中，就更不用担心可能会出现循环复制的情形了。\n如图：\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87025.JPG)\n \n主动的Master-Master复制有一些特殊的用处。例如，地理上分布的两个部分都需要自己的可写的数据副本。这种结构最大的问题就是更新冲突。假设一个表只有一行(一列)的数据，其值为1，如果两个服务器分别同时执行如下语句：\n在第一个服务器上执行：`mysql> UPDATE tbl SET col=col + 1;`\n在第二个服务器上执行：`mysql> UPDATE tbl SET col=col * 2;`\n那么结果是多少呢？一台服务器是4，另一个服务器是3，但是，这并不会产生错误。\n实际上，MySQL并不支持其它一些DBMS支持的多主服务器复制(Multimaster Replication)，这是MySQL的复制功能很大的一个限制(多主服务器的难点在于解决更新冲突)，但是，如果你实在有这种需求，你可以采用MySQL Cluster，以及将Cluster和Replication结合起来，可以建立强大的高性能的数据库平台。但是，可以通过其它一些方式来模拟这种多主服务器的复制。\n \n## 3.主动-被动模式的Master-Master(Master-Master in Active-Passive Mode)\n这是master-master结构变化而来的，它避免了M-M的缺点，实际上，这是一种具有容错和高可用性的系统。它的不同点在于其中一个服务只能进行只读操作。如图：\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87026.JPG)\n \n \n## 4.级联复制架构 Master –Slaves - Slaves\n在有些应用场景中，可能读写压力差别比较大，读压力特别的大，一个Master可能需要上10台甚至更多的Slave才能够支撑注读的压力。这时候，Master就会比较吃力了，因为仅仅连上来的SlaveIO线程就比较多了，这样写的压力稍微大一点的时候，Master端因为复制就会消耗较多的资源，很容易造成复制的延时。\n遇到这种情况如何解决呢？这时候我们就可以利用MySQL可以在Slave端记录复制所产生变更的BinaryLog信息的功能，也就是打开**\\--log-slave-update**选项。然后，通过二级（或者是更多级别）复制来减少Master端因为复制所带来的压力。也就是说，我们首先通过少数几台MySQL从Master来进行复制，这几台机器我们姑且称之为第一级Slave集群，然后其他的Slave再从第一级Slave集群来进行复制。从第一级Slave进行复制的Slave，我称之为第二级Slave集群。如果有需要，我们可以继续往下增加更多层次的复制。这样，我们很容易就控制了每一台MySQL上面所附属Slave的数量。这种架构我称之为Master-Slaves-Slaves架构\n这种多层级联复制的架构，很容易就解决了Master端因为附属Slave太多而成为瓶颈的风险。下图展示了多层级联复制的Replication架构。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87027.jpg)\n当然，如果条件允许，我更倾向于建议大家通过拆分成多个Replication集群来解决\n上述瓶颈问题。毕竟Slave并没有减少写的量，所有Slave实际上仍然还是应用了所有的数据变更操作，没有减少任何写IO。相反，Slave越多，整个集群的写IO总量也就会越多，我们没有非常明显的感觉，仅仅只是因为分散到了多台机器上面，所以不是很容易表现出来。\n此外，增加复制的级联层次，同一个变更传到最底层的Slave所需要经过的MySQL也会更多，同样可能造成延时较长的风险。\n而如果我们通过分拆集群的方式来解决的话，可能就会要好很多了，当然，分拆集群也需要更复杂的技术和更复杂的应用系统架构。\n\n## 5.带从服务器的Master-Master结构(Master-Master with Slaves)\n这种结构的优点就是提供了冗余。在地理上分布的复制结构，它不存在单一节点故障问题，而且还可以将读密集型的请求放到slave上。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87028.JPG)\n级联复制在一定程度上面确实解决了Master因为所附属的Slave过多而成为瓶颈的问题，但是他并不能解决人工维护和出现异常需要切换后可能存在重新搭建Replication的问题。这样就很自然的引申出了DualMaster与级联复制结合的Replication架构，我称之为Master-Master-Slaves架构\n和Master-Slaves-Slaves架构相比，区别仅仅只是将第一级Slave集群换成了一台单独的Master，作为备用Master，然后再从这个备用的Master进行复制到一个Slave集群。\n\n这种DualMaster与级联复制结合的架构，**最大的好处就是既可以避免主Master的写入操作不会受到Slave集群的复制所带来的影响，同时主Master需要切换的时候也基本上不会出现重搭Replication的情况。但是，这个架构也有一个弊端，那就是备用的Master有可能成为瓶颈，因为如果后面的Slave集群比较大的话，备用Master可能会因为过多的SlaveIO线程请求而成为瓶颈。**当然，该备用Master不提供任何的读服务的时候，瓶颈出现的可能性并不是特别高，如果出现瓶颈，也可以在备用Master后面再次进行级联复制，架设多层Slave集群。当然，级联复制的级别越多，Slave集群可能出现的数据延时也会更为明显，所以考虑使用多层级联复制之前，也需要评估数据延时对应用系统的影响。\n\n---","slug":"数据库-2016-11-11-数据库主主互备（高可用）","published":1,"updated":"2016-11-13T03:36:30.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civi8ouis001c2c6nf1q8mjdj","content":"<p>本文是在<a href=\"http://blog.byneil.com/\" target=\"_blank\" rel=\"external\">Neil</a>的博客上看到的一篇博文，由于没有试验环境，没有经过测试，以后测试后会更新并删除本段文字，摘录分享，仅供参考。</p>\n<h1 id=\"mysql-主主互备\"><a href=\"#mysql-主主互备\" class=\"headerlink\" title=\"mysql 主主互备\"></a>mysql 主主互备</h1><p>双机热备的概念简单说一下，就是要保持两个数据库的状态自动同步。对任何一个数据库的操作都自动应用到另外一个数据库，始终保持两个数据库数据一致。 这样做的好处多。</p>\n<ul>\n<li>1.可以做灾备，其中一个坏了可以切换到另一个。 </li>\n<li>2.可以做负载均衡，可以将请求分摊到其中任何一台上，提高网站吞吐量。 </li>\n<li>3.对于异地热备，尤其适合灾备。</li>\n</ul>\n<p><code>mysql -v</code>,查看使用的是mysql 5.5.34，</p>\n<h2 id=\"mysql-备份工作原理\"><a href=\"#mysql-备份工作原理\" class=\"headerlink\" title=\"mysql 备份工作原理\"></a>mysql 备份工作原理</h2><p>简单的说就是把 一个服务器上执行过的sql语句在别的服务器上也重复执行一遍， 这样只要两个数据库的初态是一样的，那么它们就能一直同步。</p>\n<p>当然这种复制和重复都是mysql自动实现的，我们只需要配置即可。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87001.gif\" alt=\"\"><br>上图中有两个服务器， 演示了从一个主服务器（master） 把数据同步到从服务器（slave）的过程。<br>这是一个主-从复制的例子。 主-主互相复制只是把上面的例子反过来再做一遍。 所以我们以这个例子介绍原理。</p>\n<p>对于一个mysql服务器， 一般有两个线程来负责复制和被复制。当开启复制之后。</p>\n<ul>\n<li>1.作为主服务器Master，  会把自己的每一次改动都记录到 二进制日志 Binarylog 中。 （从服务器会负责来读取这个log， 然后在自己那里再执行一遍。）</li>\n<li>2.作为从服务器Slave， 会用master上的账号登陆到 master上， 读取master的Binarylog,  写入到自己的中继日志 Relaylog， 然后自己的sql线程会负责读取这个中继日志，并执行一遍。  到这里主服务器上的更改就同步到从服务器上了。</li>\n</ul>\n<p>在mysql上可以查看当前服务器的主，从状态。 其实就是当前服务器的 Binary（作为主服务器角色）状态和位置。 以及其RelayLog（作为从服务器）的复制进度。</p>\n<p>例如我们在主服务器上查看主状态：<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87002.png\" alt=\"\"><br><strong>第一行</strong>表明 当前正在记录的 binarylog文件名是： mysql-bin.000014.<br>我们可以在mysql数据目录下，找到这个文件：<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87003.png\" alt=\"\"></p>\n<p><strong>第二行</strong>， 107. 表示当前的文件偏移量， 就是写入在mysql-bin.000014 文件的记录位置。<br>这两点就构成了 主服务器的状态。  配置从服务器的时候，需要用到这两个值。 告诉从服务器从哪读取主服务器的数据。 （从服务器会登录之后，找到这个日志文件，并从这个偏移量之后开始复制。）</p>\n<p><strong>第三行，和第四行</strong>，表示需要记录的数据库和需要忽略的数据库。 只有需要记录的数据库，其变化才会被写入到mysql-bin.000014日志文件中。  后面会再次介绍这两个参数。</p>\n<p>我们还可以在从服务器上，查看从服务器的复制状态：<code>mysql&gt; show slave status\\G</code><br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87004.png\" alt=\"\"><br>我们还是来重点解释途中的红圈的部分：</p>\n<ol>\n<li>Master_host 指的是 主服务器的地址。 </li>\n<li>Master_user 指的是主服务器上用来复制的用户。  从服务器会用此账号来登录主服务。进行复制。</li>\n<li>Master_log_file 就是前面提到的， 主服务器上的日志文件名.</li>\n<li>Read_Master_log_pos 就是前面提到的主服务器的日志记录位置， 从服务器根据这两个条件来选择复制的文件和位置。</li>\n<li>Slave_IO_Running:  指的就是从服务器上负责读取主服务器的线程工作状态。 从服务器用这个专门的线程链接到主服务器上，并把日志拷贝回来。</li>\n<li>Slave_SQL_Running: 指的就是专门执行sql的线程。 它负责把复制回来的Relaylog执行到自己的数据库中。 这两个参数必须都为Yes 才表明复制在正常工作。</li>\n</ol>\n<p>其他的参数之后再介绍。</p>\n<hr>\n<h2 id=\"mysql-双机热备实战\"><a href=\"#mysql-双机热备实战\" class=\"headerlink\" title=\"mysql 双机热备实战\"></a>mysql 双机热备实战</h2><h3 id=\"主从复制\"><a href=\"#主从复制\" class=\"headerlink\" title=\"主从复制\"></a>主从复制</h3><p>了解了上面的原理之后， 我们来实战。 这里有两个重点， 要想同步数据库状态， 需要相同的初态，然后配置同步才有意义。 当然你可以不要初态，这是你的自由。 我们这里从头开始配置一遍。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87005.png\" alt=\"\"></p>\n<p>我们先以A服务器为起点，  配置它的数据库同步到B。  这就是主-从复制了。 之后再反过来做一次，就可以互相备份了。</p>\n<h4 id=\"在A上面创建专门用于备份的用户\"><a href=\"#在A上面创建专门用于备份的用户\" class=\"headerlink\" title=\"在A上面创建专门用于备份的用户\"></a>在A上面创建专门用于备份的用户</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">grant</span> <span class=\"keyword\">replication</span> <span class=\"keyword\">slave</span> <span class=\"keyword\">on</span> *.* <span class=\"keyword\">to</span> <span class=\"string\">'repl_userl'</span>@<span class=\"string\">''</span></div><div class=\"line\"><span class=\"keyword\">grant</span> <span class=\"keyword\">replication</span> <span class=\"keyword\">slave</span> <span class=\"keyword\">on</span> *.* <span class=\"keyword\">to</span> <span class=\"string\">'repl_user'</span>@<span class=\"string\">'192.***.***.***'</span> <span class=\"keyword\">identified</span> <span class=\"keyword\">by</span> <span class=\"string\">'hj34$%&amp;mnkb'</span>;</div></pre></td></tr></table></figure>\n<p>上面把ip地址换成B机器的ip地址。 只允许B登录。安全。<br>用户名为： repl_user<br>密码为： hj34$<strong><em>**</em></strong>nkb<br>这个等会在B上面要用。</p>\n<h4 id=\"开启主服务器的-binarylog。\"><a href=\"#开启主服务器的-binarylog。\" class=\"headerlink\" title=\"开启主服务器的 binarylog。\"></a>开启主服务器的 binarylog。</h4><p>很多服务器是默认开启的，我们这里检查一下：<br>打开 /etc/my.cnf<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87006.png\" alt=\"\"><br>解释一下红框中的配置：<br>前面三行， 你可能已经有了。<br><strong>binlog-do-db</strong> 用来表示，只把哪些数据库的改动记录到binary日志中。 可以写上关注hello数据库。 但是我把它注释掉了。 只是展示一下。 可以写多行，表示关注多个数据库。<br><strong>binlog-ignore-db</strong>表示，需要忽略哪些数据库。我这里忽略了其他的4个数据库。</p>\n<p><strong>最后两行</strong>用于在 双主（多主循环）互相备份。 因为每台数据库服务器都可能在同一个表中插入数据，如果表有一个自动增长的主键，那么就会在多服务器上出现主键冲突。  解决这个问题的办法就是让每个数据库的自增主键不连续。  上图说是， 我假设需要将来可能需要10台服务器做备份， 所以<strong>auto-increment-increment 设为10</strong>。   而 <strong>auto-increment-offset=1 </strong>表示这台服务器的序号。 从1开始， 不超过auto-increment-increment。<br>这样做之后， 我在这台服务器上插入的第一个id就是 1， 第二行的id就是 11了， 而不是2。<br>（同理，在第二台服务器上插入的第一个id就是2， 第二行就是12， 这个后面再介绍） 这样就不会出现主键冲突了。 后面我们会演示这个id的效果。</p>\n<h4 id=\"获取主服务器状态，-和同步初态。\"><a href=\"#获取主服务器状态，-和同步初态。\" class=\"headerlink\" title=\"获取主服务器状态， 和同步初态。\"></a>获取主服务器状态， 和同步初态。</h4><p>假设我现在有这些数据库在A上面。<br>如果你是全新安装的， 那么不需要同步初态，直接跳过这一步，到后面直接查看主服务器状态。<br>这里我们假设有一个 hello 数据库作为初态。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87008.png\" alt=\"\"></p>\n<p>先锁定 hello数据库：<code>FLUSH TABLES WITH READ LOCK;</code></p>\n<p>然后导出数据：<br>我这里只需要导出hello数据库， 如果你有多个数据库作为初态的话， 需要导出所有这些数据库：<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87007.png\" alt=\"\"></p>\n<p>然后查看A服务器的binary日志位置：<br>记住这个文件名和 位置， 等会在从服务器上会用到。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87009.png\" alt=\"\"></p>\n<p>主服务器已经做完了， 可以解除锁定了：<code>UNLOCK TABLES;</code></p>\n<h4 id=\"设置从服务器-B-需要复制的数据库\"><a href=\"#设置从服务器-B-需要复制的数据库\" class=\"headerlink\" title=\"设置从服务器 B 需要复制的数据库\"></a>设置从服务器 B 需要复制的数据库</h4><p>打开从服务器 B 的 /etc/my.cnf 文件：<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87010.png\" alt=\"\"></p>\n<p>解释一下上面的内容:</p>\n<ul>\n<li><strong>server-id</strong> 必须保证每个服务器不一样。 这可能和循环同步有关。 防止进入死循环。</li>\n<li><strong>replicate-do-db</strong> 可以指定需要复制的数据库， 我这里注掉了。 演示一下。</li>\n<li><strong>replicate-ignore-db</strong> 复制时需要排除的数据库， 我使用了，这个。 除开系统的几个数据库之外，所有的数据库都复制。</li>\n<li><strong>relay_log</strong> 中继日志的名字。 前面说到了， 复制线程需要先把远程的变化拷贝到这个中继日志中， 在执行。</li>\n<li><strong>log-slave-updates </strong>意思是，中继日志执行之后，这些变化是否需要计入自己的binarylog。 当你的B服务器需要作为另外一个服务器的主服务器的时候需要打开。  就是双主互相备份，或者多主循环备份。 我们这里需要， 所以打开。</li>\n</ul>\n<p>保存， 重启mysql。</p>\n<h4 id=\"导入初态，-开始同步。\"><a href=\"#导入初态，-开始同步。\" class=\"headerlink\" title=\"导入初态， 开始同步。\"></a>导入初态， 开始同步。</h4><p>把刚才从A服务器上导出的 hello.sql 导入到 B的hello数据库中， 如果B现在没有hello数据库，请先创建一个， 然后再导入：<br>创建数据库：<br>mysql&gt; <code>create database hello default charset utf8;</code><br>把hello.sql 上传到B上， 然后导入：<code>mysql -uroot -p hello &lt; hello.sql</code><br>如果你刚才导出了多个数据库， 需要把他们都一一上传导入。</p>\n<p>开启同步, 在B服务器上执行：<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">CHANGE</span> <span class=\"keyword\">MASTER</span> <span class=\"keyword\">TO</span> </div><div class=\"line\">      MASTER_HOST=<span class=\"string\">'192.***.***.***'</span>, </div><div class=\"line\">      MASTER_USER=<span class=\"string\">'repl_user'</span>, </div><div class=\"line\">      MASTER_PASSWORD=<span class=\"string\">'hj3****'</span>, </div><div class=\"line\">      MASTER_LOG_FILE=<span class=\"string\">'mysql-bin.000004'</span>, </div><div class=\"line\">      MASTER_LOG_POS=<span class=\"number\">7145</span>;</div></pre></td></tr></table></figure></p>\n<p>上面几个参数就不解释了,前面说过了。</p>\n<p>重启mysql，然后查看slave线程开启了没：<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87011.png\" alt=\"\"><br>注意图中的红框， 两个都是Yes， 说明开启成功。如果其中一个是No， 那就说明不成功。需要查看mysql的错误日志。有时候密码填错了， 有时候防火墙的3306没有打开。ip地址不对，等等。 都会导致失败。<br>mysql的错误日志一般在：<strong>/usr/local/mysql/data/</strong>;文件名应该是你的机器名， <strong>hostname.err</strong> 你换成你自己的。</p>\n<p>到这里主-从复制已经打开了。 我们先来实验一下。<br>我们在A的数据库里面去 添加数据：<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87012.png\" alt=\"\"><br>我在A的 hello数据库的test表中 连续插入了3条数据，  注意看他们的自增长id， 分别是1,11,21.  知道这是为什么吗。 前面已经说过了，不懂再回去看。</p>\n<p>我们去看一下B数据库有没有这三条数据：<br>打开B的数据库：<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87013.png\" alt=\"\"></p>\n<p><strong>此时不要在B中修改数据。 我们接着配置从B到A的复制。  如果你只需要主从复制的话， 到这里就结束了。后面可以不看了。 所有A中的修改都能自动同步到B， 但是对B的修改却不能同步到A。 因为是单向的。 如果需要双向同步的话，需要再做一次从B到A的复制。</strong></p>\n<hr>\n<h3 id=\"主主复制\"><a href=\"#主主复制\" class=\"headerlink\" title=\"主主复制\"></a>主主复制</h3><p>基本跟上面一样：我们简单一点介绍：</p>\n<h4 id=\"在B中创建用户\"><a href=\"#在B中创建用户\" class=\"headerlink\" title=\"在B中创建用户\"></a>在B中创建用户</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">grant</span> <span class=\"keyword\">replication</span> <span class=\"keyword\">slave</span> <span class=\"keyword\">on</span> *.* <span class=\"keyword\">to</span> <span class=\"string\">'repl_user'</span>@<span class=\"string\">'192.***.***.***'</span> <span class=\"keyword\">identified</span> <span class=\"keyword\">by</span> <span class=\"string\">'hj34$%&amp;mnkb'</span>;</div></pre></td></tr></table></figure>\n<h4 id=\"打开-etc-my-cnf-，-开启B的binarylog\"><a href=\"#打开-etc-my-cnf-，-开启B的binarylog\" class=\"headerlink\" title=\"打开 /etc/my.cnf ， 开启B的binarylog\"></a>打开 /etc/my.cnf ， 开启B的binarylog</h4><p><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87014.png\" alt=\"\"><br>注意红框中所新添加的部分。</p>\n<h4 id=\"我们不需要导出B的初态了，因为它刚刚才从A导过来。-直接记住它的master日志状态\"><a href=\"#我们不需要导出B的初态了，因为它刚刚才从A导过来。-直接记住它的master日志状态\" class=\"headerlink\" title=\"我们不需要导出B的初态了，因为它刚刚才从A导过来。  直接记住它的master日志状态\"></a>我们不需要导出B的初态了，因为它刚刚才从A导过来。  直接记住它的master日志状态</h4><p><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87015.png\" alt=\"\"><br>记住这两个数值，等会在A上面要用。<br>B服务器就设置完了。</p>\n<h4 id=\"登录到A-服务器。-开启中继：\"><a href=\"#登录到A-服务器。-开启中继：\" class=\"headerlink\" title=\"登录到A 服务器。 开启中继：\"></a>登录到A 服务器。 开启中继：</h4><p><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87016.png\" alt=\"\"></p>\n<p>注意框中心添加的部分， 不解释了。</p>\n<h4 id=\"启动同步：\"><a href=\"#启动同步：\" class=\"headerlink\" title=\"启动同步：\"></a>启动同步：</h4><p><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87017.png\" alt=\"\"><br>上面的ip地址是B的ip地址， 因为A把B当做master了。 不解释了。</p>\n<p>然后重启mysql服务。<br>然后查看，slave状态是否正常：<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87018.png\" alt=\"\"><br>图中出现了两个No。说明slave没有成功， 即，从B到A的同步没有成功。 我们去查看mysql错误日志，前面说过位置：<strong>/usr/local/mysql/data/</strong> 查看<strong>hostname.err</strong> 文件，打开看看<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87019.png\" alt=\"\"><br>看图中的error信息。  说找不到中继日志文件。<br>这是因为我们在配置A的中继文件时改了中继文件名，但是mysql没有同步。解决办法很简单。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87020.png\" alt=\"\"></p>\n<p>先停掉mysql服务。  找到这三个文件，把他们删掉。 <strong>一定要先停掉mysql服务</strong>。不然还是不成功。你需要重启一下机器了。 或者手动<code>kill mysqld</code>。<br>改好之后， 启动mysql之后。 我们在来检查一下slave状态：<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87021.png\" alt=\"\"><br>完成，现在就是<strong>A&lt;—&gt;B</strong>主主互备啦！</p>\n<hr>\n<h1 id=\"深入了解复制\"><a href=\"#深入了解复制\" class=\"headerlink\" title=\"深入了解复制\"></a>深入了解复制</h1><p>已经讨论了关于复制的一些基本东西，下面深入讨论一下复制。</p>\n<h2 id=\"基于语句的复制-Statement-Based-Replication\"><a href=\"#基于语句的复制-Statement-Based-Replication\" class=\"headerlink\" title=\"基于语句的复制(Statement-Based Replication)\"></a>基于语句的复制(Statement-Based Replication)</h2><p>MySQL 5.0及之前的版本仅支持基于语句的复制（也叫做<strong>逻辑复制</strong>，logical replication），这在数据库并不常见。master记录下改变数据的查询，然后，slave从中继日志中读取事件，并执行它，这些SQL语句与master执行的语句一样。<br>这种方式的优点就是实现简单。此外，基于语句的复制的二进制日志可以很好的进行压缩，而且日志的数据量也较小，占用带宽少——例如，一个更新GB的数据的查询仅需要几十个字节的二进制日志。而mysqlbinlog对于基于语句的日志处理十分方便。</p>\n<p>但是，基于语句的复制并不是像它看起来那么简单，因为一些查询语句依赖于master的特定条件，例如，master与slave可能有不同的时间。所以，MySQL的二进制日志的格式不仅仅是查询语句，还包括一些元数据信息，例如，当前的时间戳。即使如此，还是有一些语句，比如，CURRENT USER函数，不能正确的进行复制。此外，存储过程和触发器也是一个问题。</p>\n<p>另外一个问题就是基于语句的复制必须是串行化的。这要求大量特殊的代码，配置，例如InnoDB的next-key锁等。并不是所有的存储引擎都支持基于语句的复制。</p>\n<h2 id=\"基于记录的复制-Row-Based-Replication\"><a href=\"#基于记录的复制-Row-Based-Replication\" class=\"headerlink\" title=\"基于记录的复制(Row-Based Replication)\"></a>基于记录的复制(Row-Based Replication)</h2><p>MySQL增加基于记录的复制，在二进制日志中记录下实际数据的改变，这与其它一些DBMS的实现方式类似。这种方式有优点，也有缺点。优点就是可以对任何语句都能正确工作，一些语句的效率更高。主要的缺点就是二进制日志可能会很大，而且不直观，所以，你不能使用<strong>mysqlbinlog</strong>来查看二进制日志。</p>\n<p>对于一些语句，基于记录的复制能够更有效的工作，如：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">mysql&gt; INSERT INTO summary_table(col1, col2, sum_col3)</div><div class=\"line\">    -&gt; SELECT col1, col2, sum(col3)</div><div class=\"line\">    -&gt; FROM enormous_table</div><div class=\"line\">    -&gt; GROUP BY col1, col2;</div></pre></td></tr></table></figure></p>\n<p>假设，只有三种唯一的col1和col2的组合，但是，该查询会扫描原表的许多行，却仅返回三条记录。此时，基于记录的复制效率更高。</p>\n<p>另一方面，下面的语句，基于语句的复制更有效：<br><figure class=\"highlight gams\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">mysql&gt; UPDATE enormous_table <span class=\"keyword\">SET</span> col1 <span class=\"comment\">= 0</span>;</div></pre></td></tr></table></figure></p>\n<p>此时使用基于记录的复制代价会非常高。由于两种方式不能对所有情况都能很好的处理，所以，MySQL 5.1支持在基于语句的复制和基于记录的复制之前动态交换。你可以通过设置session变量binlog_format来进行控制。</p>\n<h2 id=\"复制相关的文件\"><a href=\"#复制相关的文件\" class=\"headerlink\" title=\"复制相关的文件\"></a>复制相关的文件</h2><p>除了二进制日志和中继日志文件外，还有其它一些与复制相关的文件。如下</p>\n<ul>\n<li>mysql-bin.index</li>\n</ul>\n<p>服务器一旦开启二进制日志，会产生一个与二日志文件同名，但是以.index结尾的文件。它用于跟踪磁盘上存在哪些二进制日志文件。MySQL用它来定位二进制日志文件。内容与下面类似<br><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">.\\mysql<span class=\"number\">-01</span>-bin<span class=\"number\">.000003</span></div><div class=\"line\">.\\mysql<span class=\"number\">-01</span>-bin<span class=\"number\">.000004</span></div></pre></td></tr></table></figure></p>\n<ul>\n<li><p>mysql-relay-bin.index<br>该文件的功能与mysql-bin.index类似，但是它是针对中继日志，而不是二进制日志。内容与下面类似</p>\n<figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">.\\mysql<span class=\"number\">-02</span>-relay-bin<span class=\"number\">.000017</span></div><div class=\"line\">.\\mysql<span class=\"number\">-02</span>-relay-bin<span class=\"number\">.000018</span></div></pre></td></tr></table></figure>\n</li>\n<li><p>master.info<br>保存master的相关信息。不要删除它，否则，slave重启后不能连接master。内容与下面类似</p>\n<figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">mysql<span class=\"number\">-01</span>-bin<span class=\"number\">.000010</span></div><div class=\"line\"><span class=\"number\">286</span></div><div class=\"line\">localhost</div><div class=\"line\">repl</div><div class=\"line\"><span class=\"number\">1234</span></div><div class=\"line\"><span class=\"number\">3306</span></div></pre></td></tr></table></figure>\n<p>I/O线程更新master.info文件，内容与下面类似</p>\n<figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">.\\mysql<span class=\"number\">-02</span>-relay-bin<span class=\"number\">.000019</span></div><div class=\"line\"><span class=\"number\">254</span></div><div class=\"line\">mysql<span class=\"number\">-01</span>-bin<span class=\"number\">.000010</span></div><div class=\"line\"><span class=\"number\">286</span></div><div class=\"line\"><span class=\"number\">0</span></div><div class=\"line\"><span class=\"number\">52813</span></div></pre></td></tr></table></figure>\n</li>\n<li><p>relay-log.info<br>包含slave中当前二进制日志和中继日志的信息。</p>\n</li>\n</ul>\n<h2 id=\"发送复制事件到其它slave\"><a href=\"#发送复制事件到其它slave\" class=\"headerlink\" title=\"发送复制事件到其它slave\"></a>发送复制事件到其它slave</h2><p>当设置<strong>log_slave_updates</strong>时，你可以让slave扮演其它slave的master。此时，slave把SQL线程执行的事件写进行自己的二进制日志(binary log)，然后，它的slave可以获取这些事件并执行它。如下：<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87022.JPG\" alt=\"\"></p>\n<h2 id=\"复制过滤-Replication-Filters\"><a href=\"#复制过滤-Replication-Filters\" class=\"headerlink\" title=\"复制过滤(Replication Filters)\"></a>复制过滤(Replication Filters)</h2><p>复制过滤可以让你只复制服务器中的一部分数据，有两种复制过滤：在master上过滤二进制日志中的事件；在slave上过滤中继日志中的事件。如下：<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87023.JPG\" alt=\"\"></p>\n<hr>\n<h1 id=\"复制的常用拓扑结构\"><a href=\"#复制的常用拓扑结构\" class=\"headerlink\" title=\"复制的常用拓扑结构\"></a>复制的常用拓扑结构</h1><p>复制的体系结构有以下一些基本原则：<br>(1)    每个slave只能有一个master；<br>(2)    每个slave只能有一个唯一的服务器ID；<br>(3)    每个master可以有很多slave；<br>(4)    如果你设置log_slave_updates，slave可以是其它slave的master，从而扩散master的更新。</p>\n<p>MySQL不支持多主服务器复制(Multimaster Replication)——即一个slave可以有多个master。但是，通过一些简单的组合，我们却可以建立灵活而强大的复制体系结构。</p>\n<h2 id=\"1-单一master和多slave\"><a href=\"#1-单一master和多slave\" class=\"headerlink\" title=\"1.单一master和多slave\"></a>1.单一master和多slave</h2><p>由一个master和一个slave组成复制系统是最简单的情况。Slave之间并不相互通信，只能与master进行通信。<br>在实际应用场景中，MySQL复制90%以上都是一个Master复制到一个或者多个Slave的架构模式，主要用于读压力比较大的应用的数据库端廉价扩展解决方案。因为只要Master和Slave的压力不是太大（尤其是Slave端压力）的话，异步复制的延时一般都很少很少。尤其是自从Slave端的复制方式改成两个线程处理之后，更是减小了Slave端的延时问题。而带来的效益是，对于数据实时性要求不是特别Critical的应用，只需要通过廉价的pcserver来扩展Slave的数量，将读压力分散到多台Slave的机器上面，即可通过分散单台数据库服务器的读压力来解决数据库端的读性能瓶颈，毕竟在大多数数据库应用系统中的读压力还是要比写压力大很多。这在很大程度上解决了目前很多中小型网站的数据库压力瓶颈问题，甚至有些大型网站也在使用类似方案解决数据库瓶颈。<br>如图：<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87024.JPG\" alt=\"\"></p>\n<p> 如果写操作较少，而读操作很时，可以采取这种结构。你可以将读操作分布到其它的slave，从而减小master的压力。但是，当slave增加到一定数量时，slave对master的负载以及网络带宽都会成为一个严重的问题。<br>这种结构虽然简单，但是，它却非常灵活，足够满足大多数应用需求。一些建议：</p>\n<ul>\n<li>(1)不同的slave扮演不同的作用(例如使用不同的索引，或者不同的存储引擎)；</li>\n<li>(2)用一个slave作为备用master，只进行复制；</li>\n<li>(3)用一个远程的slave，用于灾难恢复；</li>\n</ul>\n<p>大家应该都比较清楚，从一个Master节点可以复制出多个Slave节点，可能有人会想，那一个Slave节点是否可以从多个Master节点上面进行复制呢？至少在目前来看，MySQL是做不到的，以后是否会支持就不清楚了。<br>MySQL不支持一个Slave节点从多个Master节点来进行复制的架构，主要是为了避免冲突的问题，防止多个数据源之间的数据出现冲突，而造成最后数据的不一致性。不过听说已经有人开发了相关的patch，让MySQL支持一个Slave节点从多个Master结点作为数据源来进行复制，这也正是MySQL开源的性质所带来的好处。</p>\n<h2 id=\"2-主动模式的Master-Master-Master-Master-in-Active-Active-Mode\"><a href=\"#2-主动模式的Master-Master-Master-Master-in-Active-Active-Mode\" class=\"headerlink\" title=\"2.主动模式的Master-Master(Master-Master in Active-Active Mode)\"></a>2.主动模式的Master-Master(Master-Master in Active-Active Mode)</h2><p>Master-Master复制的两台服务器，既是master，又是另一台服务器的slave。这样，任何一方所做的变更，都会通过复制应用到另外一方的数据库中。<br>可能有些人可能会担心，这样搭建复制环境之后，难道不会造成两台MySQL之间的循环复制么？实际上MySQL自己早就想到了这一点，所以在MySQL的BinaryLog中记录了当前MySQL的server-id，而且这个参数也是我们搭建MySQLReplication的时候必须明确指定，而且Master和Slave的<strong>server-id</strong>参数值比需要不一致才能使<strong>MySQLReplication</strong>搭建成功。一旦有了server-id的值之后，MySQL就很容易判断某个变更是从哪一个MySQLServer最初产生的，所以就很容易避免出现循环复制的情况。而且，如果我们不打开记录<strong>Slave</strong>的<strong>BinaryLog</strong>的选项（<strong>--log-slave-update</strong>）的时候，MySQL根本就不会记录复制过程中的变更到BinaryLog中，就更不用担心可能会出现循环复制的情形了。<br>如图：<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87025.JPG\" alt=\"\"></p>\n<p>主动的Master-Master复制有一些特殊的用处。例如，地理上分布的两个部分都需要自己的可写的数据副本。这种结构最大的问题就是更新冲突。假设一个表只有一行(一列)的数据，其值为1，如果两个服务器分别同时执行如下语句：<br>在第一个服务器上执行：<code>mysql&gt; UPDATE tbl SET col=col + 1;</code><br>在第二个服务器上执行：<code>mysql&gt; UPDATE tbl SET col=col * 2;</code><br>那么结果是多少呢？一台服务器是4，另一个服务器是3，但是，这并不会产生错误。<br>实际上，MySQL并不支持其它一些DBMS支持的多主服务器复制(Multimaster Replication)，这是MySQL的复制功能很大的一个限制(多主服务器的难点在于解决更新冲突)，但是，如果你实在有这种需求，你可以采用MySQL Cluster，以及将Cluster和Replication结合起来，可以建立强大的高性能的数据库平台。但是，可以通过其它一些方式来模拟这种多主服务器的复制。</p>\n<h2 id=\"3-主动-被动模式的Master-Master-Master-Master-in-Active-Passive-Mode\"><a href=\"#3-主动-被动模式的Master-Master-Master-Master-in-Active-Passive-Mode\" class=\"headerlink\" title=\"3.主动-被动模式的Master-Master(Master-Master in Active-Passive Mode)\"></a>3.主动-被动模式的Master-Master(Master-Master in Active-Passive Mode)</h2><p>这是master-master结构变化而来的，它避免了M-M的缺点，实际上，这是一种具有容错和高可用性的系统。它的不同点在于其中一个服务只能进行只读操作。如图：<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87026.JPG\" alt=\"\"></p>\n<h2 id=\"4-级联复制架构-Master-–Slaves-Slaves\"><a href=\"#4-级联复制架构-Master-–Slaves-Slaves\" class=\"headerlink\" title=\"4.级联复制架构 Master –Slaves - Slaves\"></a>4.级联复制架构 Master –Slaves - Slaves</h2><p>在有些应用场景中，可能读写压力差别比较大，读压力特别的大，一个Master可能需要上10台甚至更多的Slave才能够支撑注读的压力。这时候，Master就会比较吃力了，因为仅仅连上来的SlaveIO线程就比较多了，这样写的压力稍微大一点的时候，Master端因为复制就会消耗较多的资源，很容易造成复制的延时。<br>遇到这种情况如何解决呢？这时候我们就可以利用MySQL可以在Slave端记录复制所产生变更的BinaryLog信息的功能，也就是打开<strong>--log-slave-update</strong>选项。然后，通过二级（或者是更多级别）复制来减少Master端因为复制所带来的压力。也就是说，我们首先通过少数几台MySQL从Master来进行复制，这几台机器我们姑且称之为第一级Slave集群，然后其他的Slave再从第一级Slave集群来进行复制。从第一级Slave进行复制的Slave，我称之为第二级Slave集群。如果有需要，我们可以继续往下增加更多层次的复制。这样，我们很容易就控制了每一台MySQL上面所附属Slave的数量。这种架构我称之为Master-Slaves-Slaves架构<br>这种多层级联复制的架构，很容易就解决了Master端因为附属Slave太多而成为瓶颈的风险。下图展示了多层级联复制的Replication架构。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87027.jpg\" alt=\"\"><br>当然，如果条件允许，我更倾向于建议大家通过拆分成多个Replication集群来解决<br>上述瓶颈问题。毕竟Slave并没有减少写的量，所有Slave实际上仍然还是应用了所有的数据变更操作，没有减少任何写IO。相反，Slave越多，整个集群的写IO总量也就会越多，我们没有非常明显的感觉，仅仅只是因为分散到了多台机器上面，所以不是很容易表现出来。<br>此外，增加复制的级联层次，同一个变更传到最底层的Slave所需要经过的MySQL也会更多，同样可能造成延时较长的风险。<br>而如果我们通过分拆集群的方式来解决的话，可能就会要好很多了，当然，分拆集群也需要更复杂的技术和更复杂的应用系统架构。</p>\n<h2 id=\"5-带从服务器的Master-Master结构-Master-Master-with-Slaves\"><a href=\"#5-带从服务器的Master-Master结构-Master-Master-with-Slaves\" class=\"headerlink\" title=\"5.带从服务器的Master-Master结构(Master-Master with Slaves)\"></a>5.带从服务器的Master-Master结构(Master-Master with Slaves)</h2><p>这种结构的优点就是提供了冗余。在地理上分布的复制结构，它不存在单一节点故障问题，而且还可以将读密集型的请求放到slave上。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87028.JPG\" alt=\"\"><br>级联复制在一定程度上面确实解决了Master因为所附属的Slave过多而成为瓶颈的问题，但是他并不能解决人工维护和出现异常需要切换后可能存在重新搭建Replication的问题。这样就很自然的引申出了DualMaster与级联复制结合的Replication架构，我称之为Master-Master-Slaves架构<br>和Master-Slaves-Slaves架构相比，区别仅仅只是将第一级Slave集群换成了一台单独的Master，作为备用Master，然后再从这个备用的Master进行复制到一个Slave集群。</p>\n<p>这种DualMaster与级联复制结合的架构，<strong>最大的好处就是既可以避免主Master的写入操作不会受到Slave集群的复制所带来的影响，同时主Master需要切换的时候也基本上不会出现重搭Replication的情况。但是，这个架构也有一个弊端，那就是备用的Master有可能成为瓶颈，因为如果后面的Slave集群比较大的话，备用Master可能会因为过多的SlaveIO线程请求而成为瓶颈。</strong>当然，该备用Master不提供任何的读服务的时候，瓶颈出现的可能性并不是特别高，如果出现瓶颈，也可以在备用Master后面再次进行级联复制，架设多层Slave集群。当然，级联复制的级别越多，Slave集群可能出现的数据延时也会更为明显，所以考虑使用多层级联复制之前，也需要评估数据延时对应用系统的影响。</p>\n<hr>\n","excerpt":"","more":"<p>本文是在<a href=\"http://blog.byneil.com/\">Neil</a>的博客上看到的一篇博文，由于没有试验环境，没有经过测试，以后测试后会更新并删除本段文字，摘录分享，仅供参考。</p>\n<h1 id=\"mysql-主主互备\"><a href=\"#mysql-主主互备\" class=\"headerlink\" title=\"mysql 主主互备\"></a>mysql 主主互备</h1><p>双机热备的概念简单说一下，就是要保持两个数据库的状态自动同步。对任何一个数据库的操作都自动应用到另外一个数据库，始终保持两个数据库数据一致。 这样做的好处多。</p>\n<ul>\n<li>1.可以做灾备，其中一个坏了可以切换到另一个。 </li>\n<li>2.可以做负载均衡，可以将请求分摊到其中任何一台上，提高网站吞吐量。 </li>\n<li>3.对于异地热备，尤其适合灾备。</li>\n</ul>\n<p><code>mysql -v</code>,查看使用的是mysql 5.5.34，</p>\n<h2 id=\"mysql-备份工作原理\"><a href=\"#mysql-备份工作原理\" class=\"headerlink\" title=\"mysql 备份工作原理\"></a>mysql 备份工作原理</h2><p>简单的说就是把 一个服务器上执行过的sql语句在别的服务器上也重复执行一遍， 这样只要两个数据库的初态是一样的，那么它们就能一直同步。</p>\n<p>当然这种复制和重复都是mysql自动实现的，我们只需要配置即可。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87001.gif\" alt=\"\"><br>上图中有两个服务器， 演示了从一个主服务器（master） 把数据同步到从服务器（slave）的过程。<br>这是一个主-从复制的例子。 主-主互相复制只是把上面的例子反过来再做一遍。 所以我们以这个例子介绍原理。</p>\n<p>对于一个mysql服务器， 一般有两个线程来负责复制和被复制。当开启复制之后。</p>\n<ul>\n<li>1.作为主服务器Master，  会把自己的每一次改动都记录到 二进制日志 Binarylog 中。 （从服务器会负责来读取这个log， 然后在自己那里再执行一遍。）</li>\n<li>2.作为从服务器Slave， 会用master上的账号登陆到 master上， 读取master的Binarylog,  写入到自己的中继日志 Relaylog， 然后自己的sql线程会负责读取这个中继日志，并执行一遍。  到这里主服务器上的更改就同步到从服务器上了。</li>\n</ul>\n<p>在mysql上可以查看当前服务器的主，从状态。 其实就是当前服务器的 Binary（作为主服务器角色）状态和位置。 以及其RelayLog（作为从服务器）的复制进度。</p>\n<p>例如我们在主服务器上查看主状态：<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87002.png\" alt=\"\"><br><strong>第一行</strong>表明 当前正在记录的 binarylog文件名是： mysql-bin.000014.<br>我们可以在mysql数据目录下，找到这个文件：<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87003.png\" alt=\"\"></p>\n<p><strong>第二行</strong>， 107. 表示当前的文件偏移量， 就是写入在mysql-bin.000014 文件的记录位置。<br>这两点就构成了 主服务器的状态。  配置从服务器的时候，需要用到这两个值。 告诉从服务器从哪读取主服务器的数据。 （从服务器会登录之后，找到这个日志文件，并从这个偏移量之后开始复制。）</p>\n<p><strong>第三行，和第四行</strong>，表示需要记录的数据库和需要忽略的数据库。 只有需要记录的数据库，其变化才会被写入到mysql-bin.000014日志文件中。  后面会再次介绍这两个参数。</p>\n<p>我们还可以在从服务器上，查看从服务器的复制状态：<code>mysql&gt; show slave status\\G</code><br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87004.png\" alt=\"\"><br>我们还是来重点解释途中的红圈的部分：</p>\n<ol>\n<li>Master_host 指的是 主服务器的地址。 </li>\n<li>Master_user 指的是主服务器上用来复制的用户。  从服务器会用此账号来登录主服务。进行复制。</li>\n<li>Master_log_file 就是前面提到的， 主服务器上的日志文件名.</li>\n<li>Read_Master_log_pos 就是前面提到的主服务器的日志记录位置， 从服务器根据这两个条件来选择复制的文件和位置。</li>\n<li>Slave_IO_Running:  指的就是从服务器上负责读取主服务器的线程工作状态。 从服务器用这个专门的线程链接到主服务器上，并把日志拷贝回来。</li>\n<li>Slave_SQL_Running: 指的就是专门执行sql的线程。 它负责把复制回来的Relaylog执行到自己的数据库中。 这两个参数必须都为Yes 才表明复制在正常工作。</li>\n</ol>\n<p>其他的参数之后再介绍。</p>\n<hr>\n<h2 id=\"mysql-双机热备实战\"><a href=\"#mysql-双机热备实战\" class=\"headerlink\" title=\"mysql 双机热备实战\"></a>mysql 双机热备实战</h2><h3 id=\"主从复制\"><a href=\"#主从复制\" class=\"headerlink\" title=\"主从复制\"></a>主从复制</h3><p>了解了上面的原理之后， 我们来实战。 这里有两个重点， 要想同步数据库状态， 需要相同的初态，然后配置同步才有意义。 当然你可以不要初态，这是你的自由。 我们这里从头开始配置一遍。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87005.png\" alt=\"\"></p>\n<p>我们先以A服务器为起点，  配置它的数据库同步到B。  这就是主-从复制了。 之后再反过来做一次，就可以互相备份了。</p>\n<h4 id=\"在A上面创建专门用于备份的用户\"><a href=\"#在A上面创建专门用于备份的用户\" class=\"headerlink\" title=\"在A上面创建专门用于备份的用户\"></a>在A上面创建专门用于备份的用户</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">grant</span> <span class=\"keyword\">replication</span> <span class=\"keyword\">slave</span> <span class=\"keyword\">on</span> *.* <span class=\"keyword\">to</span> <span class=\"string\">'repl_userl'</span>@<span class=\"string\">''</span></div><div class=\"line\"><span class=\"keyword\">grant</span> <span class=\"keyword\">replication</span> <span class=\"keyword\">slave</span> <span class=\"keyword\">on</span> *.* <span class=\"keyword\">to</span> <span class=\"string\">'repl_user'</span>@<span class=\"string\">'192.***.***.***'</span> <span class=\"keyword\">identified</span> <span class=\"keyword\">by</span> <span class=\"string\">'hj34$%&amp;mnkb'</span>;</div></pre></td></tr></table></figure>\n<p>上面把ip地址换成B机器的ip地址。 只允许B登录。安全。<br>用户名为： repl_user<br>密码为： hj34$<strong><em>**</em></strong>nkb<br>这个等会在B上面要用。</p>\n<h4 id=\"开启主服务器的-binarylog。\"><a href=\"#开启主服务器的-binarylog。\" class=\"headerlink\" title=\"开启主服务器的 binarylog。\"></a>开启主服务器的 binarylog。</h4><p>很多服务器是默认开启的，我们这里检查一下：<br>打开 /etc/my.cnf<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87006.png\" alt=\"\"><br>解释一下红框中的配置：<br>前面三行， 你可能已经有了。<br><strong>binlog-do-db</strong> 用来表示，只把哪些数据库的改动记录到binary日志中。 可以写上关注hello数据库。 但是我把它注释掉了。 只是展示一下。 可以写多行，表示关注多个数据库。<br><strong>binlog-ignore-db</strong>表示，需要忽略哪些数据库。我这里忽略了其他的4个数据库。</p>\n<p><strong>最后两行</strong>用于在 双主（多主循环）互相备份。 因为每台数据库服务器都可能在同一个表中插入数据，如果表有一个自动增长的主键，那么就会在多服务器上出现主键冲突。  解决这个问题的办法就是让每个数据库的自增主键不连续。  上图说是， 我假设需要将来可能需要10台服务器做备份， 所以<strong>auto-increment-increment 设为10</strong>。   而 <strong>auto-increment-offset=1 </strong>表示这台服务器的序号。 从1开始， 不超过auto-increment-increment。<br>这样做之后， 我在这台服务器上插入的第一个id就是 1， 第二行的id就是 11了， 而不是2。<br>（同理，在第二台服务器上插入的第一个id就是2， 第二行就是12， 这个后面再介绍） 这样就不会出现主键冲突了。 后面我们会演示这个id的效果。</p>\n<h4 id=\"获取主服务器状态，-和同步初态。\"><a href=\"#获取主服务器状态，-和同步初态。\" class=\"headerlink\" title=\"获取主服务器状态， 和同步初态。\"></a>获取主服务器状态， 和同步初态。</h4><p>假设我现在有这些数据库在A上面。<br>如果你是全新安装的， 那么不需要同步初态，直接跳过这一步，到后面直接查看主服务器状态。<br>这里我们假设有一个 hello 数据库作为初态。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87008.png\" alt=\"\"></p>\n<p>先锁定 hello数据库：<code>FLUSH TABLES WITH READ LOCK;</code></p>\n<p>然后导出数据：<br>我这里只需要导出hello数据库， 如果你有多个数据库作为初态的话， 需要导出所有这些数据库：<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87007.png\" alt=\"\"></p>\n<p>然后查看A服务器的binary日志位置：<br>记住这个文件名和 位置， 等会在从服务器上会用到。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87009.png\" alt=\"\"></p>\n<p>主服务器已经做完了， 可以解除锁定了：<code>UNLOCK TABLES;</code></p>\n<h4 id=\"设置从服务器-B-需要复制的数据库\"><a href=\"#设置从服务器-B-需要复制的数据库\" class=\"headerlink\" title=\"设置从服务器 B 需要复制的数据库\"></a>设置从服务器 B 需要复制的数据库</h4><p>打开从服务器 B 的 /etc/my.cnf 文件：<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87010.png\" alt=\"\"></p>\n<p>解释一下上面的内容:</p>\n<ul>\n<li><strong>server-id</strong> 必须保证每个服务器不一样。 这可能和循环同步有关。 防止进入死循环。</li>\n<li><strong>replicate-do-db</strong> 可以指定需要复制的数据库， 我这里注掉了。 演示一下。</li>\n<li><strong>replicate-ignore-db</strong> 复制时需要排除的数据库， 我使用了，这个。 除开系统的几个数据库之外，所有的数据库都复制。</li>\n<li><strong>relay_log</strong> 中继日志的名字。 前面说到了， 复制线程需要先把远程的变化拷贝到这个中继日志中， 在执行。</li>\n<li><strong>log-slave-updates </strong>意思是，中继日志执行之后，这些变化是否需要计入自己的binarylog。 当你的B服务器需要作为另外一个服务器的主服务器的时候需要打开。  就是双主互相备份，或者多主循环备份。 我们这里需要， 所以打开。</li>\n</ul>\n<p>保存， 重启mysql。</p>\n<h4 id=\"导入初态，-开始同步。\"><a href=\"#导入初态，-开始同步。\" class=\"headerlink\" title=\"导入初态， 开始同步。\"></a>导入初态， 开始同步。</h4><p>把刚才从A服务器上导出的 hello.sql 导入到 B的hello数据库中， 如果B现在没有hello数据库，请先创建一个， 然后再导入：<br>创建数据库：<br>mysql&gt; <code>create database hello default charset utf8;</code><br>把hello.sql 上传到B上， 然后导入：<code>mysql -uroot -p hello &lt; hello.sql</code><br>如果你刚才导出了多个数据库， 需要把他们都一一上传导入。</p>\n<p>开启同步, 在B服务器上执行：<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">CHANGE</span> <span class=\"keyword\">MASTER</span> <span class=\"keyword\">TO</span> </div><div class=\"line\">      MASTER_HOST=<span class=\"string\">'192.***.***.***'</span>, </div><div class=\"line\">      MASTER_USER=<span class=\"string\">'repl_user'</span>, </div><div class=\"line\">      MASTER_PASSWORD=<span class=\"string\">'hj3****'</span>, </div><div class=\"line\">      MASTER_LOG_FILE=<span class=\"string\">'mysql-bin.000004'</span>, </div><div class=\"line\">      MASTER_LOG_POS=<span class=\"number\">7145</span>;</div></pre></td></tr></table></figure></p>\n<p>上面几个参数就不解释了,前面说过了。</p>\n<p>重启mysql，然后查看slave线程开启了没：<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87011.png\" alt=\"\"><br>注意图中的红框， 两个都是Yes， 说明开启成功。如果其中一个是No， 那就说明不成功。需要查看mysql的错误日志。有时候密码填错了， 有时候防火墙的3306没有打开。ip地址不对，等等。 都会导致失败。<br>mysql的错误日志一般在：<strong>/usr/local/mysql/data/</strong>;文件名应该是你的机器名， <strong>hostname.err</strong> 你换成你自己的。</p>\n<p>到这里主-从复制已经打开了。 我们先来实验一下。<br>我们在A的数据库里面去 添加数据：<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87012.png\" alt=\"\"><br>我在A的 hello数据库的test表中 连续插入了3条数据，  注意看他们的自增长id， 分别是1,11,21.  知道这是为什么吗。 前面已经说过了，不懂再回去看。</p>\n<p>我们去看一下B数据库有没有这三条数据：<br>打开B的数据库：<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87013.png\" alt=\"\"></p>\n<p><strong>此时不要在B中修改数据。 我们接着配置从B到A的复制。  如果你只需要主从复制的话， 到这里就结束了。后面可以不看了。 所有A中的修改都能自动同步到B， 但是对B的修改却不能同步到A。 因为是单向的。 如果需要双向同步的话，需要再做一次从B到A的复制。</strong></p>\n<hr>\n<h3 id=\"主主复制\"><a href=\"#主主复制\" class=\"headerlink\" title=\"主主复制\"></a>主主复制</h3><p>基本跟上面一样：我们简单一点介绍：</p>\n<h4 id=\"在B中创建用户\"><a href=\"#在B中创建用户\" class=\"headerlink\" title=\"在B中创建用户\"></a>在B中创建用户</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">grant</span> <span class=\"keyword\">replication</span> <span class=\"keyword\">slave</span> <span class=\"keyword\">on</span> *.* <span class=\"keyword\">to</span> <span class=\"string\">'repl_user'</span>@<span class=\"string\">'192.***.***.***'</span> <span class=\"keyword\">identified</span> <span class=\"keyword\">by</span> <span class=\"string\">'hj34$%&amp;mnkb'</span>;</div></pre></td></tr></table></figure>\n<h4 id=\"打开-etc-my-cnf-，-开启B的binarylog\"><a href=\"#打开-etc-my-cnf-，-开启B的binarylog\" class=\"headerlink\" title=\"打开 /etc/my.cnf ， 开启B的binarylog\"></a>打开 /etc/my.cnf ， 开启B的binarylog</h4><p><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87014.png\" alt=\"\"><br>注意红框中所新添加的部分。</p>\n<h4 id=\"我们不需要导出B的初态了，因为它刚刚才从A导过来。-直接记住它的master日志状态\"><a href=\"#我们不需要导出B的初态了，因为它刚刚才从A导过来。-直接记住它的master日志状态\" class=\"headerlink\" title=\"我们不需要导出B的初态了，因为它刚刚才从A导过来。  直接记住它的master日志状态\"></a>我们不需要导出B的初态了，因为它刚刚才从A导过来。  直接记住它的master日志状态</h4><p><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87015.png\" alt=\"\"><br>记住这两个数值，等会在A上面要用。<br>B服务器就设置完了。</p>\n<h4 id=\"登录到A-服务器。-开启中继：\"><a href=\"#登录到A-服务器。-开启中继：\" class=\"headerlink\" title=\"登录到A 服务器。 开启中继：\"></a>登录到A 服务器。 开启中继：</h4><p><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87016.png\" alt=\"\"></p>\n<p>注意框中心添加的部分， 不解释了。</p>\n<h4 id=\"启动同步：\"><a href=\"#启动同步：\" class=\"headerlink\" title=\"启动同步：\"></a>启动同步：</h4><p><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87017.png\" alt=\"\"><br>上面的ip地址是B的ip地址， 因为A把B当做master了。 不解释了。</p>\n<p>然后重启mysql服务。<br>然后查看，slave状态是否正常：<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87018.png\" alt=\"\"><br>图中出现了两个No。说明slave没有成功， 即，从B到A的同步没有成功。 我们去查看mysql错误日志，前面说过位置：<strong>/usr/local/mysql/data/</strong> 查看<strong>hostname.err</strong> 文件，打开看看<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87019.png\" alt=\"\"><br>看图中的error信息。  说找不到中继日志文件。<br>这是因为我们在配置A的中继文件时改了中继文件名，但是mysql没有同步。解决办法很简单。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87020.png\" alt=\"\"></p>\n<p>先停掉mysql服务。  找到这三个文件，把他们删掉。 <strong>一定要先停掉mysql服务</strong>。不然还是不成功。你需要重启一下机器了。 或者手动<code>kill mysqld</code>。<br>改好之后， 启动mysql之后。 我们在来检查一下slave状态：<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87021.png\" alt=\"\"><br>完成，现在就是<strong>A&lt;—&gt;B</strong>主主互备啦！</p>\n<hr>\n<h1 id=\"深入了解复制\"><a href=\"#深入了解复制\" class=\"headerlink\" title=\"深入了解复制\"></a>深入了解复制</h1><p>已经讨论了关于复制的一些基本东西，下面深入讨论一下复制。</p>\n<h2 id=\"基于语句的复制-Statement-Based-Replication\"><a href=\"#基于语句的复制-Statement-Based-Replication\" class=\"headerlink\" title=\"基于语句的复制(Statement-Based Replication)\"></a>基于语句的复制(Statement-Based Replication)</h2><p>MySQL 5.0及之前的版本仅支持基于语句的复制（也叫做<strong>逻辑复制</strong>，logical replication），这在数据库并不常见。master记录下改变数据的查询，然后，slave从中继日志中读取事件，并执行它，这些SQL语句与master执行的语句一样。<br>这种方式的优点就是实现简单。此外，基于语句的复制的二进制日志可以很好的进行压缩，而且日志的数据量也较小，占用带宽少——例如，一个更新GB的数据的查询仅需要几十个字节的二进制日志。而mysqlbinlog对于基于语句的日志处理十分方便。</p>\n<p>但是，基于语句的复制并不是像它看起来那么简单，因为一些查询语句依赖于master的特定条件，例如，master与slave可能有不同的时间。所以，MySQL的二进制日志的格式不仅仅是查询语句，还包括一些元数据信息，例如，当前的时间戳。即使如此，还是有一些语句，比如，CURRENT USER函数，不能正确的进行复制。此外，存储过程和触发器也是一个问题。</p>\n<p>另外一个问题就是基于语句的复制必须是串行化的。这要求大量特殊的代码，配置，例如InnoDB的next-key锁等。并不是所有的存储引擎都支持基于语句的复制。</p>\n<h2 id=\"基于记录的复制-Row-Based-Replication\"><a href=\"#基于记录的复制-Row-Based-Replication\" class=\"headerlink\" title=\"基于记录的复制(Row-Based Replication)\"></a>基于记录的复制(Row-Based Replication)</h2><p>MySQL增加基于记录的复制，在二进制日志中记录下实际数据的改变，这与其它一些DBMS的实现方式类似。这种方式有优点，也有缺点。优点就是可以对任何语句都能正确工作，一些语句的效率更高。主要的缺点就是二进制日志可能会很大，而且不直观，所以，你不能使用<strong>mysqlbinlog</strong>来查看二进制日志。</p>\n<p>对于一些语句，基于记录的复制能够更有效的工作，如：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">mysql&gt; INSERT INTO summary_table(col1, col2, sum_col3)</div><div class=\"line\">    -&gt; SELECT col1, col2, sum(col3)</div><div class=\"line\">    -&gt; FROM enormous_table</div><div class=\"line\">    -&gt; GROUP BY col1, col2;</div></pre></td></tr></table></figure></p>\n<p>假设，只有三种唯一的col1和col2的组合，但是，该查询会扫描原表的许多行，却仅返回三条记录。此时，基于记录的复制效率更高。</p>\n<p>另一方面，下面的语句，基于语句的复制更有效：<br><figure class=\"highlight gams\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">mysql&gt; UPDATE enormous_table <span class=\"keyword\">SET</span> col1 <span class=\"comment\">= 0</span>;</div></pre></td></tr></table></figure></p>\n<p>此时使用基于记录的复制代价会非常高。由于两种方式不能对所有情况都能很好的处理，所以，MySQL 5.1支持在基于语句的复制和基于记录的复制之前动态交换。你可以通过设置session变量binlog_format来进行控制。</p>\n<h2 id=\"复制相关的文件\"><a href=\"#复制相关的文件\" class=\"headerlink\" title=\"复制相关的文件\"></a>复制相关的文件</h2><p>除了二进制日志和中继日志文件外，还有其它一些与复制相关的文件。如下</p>\n<ul>\n<li>mysql-bin.index</li>\n</ul>\n<p>服务器一旦开启二进制日志，会产生一个与二日志文件同名，但是以.index结尾的文件。它用于跟踪磁盘上存在哪些二进制日志文件。MySQL用它来定位二进制日志文件。内容与下面类似<br><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">.\\mysql<span class=\"number\">-01</span>-bin<span class=\"number\">.000003</span></div><div class=\"line\">.\\mysql<span class=\"number\">-01</span>-bin<span class=\"number\">.000004</span></div></pre></td></tr></table></figure></p>\n<ul>\n<li><p>mysql-relay-bin.index<br>该文件的功能与mysql-bin.index类似，但是它是针对中继日志，而不是二进制日志。内容与下面类似</p>\n<figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">.\\mysql<span class=\"number\">-02</span>-relay-bin<span class=\"number\">.000017</span></div><div class=\"line\">.\\mysql<span class=\"number\">-02</span>-relay-bin<span class=\"number\">.000018</span></div></pre></td></tr></table></figure>\n</li>\n<li><p>master.info<br>保存master的相关信息。不要删除它，否则，slave重启后不能连接master。内容与下面类似</p>\n<figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">mysql<span class=\"number\">-01</span>-bin<span class=\"number\">.000010</span></div><div class=\"line\"><span class=\"number\">286</span></div><div class=\"line\">localhost</div><div class=\"line\">repl</div><div class=\"line\"><span class=\"number\">1234</span></div><div class=\"line\"><span class=\"number\">3306</span></div></pre></td></tr></table></figure>\n<p>I/O线程更新master.info文件，内容与下面类似</p>\n<figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">.\\mysql<span class=\"number\">-02</span>-relay-bin<span class=\"number\">.000019</span></div><div class=\"line\"><span class=\"number\">254</span></div><div class=\"line\">mysql<span class=\"number\">-01</span>-bin<span class=\"number\">.000010</span></div><div class=\"line\"><span class=\"number\">286</span></div><div class=\"line\"><span class=\"number\">0</span></div><div class=\"line\"><span class=\"number\">52813</span></div></pre></td></tr></table></figure>\n</li>\n<li><p>relay-log.info<br>包含slave中当前二进制日志和中继日志的信息。</p>\n</li>\n</ul>\n<h2 id=\"发送复制事件到其它slave\"><a href=\"#发送复制事件到其它slave\" class=\"headerlink\" title=\"发送复制事件到其它slave\"></a>发送复制事件到其它slave</h2><p>当设置<strong>log_slave_updates</strong>时，你可以让slave扮演其它slave的master。此时，slave把SQL线程执行的事件写进行自己的二进制日志(binary log)，然后，它的slave可以获取这些事件并执行它。如下：<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87022.JPG\" alt=\"\"></p>\n<h2 id=\"复制过滤-Replication-Filters\"><a href=\"#复制过滤-Replication-Filters\" class=\"headerlink\" title=\"复制过滤(Replication Filters)\"></a>复制过滤(Replication Filters)</h2><p>复制过滤可以让你只复制服务器中的一部分数据，有两种复制过滤：在master上过滤二进制日志中的事件；在slave上过滤中继日志中的事件。如下：<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87023.JPG\" alt=\"\"></p>\n<hr>\n<h1 id=\"复制的常用拓扑结构\"><a href=\"#复制的常用拓扑结构\" class=\"headerlink\" title=\"复制的常用拓扑结构\"></a>复制的常用拓扑结构</h1><p>复制的体系结构有以下一些基本原则：<br>(1)    每个slave只能有一个master；<br>(2)    每个slave只能有一个唯一的服务器ID；<br>(3)    每个master可以有很多slave；<br>(4)    如果你设置log_slave_updates，slave可以是其它slave的master，从而扩散master的更新。</p>\n<p>MySQL不支持多主服务器复制(Multimaster Replication)——即一个slave可以有多个master。但是，通过一些简单的组合，我们却可以建立灵活而强大的复制体系结构。</p>\n<h2 id=\"1-单一master和多slave\"><a href=\"#1-单一master和多slave\" class=\"headerlink\" title=\"1.单一master和多slave\"></a>1.单一master和多slave</h2><p>由一个master和一个slave组成复制系统是最简单的情况。Slave之间并不相互通信，只能与master进行通信。<br>在实际应用场景中，MySQL复制90%以上都是一个Master复制到一个或者多个Slave的架构模式，主要用于读压力比较大的应用的数据库端廉价扩展解决方案。因为只要Master和Slave的压力不是太大（尤其是Slave端压力）的话，异步复制的延时一般都很少很少。尤其是自从Slave端的复制方式改成两个线程处理之后，更是减小了Slave端的延时问题。而带来的效益是，对于数据实时性要求不是特别Critical的应用，只需要通过廉价的pcserver来扩展Slave的数量，将读压力分散到多台Slave的机器上面，即可通过分散单台数据库服务器的读压力来解决数据库端的读性能瓶颈，毕竟在大多数数据库应用系统中的读压力还是要比写压力大很多。这在很大程度上解决了目前很多中小型网站的数据库压力瓶颈问题，甚至有些大型网站也在使用类似方案解决数据库瓶颈。<br>如图：<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87024.JPG\" alt=\"\"></p>\n<p> 如果写操作较少，而读操作很时，可以采取这种结构。你可以将读操作分布到其它的slave，从而减小master的压力。但是，当slave增加到一定数量时，slave对master的负载以及网络带宽都会成为一个严重的问题。<br>这种结构虽然简单，但是，它却非常灵活，足够满足大多数应用需求。一些建议：</p>\n<ul>\n<li>(1)不同的slave扮演不同的作用(例如使用不同的索引，或者不同的存储引擎)；</li>\n<li>(2)用一个slave作为备用master，只进行复制；</li>\n<li>(3)用一个远程的slave，用于灾难恢复；</li>\n</ul>\n<p>大家应该都比较清楚，从一个Master节点可以复制出多个Slave节点，可能有人会想，那一个Slave节点是否可以从多个Master节点上面进行复制呢？至少在目前来看，MySQL是做不到的，以后是否会支持就不清楚了。<br>MySQL不支持一个Slave节点从多个Master节点来进行复制的架构，主要是为了避免冲突的问题，防止多个数据源之间的数据出现冲突，而造成最后数据的不一致性。不过听说已经有人开发了相关的patch，让MySQL支持一个Slave节点从多个Master结点作为数据源来进行复制，这也正是MySQL开源的性质所带来的好处。</p>\n<h2 id=\"2-主动模式的Master-Master-Master-Master-in-Active-Active-Mode\"><a href=\"#2-主动模式的Master-Master-Master-Master-in-Active-Active-Mode\" class=\"headerlink\" title=\"2.主动模式的Master-Master(Master-Master in Active-Active Mode)\"></a>2.主动模式的Master-Master(Master-Master in Active-Active Mode)</h2><p>Master-Master复制的两台服务器，既是master，又是另一台服务器的slave。这样，任何一方所做的变更，都会通过复制应用到另外一方的数据库中。<br>可能有些人可能会担心，这样搭建复制环境之后，难道不会造成两台MySQL之间的循环复制么？实际上MySQL自己早就想到了这一点，所以在MySQL的BinaryLog中记录了当前MySQL的server-id，而且这个参数也是我们搭建MySQLReplication的时候必须明确指定，而且Master和Slave的<strong>server-id</strong>参数值比需要不一致才能使<strong>MySQLReplication</strong>搭建成功。一旦有了server-id的值之后，MySQL就很容易判断某个变更是从哪一个MySQLServer最初产生的，所以就很容易避免出现循环复制的情况。而且，如果我们不打开记录<strong>Slave</strong>的<strong>BinaryLog</strong>的选项（<strong>--log-slave-update</strong>）的时候，MySQL根本就不会记录复制过程中的变更到BinaryLog中，就更不用担心可能会出现循环复制的情形了。<br>如图：<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87025.JPG\" alt=\"\"></p>\n<p>主动的Master-Master复制有一些特殊的用处。例如，地理上分布的两个部分都需要自己的可写的数据副本。这种结构最大的问题就是更新冲突。假设一个表只有一行(一列)的数据，其值为1，如果两个服务器分别同时执行如下语句：<br>在第一个服务器上执行：<code>mysql&gt; UPDATE tbl SET col=col + 1;</code><br>在第二个服务器上执行：<code>mysql&gt; UPDATE tbl SET col=col * 2;</code><br>那么结果是多少呢？一台服务器是4，另一个服务器是3，但是，这并不会产生错误。<br>实际上，MySQL并不支持其它一些DBMS支持的多主服务器复制(Multimaster Replication)，这是MySQL的复制功能很大的一个限制(多主服务器的难点在于解决更新冲突)，但是，如果你实在有这种需求，你可以采用MySQL Cluster，以及将Cluster和Replication结合起来，可以建立强大的高性能的数据库平台。但是，可以通过其它一些方式来模拟这种多主服务器的复制。</p>\n<h2 id=\"3-主动-被动模式的Master-Master-Master-Master-in-Active-Passive-Mode\"><a href=\"#3-主动-被动模式的Master-Master-Master-Master-in-Active-Passive-Mode\" class=\"headerlink\" title=\"3.主动-被动模式的Master-Master(Master-Master in Active-Passive Mode)\"></a>3.主动-被动模式的Master-Master(Master-Master in Active-Passive Mode)</h2><p>这是master-master结构变化而来的，它避免了M-M的缺点，实际上，这是一种具有容错和高可用性的系统。它的不同点在于其中一个服务只能进行只读操作。如图：<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87026.JPG\" alt=\"\"></p>\n<h2 id=\"4-级联复制架构-Master-–Slaves-Slaves\"><a href=\"#4-级联复制架构-Master-–Slaves-Slaves\" class=\"headerlink\" title=\"4.级联复制架构 Master –Slaves - Slaves\"></a>4.级联复制架构 Master –Slaves - Slaves</h2><p>在有些应用场景中，可能读写压力差别比较大，读压力特别的大，一个Master可能需要上10台甚至更多的Slave才能够支撑注读的压力。这时候，Master就会比较吃力了，因为仅仅连上来的SlaveIO线程就比较多了，这样写的压力稍微大一点的时候，Master端因为复制就会消耗较多的资源，很容易造成复制的延时。<br>遇到这种情况如何解决呢？这时候我们就可以利用MySQL可以在Slave端记录复制所产生变更的BinaryLog信息的功能，也就是打开<strong>--log-slave-update</strong>选项。然后，通过二级（或者是更多级别）复制来减少Master端因为复制所带来的压力。也就是说，我们首先通过少数几台MySQL从Master来进行复制，这几台机器我们姑且称之为第一级Slave集群，然后其他的Slave再从第一级Slave集群来进行复制。从第一级Slave进行复制的Slave，我称之为第二级Slave集群。如果有需要，我们可以继续往下增加更多层次的复制。这样，我们很容易就控制了每一台MySQL上面所附属Slave的数量。这种架构我称之为Master-Slaves-Slaves架构<br>这种多层级联复制的架构，很容易就解决了Master端因为附属Slave太多而成为瓶颈的风险。下图展示了多层级联复制的Replication架构。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87027.jpg\" alt=\"\"><br>当然，如果条件允许，我更倾向于建议大家通过拆分成多个Replication集群来解决<br>上述瓶颈问题。毕竟Slave并没有减少写的量，所有Slave实际上仍然还是应用了所有的数据变更操作，没有减少任何写IO。相反，Slave越多，整个集群的写IO总量也就会越多，我们没有非常明显的感觉，仅仅只是因为分散到了多台机器上面，所以不是很容易表现出来。<br>此外，增加复制的级联层次，同一个变更传到最底层的Slave所需要经过的MySQL也会更多，同样可能造成延时较长的风险。<br>而如果我们通过分拆集群的方式来解决的话，可能就会要好很多了，当然，分拆集群也需要更复杂的技术和更复杂的应用系统架构。</p>\n<h2 id=\"5-带从服务器的Master-Master结构-Master-Master-with-Slaves\"><a href=\"#5-带从服务器的Master-Master结构-Master-Master-with-Slaves\" class=\"headerlink\" title=\"5.带从服务器的Master-Master结构(Master-Master with Slaves)\"></a>5.带从服务器的Master-Master结构(Master-Master with Slaves)</h2><p>这种结构的优点就是提供了冗余。在地理上分布的复制结构，它不存在单一节点故障问题，而且还可以将读密集型的请求放到slave上。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87028.JPG\" alt=\"\"><br>级联复制在一定程度上面确实解决了Master因为所附属的Slave过多而成为瓶颈的问题，但是他并不能解决人工维护和出现异常需要切换后可能存在重新搭建Replication的问题。这样就很自然的引申出了DualMaster与级联复制结合的Replication架构，我称之为Master-Master-Slaves架构<br>和Master-Slaves-Slaves架构相比，区别仅仅只是将第一级Slave集群换成了一台单独的Master，作为备用Master，然后再从这个备用的Master进行复制到一个Slave集群。</p>\n<p>这种DualMaster与级联复制结合的架构，<strong>最大的好处就是既可以避免主Master的写入操作不会受到Slave集群的复制所带来的影响，同时主Master需要切换的时候也基本上不会出现重搭Replication的情况。但是，这个架构也有一个弊端，那就是备用的Master有可能成为瓶颈，因为如果后面的Slave集群比较大的话，备用Master可能会因为过多的SlaveIO线程请求而成为瓶颈。</strong>当然，该备用Master不提供任何的读服务的时候，瓶颈出现的可能性并不是特别高，如果出现瓶颈，也可以在备用Master后面再次进行级联复制，架设多层Slave集群。当然，级联复制的级别越多，Slave集群可能出现的数据延时也会更为明显，所以考虑使用多层级联复制之前，也需要评估数据延时对应用系统的影响。</p>\n<hr>\n"},{"title":"MongoDB","abbrlink":51937,"date":"2016-11-10T06:24:38.000Z","_content":"\n**本节是根据[烂泥大神](http://www.ilanni.com/)分享的笔记摘录的！**\n\n# 安装\n这里安装的是3.2版本。\n\n## yum安装\n```\nvim /etc/yum.repos.d/mongodb.repo\n\n[MongoDB]\nname=MongoDB Repository\nbaseurl=http://repo.mongodb.org/yum/redhat/$releasever/mongodb-org/3.2/x86_64/\ngpgcheck=0\nenabled=1\n\nyum -y install mongodb-org\n/etc/init.d/mongod restart\nchkconfig mongod on\nmongod --version```\n\n## 源码安装\n```\nwget http://fastdl.mongodb.org/linux/mongodb-linux-x86_64-rhel62-3.2.8.tgz\n或：\nwget https://fossies.org/linux/misc/mongodb-linux-x86_64-3.2.8.tgz\n\ntar -xf mongodb-linux-x86_64-rhel62-3.2.8.tgz -C /usr/local/    #注意解压的包名\ncd /usr/local/\nmv mongodb-linux-x86_64-rhel62-3.2.8 mongodb\nmkdir /usr/local/mongodb/data\n\nvim /etc/profile\nexport PATH=$PATH:/usr/local/mongodb/bin\n\nsource /etc/profile\n安装好直接可以用了```\n\n---\n# 配置\n## 修改配置文件\n```\nvim /usr/local/mongodb/mongodb.conf\n#端口\nport=27017\n#数据文件存放目录\ndbpath= /usr/local/mongodb/data\n#日志文件存放目录\nlogpath= /usr/local/mongodb/mongodb.log\n#使用追加的方式写日志\nlogappend=true\n#以守护程序的方式启用，即在后台运行\nfork=true\n#最大同时连接数\nmaxConns=500\n#只允许通过本机访问\n#bind_ip=127.0.0.1\n#启用验证\n#auth = true  #注释掉不启用用户认证，创建好用户后再启用\n```\n\n\n## 启动mongodb：\n```\n/usr/local/mongodb/bin/mongod -f /usr/local/mongodb/mongodb.conf```\n\n---\n# 创建用户、管理用户\n\n**read**：允许用户读取指定数据库\n**readWrite**：允许用户读写指定数据库\n**dbAdmin**：允许用户在指定数据库中执行管理函数，如索引创建、删除，查看统计或访问system.profile\n**userAdmin**：允许用户向system.users集合写入，可以找指定数据库里创建、删除和管理用户\n**clusterAdmin**：只在admin数据库中可用，赋予用户所有分片和复制集相关函数的管理权限。\n**readAnyDatabase**：只在admin数据库中可用，赋予用户所有数据库的读权限\n**readWriteAnyDatabase**：只在admin数据库中可用，赋予用户所有数据库的读写权限\n**userAdminAnyDatabase**：只在admin数据库中可用，赋予用户所有数据库的userAdmin权限\n**dbAdminAnyDatabase**：只在admin数据库中可用，赋予用户所有数据库的dbAdmin权限。\n**root**：只在admin数据库中可用。超级账号，超级权限\n\n## 创建用户\n对**admin**数据库，创建一个**suadmin**用户，密码是**ilannipasswd**，并且赋予**dbAdminAnyDatabase和userAdminAnyDatabase权限**\n```\nmongo\nuse admin\ndb.createUser({user:'suadmin',pwd:'ilannipasswd',roles:[{role:'dbAdminAnyDatabase',db:'admin'},{role:'userAdminAnyDatabase',db:'admin'}]})```\n\n### 验证刚刚创建的用户\n```\ndb.auth('suadmin','ilannipasswd')\n或者：\ndb.createUser({user:'suadmin',pwd:'ilannipasswd',roles:[{role:'dbAdminAnyDatabase',db:'admin'}]})```\n![](http://ofyfogrgx.bkt.clouddn.com//blog/MongoDB001.png)\n返回1表示成功。\n\n然后退出mongodb，启用用户验证**auth = true**，再次启动**mongodb**\n```\npgrep -f mongodb |xargs kill -2\nvim /usr/local/mongodb/mongodb.conf\n#启用验证\nauth = true\n\n#启动mongo\n/usr/local/mongodb/bin/mongod -f /usr/local/mongodb/mongodb.conf\n\n\nmongo localhost:27017/admin -u suadmin -p ilannipasswd\nshow users\nshow dbs\nshow collections```\n\n查看整个mongoDB全部的用户：`db.system.users.find()`\n![](http://ofyfogrgx.bkt.clouddn.com//blog/MongoDB002.png)\n\n## 接着测试,创建库,创建用户\n创建ilanni数据库，然后创建ilanniadmin用户，授予readWrite权限\n```\nuse ilanni\ndb.createUser({user:'ilanniadmin',pwd:'ilanni123456',roles:[{role:'readWrite',db:'ilanni'}]})\n或者\ndb.createUser({user:'ilanniadmin',pwd:'ilanni123456',roles:[{role:'dbAdmin',db:'ilanni'},{role:'readWrite',db:'ilanni'}]})```\n\n验证刚刚创建的用户：`db.auth('ilanniadmin','ilanni123456')`\n![](http://ofyfogrgx.bkt.clouddn.com//blog/MongoDB003.png)\n注意，在**use ilanni**后，ilanni实际上还没真正建立起来，只是表明目前是在使用ilanni了。如果什么都不操作离开的话,这个库就会被系统删除.所以我们还要执行下面的命令:\n```\ndb.ilanni.insert({'name':'tompig'});\ndb.ilanni.insert({'name':'tompig1','id':1});```\n\n使用刚刚创建的**ilanniadmin**用户登陆数据库，然后插入一些，并查看\n```\nmongo localhost:27017/ilanni -u ilanniadmin -p ilanni123456\ndb.ilanni.findOne()\ndb.ilanni.find()```\n![](http://ofyfogrgx.bkt.clouddn.com//blog/MongoDB004.png)\n现在我们再使用**suadmin**用户登陆到服务器，查看服务器上的数据库\n```\nmongo localhost:27017/admin -u suadmin -p ilanni123456\nshow dbs```\n![](http://ofyfogrgx.bkt.clouddn.com//blog/MongoDB005.png)\n通过上图，我们可以看到刚刚创建的ilanni数据库\n\n## 删除库，删除用户\n现在我们来测试数据库的删除\n```\nmongo localhost:27017/admin -u suadmin -p ilannipasswd\nuse ilanni\ndb.dropDatabase();```\n![](http://ofyfogrgx.bkt.clouddn.com//blog/MongoDB006.png)\n通过shell删除ilanni数据库\n\n现在我们来测试用户的删除\n\n\n导入数据：`mongoimport --port 27017 -d tms -c mod < mongo_data/mod.json`\n![](http://ofyfogrgx.bkt.clouddn.com//blog/MongoDB007.png)\n\n命令行连接mongodb数据库：\n```\n./mongo\nhelp        #查看帮助\nshow dbs    #查看所有的mongodb数据库\nuse tms     #使用tms数据库\ndb.status() #查看数据库的信息```\n![](http://ofyfogrgx.bkt.clouddn.com//blog/MongoDB008.png)\n![](http://ofyfogrgx.bkt.clouddn.com//blog/MongoDB009.png)\n\n删除数据库\n```\nshow dbs\nuse tms\ndb.dropDatabase()```\n![](http://ofyfogrgx.bkt.clouddn.com//blog/MongoDB010.png)\n导出数据：`mongoexport --port 27017 -d tms -c mod -o tms.json`\n![](http://ofyfogrgx.bkt.clouddn.com//blog/MongoDB011.png)\n\n---\n\n\n\n\n\n\n\n","source":"_posts/数据库/2016-11-10-MongoDB数据库.md","raw":"---\ntitle: MongoDB\ncategories:\n  - 数据库\ntags:\n  - MongoDB3.2\n  - 分布式数据库\nabbrlink: 51937\ndate: 2016-11-10 14:24:38\n---\n\n**本节是根据[烂泥大神](http://www.ilanni.com/)分享的笔记摘录的！**\n\n# 安装\n这里安装的是3.2版本。\n\n## yum安装\n```\nvim /etc/yum.repos.d/mongodb.repo\n\n[MongoDB]\nname=MongoDB Repository\nbaseurl=http://repo.mongodb.org/yum/redhat/$releasever/mongodb-org/3.2/x86_64/\ngpgcheck=0\nenabled=1\n\nyum -y install mongodb-org\n/etc/init.d/mongod restart\nchkconfig mongod on\nmongod --version```\n\n## 源码安装\n```\nwget http://fastdl.mongodb.org/linux/mongodb-linux-x86_64-rhel62-3.2.8.tgz\n或：\nwget https://fossies.org/linux/misc/mongodb-linux-x86_64-3.2.8.tgz\n\ntar -xf mongodb-linux-x86_64-rhel62-3.2.8.tgz -C /usr/local/    #注意解压的包名\ncd /usr/local/\nmv mongodb-linux-x86_64-rhel62-3.2.8 mongodb\nmkdir /usr/local/mongodb/data\n\nvim /etc/profile\nexport PATH=$PATH:/usr/local/mongodb/bin\n\nsource /etc/profile\n安装好直接可以用了```\n\n---\n# 配置\n## 修改配置文件\n```\nvim /usr/local/mongodb/mongodb.conf\n#端口\nport=27017\n#数据文件存放目录\ndbpath= /usr/local/mongodb/data\n#日志文件存放目录\nlogpath= /usr/local/mongodb/mongodb.log\n#使用追加的方式写日志\nlogappend=true\n#以守护程序的方式启用，即在后台运行\nfork=true\n#最大同时连接数\nmaxConns=500\n#只允许通过本机访问\n#bind_ip=127.0.0.1\n#启用验证\n#auth = true  #注释掉不启用用户认证，创建好用户后再启用\n```\n\n\n## 启动mongodb：\n```\n/usr/local/mongodb/bin/mongod -f /usr/local/mongodb/mongodb.conf```\n\n---\n# 创建用户、管理用户\n\n**read**：允许用户读取指定数据库\n**readWrite**：允许用户读写指定数据库\n**dbAdmin**：允许用户在指定数据库中执行管理函数，如索引创建、删除，查看统计或访问system.profile\n**userAdmin**：允许用户向system.users集合写入，可以找指定数据库里创建、删除和管理用户\n**clusterAdmin**：只在admin数据库中可用，赋予用户所有分片和复制集相关函数的管理权限。\n**readAnyDatabase**：只在admin数据库中可用，赋予用户所有数据库的读权限\n**readWriteAnyDatabase**：只在admin数据库中可用，赋予用户所有数据库的读写权限\n**userAdminAnyDatabase**：只在admin数据库中可用，赋予用户所有数据库的userAdmin权限\n**dbAdminAnyDatabase**：只在admin数据库中可用，赋予用户所有数据库的dbAdmin权限。\n**root**：只在admin数据库中可用。超级账号，超级权限\n\n## 创建用户\n对**admin**数据库，创建一个**suadmin**用户，密码是**ilannipasswd**，并且赋予**dbAdminAnyDatabase和userAdminAnyDatabase权限**\n```\nmongo\nuse admin\ndb.createUser({user:'suadmin',pwd:'ilannipasswd',roles:[{role:'dbAdminAnyDatabase',db:'admin'},{role:'userAdminAnyDatabase',db:'admin'}]})```\n\n### 验证刚刚创建的用户\n```\ndb.auth('suadmin','ilannipasswd')\n或者：\ndb.createUser({user:'suadmin',pwd:'ilannipasswd',roles:[{role:'dbAdminAnyDatabase',db:'admin'}]})```\n![](http://ofyfogrgx.bkt.clouddn.com//blog/MongoDB001.png)\n返回1表示成功。\n\n然后退出mongodb，启用用户验证**auth = true**，再次启动**mongodb**\n```\npgrep -f mongodb |xargs kill -2\nvim /usr/local/mongodb/mongodb.conf\n#启用验证\nauth = true\n\n#启动mongo\n/usr/local/mongodb/bin/mongod -f /usr/local/mongodb/mongodb.conf\n\n\nmongo localhost:27017/admin -u suadmin -p ilannipasswd\nshow users\nshow dbs\nshow collections```\n\n查看整个mongoDB全部的用户：`db.system.users.find()`\n![](http://ofyfogrgx.bkt.clouddn.com//blog/MongoDB002.png)\n\n## 接着测试,创建库,创建用户\n创建ilanni数据库，然后创建ilanniadmin用户，授予readWrite权限\n```\nuse ilanni\ndb.createUser({user:'ilanniadmin',pwd:'ilanni123456',roles:[{role:'readWrite',db:'ilanni'}]})\n或者\ndb.createUser({user:'ilanniadmin',pwd:'ilanni123456',roles:[{role:'dbAdmin',db:'ilanni'},{role:'readWrite',db:'ilanni'}]})```\n\n验证刚刚创建的用户：`db.auth('ilanniadmin','ilanni123456')`\n![](http://ofyfogrgx.bkt.clouddn.com//blog/MongoDB003.png)\n注意，在**use ilanni**后，ilanni实际上还没真正建立起来，只是表明目前是在使用ilanni了。如果什么都不操作离开的话,这个库就会被系统删除.所以我们还要执行下面的命令:\n```\ndb.ilanni.insert({'name':'tompig'});\ndb.ilanni.insert({'name':'tompig1','id':1});```\n\n使用刚刚创建的**ilanniadmin**用户登陆数据库，然后插入一些，并查看\n```\nmongo localhost:27017/ilanni -u ilanniadmin -p ilanni123456\ndb.ilanni.findOne()\ndb.ilanni.find()```\n![](http://ofyfogrgx.bkt.clouddn.com//blog/MongoDB004.png)\n现在我们再使用**suadmin**用户登陆到服务器，查看服务器上的数据库\n```\nmongo localhost:27017/admin -u suadmin -p ilanni123456\nshow dbs```\n![](http://ofyfogrgx.bkt.clouddn.com//blog/MongoDB005.png)\n通过上图，我们可以看到刚刚创建的ilanni数据库\n\n## 删除库，删除用户\n现在我们来测试数据库的删除\n```\nmongo localhost:27017/admin -u suadmin -p ilannipasswd\nuse ilanni\ndb.dropDatabase();```\n![](http://ofyfogrgx.bkt.clouddn.com//blog/MongoDB006.png)\n通过shell删除ilanni数据库\n\n现在我们来测试用户的删除\n\n\n导入数据：`mongoimport --port 27017 -d tms -c mod < mongo_data/mod.json`\n![](http://ofyfogrgx.bkt.clouddn.com//blog/MongoDB007.png)\n\n命令行连接mongodb数据库：\n```\n./mongo\nhelp        #查看帮助\nshow dbs    #查看所有的mongodb数据库\nuse tms     #使用tms数据库\ndb.status() #查看数据库的信息```\n![](http://ofyfogrgx.bkt.clouddn.com//blog/MongoDB008.png)\n![](http://ofyfogrgx.bkt.clouddn.com//blog/MongoDB009.png)\n\n删除数据库\n```\nshow dbs\nuse tms\ndb.dropDatabase()```\n![](http://ofyfogrgx.bkt.clouddn.com//blog/MongoDB010.png)\n导出数据：`mongoexport --port 27017 -d tms -c mod -o tms.json`\n![](http://ofyfogrgx.bkt.clouddn.com//blog/MongoDB011.png)\n\n---\n\n\n\n\n\n\n\n","slug":"数据库-2016-11-10-MongoDB数据库","published":1,"updated":"2016-11-13T03:36:30.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civi8ouiu001f2c6n6o3l58y0","content":"<p><strong>本节是根据<a href=\"http://www.ilanni.com/\" target=\"_blank\" rel=\"external\">烂泥大神</a>分享的笔记摘录的！</strong></p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>这里安装的是3.2版本。</p>\n<h2 id=\"yum安装\"><a href=\"#yum安装\" class=\"headerlink\" title=\"yum安装\"></a>yum安装</h2><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">vim /etc/yum<span class=\"selector-class\">.repos</span><span class=\"selector-class\">.d</span>/mongodb<span class=\"selector-class\">.repo</span></div><div class=\"line\"></div><div class=\"line\">[MongoDB]</div><div class=\"line\">name=MongoDB Repository</div><div class=\"line\">baseurl=http:<span class=\"comment\">//repo.mongodb.org/yum/redhat/$releasever/mongodb-org/3.2/x86_64/</span></div><div class=\"line\">gpgcheck=<span class=\"number\">0</span></div><div class=\"line\">enabled=<span class=\"number\">1</span></div><div class=\"line\"></div><div class=\"line\">yum -y install mongodb-org</div><div class=\"line\">/etc/init.d/mongod restart</div><div class=\"line\">chkconfig mongod on</div><div class=\"line\">mongod --version</div></pre></td></tr></table></figure>\n<h2 id=\"源码安装\"><a href=\"#源码安装\" class=\"headerlink\" title=\"源码安装\"></a>源码安装</h2><figure class=\"highlight dts\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">wget http:<span class=\"comment\">//fastdl.mongodb.org/linux/mongodb-linux-x86_64-rhel62-3.2.8.tgz</span></div><div class=\"line\">或：</div><div class=\"line\">wget https:<span class=\"comment\">//fossies.org/linux/misc/mongodb-linux-x86_64-3.2.8.tgz</span></div><div class=\"line\"></div><div class=\"line\">tar -xf mongodb-linux-x86_64-rhel62<span class=\"number\">-3.2</span><span class=\"number\">.8</span>.tgz -C <span class=\"meta-keyword\">/usr/</span>local/    <span class=\"meta\">#注意解压的包名</span></div><div class=\"line\">cd <span class=\"meta-keyword\">/usr/</span>local/</div><div class=\"line\">mv mongodb-linux-x86_64-rhel62<span class=\"number\">-3.2</span><span class=\"number\">.8</span> mongodb</div><div class=\"line\">mkdir <span class=\"meta-keyword\">/usr/</span>local<span class=\"meta-keyword\">/mongodb/</span>data</div><div class=\"line\"></div><div class=\"line\">vim <span class=\"meta-keyword\">/etc/</span>profile</div><div class=\"line\">export PATH=$PATH:<span class=\"meta-keyword\">/usr/</span>local<span class=\"meta-keyword\">/mongodb/</span>bin</div><div class=\"line\"></div><div class=\"line\">source <span class=\"meta-keyword\">/etc/</span>profile</div><div class=\"line\">安装好直接可以用了</div></pre></td></tr></table></figure>\n<hr>\n<h1 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h1><h2 id=\"修改配置文件\"><a href=\"#修改配置文件\" class=\"headerlink\" title=\"修改配置文件\"></a>修改配置文件</h2><figure class=\"highlight vala\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">vim /usr/local/mongodb/mongodb.conf</div><div class=\"line\"><span class=\"meta\">#端口</span></div><div class=\"line\">port=<span class=\"number\">27017</span></div><div class=\"line\"><span class=\"meta\">#数据文件存放目录</span></div><div class=\"line\">dbpath= /usr/local/mongodb/data</div><div class=\"line\"><span class=\"meta\">#日志文件存放目录</span></div><div class=\"line\">logpath= /usr/local/mongodb/mongodb.log</div><div class=\"line\"><span class=\"meta\">#使用追加的方式写日志</span></div><div class=\"line\">logappend=<span class=\"literal\">true</span></div><div class=\"line\"><span class=\"meta\">#以守护程序的方式启用，即在后台运行</span></div><div class=\"line\">fork=<span class=\"literal\">true</span></div><div class=\"line\"><span class=\"meta\">#最大同时连接数</span></div><div class=\"line\">maxConns=<span class=\"number\">500</span></div><div class=\"line\"><span class=\"meta\">#只允许通过本机访问</span></div><div class=\"line\"><span class=\"meta\">#bind_ip=127.0.0.1</span></div><div class=\"line\"><span class=\"meta\">#启用验证</span></div><div class=\"line\"><span class=\"meta\">#auth = true  #注释掉不启用用户认证，创建好用户后再启用</span></div></pre></td></tr></table></figure>\n<h2 id=\"启动mongodb：\"><a href=\"#启动mongodb：\" class=\"headerlink\" title=\"启动mongodb：\"></a>启动mongodb：</h2><figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"regexp\">/usr/</span>local<span class=\"regexp\">/mongodb/</span>bin<span class=\"regexp\">/mongod -f /u</span>sr<span class=\"regexp\">/local/m</span>ongodb<span class=\"regexp\">/mongodb.conf</span></div></pre></td></tr></table></figure>\n<hr>\n<h1 id=\"创建用户、管理用户\"><a href=\"#创建用户、管理用户\" class=\"headerlink\" title=\"创建用户、管理用户\"></a>创建用户、管理用户</h1><p><strong>read</strong>：允许用户读取指定数据库<br><strong>readWrite</strong>：允许用户读写指定数据库<br><strong>dbAdmin</strong>：允许用户在指定数据库中执行管理函数，如索引创建、删除，查看统计或访问system.profile<br><strong>userAdmin</strong>：允许用户向system.users集合写入，可以找指定数据库里创建、删除和管理用户<br><strong>clusterAdmin</strong>：只在admin数据库中可用，赋予用户所有分片和复制集相关函数的管理权限。<br><strong>readAnyDatabase</strong>：只在admin数据库中可用，赋予用户所有数据库的读权限<br><strong>readWriteAnyDatabase</strong>：只在admin数据库中可用，赋予用户所有数据库的读写权限<br><strong>userAdminAnyDatabase</strong>：只在admin数据库中可用，赋予用户所有数据库的userAdmin权限<br><strong>dbAdminAnyDatabase</strong>：只在admin数据库中可用，赋予用户所有数据库的dbAdmin权限。<br><strong>root</strong>：只在admin数据库中可用。超级账号，超级权限</p>\n<h2 id=\"创建用户\"><a href=\"#创建用户\" class=\"headerlink\" title=\"创建用户\"></a>创建用户</h2><p>对<strong>admin</strong>数据库，创建一个<strong>suadmin</strong>用户，密码是<strong>ilannipasswd</strong>，并且赋予<strong>dbAdminAnyDatabase和userAdminAnyDatabase权限</strong><br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">mongo</span></div><div class=\"line\"><span class=\"selector-tag\">use</span> <span class=\"selector-tag\">admin</span></div><div class=\"line\"><span class=\"selector-tag\">db</span><span class=\"selector-class\">.createUser</span>(&#123;<span class=\"attribute\">user</span>:<span class=\"string\">'suadmin'</span>,pwd:<span class=\"string\">'ilannipasswd'</span>,roles:[&#123;role:<span class=\"string\">'dbAdminAnyDatabase'</span>,db:<span class=\"string\">'admin'</span>&#125;,&#123;<span class=\"attribute\">role</span>:<span class=\"string\">'userAdminAnyDatabase'</span>,db:<span class=\"string\">'admin'</span>&#125;]&#125;)</div></pre></td></tr></table></figure></p>\n<h3 id=\"验证刚刚创建的用户\"><a href=\"#验证刚刚创建的用户\" class=\"headerlink\" title=\"验证刚刚创建的用户\"></a>验证刚刚创建的用户</h3><figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">db</span><span class=\"selector-class\">.auth</span>(<span class=\"string\">'suadmin'</span>,<span class=\"string\">'ilannipasswd'</span>)</div><div class=\"line\">或者：</div><div class=\"line\"><span class=\"selector-tag\">db</span><span class=\"selector-class\">.createUser</span>(&#123;<span class=\"attribute\">user</span>:<span class=\"string\">'suadmin'</span>,<span class=\"attribute\">pwd</span>:<span class=\"string\">'ilannipasswd'</span>,<span class=\"attribute\">roles</span>:[&#123;<span class=\"attribute\">role</span>:<span class=\"string\">'dbAdminAnyDatabase'</span>,<span class=\"attribute\">db</span>:<span class=\"string\">'admin'</span>&#125;]&#125;)</div></pre></td></tr></table></figure>\n<p><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/MongoDB001.png\" alt=\"\"><br>返回1表示成功。</p>\n<p>然后退出mongodb，启用用户验证<strong>auth = true</strong>，再次启动<strong>mongodb</strong><br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">pgrep -f mongodb |xargs <span class=\"keyword\">kill</span> <span class=\"number\">-2</span></div><div class=\"line\">vim /usr/<span class=\"keyword\">local</span>/mongodb/mongodb.conf</div><div class=\"line\">#启用验证</div><div class=\"line\">auth = <span class=\"literal\">true</span></div><div class=\"line\"></div><div class=\"line\">#启动mongo</div><div class=\"line\">/usr/<span class=\"keyword\">local</span>/mongodb/<span class=\"keyword\">bin</span>/mongod -f /usr/<span class=\"keyword\">local</span>/mongodb/mongodb.conf</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">mongo localhost:<span class=\"number\">27017</span>/<span class=\"keyword\">admin</span> -u suadmin -p ilannipasswd</div><div class=\"line\"><span class=\"keyword\">show</span> <span class=\"keyword\">users</span></div><div class=\"line\"><span class=\"keyword\">show</span> dbs</div><div class=\"line\"><span class=\"keyword\">show</span> collections</div></pre></td></tr></table></figure></p>\n<p>查看整个mongoDB全部的用户：<code>db.system.users.find()</code><br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/MongoDB002.png\" alt=\"\"></p>\n<h2 id=\"接着测试-创建库-创建用户\"><a href=\"#接着测试-创建库-创建用户\" class=\"headerlink\" title=\"接着测试,创建库,创建用户\"></a>接着测试,创建库,创建用户</h2><p>创建ilanni数据库，然后创建ilanniadmin用户，授予readWrite权限<br><figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">use</span> <span class=\"selector-tag\">ilanni</span></div><div class=\"line\"><span class=\"selector-tag\">db</span><span class=\"selector-class\">.createUser</span>(&#123;<span class=\"attribute\">user</span>:<span class=\"string\">'ilanniadmin'</span>,<span class=\"attribute\">pwd</span>:<span class=\"string\">'ilanni123456'</span>,<span class=\"attribute\">roles</span>:[&#123;<span class=\"attribute\">role</span>:<span class=\"string\">'readWrite'</span>,<span class=\"attribute\">db</span>:<span class=\"string\">'ilanni'</span>&#125;]&#125;)</div><div class=\"line\">或者</div><div class=\"line\"><span class=\"selector-tag\">db</span><span class=\"selector-class\">.createUser</span>(&#123;<span class=\"attribute\">user</span>:<span class=\"string\">'ilanniadmin'</span>,<span class=\"attribute\">pwd</span>:<span class=\"string\">'ilanni123456'</span>,<span class=\"attribute\">roles</span>:[&#123;<span class=\"attribute\">role</span>:<span class=\"string\">'dbAdmin'</span>,<span class=\"attribute\">db</span>:<span class=\"string\">'ilanni'</span>&#125;,&#123;<span class=\"attribute\">role</span>:<span class=\"string\">'readWrite'</span>,<span class=\"attribute\">db</span>:<span class=\"string\">'ilanni'</span>&#125;]&#125;)</div></pre></td></tr></table></figure></p>\n<p>验证刚刚创建的用户：<code>db.auth(&#39;ilanniadmin&#39;,&#39;ilanni123456&#39;)</code><br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/MongoDB003.png\" alt=\"\"><br>注意，在<strong>use ilanni</strong>后，ilanni实际上还没真正建立起来，只是表明目前是在使用ilanni了。如果什么都不操作离开的话,这个库就会被系统删除.所以我们还要执行下面的命令:<br><figure class=\"highlight xquery\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">db.ilanni.<span class=\"keyword\">insert</span>(&#123;<span class=\"string\">'name'</span>:<span class=\"string\">'tompig'</span>&#125;);</div><div class=\"line\">db.ilanni.<span class=\"keyword\">insert</span>(&#123;<span class=\"string\">'name'</span>:<span class=\"string\">'tompig1'</span>,<span class=\"string\">'id'</span>:<span class=\"number\">1</span>&#125;);</div></pre></td></tr></table></figure></p>\n<p>使用刚刚创建的<strong>ilanniadmin</strong>用户登陆数据库，然后插入一些，并查看<br><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">mongo localhost:<span class=\"number\">27017</span>/ilanni -u ilanniadmin -<span class=\"selector-tag\">p</span> ilanni123456</div><div class=\"line\">db<span class=\"selector-class\">.ilanni</span><span class=\"selector-class\">.findOne</span>()</div><div class=\"line\">db<span class=\"selector-class\">.ilanni</span><span class=\"selector-class\">.find</span>()</div></pre></td></tr></table></figure></p>\n<p><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/MongoDB004.png\" alt=\"\"><br>现在我们再使用<strong>suadmin</strong>用户登陆到服务器，查看服务器上的数据库<br><figure class=\"highlight nsis\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">mongo localhost:<span class=\"number\">27017</span>/<span class=\"literal\">admin</span> -u suadmin -p ilanni123456</div><div class=\"line\"><span class=\"literal\">show</span> dbs</div></pre></td></tr></table></figure></p>\n<p><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/MongoDB005.png\" alt=\"\"><br>通过上图，我们可以看到刚刚创建的ilanni数据库</p>\n<h2 id=\"删除库，删除用户\"><a href=\"#删除库，删除用户\" class=\"headerlink\" title=\"删除库，删除用户\"></a>删除库，删除用户</h2><p>现在我们来测试数据库的删除<br><figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">mongo</span> <span class=\"selector-tag\">localhost</span><span class=\"selector-pseudo\">:27017</span>/<span class=\"selector-tag\">admin</span> <span class=\"selector-tag\">-u</span> <span class=\"selector-tag\">suadmin</span> <span class=\"selector-tag\">-p</span> <span class=\"selector-tag\">ilannipasswd</span></div><div class=\"line\"><span class=\"selector-tag\">use</span> <span class=\"selector-tag\">ilanni</span></div><div class=\"line\"><span class=\"selector-tag\">db</span><span class=\"selector-class\">.dropDatabase</span>();</div></pre></td></tr></table></figure></p>\n<p><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/MongoDB006.png\" alt=\"\"><br>通过shell删除ilanni数据库</p>\n<p>现在我们来测试用户的删除</p>\n<p>导入数据：<code>mongoimport --port 27017 -d tms -c mod &lt; mongo_data/mod.json</code><br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/MongoDB007.png\" alt=\"\"></p>\n<p>命令行连接mongodb数据库：<br><figure class=\"highlight gauss\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">./mongo</div><div class=\"line\">help        <span class=\"meta\">#查看帮助</span></div><div class=\"line\"><span class=\"keyword\">show</span> dbs    <span class=\"meta\">#查看所有的mongodb数据库</span></div><div class=\"line\"><span class=\"keyword\">use</span> tms     <span class=\"meta\">#使用tms数据库</span></div><div class=\"line\">db.status() <span class=\"meta\">#查看数据库的信息</span></div></pre></td></tr></table></figure></p>\n<p><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/MongoDB008.png\" alt=\"\"><br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/MongoDB009.png\" alt=\"\"></p>\n<p>删除数据库<br><figure class=\"highlight gauss\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">show</span> dbs</div><div class=\"line\"><span class=\"keyword\">use</span> tms</div><div class=\"line\">db.dropDatabase()</div></pre></td></tr></table></figure></p>\n<p><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/MongoDB010.png\" alt=\"\"><br>导出数据：<code>mongoexport --port 27017 -d tms -c mod -o tms.json</code><br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/MongoDB011.png\" alt=\"\"></p>\n<hr>\n","excerpt":"","more":"<p><strong>本节是根据<a href=\"http://www.ilanni.com/\">烂泥大神</a>分享的笔记摘录的！</strong></p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>这里安装的是3.2版本。</p>\n<h2 id=\"yum安装\"><a href=\"#yum安装\" class=\"headerlink\" title=\"yum安装\"></a>yum安装</h2><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">vim /etc/yum<span class=\"selector-class\">.repos</span><span class=\"selector-class\">.d</span>/mongodb<span class=\"selector-class\">.repo</span></div><div class=\"line\"></div><div class=\"line\">[MongoDB]</div><div class=\"line\">name=MongoDB Repository</div><div class=\"line\">baseurl=http:<span class=\"comment\">//repo.mongodb.org/yum/redhat/$releasever/mongodb-org/3.2/x86_64/</span></div><div class=\"line\">gpgcheck=<span class=\"number\">0</span></div><div class=\"line\">enabled=<span class=\"number\">1</span></div><div class=\"line\"></div><div class=\"line\">yum -y install mongodb-org</div><div class=\"line\">/etc/init.d/mongod restart</div><div class=\"line\">chkconfig mongod on</div><div class=\"line\">mongod --version</div></pre></td></tr></table></figure>\n<h2 id=\"源码安装\"><a href=\"#源码安装\" class=\"headerlink\" title=\"源码安装\"></a>源码安装</h2><figure class=\"highlight dts\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">wget http:<span class=\"comment\">//fastdl.mongodb.org/linux/mongodb-linux-x86_64-rhel62-3.2.8.tgz</span></div><div class=\"line\">或：</div><div class=\"line\">wget https:<span class=\"comment\">//fossies.org/linux/misc/mongodb-linux-x86_64-3.2.8.tgz</span></div><div class=\"line\"></div><div class=\"line\">tar -xf mongodb-linux-x86_64-rhel62<span class=\"number\">-3.2</span><span class=\"number\">.8</span>.tgz -C <span class=\"meta-keyword\">/usr/</span>local/    <span class=\"meta\">#注意解压的包名</span></div><div class=\"line\">cd <span class=\"meta-keyword\">/usr/</span>local/</div><div class=\"line\">mv mongodb-linux-x86_64-rhel62<span class=\"number\">-3.2</span><span class=\"number\">.8</span> mongodb</div><div class=\"line\">mkdir <span class=\"meta-keyword\">/usr/</span>local<span class=\"meta-keyword\">/mongodb/</span>data</div><div class=\"line\"></div><div class=\"line\">vim <span class=\"meta-keyword\">/etc/</span>profile</div><div class=\"line\">export PATH=$PATH:<span class=\"meta-keyword\">/usr/</span>local<span class=\"meta-keyword\">/mongodb/</span>bin</div><div class=\"line\"></div><div class=\"line\">source <span class=\"meta-keyword\">/etc/</span>profile</div><div class=\"line\">安装好直接可以用了</div></pre></td></tr></table></figure>\n<hr>\n<h1 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h1><h2 id=\"修改配置文件\"><a href=\"#修改配置文件\" class=\"headerlink\" title=\"修改配置文件\"></a>修改配置文件</h2><figure class=\"highlight vala\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">vim /usr/local/mongodb/mongodb.conf</div><div class=\"line\"><span class=\"meta\">#端口</span></div><div class=\"line\">port=<span class=\"number\">27017</span></div><div class=\"line\"><span class=\"meta\">#数据文件存放目录</span></div><div class=\"line\">dbpath= /usr/local/mongodb/data</div><div class=\"line\"><span class=\"meta\">#日志文件存放目录</span></div><div class=\"line\">logpath= /usr/local/mongodb/mongodb.log</div><div class=\"line\"><span class=\"meta\">#使用追加的方式写日志</span></div><div class=\"line\">logappend=<span class=\"literal\">true</span></div><div class=\"line\"><span class=\"meta\">#以守护程序的方式启用，即在后台运行</span></div><div class=\"line\">fork=<span class=\"literal\">true</span></div><div class=\"line\"><span class=\"meta\">#最大同时连接数</span></div><div class=\"line\">maxConns=<span class=\"number\">500</span></div><div class=\"line\"><span class=\"meta\">#只允许通过本机访问</span></div><div class=\"line\"><span class=\"meta\">#bind_ip=127.0.0.1</span></div><div class=\"line\"><span class=\"meta\">#启用验证</span></div><div class=\"line\"><span class=\"meta\">#auth = true  #注释掉不启用用户认证，创建好用户后再启用</span></div></pre></td></tr></table></figure>\n<h2 id=\"启动mongodb：\"><a href=\"#启动mongodb：\" class=\"headerlink\" title=\"启动mongodb：\"></a>启动mongodb：</h2><figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"regexp\">/usr/</span>local<span class=\"regexp\">/mongodb/</span>bin<span class=\"regexp\">/mongod -f /u</span>sr<span class=\"regexp\">/local/m</span>ongodb<span class=\"regexp\">/mongodb.conf</span></div></pre></td></tr></table></figure>\n<hr>\n<h1 id=\"创建用户、管理用户\"><a href=\"#创建用户、管理用户\" class=\"headerlink\" title=\"创建用户、管理用户\"></a>创建用户、管理用户</h1><p><strong>read</strong>：允许用户读取指定数据库<br><strong>readWrite</strong>：允许用户读写指定数据库<br><strong>dbAdmin</strong>：允许用户在指定数据库中执行管理函数，如索引创建、删除，查看统计或访问system.profile<br><strong>userAdmin</strong>：允许用户向system.users集合写入，可以找指定数据库里创建、删除和管理用户<br><strong>clusterAdmin</strong>：只在admin数据库中可用，赋予用户所有分片和复制集相关函数的管理权限。<br><strong>readAnyDatabase</strong>：只在admin数据库中可用，赋予用户所有数据库的读权限<br><strong>readWriteAnyDatabase</strong>：只在admin数据库中可用，赋予用户所有数据库的读写权限<br><strong>userAdminAnyDatabase</strong>：只在admin数据库中可用，赋予用户所有数据库的userAdmin权限<br><strong>dbAdminAnyDatabase</strong>：只在admin数据库中可用，赋予用户所有数据库的dbAdmin权限。<br><strong>root</strong>：只在admin数据库中可用。超级账号，超级权限</p>\n<h2 id=\"创建用户\"><a href=\"#创建用户\" class=\"headerlink\" title=\"创建用户\"></a>创建用户</h2><p>对<strong>admin</strong>数据库，创建一个<strong>suadmin</strong>用户，密码是<strong>ilannipasswd</strong>，并且赋予<strong>dbAdminAnyDatabase和userAdminAnyDatabase权限</strong><br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">mongo</span></div><div class=\"line\"><span class=\"selector-tag\">use</span> <span class=\"selector-tag\">admin</span></div><div class=\"line\"><span class=\"selector-tag\">db</span><span class=\"selector-class\">.createUser</span>(&#123;<span class=\"attribute\">user</span>:<span class=\"string\">'suadmin'</span>,pwd:<span class=\"string\">'ilannipasswd'</span>,roles:[&#123;role:<span class=\"string\">'dbAdminAnyDatabase'</span>,db:<span class=\"string\">'admin'</span>&#125;,&#123;<span class=\"attribute\">role</span>:<span class=\"string\">'userAdminAnyDatabase'</span>,db:<span class=\"string\">'admin'</span>&#125;]&#125;)</div></pre></td></tr></table></figure></p>\n<h3 id=\"验证刚刚创建的用户\"><a href=\"#验证刚刚创建的用户\" class=\"headerlink\" title=\"验证刚刚创建的用户\"></a>验证刚刚创建的用户</h3><figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">db</span><span class=\"selector-class\">.auth</span>(<span class=\"string\">'suadmin'</span>,<span class=\"string\">'ilannipasswd'</span>)</div><div class=\"line\">或者：</div><div class=\"line\"><span class=\"selector-tag\">db</span><span class=\"selector-class\">.createUser</span>(&#123;<span class=\"attribute\">user</span>:<span class=\"string\">'suadmin'</span>,<span class=\"attribute\">pwd</span>:<span class=\"string\">'ilannipasswd'</span>,<span class=\"attribute\">roles</span>:[&#123;<span class=\"attribute\">role</span>:<span class=\"string\">'dbAdminAnyDatabase'</span>,<span class=\"attribute\">db</span>:<span class=\"string\">'admin'</span>&#125;]&#125;)</div></pre></td></tr></table></figure>\n<p><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/MongoDB001.png\" alt=\"\"><br>返回1表示成功。</p>\n<p>然后退出mongodb，启用用户验证<strong>auth = true</strong>，再次启动<strong>mongodb</strong><br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">pgrep -f mongodb |xargs <span class=\"keyword\">kill</span> <span class=\"number\">-2</span></div><div class=\"line\">vim /usr/<span class=\"keyword\">local</span>/mongodb/mongodb.conf</div><div class=\"line\">#启用验证</div><div class=\"line\">auth = <span class=\"literal\">true</span></div><div class=\"line\"></div><div class=\"line\">#启动mongo</div><div class=\"line\">/usr/<span class=\"keyword\">local</span>/mongodb/<span class=\"keyword\">bin</span>/mongod -f /usr/<span class=\"keyword\">local</span>/mongodb/mongodb.conf</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">mongo localhost:<span class=\"number\">27017</span>/<span class=\"keyword\">admin</span> -u suadmin -p ilannipasswd</div><div class=\"line\"><span class=\"keyword\">show</span> <span class=\"keyword\">users</span></div><div class=\"line\"><span class=\"keyword\">show</span> dbs</div><div class=\"line\"><span class=\"keyword\">show</span> collections</div></pre></td></tr></table></figure></p>\n<p>查看整个mongoDB全部的用户：<code>db.system.users.find()</code><br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/MongoDB002.png\" alt=\"\"></p>\n<h2 id=\"接着测试-创建库-创建用户\"><a href=\"#接着测试-创建库-创建用户\" class=\"headerlink\" title=\"接着测试,创建库,创建用户\"></a>接着测试,创建库,创建用户</h2><p>创建ilanni数据库，然后创建ilanniadmin用户，授予readWrite权限<br><figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">use</span> <span class=\"selector-tag\">ilanni</span></div><div class=\"line\"><span class=\"selector-tag\">db</span><span class=\"selector-class\">.createUser</span>(&#123;<span class=\"attribute\">user</span>:<span class=\"string\">'ilanniadmin'</span>,<span class=\"attribute\">pwd</span>:<span class=\"string\">'ilanni123456'</span>,<span class=\"attribute\">roles</span>:[&#123;<span class=\"attribute\">role</span>:<span class=\"string\">'readWrite'</span>,<span class=\"attribute\">db</span>:<span class=\"string\">'ilanni'</span>&#125;]&#125;)</div><div class=\"line\">或者</div><div class=\"line\"><span class=\"selector-tag\">db</span><span class=\"selector-class\">.createUser</span>(&#123;<span class=\"attribute\">user</span>:<span class=\"string\">'ilanniadmin'</span>,<span class=\"attribute\">pwd</span>:<span class=\"string\">'ilanni123456'</span>,<span class=\"attribute\">roles</span>:[&#123;<span class=\"attribute\">role</span>:<span class=\"string\">'dbAdmin'</span>,<span class=\"attribute\">db</span>:<span class=\"string\">'ilanni'</span>&#125;,&#123;<span class=\"attribute\">role</span>:<span class=\"string\">'readWrite'</span>,<span class=\"attribute\">db</span>:<span class=\"string\">'ilanni'</span>&#125;]&#125;)</div></pre></td></tr></table></figure></p>\n<p>验证刚刚创建的用户：<code>db.auth(&#39;ilanniadmin&#39;,&#39;ilanni123456&#39;)</code><br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/MongoDB003.png\" alt=\"\"><br>注意，在<strong>use ilanni</strong>后，ilanni实际上还没真正建立起来，只是表明目前是在使用ilanni了。如果什么都不操作离开的话,这个库就会被系统删除.所以我们还要执行下面的命令:<br><figure class=\"highlight xquery\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">db.ilanni.<span class=\"keyword\">insert</span>(&#123;<span class=\"string\">'name'</span>:<span class=\"string\">'tompig'</span>&#125;);</div><div class=\"line\">db.ilanni.<span class=\"keyword\">insert</span>(&#123;<span class=\"string\">'name'</span>:<span class=\"string\">'tompig1'</span>,<span class=\"string\">'id'</span>:<span class=\"number\">1</span>&#125;);</div></pre></td></tr></table></figure></p>\n<p>使用刚刚创建的<strong>ilanniadmin</strong>用户登陆数据库，然后插入一些，并查看<br><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">mongo localhost:<span class=\"number\">27017</span>/ilanni -u ilanniadmin -<span class=\"selector-tag\">p</span> ilanni123456</div><div class=\"line\">db<span class=\"selector-class\">.ilanni</span><span class=\"selector-class\">.findOne</span>()</div><div class=\"line\">db<span class=\"selector-class\">.ilanni</span><span class=\"selector-class\">.find</span>()</div></pre></td></tr></table></figure></p>\n<p><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/MongoDB004.png\" alt=\"\"><br>现在我们再使用<strong>suadmin</strong>用户登陆到服务器，查看服务器上的数据库<br><figure class=\"highlight nsis\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">mongo localhost:<span class=\"number\">27017</span>/<span class=\"literal\">admin</span> -u suadmin -p ilanni123456</div><div class=\"line\"><span class=\"literal\">show</span> dbs</div></pre></td></tr></table></figure></p>\n<p><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/MongoDB005.png\" alt=\"\"><br>通过上图，我们可以看到刚刚创建的ilanni数据库</p>\n<h2 id=\"删除库，删除用户\"><a href=\"#删除库，删除用户\" class=\"headerlink\" title=\"删除库，删除用户\"></a>删除库，删除用户</h2><p>现在我们来测试数据库的删除<br><figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">mongo</span> <span class=\"selector-tag\">localhost</span><span class=\"selector-pseudo\">:27017</span>/<span class=\"selector-tag\">admin</span> <span class=\"selector-tag\">-u</span> <span class=\"selector-tag\">suadmin</span> <span class=\"selector-tag\">-p</span> <span class=\"selector-tag\">ilannipasswd</span></div><div class=\"line\"><span class=\"selector-tag\">use</span> <span class=\"selector-tag\">ilanni</span></div><div class=\"line\"><span class=\"selector-tag\">db</span><span class=\"selector-class\">.dropDatabase</span>();</div></pre></td></tr></table></figure></p>\n<p><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/MongoDB006.png\" alt=\"\"><br>通过shell删除ilanni数据库</p>\n<p>现在我们来测试用户的删除</p>\n<p>导入数据：<code>mongoimport --port 27017 -d tms -c mod &lt; mongo_data/mod.json</code><br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/MongoDB007.png\" alt=\"\"></p>\n<p>命令行连接mongodb数据库：<br><figure class=\"highlight gauss\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">./mongo</div><div class=\"line\">help        <span class=\"meta\">#查看帮助</span></div><div class=\"line\"><span class=\"keyword\">show</span> dbs    <span class=\"meta\">#查看所有的mongodb数据库</span></div><div class=\"line\"><span class=\"keyword\">use</span> tms     <span class=\"meta\">#使用tms数据库</span></div><div class=\"line\">db.status() <span class=\"meta\">#查看数据库的信息</span></div></pre></td></tr></table></figure></p>\n<p><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/MongoDB008.png\" alt=\"\"><br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/MongoDB009.png\" alt=\"\"></p>\n<p>删除数据库<br><figure class=\"highlight gauss\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">show</span> dbs</div><div class=\"line\"><span class=\"keyword\">use</span> tms</div><div class=\"line\">db.dropDatabase()</div></pre></td></tr></table></figure></p>\n<p><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/MongoDB010.png\" alt=\"\"><br>导出数据：<code>mongoexport --port 27017 -d tms -c mod -o tms.json</code><br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/MongoDB011.png\" alt=\"\"></p>\n<hr>\n"},{"title":"工具集","abbrlink":13710,"date":"2016-11-03T14:22:03.000Z","_content":"\n# 备份\n### 备份软件\n  ● Amanda -客户端-服务器模型备份工具\n  ● Bacula – 另一个客户端-服务器模型备份工具\n  ● Backupninja -轻量级，可扩展的元数据备份系统\n  ● Backuppc -客户端-服务器模型备份工具和文件共享方案。\n  ● Burp -网络备份和还原程序\n  ● Duplicity -使用rsync算法加密的带宽-效率备份\n  ● Lsyncd -监控一个本地目录树的变化,然后产生一个进程去同步变化。默认使用rsync。\n  ● Rsnapshot -文件系统快照工具\n  ● SafeKeep -使用rdiff-backup，集中的，基于pull的备份\n  ● TarSnap – 具有一个开源客户端的安全备份服务\n  ● UrBackup -另一个客户端-服务器备份系统\n  ● DREBS – AWS EBS支持策略的备份脚本\n# 克隆\n### 克隆软件\n  ● Clonezilla -分区和磁盘镜像/克隆程序\n  ● Fog – 另一个计算机克隆解决方案\n  ● Redo Backup -简单的备份，恢复和还原\n### 云计算\n  ● AppScale – 兼容Google App引擎的开源云计算软件.\n  ● Archipel -使用Libvirt管理和监视虚拟机\n  ● CloudStack -创建，管理和部署基础云服务的云计算软件\n  ● Cobbler -Cobbler是一个Linux安装服务器，允许快速地构网络安装环境\n  ● Eucalyptus -兼容AWS的开源私有云软件\n  ● Mesos -开发和运行能效高的分布式系统。\n  ● OpenNebula -一个用于系统管理员和研发运维的用户驱动的云管理平台\n  ● OpenStack -构建私有和开放云的开源软件\n  ● The Foreman -Foreman是一个用于物理和虚拟服务器的全生命周期管理工具.FOSS.\n  ● Openstack Juno   云计算平台（类似阿里云，腾讯云这样的管理平台）\n云业务流程\n  ● BOSH -IaaS业务流程平台，最初用于部署和管理云计算平台PaaS,但也用于通用的分布式系统。\n  ● Cloudify -使用Python和YAML编写的开源TOSCA-based云业务流程软件平台。\n  ● Juju -云业务流程工具用于管理服务，比如charms，YAML配置和部署脚本集\n  ● MCollective -来自Puppet实验室的管理服务器业务流程和开发的Ruby框架\n  ● Overcast -在不同的云提供商上部署VMs，并在任何或所有（VM）上通过SSH并行运行命令行和脚本\n  ● Rundeck – 简单的业务流程工具\n  ● Salt -Python编写\n云存储\n  ● git-annex assistant -在你的每一个OSX和Linux电脑，Android设备，可移动驱动，NAS电器和云服务上一个同步文件夹\n  ● ownCloud -提供你的文件的统一访问，通过web，你的电脑和你的移动设备\n  ● Seafile -另一个开源的云存储解决方案\n  ● SparkleShare -提供云存储和文件同步服务。它默认使用Git作为存储后端\n  ● Swift -一个高可用，分布式，最终一致的对象/大数据存储\n  ● Syncthing -一个用于私有，加密和身份认证数据的开源系统\n代码审查\n基于Web的协作式代码审查系统\n  ● Gerrit -基于Git版本控制，它促进软件开发人员审查源代码修改和批准或拒绝这些变更。\n  ● Review Board – 基于MIT License的可用自由软件\n协作软件\n协作软件和群件套件\n  ● Citadel/UX -协同套件（消息和群件）继承于Citadel家族程序\n  ● EGroupware -PHP编写的群件软件\n  ● Horde Groupware -基于PHP的协作软件套件，包括邮件，日历，wiki，时间跟踪和文件管理\n  ● Kolab – 另一个群件套件\n  ● SOGo – 协作软件服务器，专注简单性和可伸缩性\n  ● Zimbra -协作软件套件，包括邮件服务和web客户端\n# 配置管理数据库\n### 配置管理数据库（CMDB）软件\n  ● i-doit – 开源的IT文档管理和CMDB\n  ● iTop -一个完全开源的，ITIL,基于web的服务管理工具\n  ● Ralph -用于大型数据中心或较小本地网络的资产管理，DICM和CMDB系统\n  ● Clusto -帮助跟踪你的库存，在哪，如何连接，同时提供一个和基础架构元素交互的抽象接口\n# 配置管理\n### 配置管理工具\n  ● Ansible -Python编写的，通过SSH管理节点\n  ● Jenkins+Ansible+Gitlab自动化部署三剑客 \n[http://www.showerlee.com/archives/1880][1]\n  ● CFEngine -轻量级代理系统。通过申明语言配置状态。\n  ● Chef -Rbuy和Erlang编写，使用纯RubyDSL\n  ● Fabric – Python库和cli工具，为应用程序部署或系统管理任务简化使用SSH。\n  ● Pallet -通过Clojure DSL进行架构定义，配置和管理\n  ● Puppet – Ruby编写，使用Puppet声明语言或Rbuy DSL\n  ● Salt – Python编写\n  ● Slaughter – Perl编写\n# 持续继承和持续部署\n### 持续集成/部署软件\n  ● Buildbot – 基于Python的持续集成工具\n  ● Drone – 构建在Docker，使用YAML文件配置的的持续集成服务器\n  ● GitLab CI -基于rbuy。他们也提供GitLab用于管理git存储库\n  ● Go – 开源的持续交付服务器\n  ● Jenkins – 一个可扩展的开源持续集成服务器\n  ● Vlad the Deployer -自动化部署\n# 分布式文件系统\n### 网络分布式文件系统\n  ● Ceph -分布式对象存储和文件系统\n  ● DRBD -分布式块设备复制\n  ● LeoFS -非结构化对象/数据存储和高可用性,分布,最终一致的存储系统。\n  ● GlusterFS – 可扩展，网络附加存储文件系统。\n  ● HDFS – Java编写的，用于Hadoop框架的分布式、可伸缩、可移植文件系统\n  ● Lustre -一种并行分布式文件系统,一般用于大规模集群计算。\n  ● MooseFS – 容错、网络分布式文件系统。\n  ● MogileFS -应用程序级别、网络分布式文件系统。\n  ● OpenAFS -只读副本和多操作系统支持的分布式网络文件系统\n  ● TahoeLAFS -安全、分散、容错、点对点分布式数据存储和分布式文件系统。\n  ● XtreemFS -XtreemFS是一个用于存储需求的容错式分布式文件系统。\n# DNS\n### DNS服务器\n  ● Bind -最广泛使用的域名服务软件\n  ● djbdns -DNS应用集合，包括tinydns\n  ● Designate – DNS REST API,支持多种DNS服务器的后端\n  ● dnsmasq -为小规模网络提供DNS,DHCP和TFTP服务的轻量级服务\n  ● Knot – 高性能，权威的DNS服务器\n  ● NSD – 权威的、高性能的、简单的域名服务器。\n  ● PowerDNS -具有各种数据存储后端和负载平衡功能的DNS服务器。\n  ● Unbound – 验证、递归和缓存DNS解析器。\n  ● Yadifa – 具有DNSSEC兼容的轻量级的权威域名服务器，支持.eu的顶级域名。\n# 主机控制面板\n### Web主机控制面板\n  ● Ajenti -Linux和BSD控制面板\n  ● Feathur – VPS供应和管理软件\n  ● ISPConfig -Linux主机控制面板\n  ● VestaCP -用于Linux和Nginx的主机面板\n  ● Virtualmin -基于webmin的Linux控制面板\n  ● ZPanel -Linux BSD和Windows控制面板\n# IMAP/POP3\n### IMAP/POP3邮件服务器\n  ● Courier IMAP/POP3 -快速，可伸缩，企业级IMAP和POP3服务器\n  ● Cyrus IMAP/POP3 -运行在密封服务器上,普通用户不允许登录。\n  ● Dovecot -主要考虑安全而编写的IMAP和POP3服务器\n  ● Qpopper – 一个古老且流行的POP3服务器实现\n# IT资产管理\n### IT资产管理软件\n  ● GLPI -带有额外管理接口的信息资源管理器\n  ● OCS Inventory NG -允许用户清算IT资产\n  ● RackTables -数据中心和服务器房间资产，比如将硬件资产,网络地址,在货架空间,网络配置文档化。\n  ● Ralph – 针对大型数据中心系统以及小型局域网网络的资产管理、DCIM和CMDB。\n  ● Snipe IT -资产和许可证管理软件\n# LDAP\n### LDAP服务器\n  ● 389 Directory Server – 通过Red Hat部署\n  ● Apache Directory Server -用Java编写的Apache软件基金会项目\n  ● Fusion Directory -基于OpenLDAP改善服务和公司目录的管理\n  ● OpenDJ – OpenDS分支\n  ● OpenDS -另一个用Java编写的目录服务器\n  ● OpenLDAP -由OpenLDAP项目开发\n# 日志管理\n### 日志管理工具：收集，解析，可视化\n  ● Elasticsearch – 一个基于Lucene的文档存储，主要用于日志索引、存储和分析。\n  ● Fluentd – 日志收集和发出\n  ● Flume -分布式日志收集和聚合系统\n  ● Graylog2 -具有报警选项的可插入日志和事件分析服务器\n  ● Heka -流处理系统，可用于日志聚合\n  ● Kibana – 可视化日志和时间戳数据\n  ● Logstash -管理事件和日志的工具\n  ● Octopussy -日志管理解决方案（可视化/报警/报告）\n# 监控\n### 监控软件\n  ● Cacti -基于Web的网络监控和图形工具\n  ● Cabot – 监控和报警，类似PagerDuty\n  ● check_mk -Nagios的扩展集合\n  ● Dash -一个用于GNU/Linux机器的低开销web仪表板监控。\n  ● Icinga – Nagios分支\n  ● LibreNMS – Observium分支\n  ● Monit – 管理和监控Unix系统的小型开源工具\n  ● Munin -网络资源监控工具\n  ● Naemon -基于Nagios4内核的网络监控工具，具有性能加强和新功能\n  ● Nagios -计算机系统，网络和基础架构监控软件\n  ● Observium -服务器和网络设备的SNMP监控，运行在linux\n  ● OMD -开放的监控分布\n  ● Opsview -基于Nagios4，Opsview核心，用于小型IT和测试环境\n  ● Riemann -灵活和快速的事件处理器，允许负责时间和度量分析\n  ● Sensu -开源的监控框架\n  ● Sentry – 应用监控，事件记录和聚合\n  ● Shinken – 另一个监控框架\n  ● Thruk – 多后台监控的web接口，支持Naemon，Nagios，Icinga和Shinken\n  ● Xymon -灵感来自Big Brother的网络监控\n  ● Zabbix – Enterprise-class software for monitoring of networks and applications.\n  ● Zabbix – 监控网络和应用的企业级软件\n  ● Zenoss -基于Zope的应用，服务器和网络管理平台\n# 度量和度量收集\n### 度量收集和显示软件\n  ● Collectd -系统统计收集守护进程\n  ● Collectl -高精度系统性能指标收集工具。\n  ● Dashing -Ruby gem,允许快速统计仪表板的开发。基于HTML5，允许在数据中心或会议室进行大屏幕显示。\n  ● Diamond -基于Python的统计收集守护进程\n  ● Ganglia – 基于RRD用于网格和/或集群的服务器的高性能、可伸缩监控设备。兼容Graphite，使用一个单一的收集进程。\n  ● Grafana -一个Graphite或InfluxDB仪表盘和图形编辑器\n  ● 开源的可伸缩绘图服务器\n  ● InfluxDB -开源的分布式时间序列数据库，没有外部依赖。\n  ● KairosDB -快速分布式可扩展的时间序列数据库,OpenTSDB 1. x的分支。\n  ● OpenTSDB -存储和服务大量的时间序列数据，不丢失粒度。\n  ● RRDtool – 开源企业标准，用于时间序列数据的高性能数据记录和绘图系统\n  ● Statsd -应用统计监听\n# 网络配置管理\n### 网络配置管理工具\n  ● GestióIP -一个自动的基于web的IPV4/IPV6地址管理工具\n  ● RANCID -监控网络设备配置和维护历史变更\n  ● rConfig -另一个网络配置管理工具\n# 时事通讯\n### 时事通讯软件\n  ● DadaMail -Perl编写的邮件列表管理器\n  ● phpList -PHP编写的时事通讯管理器\n# NOSQL\n### NOSQL数据库\n#### ● 列族\n  ○ Apache HBase – Hadoop数据库，一个分布式的大数据存储\n  ○ Cassandra -分布式数据库管理系统，设计用于处理大量数据跨多个服务器。\n  ○ Hypertable -基于c++的bigtable DBMS,节省通信，可独立或在Hadoop类似的分布式FS上运行。\n####  ● 文档存储\n  ○ CouchDB -易于使用,多主机复制的面向文档的数据库系统。\n  ○ ElasticSearch – 基于Java的数据库,受欢迎的日志聚合,和电子邮件归档项目。\n  ○ MongoDB – 另一个面向文档的数据库系统\n  ○ RavenDB – 具有ACID/事物功能的基于文档的数据库\n  ○ RethinkDB -开源分布式文档存储数据库，关注JSON\n#### ● 图\n  ○ FlockDB -Twitter分布式，容错图数据库\n  ○ Neo4j – 开源图数据库\n#### ● 键值\n  ○ LevelDB -Google高性能键值数据库\n  ○ Redis – 支持网络，基于内存，键值，亦可持久化数据库\n  ○ Riak -另一个容错的键值NoSQL数据库\nNoSQL服务器比较: [https://kkovacs.eu/cassandra-vs-mongodb-vs-couchdb-vs-redis][2]\n### 打包\n  ● fpm – 万能的多格式包创建器\n  ● omnibus-ruby – 全栈，跨发行版的包管理软件（Ruby）\n  ● packman -全栈，跨发行版的包管理软件（Python）\n  ● tito – 为git项目构建RPM\n### 队列\n  ● BeanstalkD – A simple, fast work queue.\n  ● BeanstalkD – 一个简单快速的工作队列\n  ● Gearman -快速的多语言队列或任务处理平台\n  ● NSQ – 实时分发的消息平台\n  ● RabbitMQ -健壮的，全功能，跨发行版的队列系统\n  ● ZeroMQ -轻量级队列系统\n# RDBMS\n### 关系数据库管理系统\n  ● Firebird – 真正的全球开源数据库\n  ● Galera -Galera MySQL集群是一个易于使用的高可用性解决方案，具有很高的系统正常运行时间,没有数据丢失,为未来的增长提供可伸缩性。\n  ● MariaDB -MySQL的社区开发分支\n  ● MySQL – 非常流行的RDBMS服务器\n  ● Percona Server -增强的，可替换MySQL\n  ● PostgreSQL – 对象关系数据库管理系统（ORDBMS)\n  ● PostgreSQL-XL – 基于PostgreSQL的可伸缩开源数据库集群\n  ● SQLite -自包容，弱服务器，零配置，支持事务的SQL DBS实现库\n# 安全\n### 安全工具\n  ● Denyhosts -阻止SSH字典攻击和暴力攻击\n  ● Fail2Ban – 扫描日志文件，并对具有恶意行为显示的IP采取措施\n  ● SpamAssassin -一个强大的和受欢迎的垃圾邮件过滤器，它采用多种检测技术。\n服务发现\n  ● Consul – Consule是伊戈尔服务发现，监控和配置的工具\n  ● Doozerd – Doozer是一个高可用，完全一致的存储，用于少量非常重要的数据\n  ● ZooKeeper – ZooKeeper是一个集中的服务，用于维护配置信息，命名，提供分布式同步和组服务\n# SMTP\n### SMTP服务器\n  ● Exim -由剑桥大学开发的消息传输代理（MTA)\n  ● Haraka – 用JavaScirpt编写的高性能，可插入的SMTP服务器\n  ● MailCatcher -Ruby gem部署一个简单的SMTP MTA网关，接收所有邮件并在web接口显示。对调试和开发有用。\n  ● Maildrop -开源的一次性邮件服务器，对开发也很有用\n  ● OpenSMTPD -从OpenBSD项目实现的安全的SMTP服务器\n  ● Postfix – 快速，易于管理和安全的Sendmail替代品\n  ● Qmail – 安全的Sendmail替代品\n  ● Sendmail -消息传输代理（MTA)\n# 软件容器\n### 操作系统级别的虚拟化\n  ● Bitnami -为web应用，开发栈和虚拟设备生产开源软件安装器或软件包\n  ● Docker – 给开发者和系统管理员构建，发布和运行分布式应用程序的开放平台\n  ● OpenVZ -Linux平台基于容器的虚拟化\n# SSH\n### SSH工具\n  ● autossh -网络中断后自动复位ssh会话。\n  ● Cluster SSH -通过一个图形化控制台控制多个xterm窗口。\n  ● DSH -Dancer的shell/分布式shell-从一个命令行包装执行多个远程shell命令。\n  ● Mosh – 移动shell\n  ● parallel-ssh -提供并行的OpenSSH版本和相关工具\n  ● SSH Power Tool -不使用pre-shared钥匙的情况下对多个服务器同时执行命令和上传文件\n# 统计\n### 分析软件\n  ● Analog – 世界上最流行的日志分析工具\n  ● GoAccess -在终端运行的开源的实时web日志分析和交互视图\n  ● Piwik -免费和开源的web分析应用\n  ● Webalizer – F快速免费的web服务器日志文件分析程序\n# 工单系统\n### 基于web的工单系统\n  ● Bugzilla -由Mozilla项目开发和使用过的通用缺陷跟踪和测试工具\n  ● Cerb – 基于商业开源许可的基于组的邮件管理项目\n  ● Flyspray – 使用PHP编写的缺陷跟踪系统\n  ● MantisBT -另一个基于web的缺陷跟踪系统\n  ● osTicket -开源的技术支持工单系统\n  ● Otrs -免费和开源故障通知单系统软件包,公司,组织,或其他实体可以使用它来基于询问分配工单并跟踪进一步的沟通。\n  ● Request Tracker -使用Perl编写的工单跟踪系统\n  ● TheBugGenie -开源的工单系统，具有非常完备的用户权限分配\n# 故障排除\n### 故障排除工具\n  ● mitmproxy -ython工具，用于拦截,查看和修改网络流量。在排除某些问题是非常重要的。\n  ● Sysdig -从一个运行的linux实例上捕获系统状态和活动，之后保存，过滤和分析\n  ● Wireshark -世界上著名的网络协议分析工具\n# 项目管理\n### 基于web的项目管理和缺陷跟踪系统\n  ● ChiliProject – Redmine分支\n  ● GitBucket 用Scala编写的GitHub的克隆，单独jar安装\n  ● GitLab -用Rbuy编写的GitHub的克隆\n  ● Gogs -用Go编写\n  ● OpenProject -开源的项目协作项目\n  ● Phabricator PHP编写\n  ● Redmine – 基于rails在rbuy编写\n  ● The Bug Genie -PHP编写\n  ● Trac -python编写\n  ● 阿里云持续交付https://crp.aliyun.com/#page6\nredmine项目管理系统\nhttps://bitnami.com/stack/redmine/installer\n\n\n# 版本控制\n### 软件版本和版本控制\n  ● Fossil -分布式版本控制，内建wiki和缺陷跟踪\n  ● Git -速度很快的分布式版本控制和源代码管理\n  ● GNU Bazaar -由Cannoicalzi赞助的分布式版本控制系统\n  ● Mercurial -另一个版本控制\n  ● Subversion -客户端-服务器版本控制系统\n  ● Coding\n  ● 码云\n  ● 阿里云 code.aliyun.com\n# 虚拟化\n### 虚拟化软件\n  ● Ganeti -在KVM和Xen上构建的集群虚拟服务器管理软件\n  ● KVM -Linux内核虚拟化架构\n  ● oVirt -管理虚拟机，存储和虚拟网络\n  ● Packer – 从单个源配置为多个平台创建相同的机器镜像\n  ● Vagrant – 创建完整开发环境的工具\n  ● VirtualBox -来自Oracle公司的虚拟化产品\n  ● Xen -用于32/64位Intel/AMD(IA 64）和PowerPC 970架构的虚拟机监控器\n  ● Docker\n  ● cockpit  (图形化管理Docker容器)\n# VPN\n### VPN软件\n  ● OpenVPN -使用一个定制的安全密钥交换协议,利用SSL / TLS。\n  ● Pritunl -基于OpenVPN的方案，易于设置\n  ● SoftEther – 具有高级特性的多协议VPN软件\n  ● sshuttle -穷人的VPN\n  ● strongSwan – Linux下完整的IPsec实现\n  ● tinc -分布式点对点VPN\n\n# 物联网\n● contiki   一开源物联网系统，支持tcp,vnc等协议\n● yeelink   物联网在线平台\n\n\n# 15款顶级开源人工智能工具推荐\nhttps://www.oschina.net/news/77729/15top-opensource-artificial-intelligence-tools?from=20161009\n\n\n\n[1]:\thttp://www.showerlee.com/archives/1880\n[2]:\thttps://kkovacs.eu/cassandra-vs-mongodb-vs-couchdb-vs-redis\n\n---","source":"_posts/杂项/2016-11-03-工具集.md","raw":"---\ntitle: 工具集\ncategories:\n  - 杂项\ntags:\n  - 工具集\nabbrlink: 13710\ndate: 2016-11-03 22:22:03\n---\n\n# 备份\n### 备份软件\n  ● Amanda -客户端-服务器模型备份工具\n  ● Bacula – 另一个客户端-服务器模型备份工具\n  ● Backupninja -轻量级，可扩展的元数据备份系统\n  ● Backuppc -客户端-服务器模型备份工具和文件共享方案。\n  ● Burp -网络备份和还原程序\n  ● Duplicity -使用rsync算法加密的带宽-效率备份\n  ● Lsyncd -监控一个本地目录树的变化,然后产生一个进程去同步变化。默认使用rsync。\n  ● Rsnapshot -文件系统快照工具\n  ● SafeKeep -使用rdiff-backup，集中的，基于pull的备份\n  ● TarSnap – 具有一个开源客户端的安全备份服务\n  ● UrBackup -另一个客户端-服务器备份系统\n  ● DREBS – AWS EBS支持策略的备份脚本\n# 克隆\n### 克隆软件\n  ● Clonezilla -分区和磁盘镜像/克隆程序\n  ● Fog – 另一个计算机克隆解决方案\n  ● Redo Backup -简单的备份，恢复和还原\n### 云计算\n  ● AppScale – 兼容Google App引擎的开源云计算软件.\n  ● Archipel -使用Libvirt管理和监视虚拟机\n  ● CloudStack -创建，管理和部署基础云服务的云计算软件\n  ● Cobbler -Cobbler是一个Linux安装服务器，允许快速地构网络安装环境\n  ● Eucalyptus -兼容AWS的开源私有云软件\n  ● Mesos -开发和运行能效高的分布式系统。\n  ● OpenNebula -一个用于系统管理员和研发运维的用户驱动的云管理平台\n  ● OpenStack -构建私有和开放云的开源软件\n  ● The Foreman -Foreman是一个用于物理和虚拟服务器的全生命周期管理工具.FOSS.\n  ● Openstack Juno   云计算平台（类似阿里云，腾讯云这样的管理平台）\n云业务流程\n  ● BOSH -IaaS业务流程平台，最初用于部署和管理云计算平台PaaS,但也用于通用的分布式系统。\n  ● Cloudify -使用Python和YAML编写的开源TOSCA-based云业务流程软件平台。\n  ● Juju -云业务流程工具用于管理服务，比如charms，YAML配置和部署脚本集\n  ● MCollective -来自Puppet实验室的管理服务器业务流程和开发的Ruby框架\n  ● Overcast -在不同的云提供商上部署VMs，并在任何或所有（VM）上通过SSH并行运行命令行和脚本\n  ● Rundeck – 简单的业务流程工具\n  ● Salt -Python编写\n云存储\n  ● git-annex assistant -在你的每一个OSX和Linux电脑，Android设备，可移动驱动，NAS电器和云服务上一个同步文件夹\n  ● ownCloud -提供你的文件的统一访问，通过web，你的电脑和你的移动设备\n  ● Seafile -另一个开源的云存储解决方案\n  ● SparkleShare -提供云存储和文件同步服务。它默认使用Git作为存储后端\n  ● Swift -一个高可用，分布式，最终一致的对象/大数据存储\n  ● Syncthing -一个用于私有，加密和身份认证数据的开源系统\n代码审查\n基于Web的协作式代码审查系统\n  ● Gerrit -基于Git版本控制，它促进软件开发人员审查源代码修改和批准或拒绝这些变更。\n  ● Review Board – 基于MIT License的可用自由软件\n协作软件\n协作软件和群件套件\n  ● Citadel/UX -协同套件（消息和群件）继承于Citadel家族程序\n  ● EGroupware -PHP编写的群件软件\n  ● Horde Groupware -基于PHP的协作软件套件，包括邮件，日历，wiki，时间跟踪和文件管理\n  ● Kolab – 另一个群件套件\n  ● SOGo – 协作软件服务器，专注简单性和可伸缩性\n  ● Zimbra -协作软件套件，包括邮件服务和web客户端\n# 配置管理数据库\n### 配置管理数据库（CMDB）软件\n  ● i-doit – 开源的IT文档管理和CMDB\n  ● iTop -一个完全开源的，ITIL,基于web的服务管理工具\n  ● Ralph -用于大型数据中心或较小本地网络的资产管理，DICM和CMDB系统\n  ● Clusto -帮助跟踪你的库存，在哪，如何连接，同时提供一个和基础架构元素交互的抽象接口\n# 配置管理\n### 配置管理工具\n  ● Ansible -Python编写的，通过SSH管理节点\n  ● Jenkins+Ansible+Gitlab自动化部署三剑客 \n[http://www.showerlee.com/archives/1880][1]\n  ● CFEngine -轻量级代理系统。通过申明语言配置状态。\n  ● Chef -Rbuy和Erlang编写，使用纯RubyDSL\n  ● Fabric – Python库和cli工具，为应用程序部署或系统管理任务简化使用SSH。\n  ● Pallet -通过Clojure DSL进行架构定义，配置和管理\n  ● Puppet – Ruby编写，使用Puppet声明语言或Rbuy DSL\n  ● Salt – Python编写\n  ● Slaughter – Perl编写\n# 持续继承和持续部署\n### 持续集成/部署软件\n  ● Buildbot – 基于Python的持续集成工具\n  ● Drone – 构建在Docker，使用YAML文件配置的的持续集成服务器\n  ● GitLab CI -基于rbuy。他们也提供GitLab用于管理git存储库\n  ● Go – 开源的持续交付服务器\n  ● Jenkins – 一个可扩展的开源持续集成服务器\n  ● Vlad the Deployer -自动化部署\n# 分布式文件系统\n### 网络分布式文件系统\n  ● Ceph -分布式对象存储和文件系统\n  ● DRBD -分布式块设备复制\n  ● LeoFS -非结构化对象/数据存储和高可用性,分布,最终一致的存储系统。\n  ● GlusterFS – 可扩展，网络附加存储文件系统。\n  ● HDFS – Java编写的，用于Hadoop框架的分布式、可伸缩、可移植文件系统\n  ● Lustre -一种并行分布式文件系统,一般用于大规模集群计算。\n  ● MooseFS – 容错、网络分布式文件系统。\n  ● MogileFS -应用程序级别、网络分布式文件系统。\n  ● OpenAFS -只读副本和多操作系统支持的分布式网络文件系统\n  ● TahoeLAFS -安全、分散、容错、点对点分布式数据存储和分布式文件系统。\n  ● XtreemFS -XtreemFS是一个用于存储需求的容错式分布式文件系统。\n# DNS\n### DNS服务器\n  ● Bind -最广泛使用的域名服务软件\n  ● djbdns -DNS应用集合，包括tinydns\n  ● Designate – DNS REST API,支持多种DNS服务器的后端\n  ● dnsmasq -为小规模网络提供DNS,DHCP和TFTP服务的轻量级服务\n  ● Knot – 高性能，权威的DNS服务器\n  ● NSD – 权威的、高性能的、简单的域名服务器。\n  ● PowerDNS -具有各种数据存储后端和负载平衡功能的DNS服务器。\n  ● Unbound – 验证、递归和缓存DNS解析器。\n  ● Yadifa – 具有DNSSEC兼容的轻量级的权威域名服务器，支持.eu的顶级域名。\n# 主机控制面板\n### Web主机控制面板\n  ● Ajenti -Linux和BSD控制面板\n  ● Feathur – VPS供应和管理软件\n  ● ISPConfig -Linux主机控制面板\n  ● VestaCP -用于Linux和Nginx的主机面板\n  ● Virtualmin -基于webmin的Linux控制面板\n  ● ZPanel -Linux BSD和Windows控制面板\n# IMAP/POP3\n### IMAP/POP3邮件服务器\n  ● Courier IMAP/POP3 -快速，可伸缩，企业级IMAP和POP3服务器\n  ● Cyrus IMAP/POP3 -运行在密封服务器上,普通用户不允许登录。\n  ● Dovecot -主要考虑安全而编写的IMAP和POP3服务器\n  ● Qpopper – 一个古老且流行的POP3服务器实现\n# IT资产管理\n### IT资产管理软件\n  ● GLPI -带有额外管理接口的信息资源管理器\n  ● OCS Inventory NG -允许用户清算IT资产\n  ● RackTables -数据中心和服务器房间资产，比如将硬件资产,网络地址,在货架空间,网络配置文档化。\n  ● Ralph – 针对大型数据中心系统以及小型局域网网络的资产管理、DCIM和CMDB。\n  ● Snipe IT -资产和许可证管理软件\n# LDAP\n### LDAP服务器\n  ● 389 Directory Server – 通过Red Hat部署\n  ● Apache Directory Server -用Java编写的Apache软件基金会项目\n  ● Fusion Directory -基于OpenLDAP改善服务和公司目录的管理\n  ● OpenDJ – OpenDS分支\n  ● OpenDS -另一个用Java编写的目录服务器\n  ● OpenLDAP -由OpenLDAP项目开发\n# 日志管理\n### 日志管理工具：收集，解析，可视化\n  ● Elasticsearch – 一个基于Lucene的文档存储，主要用于日志索引、存储和分析。\n  ● Fluentd – 日志收集和发出\n  ● Flume -分布式日志收集和聚合系统\n  ● Graylog2 -具有报警选项的可插入日志和事件分析服务器\n  ● Heka -流处理系统，可用于日志聚合\n  ● Kibana – 可视化日志和时间戳数据\n  ● Logstash -管理事件和日志的工具\n  ● Octopussy -日志管理解决方案（可视化/报警/报告）\n# 监控\n### 监控软件\n  ● Cacti -基于Web的网络监控和图形工具\n  ● Cabot – 监控和报警，类似PagerDuty\n  ● check_mk -Nagios的扩展集合\n  ● Dash -一个用于GNU/Linux机器的低开销web仪表板监控。\n  ● Icinga – Nagios分支\n  ● LibreNMS – Observium分支\n  ● Monit – 管理和监控Unix系统的小型开源工具\n  ● Munin -网络资源监控工具\n  ● Naemon -基于Nagios4内核的网络监控工具，具有性能加强和新功能\n  ● Nagios -计算机系统，网络和基础架构监控软件\n  ● Observium -服务器和网络设备的SNMP监控，运行在linux\n  ● OMD -开放的监控分布\n  ● Opsview -基于Nagios4，Opsview核心，用于小型IT和测试环境\n  ● Riemann -灵活和快速的事件处理器，允许负责时间和度量分析\n  ● Sensu -开源的监控框架\n  ● Sentry – 应用监控，事件记录和聚合\n  ● Shinken – 另一个监控框架\n  ● Thruk – 多后台监控的web接口，支持Naemon，Nagios，Icinga和Shinken\n  ● Xymon -灵感来自Big Brother的网络监控\n  ● Zabbix – Enterprise-class software for monitoring of networks and applications.\n  ● Zabbix – 监控网络和应用的企业级软件\n  ● Zenoss -基于Zope的应用，服务器和网络管理平台\n# 度量和度量收集\n### 度量收集和显示软件\n  ● Collectd -系统统计收集守护进程\n  ● Collectl -高精度系统性能指标收集工具。\n  ● Dashing -Ruby gem,允许快速统计仪表板的开发。基于HTML5，允许在数据中心或会议室进行大屏幕显示。\n  ● Diamond -基于Python的统计收集守护进程\n  ● Ganglia – 基于RRD用于网格和/或集群的服务器的高性能、可伸缩监控设备。兼容Graphite，使用一个单一的收集进程。\n  ● Grafana -一个Graphite或InfluxDB仪表盘和图形编辑器\n  ● 开源的可伸缩绘图服务器\n  ● InfluxDB -开源的分布式时间序列数据库，没有外部依赖。\n  ● KairosDB -快速分布式可扩展的时间序列数据库,OpenTSDB 1. x的分支。\n  ● OpenTSDB -存储和服务大量的时间序列数据，不丢失粒度。\n  ● RRDtool – 开源企业标准，用于时间序列数据的高性能数据记录和绘图系统\n  ● Statsd -应用统计监听\n# 网络配置管理\n### 网络配置管理工具\n  ● GestióIP -一个自动的基于web的IPV4/IPV6地址管理工具\n  ● RANCID -监控网络设备配置和维护历史变更\n  ● rConfig -另一个网络配置管理工具\n# 时事通讯\n### 时事通讯软件\n  ● DadaMail -Perl编写的邮件列表管理器\n  ● phpList -PHP编写的时事通讯管理器\n# NOSQL\n### NOSQL数据库\n#### ● 列族\n  ○ Apache HBase – Hadoop数据库，一个分布式的大数据存储\n  ○ Cassandra -分布式数据库管理系统，设计用于处理大量数据跨多个服务器。\n  ○ Hypertable -基于c++的bigtable DBMS,节省通信，可独立或在Hadoop类似的分布式FS上运行。\n####  ● 文档存储\n  ○ CouchDB -易于使用,多主机复制的面向文档的数据库系统。\n  ○ ElasticSearch – 基于Java的数据库,受欢迎的日志聚合,和电子邮件归档项目。\n  ○ MongoDB – 另一个面向文档的数据库系统\n  ○ RavenDB – 具有ACID/事物功能的基于文档的数据库\n  ○ RethinkDB -开源分布式文档存储数据库，关注JSON\n#### ● 图\n  ○ FlockDB -Twitter分布式，容错图数据库\n  ○ Neo4j – 开源图数据库\n#### ● 键值\n  ○ LevelDB -Google高性能键值数据库\n  ○ Redis – 支持网络，基于内存，键值，亦可持久化数据库\n  ○ Riak -另一个容错的键值NoSQL数据库\nNoSQL服务器比较: [https://kkovacs.eu/cassandra-vs-mongodb-vs-couchdb-vs-redis][2]\n### 打包\n  ● fpm – 万能的多格式包创建器\n  ● omnibus-ruby – 全栈，跨发行版的包管理软件（Ruby）\n  ● packman -全栈，跨发行版的包管理软件（Python）\n  ● tito – 为git项目构建RPM\n### 队列\n  ● BeanstalkD – A simple, fast work queue.\n  ● BeanstalkD – 一个简单快速的工作队列\n  ● Gearman -快速的多语言队列或任务处理平台\n  ● NSQ – 实时分发的消息平台\n  ● RabbitMQ -健壮的，全功能，跨发行版的队列系统\n  ● ZeroMQ -轻量级队列系统\n# RDBMS\n### 关系数据库管理系统\n  ● Firebird – 真正的全球开源数据库\n  ● Galera -Galera MySQL集群是一个易于使用的高可用性解决方案，具有很高的系统正常运行时间,没有数据丢失,为未来的增长提供可伸缩性。\n  ● MariaDB -MySQL的社区开发分支\n  ● MySQL – 非常流行的RDBMS服务器\n  ● Percona Server -增强的，可替换MySQL\n  ● PostgreSQL – 对象关系数据库管理系统（ORDBMS)\n  ● PostgreSQL-XL – 基于PostgreSQL的可伸缩开源数据库集群\n  ● SQLite -自包容，弱服务器，零配置，支持事务的SQL DBS实现库\n# 安全\n### 安全工具\n  ● Denyhosts -阻止SSH字典攻击和暴力攻击\n  ● Fail2Ban – 扫描日志文件，并对具有恶意行为显示的IP采取措施\n  ● SpamAssassin -一个强大的和受欢迎的垃圾邮件过滤器，它采用多种检测技术。\n服务发现\n  ● Consul – Consule是伊戈尔服务发现，监控和配置的工具\n  ● Doozerd – Doozer是一个高可用，完全一致的存储，用于少量非常重要的数据\n  ● ZooKeeper – ZooKeeper是一个集中的服务，用于维护配置信息，命名，提供分布式同步和组服务\n# SMTP\n### SMTP服务器\n  ● Exim -由剑桥大学开发的消息传输代理（MTA)\n  ● Haraka – 用JavaScirpt编写的高性能，可插入的SMTP服务器\n  ● MailCatcher -Ruby gem部署一个简单的SMTP MTA网关，接收所有邮件并在web接口显示。对调试和开发有用。\n  ● Maildrop -开源的一次性邮件服务器，对开发也很有用\n  ● OpenSMTPD -从OpenBSD项目实现的安全的SMTP服务器\n  ● Postfix – 快速，易于管理和安全的Sendmail替代品\n  ● Qmail – 安全的Sendmail替代品\n  ● Sendmail -消息传输代理（MTA)\n# 软件容器\n### 操作系统级别的虚拟化\n  ● Bitnami -为web应用，开发栈和虚拟设备生产开源软件安装器或软件包\n  ● Docker – 给开发者和系统管理员构建，发布和运行分布式应用程序的开放平台\n  ● OpenVZ -Linux平台基于容器的虚拟化\n# SSH\n### SSH工具\n  ● autossh -网络中断后自动复位ssh会话。\n  ● Cluster SSH -通过一个图形化控制台控制多个xterm窗口。\n  ● DSH -Dancer的shell/分布式shell-从一个命令行包装执行多个远程shell命令。\n  ● Mosh – 移动shell\n  ● parallel-ssh -提供并行的OpenSSH版本和相关工具\n  ● SSH Power Tool -不使用pre-shared钥匙的情况下对多个服务器同时执行命令和上传文件\n# 统计\n### 分析软件\n  ● Analog – 世界上最流行的日志分析工具\n  ● GoAccess -在终端运行的开源的实时web日志分析和交互视图\n  ● Piwik -免费和开源的web分析应用\n  ● Webalizer – F快速免费的web服务器日志文件分析程序\n# 工单系统\n### 基于web的工单系统\n  ● Bugzilla -由Mozilla项目开发和使用过的通用缺陷跟踪和测试工具\n  ● Cerb – 基于商业开源许可的基于组的邮件管理项目\n  ● Flyspray – 使用PHP编写的缺陷跟踪系统\n  ● MantisBT -另一个基于web的缺陷跟踪系统\n  ● osTicket -开源的技术支持工单系统\n  ● Otrs -免费和开源故障通知单系统软件包,公司,组织,或其他实体可以使用它来基于询问分配工单并跟踪进一步的沟通。\n  ● Request Tracker -使用Perl编写的工单跟踪系统\n  ● TheBugGenie -开源的工单系统，具有非常完备的用户权限分配\n# 故障排除\n### 故障排除工具\n  ● mitmproxy -ython工具，用于拦截,查看和修改网络流量。在排除某些问题是非常重要的。\n  ● Sysdig -从一个运行的linux实例上捕获系统状态和活动，之后保存，过滤和分析\n  ● Wireshark -世界上著名的网络协议分析工具\n# 项目管理\n### 基于web的项目管理和缺陷跟踪系统\n  ● ChiliProject – Redmine分支\n  ● GitBucket 用Scala编写的GitHub的克隆，单独jar安装\n  ● GitLab -用Rbuy编写的GitHub的克隆\n  ● Gogs -用Go编写\n  ● OpenProject -开源的项目协作项目\n  ● Phabricator PHP编写\n  ● Redmine – 基于rails在rbuy编写\n  ● The Bug Genie -PHP编写\n  ● Trac -python编写\n  ● 阿里云持续交付https://crp.aliyun.com/#page6\nredmine项目管理系统\nhttps://bitnami.com/stack/redmine/installer\n\n\n# 版本控制\n### 软件版本和版本控制\n  ● Fossil -分布式版本控制，内建wiki和缺陷跟踪\n  ● Git -速度很快的分布式版本控制和源代码管理\n  ● GNU Bazaar -由Cannoicalzi赞助的分布式版本控制系统\n  ● Mercurial -另一个版本控制\n  ● Subversion -客户端-服务器版本控制系统\n  ● Coding\n  ● 码云\n  ● 阿里云 code.aliyun.com\n# 虚拟化\n### 虚拟化软件\n  ● Ganeti -在KVM和Xen上构建的集群虚拟服务器管理软件\n  ● KVM -Linux内核虚拟化架构\n  ● oVirt -管理虚拟机，存储和虚拟网络\n  ● Packer – 从单个源配置为多个平台创建相同的机器镜像\n  ● Vagrant – 创建完整开发环境的工具\n  ● VirtualBox -来自Oracle公司的虚拟化产品\n  ● Xen -用于32/64位Intel/AMD(IA 64）和PowerPC 970架构的虚拟机监控器\n  ● Docker\n  ● cockpit  (图形化管理Docker容器)\n# VPN\n### VPN软件\n  ● OpenVPN -使用一个定制的安全密钥交换协议,利用SSL / TLS。\n  ● Pritunl -基于OpenVPN的方案，易于设置\n  ● SoftEther – 具有高级特性的多协议VPN软件\n  ● sshuttle -穷人的VPN\n  ● strongSwan – Linux下完整的IPsec实现\n  ● tinc -分布式点对点VPN\n\n# 物联网\n● contiki   一开源物联网系统，支持tcp,vnc等协议\n● yeelink   物联网在线平台\n\n\n# 15款顶级开源人工智能工具推荐\nhttps://www.oschina.net/news/77729/15top-opensource-artificial-intelligence-tools?from=20161009\n\n\n\n[1]:\thttp://www.showerlee.com/archives/1880\n[2]:\thttps://kkovacs.eu/cassandra-vs-mongodb-vs-couchdb-vs-redis\n\n---","slug":"杂项-2016-11-03-工具集","published":1,"updated":"2016-11-13T03:36:30.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civi8ouiw001g2c6nyh4uqvdd","content":"<h1 id=\"备份\"><a href=\"#备份\" class=\"headerlink\" title=\"备份\"></a>备份</h1><h3 id=\"备份软件\"><a href=\"#备份软件\" class=\"headerlink\" title=\"备份软件\"></a>备份软件</h3><p>  ● Amanda -客户端-服务器模型备份工具<br>  ● Bacula – 另一个客户端-服务器模型备份工具<br>  ● Backupninja -轻量级，可扩展的元数据备份系统<br>  ● Backuppc -客户端-服务器模型备份工具和文件共享方案。<br>  ● Burp -网络备份和还原程序<br>  ● Duplicity -使用rsync算法加密的带宽-效率备份<br>  ● Lsyncd -监控一个本地目录树的变化,然后产生一个进程去同步变化。默认使用rsync。<br>  ● Rsnapshot -文件系统快照工具<br>  ● SafeKeep -使用rdiff-backup，集中的，基于pull的备份<br>  ● TarSnap – 具有一个开源客户端的安全备份服务<br>  ● UrBackup -另一个客户端-服务器备份系统<br>  ● DREBS – AWS EBS支持策略的备份脚本</p>\n<h1 id=\"克隆\"><a href=\"#克隆\" class=\"headerlink\" title=\"克隆\"></a>克隆</h1><h3 id=\"克隆软件\"><a href=\"#克隆软件\" class=\"headerlink\" title=\"克隆软件\"></a>克隆软件</h3><p>  ● Clonezilla -分区和磁盘镜像/克隆程序<br>  ● Fog – 另一个计算机克隆解决方案<br>  ● Redo Backup -简单的备份，恢复和还原</p>\n<h3 id=\"云计算\"><a href=\"#云计算\" class=\"headerlink\" title=\"云计算\"></a>云计算</h3><p>  ● AppScale – 兼容Google App引擎的开源云计算软件.<br>  ● Archipel -使用Libvirt管理和监视虚拟机<br>  ● CloudStack -创建，管理和部署基础云服务的云计算软件<br>  ● Cobbler -Cobbler是一个Linux安装服务器，允许快速地构网络安装环境<br>  ● Eucalyptus -兼容AWS的开源私有云软件<br>  ● Mesos -开发和运行能效高的分布式系统。<br>  ● OpenNebula -一个用于系统管理员和研发运维的用户驱动的云管理平台<br>  ● OpenStack -构建私有和开放云的开源软件<br>  ● The Foreman -Foreman是一个用于物理和虚拟服务器的全生命周期管理工具.FOSS.<br>  ● Openstack Juno   云计算平台（类似阿里云，腾讯云这样的管理平台）<br>云业务流程<br>  ● BOSH -IaaS业务流程平台，最初用于部署和管理云计算平台PaaS,但也用于通用的分布式系统。<br>  ● Cloudify -使用Python和YAML编写的开源TOSCA-based云业务流程软件平台。<br>  ● Juju -云业务流程工具用于管理服务，比如charms，YAML配置和部署脚本集<br>  ● MCollective -来自Puppet实验室的管理服务器业务流程和开发的Ruby框架<br>  ● Overcast -在不同的云提供商上部署VMs，并在任何或所有（VM）上通过SSH并行运行命令行和脚本<br>  ● Rundeck – 简单的业务流程工具<br>  ● Salt -Python编写<br>云存储<br>  ● git-annex assistant -在你的每一个OSX和Linux电脑，Android设备，可移动驱动，NAS电器和云服务上一个同步文件夹<br>  ● ownCloud -提供你的文件的统一访问，通过web，你的电脑和你的移动设备<br>  ● Seafile -另一个开源的云存储解决方案<br>  ● SparkleShare -提供云存储和文件同步服务。它默认使用Git作为存储后端<br>  ● Swift -一个高可用，分布式，最终一致的对象/大数据存储<br>  ● Syncthing -一个用于私有，加密和身份认证数据的开源系统<br>代码审查<br>基于Web的协作式代码审查系统<br>  ● Gerrit -基于Git版本控制，它促进软件开发人员审查源代码修改和批准或拒绝这些变更。<br>  ● Review Board – 基于MIT License的可用自由软件<br>协作软件<br>协作软件和群件套件<br>  ● Citadel/UX -协同套件（消息和群件）继承于Citadel家族程序<br>  ● EGroupware -PHP编写的群件软件<br>  ● Horde Groupware -基于PHP的协作软件套件，包括邮件，日历，wiki，时间跟踪和文件管理<br>  ● Kolab – 另一个群件套件<br>  ● SOGo – 协作软件服务器，专注简单性和可伸缩性<br>  ● Zimbra -协作软件套件，包括邮件服务和web客户端</p>\n<h1 id=\"配置管理数据库\"><a href=\"#配置管理数据库\" class=\"headerlink\" title=\"配置管理数据库\"></a>配置管理数据库</h1><h3 id=\"配置管理数据库（CMDB）软件\"><a href=\"#配置管理数据库（CMDB）软件\" class=\"headerlink\" title=\"配置管理数据库（CMDB）软件\"></a>配置管理数据库（CMDB）软件</h3><p>  ● i-doit – 开源的IT文档管理和CMDB<br>  ● iTop -一个完全开源的，ITIL,基于web的服务管理工具<br>  ● Ralph -用于大型数据中心或较小本地网络的资产管理，DICM和CMDB系统<br>  ● Clusto -帮助跟踪你的库存，在哪，如何连接，同时提供一个和基础架构元素交互的抽象接口</p>\n<h1 id=\"配置管理\"><a href=\"#配置管理\" class=\"headerlink\" title=\"配置管理\"></a>配置管理</h1><h3 id=\"配置管理工具\"><a href=\"#配置管理工具\" class=\"headerlink\" title=\"配置管理工具\"></a>配置管理工具</h3><p>  ● Ansible -Python编写的，通过SSH管理节点<br>  ● Jenkins+Ansible+Gitlab自动化部署三剑客<br><a href=\"http://www.showerlee.com/archives/1880\" target=\"_blank\" rel=\"external\">http://www.showerlee.com/archives/1880</a><br>  ● CFEngine -轻量级代理系统。通过申明语言配置状态。<br>  ● Chef -Rbuy和Erlang编写，使用纯RubyDSL<br>  ● Fabric – Python库和cli工具，为应用程序部署或系统管理任务简化使用SSH。<br>  ● Pallet -通过Clojure DSL进行架构定义，配置和管理<br>  ● Puppet – Ruby编写，使用Puppet声明语言或Rbuy DSL<br>  ● Salt – Python编写<br>  ● Slaughter – Perl编写</p>\n<h1 id=\"持续继承和持续部署\"><a href=\"#持续继承和持续部署\" class=\"headerlink\" title=\"持续继承和持续部署\"></a>持续继承和持续部署</h1><h3 id=\"持续集成-部署软件\"><a href=\"#持续集成-部署软件\" class=\"headerlink\" title=\"持续集成/部署软件\"></a>持续集成/部署软件</h3><p>  ● Buildbot – 基于Python的持续集成工具<br>  ● Drone – 构建在Docker，使用YAML文件配置的的持续集成服务器<br>  ● GitLab CI -基于rbuy。他们也提供GitLab用于管理git存储库<br>  ● Go – 开源的持续交付服务器<br>  ● Jenkins – 一个可扩展的开源持续集成服务器<br>  ● Vlad the Deployer -自动化部署</p>\n<h1 id=\"分布式文件系统\"><a href=\"#分布式文件系统\" class=\"headerlink\" title=\"分布式文件系统\"></a>分布式文件系统</h1><h3 id=\"网络分布式文件系统\"><a href=\"#网络分布式文件系统\" class=\"headerlink\" title=\"网络分布式文件系统\"></a>网络分布式文件系统</h3><p>  ● Ceph -分布式对象存储和文件系统<br>  ● DRBD -分布式块设备复制<br>  ● LeoFS -非结构化对象/数据存储和高可用性,分布,最终一致的存储系统。<br>  ● GlusterFS – 可扩展，网络附加存储文件系统。<br>  ● HDFS – Java编写的，用于Hadoop框架的分布式、可伸缩、可移植文件系统<br>  ● Lustre -一种并行分布式文件系统,一般用于大规模集群计算。<br>  ● MooseFS – 容错、网络分布式文件系统。<br>  ● MogileFS -应用程序级别、网络分布式文件系统。<br>  ● OpenAFS -只读副本和多操作系统支持的分布式网络文件系统<br>  ● TahoeLAFS -安全、分散、容错、点对点分布式数据存储和分布式文件系统。<br>  ● XtreemFS -XtreemFS是一个用于存储需求的容错式分布式文件系统。</p>\n<h1 id=\"DNS\"><a href=\"#DNS\" class=\"headerlink\" title=\"DNS\"></a>DNS</h1><h3 id=\"DNS服务器\"><a href=\"#DNS服务器\" class=\"headerlink\" title=\"DNS服务器\"></a>DNS服务器</h3><p>  ● Bind -最广泛使用的域名服务软件<br>  ● djbdns -DNS应用集合，包括tinydns<br>  ● Designate – DNS REST API,支持多种DNS服务器的后端<br>  ● dnsmasq -为小规模网络提供DNS,DHCP和TFTP服务的轻量级服务<br>  ● Knot – 高性能，权威的DNS服务器<br>  ● NSD – 权威的、高性能的、简单的域名服务器。<br>  ● PowerDNS -具有各种数据存储后端和负载平衡功能的DNS服务器。<br>  ● Unbound – 验证、递归和缓存DNS解析器。<br>  ● Yadifa – 具有DNSSEC兼容的轻量级的权威域名服务器，支持.eu的顶级域名。</p>\n<h1 id=\"主机控制面板\"><a href=\"#主机控制面板\" class=\"headerlink\" title=\"主机控制面板\"></a>主机控制面板</h1><h3 id=\"Web主机控制面板\"><a href=\"#Web主机控制面板\" class=\"headerlink\" title=\"Web主机控制面板\"></a>Web主机控制面板</h3><p>  ● Ajenti -Linux和BSD控制面板<br>  ● Feathur – VPS供应和管理软件<br>  ● ISPConfig -Linux主机控制面板<br>  ● VestaCP -用于Linux和Nginx的主机面板<br>  ● Virtualmin -基于webmin的Linux控制面板<br>  ● ZPanel -Linux BSD和Windows控制面板</p>\n<h1 id=\"IMAP-POP3\"><a href=\"#IMAP-POP3\" class=\"headerlink\" title=\"IMAP/POP3\"></a>IMAP/POP3</h1><h3 id=\"IMAP-POP3邮件服务器\"><a href=\"#IMAP-POP3邮件服务器\" class=\"headerlink\" title=\"IMAP/POP3邮件服务器\"></a>IMAP/POP3邮件服务器</h3><p>  ● Courier IMAP/POP3 -快速，可伸缩，企业级IMAP和POP3服务器<br>  ● Cyrus IMAP/POP3 -运行在密封服务器上,普通用户不允许登录。<br>  ● Dovecot -主要考虑安全而编写的IMAP和POP3服务器<br>  ● Qpopper – 一个古老且流行的POP3服务器实现</p>\n<h1 id=\"IT资产管理\"><a href=\"#IT资产管理\" class=\"headerlink\" title=\"IT资产管理\"></a>IT资产管理</h1><h3 id=\"IT资产管理软件\"><a href=\"#IT资产管理软件\" class=\"headerlink\" title=\"IT资产管理软件\"></a>IT资产管理软件</h3><p>  ● GLPI -带有额外管理接口的信息资源管理器<br>  ● OCS Inventory NG -允许用户清算IT资产<br>  ● RackTables -数据中心和服务器房间资产，比如将硬件资产,网络地址,在货架空间,网络配置文档化。<br>  ● Ralph – 针对大型数据中心系统以及小型局域网网络的资产管理、DCIM和CMDB。<br>  ● Snipe IT -资产和许可证管理软件</p>\n<h1 id=\"LDAP\"><a href=\"#LDAP\" class=\"headerlink\" title=\"LDAP\"></a>LDAP</h1><h3 id=\"LDAP服务器\"><a href=\"#LDAP服务器\" class=\"headerlink\" title=\"LDAP服务器\"></a>LDAP服务器</h3><p>  ● 389 Directory Server – 通过Red Hat部署<br>  ● Apache Directory Server -用Java编写的Apache软件基金会项目<br>  ● Fusion Directory -基于OpenLDAP改善服务和公司目录的管理<br>  ● OpenDJ – OpenDS分支<br>  ● OpenDS -另一个用Java编写的目录服务器<br>  ● OpenLDAP -由OpenLDAP项目开发</p>\n<h1 id=\"日志管理\"><a href=\"#日志管理\" class=\"headerlink\" title=\"日志管理\"></a>日志管理</h1><h3 id=\"日志管理工具：收集，解析，可视化\"><a href=\"#日志管理工具：收集，解析，可视化\" class=\"headerlink\" title=\"日志管理工具：收集，解析，可视化\"></a>日志管理工具：收集，解析，可视化</h3><p>  ● Elasticsearch – 一个基于Lucene的文档存储，主要用于日志索引、存储和分析。<br>  ● Fluentd – 日志收集和发出<br>  ● Flume -分布式日志收集和聚合系统<br>  ● Graylog2 -具有报警选项的可插入日志和事件分析服务器<br>  ● Heka -流处理系统，可用于日志聚合<br>  ● Kibana – 可视化日志和时间戳数据<br>  ● Logstash -管理事件和日志的工具<br>  ● Octopussy -日志管理解决方案（可视化/报警/报告）</p>\n<h1 id=\"监控\"><a href=\"#监控\" class=\"headerlink\" title=\"监控\"></a>监控</h1><h3 id=\"监控软件\"><a href=\"#监控软件\" class=\"headerlink\" title=\"监控软件\"></a>监控软件</h3><p>  ● Cacti -基于Web的网络监控和图形工具<br>  ● Cabot – 监控和报警，类似PagerDuty<br>  ● check_mk -Nagios的扩展集合<br>  ● Dash -一个用于GNU/Linux机器的低开销web仪表板监控。<br>  ● Icinga – Nagios分支<br>  ● LibreNMS – Observium分支<br>  ● Monit – 管理和监控Unix系统的小型开源工具<br>  ● Munin -网络资源监控工具<br>  ● Naemon -基于Nagios4内核的网络监控工具，具有性能加强和新功能<br>  ● Nagios -计算机系统，网络和基础架构监控软件<br>  ● Observium -服务器和网络设备的SNMP监控，运行在linux<br>  ● OMD -开放的监控分布<br>  ● Opsview -基于Nagios4，Opsview核心，用于小型IT和测试环境<br>  ● Riemann -灵活和快速的事件处理器，允许负责时间和度量分析<br>  ● Sensu -开源的监控框架<br>  ● Sentry – 应用监控，事件记录和聚合<br>  ● Shinken – 另一个监控框架<br>  ● Thruk – 多后台监控的web接口，支持Naemon，Nagios，Icinga和Shinken<br>  ● Xymon -灵感来自Big Brother的网络监控<br>  ● Zabbix – Enterprise-class software for monitoring of networks and applications.<br>  ● Zabbix – 监控网络和应用的企业级软件<br>  ● Zenoss -基于Zope的应用，服务器和网络管理平台</p>\n<h1 id=\"度量和度量收集\"><a href=\"#度量和度量收集\" class=\"headerlink\" title=\"度量和度量收集\"></a>度量和度量收集</h1><h3 id=\"度量收集和显示软件\"><a href=\"#度量收集和显示软件\" class=\"headerlink\" title=\"度量收集和显示软件\"></a>度量收集和显示软件</h3><p>  ● Collectd -系统统计收集守护进程<br>  ● Collectl -高精度系统性能指标收集工具。<br>  ● Dashing -Ruby gem,允许快速统计仪表板的开发。基于HTML5，允许在数据中心或会议室进行大屏幕显示。<br>  ● Diamond -基于Python的统计收集守护进程<br>  ● Ganglia – 基于RRD用于网格和/或集群的服务器的高性能、可伸缩监控设备。兼容Graphite，使用一个单一的收集进程。<br>  ● Grafana -一个Graphite或InfluxDB仪表盘和图形编辑器<br>  ● 开源的可伸缩绘图服务器<br>  ● InfluxDB -开源的分布式时间序列数据库，没有外部依赖。<br>  ● KairosDB -快速分布式可扩展的时间序列数据库,OpenTSDB 1. x的分支。<br>  ● OpenTSDB -存储和服务大量的时间序列数据，不丢失粒度。<br>  ● RRDtool – 开源企业标准，用于时间序列数据的高性能数据记录和绘图系统<br>  ● Statsd -应用统计监听</p>\n<h1 id=\"网络配置管理\"><a href=\"#网络配置管理\" class=\"headerlink\" title=\"网络配置管理\"></a>网络配置管理</h1><h3 id=\"网络配置管理工具\"><a href=\"#网络配置管理工具\" class=\"headerlink\" title=\"网络配置管理工具\"></a>网络配置管理工具</h3><p>  ● GestióIP -一个自动的基于web的IPV4/IPV6地址管理工具<br>  ● RANCID -监控网络设备配置和维护历史变更<br>  ● rConfig -另一个网络配置管理工具</p>\n<h1 id=\"时事通讯\"><a href=\"#时事通讯\" class=\"headerlink\" title=\"时事通讯\"></a>时事通讯</h1><h3 id=\"时事通讯软件\"><a href=\"#时事通讯软件\" class=\"headerlink\" title=\"时事通讯软件\"></a>时事通讯软件</h3><p>  ● DadaMail -Perl编写的邮件列表管理器<br>  ● phpList -PHP编写的时事通讯管理器</p>\n<h1 id=\"NOSQL\"><a href=\"#NOSQL\" class=\"headerlink\" title=\"NOSQL\"></a>NOSQL</h1><h3 id=\"NOSQL数据库\"><a href=\"#NOSQL数据库\" class=\"headerlink\" title=\"NOSQL数据库\"></a>NOSQL数据库</h3><h4 id=\"●-列族\"><a href=\"#●-列族\" class=\"headerlink\" title=\"● 列族\"></a>● 列族</h4><p>  ○ Apache HBase – Hadoop数据库，一个分布式的大数据存储<br>  ○ Cassandra -分布式数据库管理系统，设计用于处理大量数据跨多个服务器。<br>  ○ Hypertable -基于c++的bigtable DBMS,节省通信，可独立或在Hadoop类似的分布式FS上运行。</p>\n<h4 id=\"●-文档存储\"><a href=\"#●-文档存储\" class=\"headerlink\" title=\"● 文档存储\"></a>● 文档存储</h4><p>  ○ CouchDB -易于使用,多主机复制的面向文档的数据库系统。<br>  ○ ElasticSearch – 基于Java的数据库,受欢迎的日志聚合,和电子邮件归档项目。<br>  ○ MongoDB – 另一个面向文档的数据库系统<br>  ○ RavenDB – 具有ACID/事物功能的基于文档的数据库<br>  ○ RethinkDB -开源分布式文档存储数据库，关注JSON</p>\n<h4 id=\"●-图\"><a href=\"#●-图\" class=\"headerlink\" title=\"● 图\"></a>● 图</h4><p>  ○ FlockDB -Twitter分布式，容错图数据库<br>  ○ Neo4j – 开源图数据库</p>\n<h4 id=\"●-键值\"><a href=\"#●-键值\" class=\"headerlink\" title=\"● 键值\"></a>● 键值</h4><p>  ○ LevelDB -Google高性能键值数据库<br>  ○ Redis – 支持网络，基于内存，键值，亦可持久化数据库<br>  ○ Riak -另一个容错的键值NoSQL数据库<br>NoSQL服务器比较: <a href=\"https://kkovacs.eu/cassandra-vs-mongodb-vs-couchdb-vs-redis\" target=\"_blank\" rel=\"external\">https://kkovacs.eu/cassandra-vs-mongodb-vs-couchdb-vs-redis</a></p>\n<h3 id=\"打包\"><a href=\"#打包\" class=\"headerlink\" title=\"打包\"></a>打包</h3><p>  ● fpm – 万能的多格式包创建器<br>  ● omnibus-ruby – 全栈，跨发行版的包管理软件（Ruby）<br>  ● packman -全栈，跨发行版的包管理软件（Python）<br>  ● tito – 为git项目构建RPM</p>\n<h3 id=\"队列\"><a href=\"#队列\" class=\"headerlink\" title=\"队列\"></a>队列</h3><p>  ● BeanstalkD – A simple, fast work queue.<br>  ● BeanstalkD – 一个简单快速的工作队列<br>  ● Gearman -快速的多语言队列或任务处理平台<br>  ● NSQ – 实时分发的消息平台<br>  ● RabbitMQ -健壮的，全功能，跨发行版的队列系统<br>  ● ZeroMQ -轻量级队列系统</p>\n<h1 id=\"RDBMS\"><a href=\"#RDBMS\" class=\"headerlink\" title=\"RDBMS\"></a>RDBMS</h1><h3 id=\"关系数据库管理系统\"><a href=\"#关系数据库管理系统\" class=\"headerlink\" title=\"关系数据库管理系统\"></a>关系数据库管理系统</h3><p>  ● Firebird – 真正的全球开源数据库<br>  ● Galera -Galera MySQL集群是一个易于使用的高可用性解决方案，具有很高的系统正常运行时间,没有数据丢失,为未来的增长提供可伸缩性。<br>  ● MariaDB -MySQL的社区开发分支<br>  ● MySQL – 非常流行的RDBMS服务器<br>  ● Percona Server -增强的，可替换MySQL<br>  ● PostgreSQL – 对象关系数据库管理系统（ORDBMS)<br>  ● PostgreSQL-XL – 基于PostgreSQL的可伸缩开源数据库集群<br>  ● SQLite -自包容，弱服务器，零配置，支持事务的SQL DBS实现库</p>\n<h1 id=\"安全\"><a href=\"#安全\" class=\"headerlink\" title=\"安全\"></a>安全</h1><h3 id=\"安全工具\"><a href=\"#安全工具\" class=\"headerlink\" title=\"安全工具\"></a>安全工具</h3><p>  ● Denyhosts -阻止SSH字典攻击和暴力攻击<br>  ● Fail2Ban – 扫描日志文件，并对具有恶意行为显示的IP采取措施<br>  ● SpamAssassin -一个强大的和受欢迎的垃圾邮件过滤器，它采用多种检测技术。<br>服务发现<br>  ● Consul – Consule是伊戈尔服务发现，监控和配置的工具<br>  ● Doozerd – Doozer是一个高可用，完全一致的存储，用于少量非常重要的数据<br>  ● ZooKeeper – ZooKeeper是一个集中的服务，用于维护配置信息，命名，提供分布式同步和组服务</p>\n<h1 id=\"SMTP\"><a href=\"#SMTP\" class=\"headerlink\" title=\"SMTP\"></a>SMTP</h1><h3 id=\"SMTP服务器\"><a href=\"#SMTP服务器\" class=\"headerlink\" title=\"SMTP服务器\"></a>SMTP服务器</h3><p>  ● Exim -由剑桥大学开发的消息传输代理（MTA)<br>  ● Haraka – 用JavaScirpt编写的高性能，可插入的SMTP服务器<br>  ● MailCatcher -Ruby gem部署一个简单的SMTP MTA网关，接收所有邮件并在web接口显示。对调试和开发有用。<br>  ● Maildrop -开源的一次性邮件服务器，对开发也很有用<br>  ● OpenSMTPD -从OpenBSD项目实现的安全的SMTP服务器<br>  ● Postfix – 快速，易于管理和安全的Sendmail替代品<br>  ● Qmail – 安全的Sendmail替代品<br>  ● Sendmail -消息传输代理（MTA)</p>\n<h1 id=\"软件容器\"><a href=\"#软件容器\" class=\"headerlink\" title=\"软件容器\"></a>软件容器</h1><h3 id=\"操作系统级别的虚拟化\"><a href=\"#操作系统级别的虚拟化\" class=\"headerlink\" title=\"操作系统级别的虚拟化\"></a>操作系统级别的虚拟化</h3><p>  ● Bitnami -为web应用，开发栈和虚拟设备生产开源软件安装器或软件包<br>  ● Docker – 给开发者和系统管理员构建，发布和运行分布式应用程序的开放平台<br>  ● OpenVZ -Linux平台基于容器的虚拟化</p>\n<h1 id=\"SSH\"><a href=\"#SSH\" class=\"headerlink\" title=\"SSH\"></a>SSH</h1><h3 id=\"SSH工具\"><a href=\"#SSH工具\" class=\"headerlink\" title=\"SSH工具\"></a>SSH工具</h3><p>  ● autossh -网络中断后自动复位ssh会话。<br>  ● Cluster SSH -通过一个图形化控制台控制多个xterm窗口。<br>  ● DSH -Dancer的shell/分布式shell-从一个命令行包装执行多个远程shell命令。<br>  ● Mosh – 移动shell<br>  ● parallel-ssh -提供并行的OpenSSH版本和相关工具<br>  ● SSH Power Tool -不使用pre-shared钥匙的情况下对多个服务器同时执行命令和上传文件</p>\n<h1 id=\"统计\"><a href=\"#统计\" class=\"headerlink\" title=\"统计\"></a>统计</h1><h3 id=\"分析软件\"><a href=\"#分析软件\" class=\"headerlink\" title=\"分析软件\"></a>分析软件</h3><p>  ● Analog – 世界上最流行的日志分析工具<br>  ● GoAccess -在终端运行的开源的实时web日志分析和交互视图<br>  ● Piwik -免费和开源的web分析应用<br>  ● Webalizer – F快速免费的web服务器日志文件分析程序</p>\n<h1 id=\"工单系统\"><a href=\"#工单系统\" class=\"headerlink\" title=\"工单系统\"></a>工单系统</h1><h3 id=\"基于web的工单系统\"><a href=\"#基于web的工单系统\" class=\"headerlink\" title=\"基于web的工单系统\"></a>基于web的工单系统</h3><p>  ● Bugzilla -由Mozilla项目开发和使用过的通用缺陷跟踪和测试工具<br>  ● Cerb – 基于商业开源许可的基于组的邮件管理项目<br>  ● Flyspray – 使用PHP编写的缺陷跟踪系统<br>  ● MantisBT -另一个基于web的缺陷跟踪系统<br>  ● osTicket -开源的技术支持工单系统<br>  ● Otrs -免费和开源故障通知单系统软件包,公司,组织,或其他实体可以使用它来基于询问分配工单并跟踪进一步的沟通。<br>  ● Request Tracker -使用Perl编写的工单跟踪系统<br>  ● TheBugGenie -开源的工单系统，具有非常完备的用户权限分配</p>\n<h1 id=\"故障排除\"><a href=\"#故障排除\" class=\"headerlink\" title=\"故障排除\"></a>故障排除</h1><h3 id=\"故障排除工具\"><a href=\"#故障排除工具\" class=\"headerlink\" title=\"故障排除工具\"></a>故障排除工具</h3><p>  ● mitmproxy -ython工具，用于拦截,查看和修改网络流量。在排除某些问题是非常重要的。<br>  ● Sysdig -从一个运行的linux实例上捕获系统状态和活动，之后保存，过滤和分析<br>  ● Wireshark -世界上著名的网络协议分析工具</p>\n<h1 id=\"项目管理\"><a href=\"#项目管理\" class=\"headerlink\" title=\"项目管理\"></a>项目管理</h1><h3 id=\"基于web的项目管理和缺陷跟踪系统\"><a href=\"#基于web的项目管理和缺陷跟踪系统\" class=\"headerlink\" title=\"基于web的项目管理和缺陷跟踪系统\"></a>基于web的项目管理和缺陷跟踪系统</h3><p>  ● ChiliProject – Redmine分支<br>  ● GitBucket 用Scala编写的GitHub的克隆，单独jar安装<br>  ● GitLab -用Rbuy编写的GitHub的克隆<br>  ● Gogs -用Go编写<br>  ● OpenProject -开源的项目协作项目<br>  ● Phabricator PHP编写<br>  ● Redmine – 基于rails在rbuy编写<br>  ● The Bug Genie -PHP编写<br>  ● Trac -python编写<br>  ● 阿里云持续交付<a href=\"https://crp.aliyun.com/#page6\" target=\"_blank\" rel=\"external\">https://crp.aliyun.com/#page6</a><br>redmine项目管理系统<br><a href=\"https://bitnami.com/stack/redmine/installer\" target=\"_blank\" rel=\"external\">https://bitnami.com/stack/redmine/installer</a></p>\n<h1 id=\"版本控制\"><a href=\"#版本控制\" class=\"headerlink\" title=\"版本控制\"></a>版本控制</h1><h3 id=\"软件版本和版本控制\"><a href=\"#软件版本和版本控制\" class=\"headerlink\" title=\"软件版本和版本控制\"></a>软件版本和版本控制</h3><p>  ● Fossil -分布式版本控制，内建wiki和缺陷跟踪<br>  ● Git -速度很快的分布式版本控制和源代码管理<br>  ● GNU Bazaar -由Cannoicalzi赞助的分布式版本控制系统<br>  ● Mercurial -另一个版本控制<br>  ● Subversion -客户端-服务器版本控制系统<br>  ● Coding<br>  ● 码云<br>  ● 阿里云 code.aliyun.com</p>\n<h1 id=\"虚拟化\"><a href=\"#虚拟化\" class=\"headerlink\" title=\"虚拟化\"></a>虚拟化</h1><h3 id=\"虚拟化软件\"><a href=\"#虚拟化软件\" class=\"headerlink\" title=\"虚拟化软件\"></a>虚拟化软件</h3><p>  ● Ganeti -在KVM和Xen上构建的集群虚拟服务器管理软件<br>  ● KVM -Linux内核虚拟化架构<br>  ● oVirt -管理虚拟机，存储和虚拟网络<br>  ● Packer – 从单个源配置为多个平台创建相同的机器镜像<br>  ● Vagrant – 创建完整开发环境的工具<br>  ● VirtualBox -来自Oracle公司的虚拟化产品<br>  ● Xen -用于32/64位Intel/AMD(IA 64）和PowerPC 970架构的虚拟机监控器<br>  ● Docker<br>  ● cockpit  (图形化管理Docker容器)</p>\n<h1 id=\"VPN\"><a href=\"#VPN\" class=\"headerlink\" title=\"VPN\"></a>VPN</h1><h3 id=\"VPN软件\"><a href=\"#VPN软件\" class=\"headerlink\" title=\"VPN软件\"></a>VPN软件</h3><p>  ● OpenVPN -使用一个定制的安全密钥交换协议,利用SSL / TLS。<br>  ● Pritunl -基于OpenVPN的方案，易于设置<br>  ● SoftEther – 具有高级特性的多协议VPN软件<br>  ● sshuttle -穷人的VPN<br>  ● strongSwan – Linux下完整的IPsec实现<br>  ● tinc -分布式点对点VPN</p>\n<h1 id=\"物联网\"><a href=\"#物联网\" class=\"headerlink\" title=\"物联网\"></a>物联网</h1><p>● contiki   一开源物联网系统，支持tcp,vnc等协议<br>● yeelink   物联网在线平台</p>\n<h1 id=\"15款顶级开源人工智能工具推荐\"><a href=\"#15款顶级开源人工智能工具推荐\" class=\"headerlink\" title=\"15款顶级开源人工智能工具推荐\"></a>15款顶级开源人工智能工具推荐</h1><p><a href=\"https://www.oschina.net/news/77729/15top-opensource-artificial-intelligence-tools?from=20161009\" target=\"_blank\" rel=\"external\">https://www.oschina.net/news/77729/15top-opensource-artificial-intelligence-tools?from=20161009</a></p>\n<hr>\n","excerpt":"","more":"<h1 id=\"备份\"><a href=\"#备份\" class=\"headerlink\" title=\"备份\"></a>备份</h1><h3 id=\"备份软件\"><a href=\"#备份软件\" class=\"headerlink\" title=\"备份软件\"></a>备份软件</h3><p>  ● Amanda -客户端-服务器模型备份工具<br>  ● Bacula – 另一个客户端-服务器模型备份工具<br>  ● Backupninja -轻量级，可扩展的元数据备份系统<br>  ● Backuppc -客户端-服务器模型备份工具和文件共享方案。<br>  ● Burp -网络备份和还原程序<br>  ● Duplicity -使用rsync算法加密的带宽-效率备份<br>  ● Lsyncd -监控一个本地目录树的变化,然后产生一个进程去同步变化。默认使用rsync。<br>  ● Rsnapshot -文件系统快照工具<br>  ● SafeKeep -使用rdiff-backup，集中的，基于pull的备份<br>  ● TarSnap – 具有一个开源客户端的安全备份服务<br>  ● UrBackup -另一个客户端-服务器备份系统<br>  ● DREBS – AWS EBS支持策略的备份脚本</p>\n<h1 id=\"克隆\"><a href=\"#克隆\" class=\"headerlink\" title=\"克隆\"></a>克隆</h1><h3 id=\"克隆软件\"><a href=\"#克隆软件\" class=\"headerlink\" title=\"克隆软件\"></a>克隆软件</h3><p>  ● Clonezilla -分区和磁盘镜像/克隆程序<br>  ● Fog – 另一个计算机克隆解决方案<br>  ● Redo Backup -简单的备份，恢复和还原</p>\n<h3 id=\"云计算\"><a href=\"#云计算\" class=\"headerlink\" title=\"云计算\"></a>云计算</h3><p>  ● AppScale – 兼容Google App引擎的开源云计算软件.<br>  ● Archipel -使用Libvirt管理和监视虚拟机<br>  ● CloudStack -创建，管理和部署基础云服务的云计算软件<br>  ● Cobbler -Cobbler是一个Linux安装服务器，允许快速地构网络安装环境<br>  ● Eucalyptus -兼容AWS的开源私有云软件<br>  ● Mesos -开发和运行能效高的分布式系统。<br>  ● OpenNebula -一个用于系统管理员和研发运维的用户驱动的云管理平台<br>  ● OpenStack -构建私有和开放云的开源软件<br>  ● The Foreman -Foreman是一个用于物理和虚拟服务器的全生命周期管理工具.FOSS.<br>  ● Openstack Juno   云计算平台（类似阿里云，腾讯云这样的管理平台）<br>云业务流程<br>  ● BOSH -IaaS业务流程平台，最初用于部署和管理云计算平台PaaS,但也用于通用的分布式系统。<br>  ● Cloudify -使用Python和YAML编写的开源TOSCA-based云业务流程软件平台。<br>  ● Juju -云业务流程工具用于管理服务，比如charms，YAML配置和部署脚本集<br>  ● MCollective -来自Puppet实验室的管理服务器业务流程和开发的Ruby框架<br>  ● Overcast -在不同的云提供商上部署VMs，并在任何或所有（VM）上通过SSH并行运行命令行和脚本<br>  ● Rundeck – 简单的业务流程工具<br>  ● Salt -Python编写<br>云存储<br>  ● git-annex assistant -在你的每一个OSX和Linux电脑，Android设备，可移动驱动，NAS电器和云服务上一个同步文件夹<br>  ● ownCloud -提供你的文件的统一访问，通过web，你的电脑和你的移动设备<br>  ● Seafile -另一个开源的云存储解决方案<br>  ● SparkleShare -提供云存储和文件同步服务。它默认使用Git作为存储后端<br>  ● Swift -一个高可用，分布式，最终一致的对象/大数据存储<br>  ● Syncthing -一个用于私有，加密和身份认证数据的开源系统<br>代码审查<br>基于Web的协作式代码审查系统<br>  ● Gerrit -基于Git版本控制，它促进软件开发人员审查源代码修改和批准或拒绝这些变更。<br>  ● Review Board – 基于MIT License的可用自由软件<br>协作软件<br>协作软件和群件套件<br>  ● Citadel/UX -协同套件（消息和群件）继承于Citadel家族程序<br>  ● EGroupware -PHP编写的群件软件<br>  ● Horde Groupware -基于PHP的协作软件套件，包括邮件，日历，wiki，时间跟踪和文件管理<br>  ● Kolab – 另一个群件套件<br>  ● SOGo – 协作软件服务器，专注简单性和可伸缩性<br>  ● Zimbra -协作软件套件，包括邮件服务和web客户端</p>\n<h1 id=\"配置管理数据库\"><a href=\"#配置管理数据库\" class=\"headerlink\" title=\"配置管理数据库\"></a>配置管理数据库</h1><h3 id=\"配置管理数据库（CMDB）软件\"><a href=\"#配置管理数据库（CMDB）软件\" class=\"headerlink\" title=\"配置管理数据库（CMDB）软件\"></a>配置管理数据库（CMDB）软件</h3><p>  ● i-doit – 开源的IT文档管理和CMDB<br>  ● iTop -一个完全开源的，ITIL,基于web的服务管理工具<br>  ● Ralph -用于大型数据中心或较小本地网络的资产管理，DICM和CMDB系统<br>  ● Clusto -帮助跟踪你的库存，在哪，如何连接，同时提供一个和基础架构元素交互的抽象接口</p>\n<h1 id=\"配置管理\"><a href=\"#配置管理\" class=\"headerlink\" title=\"配置管理\"></a>配置管理</h1><h3 id=\"配置管理工具\"><a href=\"#配置管理工具\" class=\"headerlink\" title=\"配置管理工具\"></a>配置管理工具</h3><p>  ● Ansible -Python编写的，通过SSH管理节点<br>  ● Jenkins+Ansible+Gitlab自动化部署三剑客<br><a href=\"http://www.showerlee.com/archives/1880\">http://www.showerlee.com/archives/1880</a><br>  ● CFEngine -轻量级代理系统。通过申明语言配置状态。<br>  ● Chef -Rbuy和Erlang编写，使用纯RubyDSL<br>  ● Fabric – Python库和cli工具，为应用程序部署或系统管理任务简化使用SSH。<br>  ● Pallet -通过Clojure DSL进行架构定义，配置和管理<br>  ● Puppet – Ruby编写，使用Puppet声明语言或Rbuy DSL<br>  ● Salt – Python编写<br>  ● Slaughter – Perl编写</p>\n<h1 id=\"持续继承和持续部署\"><a href=\"#持续继承和持续部署\" class=\"headerlink\" title=\"持续继承和持续部署\"></a>持续继承和持续部署</h1><h3 id=\"持续集成-部署软件\"><a href=\"#持续集成-部署软件\" class=\"headerlink\" title=\"持续集成/部署软件\"></a>持续集成/部署软件</h3><p>  ● Buildbot – 基于Python的持续集成工具<br>  ● Drone – 构建在Docker，使用YAML文件配置的的持续集成服务器<br>  ● GitLab CI -基于rbuy。他们也提供GitLab用于管理git存储库<br>  ● Go – 开源的持续交付服务器<br>  ● Jenkins – 一个可扩展的开源持续集成服务器<br>  ● Vlad the Deployer -自动化部署</p>\n<h1 id=\"分布式文件系统\"><a href=\"#分布式文件系统\" class=\"headerlink\" title=\"分布式文件系统\"></a>分布式文件系统</h1><h3 id=\"网络分布式文件系统\"><a href=\"#网络分布式文件系统\" class=\"headerlink\" title=\"网络分布式文件系统\"></a>网络分布式文件系统</h3><p>  ● Ceph -分布式对象存储和文件系统<br>  ● DRBD -分布式块设备复制<br>  ● LeoFS -非结构化对象/数据存储和高可用性,分布,最终一致的存储系统。<br>  ● GlusterFS – 可扩展，网络附加存储文件系统。<br>  ● HDFS – Java编写的，用于Hadoop框架的分布式、可伸缩、可移植文件系统<br>  ● Lustre -一种并行分布式文件系统,一般用于大规模集群计算。<br>  ● MooseFS – 容错、网络分布式文件系统。<br>  ● MogileFS -应用程序级别、网络分布式文件系统。<br>  ● OpenAFS -只读副本和多操作系统支持的分布式网络文件系统<br>  ● TahoeLAFS -安全、分散、容错、点对点分布式数据存储和分布式文件系统。<br>  ● XtreemFS -XtreemFS是一个用于存储需求的容错式分布式文件系统。</p>\n<h1 id=\"DNS\"><a href=\"#DNS\" class=\"headerlink\" title=\"DNS\"></a>DNS</h1><h3 id=\"DNS服务器\"><a href=\"#DNS服务器\" class=\"headerlink\" title=\"DNS服务器\"></a>DNS服务器</h3><p>  ● Bind -最广泛使用的域名服务软件<br>  ● djbdns -DNS应用集合，包括tinydns<br>  ● Designate – DNS REST API,支持多种DNS服务器的后端<br>  ● dnsmasq -为小规模网络提供DNS,DHCP和TFTP服务的轻量级服务<br>  ● Knot – 高性能，权威的DNS服务器<br>  ● NSD – 权威的、高性能的、简单的域名服务器。<br>  ● PowerDNS -具有各种数据存储后端和负载平衡功能的DNS服务器。<br>  ● Unbound – 验证、递归和缓存DNS解析器。<br>  ● Yadifa – 具有DNSSEC兼容的轻量级的权威域名服务器，支持.eu的顶级域名。</p>\n<h1 id=\"主机控制面板\"><a href=\"#主机控制面板\" class=\"headerlink\" title=\"主机控制面板\"></a>主机控制面板</h1><h3 id=\"Web主机控制面板\"><a href=\"#Web主机控制面板\" class=\"headerlink\" title=\"Web主机控制面板\"></a>Web主机控制面板</h3><p>  ● Ajenti -Linux和BSD控制面板<br>  ● Feathur – VPS供应和管理软件<br>  ● ISPConfig -Linux主机控制面板<br>  ● VestaCP -用于Linux和Nginx的主机面板<br>  ● Virtualmin -基于webmin的Linux控制面板<br>  ● ZPanel -Linux BSD和Windows控制面板</p>\n<h1 id=\"IMAP-POP3\"><a href=\"#IMAP-POP3\" class=\"headerlink\" title=\"IMAP/POP3\"></a>IMAP/POP3</h1><h3 id=\"IMAP-POP3邮件服务器\"><a href=\"#IMAP-POP3邮件服务器\" class=\"headerlink\" title=\"IMAP/POP3邮件服务器\"></a>IMAP/POP3邮件服务器</h3><p>  ● Courier IMAP/POP3 -快速，可伸缩，企业级IMAP和POP3服务器<br>  ● Cyrus IMAP/POP3 -运行在密封服务器上,普通用户不允许登录。<br>  ● Dovecot -主要考虑安全而编写的IMAP和POP3服务器<br>  ● Qpopper – 一个古老且流行的POP3服务器实现</p>\n<h1 id=\"IT资产管理\"><a href=\"#IT资产管理\" class=\"headerlink\" title=\"IT资产管理\"></a>IT资产管理</h1><h3 id=\"IT资产管理软件\"><a href=\"#IT资产管理软件\" class=\"headerlink\" title=\"IT资产管理软件\"></a>IT资产管理软件</h3><p>  ● GLPI -带有额外管理接口的信息资源管理器<br>  ● OCS Inventory NG -允许用户清算IT资产<br>  ● RackTables -数据中心和服务器房间资产，比如将硬件资产,网络地址,在货架空间,网络配置文档化。<br>  ● Ralph – 针对大型数据中心系统以及小型局域网网络的资产管理、DCIM和CMDB。<br>  ● Snipe IT -资产和许可证管理软件</p>\n<h1 id=\"LDAP\"><a href=\"#LDAP\" class=\"headerlink\" title=\"LDAP\"></a>LDAP</h1><h3 id=\"LDAP服务器\"><a href=\"#LDAP服务器\" class=\"headerlink\" title=\"LDAP服务器\"></a>LDAP服务器</h3><p>  ● 389 Directory Server – 通过Red Hat部署<br>  ● Apache Directory Server -用Java编写的Apache软件基金会项目<br>  ● Fusion Directory -基于OpenLDAP改善服务和公司目录的管理<br>  ● OpenDJ – OpenDS分支<br>  ● OpenDS -另一个用Java编写的目录服务器<br>  ● OpenLDAP -由OpenLDAP项目开发</p>\n<h1 id=\"日志管理\"><a href=\"#日志管理\" class=\"headerlink\" title=\"日志管理\"></a>日志管理</h1><h3 id=\"日志管理工具：收集，解析，可视化\"><a href=\"#日志管理工具：收集，解析，可视化\" class=\"headerlink\" title=\"日志管理工具：收集，解析，可视化\"></a>日志管理工具：收集，解析，可视化</h3><p>  ● Elasticsearch – 一个基于Lucene的文档存储，主要用于日志索引、存储和分析。<br>  ● Fluentd – 日志收集和发出<br>  ● Flume -分布式日志收集和聚合系统<br>  ● Graylog2 -具有报警选项的可插入日志和事件分析服务器<br>  ● Heka -流处理系统，可用于日志聚合<br>  ● Kibana – 可视化日志和时间戳数据<br>  ● Logstash -管理事件和日志的工具<br>  ● Octopussy -日志管理解决方案（可视化/报警/报告）</p>\n<h1 id=\"监控\"><a href=\"#监控\" class=\"headerlink\" title=\"监控\"></a>监控</h1><h3 id=\"监控软件\"><a href=\"#监控软件\" class=\"headerlink\" title=\"监控软件\"></a>监控软件</h3><p>  ● Cacti -基于Web的网络监控和图形工具<br>  ● Cabot – 监控和报警，类似PagerDuty<br>  ● check_mk -Nagios的扩展集合<br>  ● Dash -一个用于GNU/Linux机器的低开销web仪表板监控。<br>  ● Icinga – Nagios分支<br>  ● LibreNMS – Observium分支<br>  ● Monit – 管理和监控Unix系统的小型开源工具<br>  ● Munin -网络资源监控工具<br>  ● Naemon -基于Nagios4内核的网络监控工具，具有性能加强和新功能<br>  ● Nagios -计算机系统，网络和基础架构监控软件<br>  ● Observium -服务器和网络设备的SNMP监控，运行在linux<br>  ● OMD -开放的监控分布<br>  ● Opsview -基于Nagios4，Opsview核心，用于小型IT和测试环境<br>  ● Riemann -灵活和快速的事件处理器，允许负责时间和度量分析<br>  ● Sensu -开源的监控框架<br>  ● Sentry – 应用监控，事件记录和聚合<br>  ● Shinken – 另一个监控框架<br>  ● Thruk – 多后台监控的web接口，支持Naemon，Nagios，Icinga和Shinken<br>  ● Xymon -灵感来自Big Brother的网络监控<br>  ● Zabbix – Enterprise-class software for monitoring of networks and applications.<br>  ● Zabbix – 监控网络和应用的企业级软件<br>  ● Zenoss -基于Zope的应用，服务器和网络管理平台</p>\n<h1 id=\"度量和度量收集\"><a href=\"#度量和度量收集\" class=\"headerlink\" title=\"度量和度量收集\"></a>度量和度量收集</h1><h3 id=\"度量收集和显示软件\"><a href=\"#度量收集和显示软件\" class=\"headerlink\" title=\"度量收集和显示软件\"></a>度量收集和显示软件</h3><p>  ● Collectd -系统统计收集守护进程<br>  ● Collectl -高精度系统性能指标收集工具。<br>  ● Dashing -Ruby gem,允许快速统计仪表板的开发。基于HTML5，允许在数据中心或会议室进行大屏幕显示。<br>  ● Diamond -基于Python的统计收集守护进程<br>  ● Ganglia – 基于RRD用于网格和/或集群的服务器的高性能、可伸缩监控设备。兼容Graphite，使用一个单一的收集进程。<br>  ● Grafana -一个Graphite或InfluxDB仪表盘和图形编辑器<br>  ● 开源的可伸缩绘图服务器<br>  ● InfluxDB -开源的分布式时间序列数据库，没有外部依赖。<br>  ● KairosDB -快速分布式可扩展的时间序列数据库,OpenTSDB 1. x的分支。<br>  ● OpenTSDB -存储和服务大量的时间序列数据，不丢失粒度。<br>  ● RRDtool – 开源企业标准，用于时间序列数据的高性能数据记录和绘图系统<br>  ● Statsd -应用统计监听</p>\n<h1 id=\"网络配置管理\"><a href=\"#网络配置管理\" class=\"headerlink\" title=\"网络配置管理\"></a>网络配置管理</h1><h3 id=\"网络配置管理工具\"><a href=\"#网络配置管理工具\" class=\"headerlink\" title=\"网络配置管理工具\"></a>网络配置管理工具</h3><p>  ● GestióIP -一个自动的基于web的IPV4/IPV6地址管理工具<br>  ● RANCID -监控网络设备配置和维护历史变更<br>  ● rConfig -另一个网络配置管理工具</p>\n<h1 id=\"时事通讯\"><a href=\"#时事通讯\" class=\"headerlink\" title=\"时事通讯\"></a>时事通讯</h1><h3 id=\"时事通讯软件\"><a href=\"#时事通讯软件\" class=\"headerlink\" title=\"时事通讯软件\"></a>时事通讯软件</h3><p>  ● DadaMail -Perl编写的邮件列表管理器<br>  ● phpList -PHP编写的时事通讯管理器</p>\n<h1 id=\"NOSQL\"><a href=\"#NOSQL\" class=\"headerlink\" title=\"NOSQL\"></a>NOSQL</h1><h3 id=\"NOSQL数据库\"><a href=\"#NOSQL数据库\" class=\"headerlink\" title=\"NOSQL数据库\"></a>NOSQL数据库</h3><h4 id=\"●-列族\"><a href=\"#●-列族\" class=\"headerlink\" title=\"● 列族\"></a>● 列族</h4><p>  ○ Apache HBase – Hadoop数据库，一个分布式的大数据存储<br>  ○ Cassandra -分布式数据库管理系统，设计用于处理大量数据跨多个服务器。<br>  ○ Hypertable -基于c++的bigtable DBMS,节省通信，可独立或在Hadoop类似的分布式FS上运行。</p>\n<h4 id=\"●-文档存储\"><a href=\"#●-文档存储\" class=\"headerlink\" title=\"● 文档存储\"></a>● 文档存储</h4><p>  ○ CouchDB -易于使用,多主机复制的面向文档的数据库系统。<br>  ○ ElasticSearch – 基于Java的数据库,受欢迎的日志聚合,和电子邮件归档项目。<br>  ○ MongoDB – 另一个面向文档的数据库系统<br>  ○ RavenDB – 具有ACID/事物功能的基于文档的数据库<br>  ○ RethinkDB -开源分布式文档存储数据库，关注JSON</p>\n<h4 id=\"●-图\"><a href=\"#●-图\" class=\"headerlink\" title=\"● 图\"></a>● 图</h4><p>  ○ FlockDB -Twitter分布式，容错图数据库<br>  ○ Neo4j – 开源图数据库</p>\n<h4 id=\"●-键值\"><a href=\"#●-键值\" class=\"headerlink\" title=\"● 键值\"></a>● 键值</h4><p>  ○ LevelDB -Google高性能键值数据库<br>  ○ Redis – 支持网络，基于内存，键值，亦可持久化数据库<br>  ○ Riak -另一个容错的键值NoSQL数据库<br>NoSQL服务器比较: <a href=\"https://kkovacs.eu/cassandra-vs-mongodb-vs-couchdb-vs-redis\">https://kkovacs.eu/cassandra-vs-mongodb-vs-couchdb-vs-redis</a></p>\n<h3 id=\"打包\"><a href=\"#打包\" class=\"headerlink\" title=\"打包\"></a>打包</h3><p>  ● fpm – 万能的多格式包创建器<br>  ● omnibus-ruby – 全栈，跨发行版的包管理软件（Ruby）<br>  ● packman -全栈，跨发行版的包管理软件（Python）<br>  ● tito – 为git项目构建RPM</p>\n<h3 id=\"队列\"><a href=\"#队列\" class=\"headerlink\" title=\"队列\"></a>队列</h3><p>  ● BeanstalkD – A simple, fast work queue.<br>  ● BeanstalkD – 一个简单快速的工作队列<br>  ● Gearman -快速的多语言队列或任务处理平台<br>  ● NSQ – 实时分发的消息平台<br>  ● RabbitMQ -健壮的，全功能，跨发行版的队列系统<br>  ● ZeroMQ -轻量级队列系统</p>\n<h1 id=\"RDBMS\"><a href=\"#RDBMS\" class=\"headerlink\" title=\"RDBMS\"></a>RDBMS</h1><h3 id=\"关系数据库管理系统\"><a href=\"#关系数据库管理系统\" class=\"headerlink\" title=\"关系数据库管理系统\"></a>关系数据库管理系统</h3><p>  ● Firebird – 真正的全球开源数据库<br>  ● Galera -Galera MySQL集群是一个易于使用的高可用性解决方案，具有很高的系统正常运行时间,没有数据丢失,为未来的增长提供可伸缩性。<br>  ● MariaDB -MySQL的社区开发分支<br>  ● MySQL – 非常流行的RDBMS服务器<br>  ● Percona Server -增强的，可替换MySQL<br>  ● PostgreSQL – 对象关系数据库管理系统（ORDBMS)<br>  ● PostgreSQL-XL – 基于PostgreSQL的可伸缩开源数据库集群<br>  ● SQLite -自包容，弱服务器，零配置，支持事务的SQL DBS实现库</p>\n<h1 id=\"安全\"><a href=\"#安全\" class=\"headerlink\" title=\"安全\"></a>安全</h1><h3 id=\"安全工具\"><a href=\"#安全工具\" class=\"headerlink\" title=\"安全工具\"></a>安全工具</h3><p>  ● Denyhosts -阻止SSH字典攻击和暴力攻击<br>  ● Fail2Ban – 扫描日志文件，并对具有恶意行为显示的IP采取措施<br>  ● SpamAssassin -一个强大的和受欢迎的垃圾邮件过滤器，它采用多种检测技术。<br>服务发现<br>  ● Consul – Consule是伊戈尔服务发现，监控和配置的工具<br>  ● Doozerd – Doozer是一个高可用，完全一致的存储，用于少量非常重要的数据<br>  ● ZooKeeper – ZooKeeper是一个集中的服务，用于维护配置信息，命名，提供分布式同步和组服务</p>\n<h1 id=\"SMTP\"><a href=\"#SMTP\" class=\"headerlink\" title=\"SMTP\"></a>SMTP</h1><h3 id=\"SMTP服务器\"><a href=\"#SMTP服务器\" class=\"headerlink\" title=\"SMTP服务器\"></a>SMTP服务器</h3><p>  ● Exim -由剑桥大学开发的消息传输代理（MTA)<br>  ● Haraka – 用JavaScirpt编写的高性能，可插入的SMTP服务器<br>  ● MailCatcher -Ruby gem部署一个简单的SMTP MTA网关，接收所有邮件并在web接口显示。对调试和开发有用。<br>  ● Maildrop -开源的一次性邮件服务器，对开发也很有用<br>  ● OpenSMTPD -从OpenBSD项目实现的安全的SMTP服务器<br>  ● Postfix – 快速，易于管理和安全的Sendmail替代品<br>  ● Qmail – 安全的Sendmail替代品<br>  ● Sendmail -消息传输代理（MTA)</p>\n<h1 id=\"软件容器\"><a href=\"#软件容器\" class=\"headerlink\" title=\"软件容器\"></a>软件容器</h1><h3 id=\"操作系统级别的虚拟化\"><a href=\"#操作系统级别的虚拟化\" class=\"headerlink\" title=\"操作系统级别的虚拟化\"></a>操作系统级别的虚拟化</h3><p>  ● Bitnami -为web应用，开发栈和虚拟设备生产开源软件安装器或软件包<br>  ● Docker – 给开发者和系统管理员构建，发布和运行分布式应用程序的开放平台<br>  ● OpenVZ -Linux平台基于容器的虚拟化</p>\n<h1 id=\"SSH\"><a href=\"#SSH\" class=\"headerlink\" title=\"SSH\"></a>SSH</h1><h3 id=\"SSH工具\"><a href=\"#SSH工具\" class=\"headerlink\" title=\"SSH工具\"></a>SSH工具</h3><p>  ● autossh -网络中断后自动复位ssh会话。<br>  ● Cluster SSH -通过一个图形化控制台控制多个xterm窗口。<br>  ● DSH -Dancer的shell/分布式shell-从一个命令行包装执行多个远程shell命令。<br>  ● Mosh – 移动shell<br>  ● parallel-ssh -提供并行的OpenSSH版本和相关工具<br>  ● SSH Power Tool -不使用pre-shared钥匙的情况下对多个服务器同时执行命令和上传文件</p>\n<h1 id=\"统计\"><a href=\"#统计\" class=\"headerlink\" title=\"统计\"></a>统计</h1><h3 id=\"分析软件\"><a href=\"#分析软件\" class=\"headerlink\" title=\"分析软件\"></a>分析软件</h3><p>  ● Analog – 世界上最流行的日志分析工具<br>  ● GoAccess -在终端运行的开源的实时web日志分析和交互视图<br>  ● Piwik -免费和开源的web分析应用<br>  ● Webalizer – F快速免费的web服务器日志文件分析程序</p>\n<h1 id=\"工单系统\"><a href=\"#工单系统\" class=\"headerlink\" title=\"工单系统\"></a>工单系统</h1><h3 id=\"基于web的工单系统\"><a href=\"#基于web的工单系统\" class=\"headerlink\" title=\"基于web的工单系统\"></a>基于web的工单系统</h3><p>  ● Bugzilla -由Mozilla项目开发和使用过的通用缺陷跟踪和测试工具<br>  ● Cerb – 基于商业开源许可的基于组的邮件管理项目<br>  ● Flyspray – 使用PHP编写的缺陷跟踪系统<br>  ● MantisBT -另一个基于web的缺陷跟踪系统<br>  ● osTicket -开源的技术支持工单系统<br>  ● Otrs -免费和开源故障通知单系统软件包,公司,组织,或其他实体可以使用它来基于询问分配工单并跟踪进一步的沟通。<br>  ● Request Tracker -使用Perl编写的工单跟踪系统<br>  ● TheBugGenie -开源的工单系统，具有非常完备的用户权限分配</p>\n<h1 id=\"故障排除\"><a href=\"#故障排除\" class=\"headerlink\" title=\"故障排除\"></a>故障排除</h1><h3 id=\"故障排除工具\"><a href=\"#故障排除工具\" class=\"headerlink\" title=\"故障排除工具\"></a>故障排除工具</h3><p>  ● mitmproxy -ython工具，用于拦截,查看和修改网络流量。在排除某些问题是非常重要的。<br>  ● Sysdig -从一个运行的linux实例上捕获系统状态和活动，之后保存，过滤和分析<br>  ● Wireshark -世界上著名的网络协议分析工具</p>\n<h1 id=\"项目管理\"><a href=\"#项目管理\" class=\"headerlink\" title=\"项目管理\"></a>项目管理</h1><h3 id=\"基于web的项目管理和缺陷跟踪系统\"><a href=\"#基于web的项目管理和缺陷跟踪系统\" class=\"headerlink\" title=\"基于web的项目管理和缺陷跟踪系统\"></a>基于web的项目管理和缺陷跟踪系统</h3><p>  ● ChiliProject – Redmine分支<br>  ● GitBucket 用Scala编写的GitHub的克隆，单独jar安装<br>  ● GitLab -用Rbuy编写的GitHub的克隆<br>  ● Gogs -用Go编写<br>  ● OpenProject -开源的项目协作项目<br>  ● Phabricator PHP编写<br>  ● Redmine – 基于rails在rbuy编写<br>  ● The Bug Genie -PHP编写<br>  ● Trac -python编写<br>  ● 阿里云持续交付<a href=\"https://crp.aliyun.com/#page6\">https://crp.aliyun.com/#page6</a><br>redmine项目管理系统<br><a href=\"https://bitnami.com/stack/redmine/installer\">https://bitnami.com/stack/redmine/installer</a></p>\n<h1 id=\"版本控制\"><a href=\"#版本控制\" class=\"headerlink\" title=\"版本控制\"></a>版本控制</h1><h3 id=\"软件版本和版本控制\"><a href=\"#软件版本和版本控制\" class=\"headerlink\" title=\"软件版本和版本控制\"></a>软件版本和版本控制</h3><p>  ● Fossil -分布式版本控制，内建wiki和缺陷跟踪<br>  ● Git -速度很快的分布式版本控制和源代码管理<br>  ● GNU Bazaar -由Cannoicalzi赞助的分布式版本控制系统<br>  ● Mercurial -另一个版本控制<br>  ● Subversion -客户端-服务器版本控制系统<br>  ● Coding<br>  ● 码云<br>  ● 阿里云 code.aliyun.com</p>\n<h1 id=\"虚拟化\"><a href=\"#虚拟化\" class=\"headerlink\" title=\"虚拟化\"></a>虚拟化</h1><h3 id=\"虚拟化软件\"><a href=\"#虚拟化软件\" class=\"headerlink\" title=\"虚拟化软件\"></a>虚拟化软件</h3><p>  ● Ganeti -在KVM和Xen上构建的集群虚拟服务器管理软件<br>  ● KVM -Linux内核虚拟化架构<br>  ● oVirt -管理虚拟机，存储和虚拟网络<br>  ● Packer – 从单个源配置为多个平台创建相同的机器镜像<br>  ● Vagrant – 创建完整开发环境的工具<br>  ● VirtualBox -来自Oracle公司的虚拟化产品<br>  ● Xen -用于32/64位Intel/AMD(IA 64）和PowerPC 970架构的虚拟机监控器<br>  ● Docker<br>  ● cockpit  (图形化管理Docker容器)</p>\n<h1 id=\"VPN\"><a href=\"#VPN\" class=\"headerlink\" title=\"VPN\"></a>VPN</h1><h3 id=\"VPN软件\"><a href=\"#VPN软件\" class=\"headerlink\" title=\"VPN软件\"></a>VPN软件</h3><p>  ● OpenVPN -使用一个定制的安全密钥交换协议,利用SSL / TLS。<br>  ● Pritunl -基于OpenVPN的方案，易于设置<br>  ● SoftEther – 具有高级特性的多协议VPN软件<br>  ● sshuttle -穷人的VPN<br>  ● strongSwan – Linux下完整的IPsec实现<br>  ● tinc -分布式点对点VPN</p>\n<h1 id=\"物联网\"><a href=\"#物联网\" class=\"headerlink\" title=\"物联网\"></a>物联网</h1><p>● contiki   一开源物联网系统，支持tcp,vnc等协议<br>● yeelink   物联网在线平台</p>\n<h1 id=\"15款顶级开源人工智能工具推荐\"><a href=\"#15款顶级开源人工智能工具推荐\" class=\"headerlink\" title=\"15款顶级开源人工智能工具推荐\"></a>15款顶级开源人工智能工具推荐</h1><p><a href=\"https://www.oschina.net/news/77729/15top-opensource-artificial-intelligence-tools?from=20161009\">https://www.oschina.net/news/77729/15top-opensource-artificial-intelligence-tools?from=20161009</a></p>\n<hr>\n"},{"title":"Linux学习流程发展","abbrlink":33925,"date":"2016-11-02T06:20:45.000Z","_content":"\n## 网上看到的网文，摘录学习\n\n#### 1、推荐的发行版如下：\n  \n● UBUNTU 适合纯菜鸟，追求稳定的官方支持，对系统稳定性要求较弱，喜欢最新应用，相对来说不太喜欢折腾的开发者。\n\n  ● Debian，相对UBUNTU难很多的发行版，突出特点是稳定与容易使用的包管理系统，缺点是企业支持不足，为社区开发驱动。\n\n  ● Arch，追逐时尚的开发者的首选，优点是包更新相当快，无缝升级，一次安装基本可以一直运作下去，没有如UBUNTU那样的版本概念，说的专业点叫滚动升级，保持你的系统一定是最新的。缺点显然易见，不稳定。同时安装配置相对Debian再麻烦点。\n\n  ● Gentoo，相对Arch再难点，考验使用者的综合水平，从系统安装到微调，内核编译都亲历亲为，是高手及黑客显示自己技术手段，按需配置符合自己要求的系统的首选。\n  ● Slackware与Gentoo类似。\n\n  ● CentOS，社区维护的RedHat的复刻版本，完全使用RedHat的源码重新编译生成，与RedHat的兼容性在理论上来说是最好的。如果你专注于Linux服务器，如网络管理，架站，那么CentOS是你的选择。\n\n  ● LFS，终极黑客显摆工具，完全从源代码安装，编译系统。安装前你得到的只有一份文档，你要做的就是照文档你的说明，一步步，一条条命令，一个个软件包的去构建你的Linux，完全由你自己控制，想要什么就是什么。如果你做出了LFS，证明你的Linux功底已经相当不错，如果你能拿LFS文档活学活用，再将Linux从源代码开始移植到嵌入式系统，我敢说中国的企业你可以混的很好。\n\n\n\n#### 2、Linux平台的C/C++开发，同时还有Bash脚本编程[JAVA]\n再下个阶段，你需要学习的是Linux平台的C/C++开发，同时还有Bash脚本编程，如果你对Java兴趣很深还有Java。 同样，建议你抛弃掉图形界面的IDE，从VIM开始，为什么是VIM，而不是Emacs， 我无意挑起编辑器大战，但我觉得VIM适合初学者，适合手比较笨，脑袋比较慢的开发者。 Emacs的键位太多，太复杂，我很畏惧。然后是GCC，Make，Eclipse（Java，C++或者）。\n虽然将C++列在了Eclipse中，但我并不推荐用IDE开发C++，因为这不是Linux的文化， 容易让你忽略一些你应该注意的问题。 IDE让你变懒，懒得跟猪一样。如果你对程序调试，测试工作很感兴趣，GDB也得学的很好， 如果不是GDB也是必修课。这是开发的第一步，注意我并没有提过一句Linux系统API的内容， 这个阶段也不要关心这个。你要做的就是积累经验，在Linux平台的开发经验。\n我推荐的书如下：C语言程序设计。 C语言，白皮书当然更好。 C++推荐C++ Primer Plus， Java我不喜欢，就不推荐了，附一个别人的书单：java 入门书籍。 工具方面推荐VIM的官方手册，GCC中文文档，GDB中文文档，GNU开源软件开发指导（电子书）， 汇编语言程序设计（让你对库，链接，内嵌汇编，编译器优化选项有初步了解，不必深度）。\n如果你这个阶段过不了就不必往下做了，这是底线，最基础的基础，否则离开，不要霍霍Linux开发。 不专业的Linux开发者作出的程序是与Linux文化或UNIX文化相背的，程序是走不远的， 不可能像Bash，VIM这些神品一样。 所以做不好干脆离开。\n\n#### 3、UNIX环境高级编程（作者英年早逝，第3版即将出版，稍等）\n**UNIX环境高级编程**堪称神作，经典中的经典。\n接下来进入Linux系统编程，不二选择，APUE，UNIX环境高级编程，一遍一遍的看， 看10遍都嫌少，如果你可以在大学将这本书翻烂，里面的内容都实践过，有作品，你口头表达能力够强， 你可以在面试时说服所有的考官。（可能有点夸张，但APUE绝对是圣经一般的读物，即使是Windows程序员也从其中汲取养分， Google创始人的案头书籍，扎尔伯克的床头读物。）\n\n这本书看完后你会对Linux系统编程有相当的了解，知道Linux与Windows平台间开发的差异在哪？ 它们的优缺点在哪？我的总结如下：做Windows平台开发，很苦，微软的系统API总在扩容， 想使用最新潮，最高效的功能，最适合当前流行系统的功能你必须时刻学习。 Linux不是，Linux系统的核心API就100来个，记忆力好完全可以背下来。 而且经久不变，为什么不变，因为要同UNIX兼容，符合POSIX标准。 所以Linux平台的开发大多是专注于底层的或服务器编程。如果你看完APUE的感触有很多，希望验证你的某些想法或经验，推荐UNIX程序设计艺术， 世界顶级黑客将同你分享他的看法。\n\n亚马逊书店：https://www.amazon.cn/gp/product/B008Z1IEQ8/ref=as_li_ss_tl?ie=UTF8&camp=536&creative=3132&creativeASIN=B008Z1IEQ8&linkCode=as2&tag=cfjh-23\n\n#### 4、选择方向：网络，图形，嵌入式，设备驱动\n现在是时候做分流了。 大体上我分为四个方向：网络，图形，嵌入式，设备驱动。\n\n**网络方向：**服务器软件编写及高性能的并发程序编写\n如果选择网络，再细分，我对其他的不是他熟悉，只说服务器软件编写及高性能的并发程序编写吧。 相对来说这是网络编程中技术含量最高的，也是底层的。 需要很多的经验，看很多的书，做很多的项目。\n我的看法是以下面的顺序来看书：\n\n  1. APUE再深读 – 尤其是进程，线程，IPC，套接字\n  2. 多核程序设计 - Pthread一定得吃透了，你很NB\n  3. UNIX网络编程 – 卷一，卷二\n  4. TCP/IP网络详解 – 卷一 再看上面两本书时就该看了\n  5. TCP/IP 网络详解 – 卷二 我觉得看到卷二就差不多了，当然卷三看了更好，努力，争取看了\n  6. Lighttpd源代码 - 这个服务器也很有名了\n  7. Nginx源代码 – 相较于Apache，Nginx的源码较少，如果能看个大致，很NB。看源代码主要是要学习里面的套接字编程及并发控制，想想都激动。如果你有这些本事，可以试着往暴雪投简历，为他们写服务器后台，想一想全球的魔兽都运行在你的服务器软件上。\n  8. Linux内核 TCP/IP协议栈 – 深入了解TCP/IP的实现\n如果你还喜欢驱动程序设计，可以看看更底层的协议，如链路层的，写什么路由器，网卡， 网络设备的驱动及嵌入式系统软件应该也不成问题了。\n当然一般的网络公司，就算百度级别的也该毫不犹豫的雇用你。 只是看后面这些书需要时间与经验，所以35岁以前办到吧！跳槽到给你未来的地方！\n\n**图形方向：**我觉得图形方向也是很有前途的，以下几个方面。\n\n  1. Opengl的工业及游戏开发，国外较成熟。\n  2. 影视动画特效，如皮克斯，也是国外较成熟。\n  3. GPU计算技术，可以应用在浏览器网页渲染上，GPU计算资源利用上，由于开源的原因，有很多的文档程序可以参考。如果能进火狐开发，或google做浏览器开发，应该会很好 。\n\n**嵌入式方向：**嵌入式方向没说的，Linux很重要。\n掌握多个架构，不仅X86的，ARM的，单片机什么的也必须得懂。 硬件不懂我预见你会死在半路上，我也想走嵌入式方向，但我觉得就学校教授嵌入式的方法， 我连学电子的那帮学生都竞争不过。 奉劝大家，一定得懂硬件再去做，如果走到嵌入式应用开发，只能祝你好运， 不要碰上像Nokia，Hp这样的公司，否则你会很惨的。\n\n**驱动程序设计：**软件开发周期是很长的，硬件不同，很快。 每个月诞生那么多的新硬件，如何让他们在Linux上工作起来，这是你的工作。 由于Linux的兼容性很好，如果不是太低层的驱动，基本C语言就可以搞定，系统架构的影响不大， 因为有系统支持，你可能做些许更改就可以在ARM上使用PC的硬件了， 所以做硬件驱动开发不像嵌入式，对硬件知识的要求很高。\n可以从事的方向也很多，如家电啊，特别是如索尼，日立，希捷，富士康这样的厂子，很稀缺的\n\n\n\n---","source":"_posts/文章阅读/2016-11-02-Linux学习流程发展.md","raw":"---\ntitle: Linux学习流程发展\ncategories:\n  - 文章阅读\ntags:\n  - Linux学习流程发展\nabbrlink: 33925\ndate: 2016-11-02 14:20:45\n---\n\n## 网上看到的网文，摘录学习\n\n#### 1、推荐的发行版如下：\n  \n● UBUNTU 适合纯菜鸟，追求稳定的官方支持，对系统稳定性要求较弱，喜欢最新应用，相对来说不太喜欢折腾的开发者。\n\n  ● Debian，相对UBUNTU难很多的发行版，突出特点是稳定与容易使用的包管理系统，缺点是企业支持不足，为社区开发驱动。\n\n  ● Arch，追逐时尚的开发者的首选，优点是包更新相当快，无缝升级，一次安装基本可以一直运作下去，没有如UBUNTU那样的版本概念，说的专业点叫滚动升级，保持你的系统一定是最新的。缺点显然易见，不稳定。同时安装配置相对Debian再麻烦点。\n\n  ● Gentoo，相对Arch再难点，考验使用者的综合水平，从系统安装到微调，内核编译都亲历亲为，是高手及黑客显示自己技术手段，按需配置符合自己要求的系统的首选。\n  ● Slackware与Gentoo类似。\n\n  ● CentOS，社区维护的RedHat的复刻版本，完全使用RedHat的源码重新编译生成，与RedHat的兼容性在理论上来说是最好的。如果你专注于Linux服务器，如网络管理，架站，那么CentOS是你的选择。\n\n  ● LFS，终极黑客显摆工具，完全从源代码安装，编译系统。安装前你得到的只有一份文档，你要做的就是照文档你的说明，一步步，一条条命令，一个个软件包的去构建你的Linux，完全由你自己控制，想要什么就是什么。如果你做出了LFS，证明你的Linux功底已经相当不错，如果你能拿LFS文档活学活用，再将Linux从源代码开始移植到嵌入式系统，我敢说中国的企业你可以混的很好。\n\n\n\n#### 2、Linux平台的C/C++开发，同时还有Bash脚本编程[JAVA]\n再下个阶段，你需要学习的是Linux平台的C/C++开发，同时还有Bash脚本编程，如果你对Java兴趣很深还有Java。 同样，建议你抛弃掉图形界面的IDE，从VIM开始，为什么是VIM，而不是Emacs， 我无意挑起编辑器大战，但我觉得VIM适合初学者，适合手比较笨，脑袋比较慢的开发者。 Emacs的键位太多，太复杂，我很畏惧。然后是GCC，Make，Eclipse（Java，C++或者）。\n虽然将C++列在了Eclipse中，但我并不推荐用IDE开发C++，因为这不是Linux的文化， 容易让你忽略一些你应该注意的问题。 IDE让你变懒，懒得跟猪一样。如果你对程序调试，测试工作很感兴趣，GDB也得学的很好， 如果不是GDB也是必修课。这是开发的第一步，注意我并没有提过一句Linux系统API的内容， 这个阶段也不要关心这个。你要做的就是积累经验，在Linux平台的开发经验。\n我推荐的书如下：C语言程序设计。 C语言，白皮书当然更好。 C++推荐C++ Primer Plus， Java我不喜欢，就不推荐了，附一个别人的书单：java 入门书籍。 工具方面推荐VIM的官方手册，GCC中文文档，GDB中文文档，GNU开源软件开发指导（电子书）， 汇编语言程序设计（让你对库，链接，内嵌汇编，编译器优化选项有初步了解，不必深度）。\n如果你这个阶段过不了就不必往下做了，这是底线，最基础的基础，否则离开，不要霍霍Linux开发。 不专业的Linux开发者作出的程序是与Linux文化或UNIX文化相背的，程序是走不远的， 不可能像Bash，VIM这些神品一样。 所以做不好干脆离开。\n\n#### 3、UNIX环境高级编程（作者英年早逝，第3版即将出版，稍等）\n**UNIX环境高级编程**堪称神作，经典中的经典。\n接下来进入Linux系统编程，不二选择，APUE，UNIX环境高级编程，一遍一遍的看， 看10遍都嫌少，如果你可以在大学将这本书翻烂，里面的内容都实践过，有作品，你口头表达能力够强， 你可以在面试时说服所有的考官。（可能有点夸张，但APUE绝对是圣经一般的读物，即使是Windows程序员也从其中汲取养分， Google创始人的案头书籍，扎尔伯克的床头读物。）\n\n这本书看完后你会对Linux系统编程有相当的了解，知道Linux与Windows平台间开发的差异在哪？ 它们的优缺点在哪？我的总结如下：做Windows平台开发，很苦，微软的系统API总在扩容， 想使用最新潮，最高效的功能，最适合当前流行系统的功能你必须时刻学习。 Linux不是，Linux系统的核心API就100来个，记忆力好完全可以背下来。 而且经久不变，为什么不变，因为要同UNIX兼容，符合POSIX标准。 所以Linux平台的开发大多是专注于底层的或服务器编程。如果你看完APUE的感触有很多，希望验证你的某些想法或经验，推荐UNIX程序设计艺术， 世界顶级黑客将同你分享他的看法。\n\n亚马逊书店：https://www.amazon.cn/gp/product/B008Z1IEQ8/ref=as_li_ss_tl?ie=UTF8&camp=536&creative=3132&creativeASIN=B008Z1IEQ8&linkCode=as2&tag=cfjh-23\n\n#### 4、选择方向：网络，图形，嵌入式，设备驱动\n现在是时候做分流了。 大体上我分为四个方向：网络，图形，嵌入式，设备驱动。\n\n**网络方向：**服务器软件编写及高性能的并发程序编写\n如果选择网络，再细分，我对其他的不是他熟悉，只说服务器软件编写及高性能的并发程序编写吧。 相对来说这是网络编程中技术含量最高的，也是底层的。 需要很多的经验，看很多的书，做很多的项目。\n我的看法是以下面的顺序来看书：\n\n  1. APUE再深读 – 尤其是进程，线程，IPC，套接字\n  2. 多核程序设计 - Pthread一定得吃透了，你很NB\n  3. UNIX网络编程 – 卷一，卷二\n  4. TCP/IP网络详解 – 卷一 再看上面两本书时就该看了\n  5. TCP/IP 网络详解 – 卷二 我觉得看到卷二就差不多了，当然卷三看了更好，努力，争取看了\n  6. Lighttpd源代码 - 这个服务器也很有名了\n  7. Nginx源代码 – 相较于Apache，Nginx的源码较少，如果能看个大致，很NB。看源代码主要是要学习里面的套接字编程及并发控制，想想都激动。如果你有这些本事，可以试着往暴雪投简历，为他们写服务器后台，想一想全球的魔兽都运行在你的服务器软件上。\n  8. Linux内核 TCP/IP协议栈 – 深入了解TCP/IP的实现\n如果你还喜欢驱动程序设计，可以看看更底层的协议，如链路层的，写什么路由器，网卡， 网络设备的驱动及嵌入式系统软件应该也不成问题了。\n当然一般的网络公司，就算百度级别的也该毫不犹豫的雇用你。 只是看后面这些书需要时间与经验，所以35岁以前办到吧！跳槽到给你未来的地方！\n\n**图形方向：**我觉得图形方向也是很有前途的，以下几个方面。\n\n  1. Opengl的工业及游戏开发，国外较成熟。\n  2. 影视动画特效，如皮克斯，也是国外较成熟。\n  3. GPU计算技术，可以应用在浏览器网页渲染上，GPU计算资源利用上，由于开源的原因，有很多的文档程序可以参考。如果能进火狐开发，或google做浏览器开发，应该会很好 。\n\n**嵌入式方向：**嵌入式方向没说的，Linux很重要。\n掌握多个架构，不仅X86的，ARM的，单片机什么的也必须得懂。 硬件不懂我预见你会死在半路上，我也想走嵌入式方向，但我觉得就学校教授嵌入式的方法， 我连学电子的那帮学生都竞争不过。 奉劝大家，一定得懂硬件再去做，如果走到嵌入式应用开发，只能祝你好运， 不要碰上像Nokia，Hp这样的公司，否则你会很惨的。\n\n**驱动程序设计：**软件开发周期是很长的，硬件不同，很快。 每个月诞生那么多的新硬件，如何让他们在Linux上工作起来，这是你的工作。 由于Linux的兼容性很好，如果不是太低层的驱动，基本C语言就可以搞定，系统架构的影响不大， 因为有系统支持，你可能做些许更改就可以在ARM上使用PC的硬件了， 所以做硬件驱动开发不像嵌入式，对硬件知识的要求很高。\n可以从事的方向也很多，如家电啊，特别是如索尼，日立，希捷，富士康这样的厂子，很稀缺的\n\n\n\n---","slug":"文章阅读-2016-11-02-Linux学习流程发展","published":1,"updated":"2016-11-13T03:36:30.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civi8ouiy001k2c6n7cvqbwqu","content":"<h2 id=\"网上看到的网文，摘录学习\"><a href=\"#网上看到的网文，摘录学习\" class=\"headerlink\" title=\"网上看到的网文，摘录学习\"></a>网上看到的网文，摘录学习</h2><h4 id=\"1、推荐的发行版如下：\"><a href=\"#1、推荐的发行版如下：\" class=\"headerlink\" title=\"1、推荐的发行版如下：\"></a>1、推荐的发行版如下：</h4><p>● UBUNTU 适合纯菜鸟，追求稳定的官方支持，对系统稳定性要求较弱，喜欢最新应用，相对来说不太喜欢折腾的开发者。</p>\n<p>  ● Debian，相对UBUNTU难很多的发行版，突出特点是稳定与容易使用的包管理系统，缺点是企业支持不足，为社区开发驱动。</p>\n<p>  ● Arch，追逐时尚的开发者的首选，优点是包更新相当快，无缝升级，一次安装基本可以一直运作下去，没有如UBUNTU那样的版本概念，说的专业点叫滚动升级，保持你的系统一定是最新的。缺点显然易见，不稳定。同时安装配置相对Debian再麻烦点。</p>\n<p>  ● Gentoo，相对Arch再难点，考验使用者的综合水平，从系统安装到微调，内核编译都亲历亲为，是高手及黑客显示自己技术手段，按需配置符合自己要求的系统的首选。<br>  ● Slackware与Gentoo类似。</p>\n<p>  ● CentOS，社区维护的RedHat的复刻版本，完全使用RedHat的源码重新编译生成，与RedHat的兼容性在理论上来说是最好的。如果你专注于Linux服务器，如网络管理，架站，那么CentOS是你的选择。</p>\n<p>  ● LFS，终极黑客显摆工具，完全从源代码安装，编译系统。安装前你得到的只有一份文档，你要做的就是照文档你的说明，一步步，一条条命令，一个个软件包的去构建你的Linux，完全由你自己控制，想要什么就是什么。如果你做出了LFS，证明你的Linux功底已经相当不错，如果你能拿LFS文档活学活用，再将Linux从源代码开始移植到嵌入式系统，我敢说中国的企业你可以混的很好。</p>\n<h4 id=\"2、Linux平台的C-C-开发，同时还有Bash脚本编程-JAVA\"><a href=\"#2、Linux平台的C-C-开发，同时还有Bash脚本编程-JAVA\" class=\"headerlink\" title=\"2、Linux平台的C/C++开发，同时还有Bash脚本编程[JAVA]\"></a>2、Linux平台的C/C++开发，同时还有Bash脚本编程[JAVA]</h4><p>再下个阶段，你需要学习的是Linux平台的C/C++开发，同时还有Bash脚本编程，如果你对Java兴趣很深还有Java。 同样，建议你抛弃掉图形界面的IDE，从VIM开始，为什么是VIM，而不是Emacs， 我无意挑起编辑器大战，但我觉得VIM适合初学者，适合手比较笨，脑袋比较慢的开发者。 Emacs的键位太多，太复杂，我很畏惧。然后是GCC，Make，Eclipse（Java，C++或者）。<br>虽然将C++列在了Eclipse中，但我并不推荐用IDE开发C++，因为这不是Linux的文化， 容易让你忽略一些你应该注意的问题。 IDE让你变懒，懒得跟猪一样。如果你对程序调试，测试工作很感兴趣，GDB也得学的很好， 如果不是GDB也是必修课。这是开发的第一步，注意我并没有提过一句Linux系统API的内容， 这个阶段也不要关心这个。你要做的就是积累经验，在Linux平台的开发经验。<br>我推荐的书如下：C语言程序设计。 C语言，白皮书当然更好。 C++推荐C++ Primer Plus， Java我不喜欢，就不推荐了，附一个别人的书单：java 入门书籍。 工具方面推荐VIM的官方手册，GCC中文文档，GDB中文文档，GNU开源软件开发指导（电子书）， 汇编语言程序设计（让你对库，链接，内嵌汇编，编译器优化选项有初步了解，不必深度）。<br>如果你这个阶段过不了就不必往下做了，这是底线，最基础的基础，否则离开，不要霍霍Linux开发。 不专业的Linux开发者作出的程序是与Linux文化或UNIX文化相背的，程序是走不远的， 不可能像Bash，VIM这些神品一样。 所以做不好干脆离开。</p>\n<h4 id=\"3、UNIX环境高级编程（作者英年早逝，第3版即将出版，稍等）\"><a href=\"#3、UNIX环境高级编程（作者英年早逝，第3版即将出版，稍等）\" class=\"headerlink\" title=\"3、UNIX环境高级编程（作者英年早逝，第3版即将出版，稍等）\"></a>3、UNIX环境高级编程（作者英年早逝，第3版即将出版，稍等）</h4><p><strong>UNIX环境高级编程</strong>堪称神作，经典中的经典。<br>接下来进入Linux系统编程，不二选择，APUE，UNIX环境高级编程，一遍一遍的看， 看10遍都嫌少，如果你可以在大学将这本书翻烂，里面的内容都实践过，有作品，你口头表达能力够强， 你可以在面试时说服所有的考官。（可能有点夸张，但APUE绝对是圣经一般的读物，即使是Windows程序员也从其中汲取养分， Google创始人的案头书籍，扎尔伯克的床头读物。）</p>\n<p>这本书看完后你会对Linux系统编程有相当的了解，知道Linux与Windows平台间开发的差异在哪？ 它们的优缺点在哪？我的总结如下：做Windows平台开发，很苦，微软的系统API总在扩容， 想使用最新潮，最高效的功能，最适合当前流行系统的功能你必须时刻学习。 Linux不是，Linux系统的核心API就100来个，记忆力好完全可以背下来。 而且经久不变，为什么不变，因为要同UNIX兼容，符合POSIX标准。 所以Linux平台的开发大多是专注于底层的或服务器编程。如果你看完APUE的感触有很多，希望验证你的某些想法或经验，推荐UNIX程序设计艺术， 世界顶级黑客将同你分享他的看法。</p>\n<p>亚马逊书店：<a href=\"https://www.amazon.cn/gp/product/B008Z1IEQ8/ref=as_li_ss_tl?ie=UTF8&amp;camp=536&amp;creative=3132&amp;creativeASIN=B008Z1IEQ8&amp;linkCode=as2&amp;tag=cfjh-23\" target=\"_blank\" rel=\"external\">https://www.amazon.cn/gp/product/B008Z1IEQ8/ref=as_li_ss_tl?ie=UTF8&amp;camp=536&amp;creative=3132&amp;creativeASIN=B008Z1IEQ8&amp;linkCode=as2&amp;tag=cfjh-23</a></p>\n<h4 id=\"4、选择方向：网络，图形，嵌入式，设备驱动\"><a href=\"#4、选择方向：网络，图形，嵌入式，设备驱动\" class=\"headerlink\" title=\"4、选择方向：网络，图形，嵌入式，设备驱动\"></a>4、选择方向：网络，图形，嵌入式，设备驱动</h4><p>现在是时候做分流了。 大体上我分为四个方向：网络，图形，嵌入式，设备驱动。</p>\n<p><strong>网络方向：</strong>服务器软件编写及高性能的并发程序编写<br>如果选择网络，再细分，我对其他的不是他熟悉，只说服务器软件编写及高性能的并发程序编写吧。 相对来说这是网络编程中技术含量最高的，也是底层的。 需要很多的经验，看很多的书，做很多的项目。<br>我的看法是以下面的顺序来看书：</p>\n<ol>\n<li>APUE再深读 – 尤其是进程，线程，IPC，套接字</li>\n<li>多核程序设计 - Pthread一定得吃透了，你很NB</li>\n<li>UNIX网络编程 – 卷一，卷二</li>\n<li>TCP/IP网络详解 – 卷一 再看上面两本书时就该看了</li>\n<li>TCP/IP 网络详解 – 卷二 我觉得看到卷二就差不多了，当然卷三看了更好，努力，争取看了</li>\n<li>Lighttpd源代码 - 这个服务器也很有名了</li>\n<li>Nginx源代码 – 相较于Apache，Nginx的源码较少，如果能看个大致，很NB。看源代码主要是要学习里面的套接字编程及并发控制，想想都激动。如果你有这些本事，可以试着往暴雪投简历，为他们写服务器后台，想一想全球的魔兽都运行在你的服务器软件上。</li>\n<li>Linux内核 TCP/IP协议栈 – 深入了解TCP/IP的实现<br>如果你还喜欢驱动程序设计，可以看看更底层的协议，如链路层的，写什么路由器，网卡， 网络设备的驱动及嵌入式系统软件应该也不成问题了。<br>当然一般的网络公司，就算百度级别的也该毫不犹豫的雇用你。 只是看后面这些书需要时间与经验，所以35岁以前办到吧！跳槽到给你未来的地方！</li>\n</ol>\n<p><strong>图形方向：</strong>我觉得图形方向也是很有前途的，以下几个方面。</p>\n<ol>\n<li>Opengl的工业及游戏开发，国外较成熟。</li>\n<li>影视动画特效，如皮克斯，也是国外较成熟。</li>\n<li>GPU计算技术，可以应用在浏览器网页渲染上，GPU计算资源利用上，由于开源的原因，有很多的文档程序可以参考。如果能进火狐开发，或google做浏览器开发，应该会很好 。</li>\n</ol>\n<p><strong>嵌入式方向：</strong>嵌入式方向没说的，Linux很重要。<br>掌握多个架构，不仅X86的，ARM的，单片机什么的也必须得懂。 硬件不懂我预见你会死在半路上，我也想走嵌入式方向，但我觉得就学校教授嵌入式的方法， 我连学电子的那帮学生都竞争不过。 奉劝大家，一定得懂硬件再去做，如果走到嵌入式应用开发，只能祝你好运， 不要碰上像Nokia，Hp这样的公司，否则你会很惨的。</p>\n<p><strong>驱动程序设计：</strong>软件开发周期是很长的，硬件不同，很快。 每个月诞生那么多的新硬件，如何让他们在Linux上工作起来，这是你的工作。 由于Linux的兼容性很好，如果不是太低层的驱动，基本C语言就可以搞定，系统架构的影响不大， 因为有系统支持，你可能做些许更改就可以在ARM上使用PC的硬件了， 所以做硬件驱动开发不像嵌入式，对硬件知识的要求很高。<br>可以从事的方向也很多，如家电啊，特别是如索尼，日立，希捷，富士康这样的厂子，很稀缺的</p>\n<hr>\n","excerpt":"","more":"<h2 id=\"网上看到的网文，摘录学习\"><a href=\"#网上看到的网文，摘录学习\" class=\"headerlink\" title=\"网上看到的网文，摘录学习\"></a>网上看到的网文，摘录学习</h2><h4 id=\"1、推荐的发行版如下：\"><a href=\"#1、推荐的发行版如下：\" class=\"headerlink\" title=\"1、推荐的发行版如下：\"></a>1、推荐的发行版如下：</h4><p>● UBUNTU 适合纯菜鸟，追求稳定的官方支持，对系统稳定性要求较弱，喜欢最新应用，相对来说不太喜欢折腾的开发者。</p>\n<p>  ● Debian，相对UBUNTU难很多的发行版，突出特点是稳定与容易使用的包管理系统，缺点是企业支持不足，为社区开发驱动。</p>\n<p>  ● Arch，追逐时尚的开发者的首选，优点是包更新相当快，无缝升级，一次安装基本可以一直运作下去，没有如UBUNTU那样的版本概念，说的专业点叫滚动升级，保持你的系统一定是最新的。缺点显然易见，不稳定。同时安装配置相对Debian再麻烦点。</p>\n<p>  ● Gentoo，相对Arch再难点，考验使用者的综合水平，从系统安装到微调，内核编译都亲历亲为，是高手及黑客显示自己技术手段，按需配置符合自己要求的系统的首选。<br>  ● Slackware与Gentoo类似。</p>\n<p>  ● CentOS，社区维护的RedHat的复刻版本，完全使用RedHat的源码重新编译生成，与RedHat的兼容性在理论上来说是最好的。如果你专注于Linux服务器，如网络管理，架站，那么CentOS是你的选择。</p>\n<p>  ● LFS，终极黑客显摆工具，完全从源代码安装，编译系统。安装前你得到的只有一份文档，你要做的就是照文档你的说明，一步步，一条条命令，一个个软件包的去构建你的Linux，完全由你自己控制，想要什么就是什么。如果你做出了LFS，证明你的Linux功底已经相当不错，如果你能拿LFS文档活学活用，再将Linux从源代码开始移植到嵌入式系统，我敢说中国的企业你可以混的很好。</p>\n<h4 id=\"2、Linux平台的C-C-开发，同时还有Bash脚本编程-JAVA\"><a href=\"#2、Linux平台的C-C-开发，同时还有Bash脚本编程-JAVA\" class=\"headerlink\" title=\"2、Linux平台的C/C++开发，同时还有Bash脚本编程[JAVA]\"></a>2、Linux平台的C/C++开发，同时还有Bash脚本编程[JAVA]</h4><p>再下个阶段，你需要学习的是Linux平台的C/C++开发，同时还有Bash脚本编程，如果你对Java兴趣很深还有Java。 同样，建议你抛弃掉图形界面的IDE，从VIM开始，为什么是VIM，而不是Emacs， 我无意挑起编辑器大战，但我觉得VIM适合初学者，适合手比较笨，脑袋比较慢的开发者。 Emacs的键位太多，太复杂，我很畏惧。然后是GCC，Make，Eclipse（Java，C++或者）。<br>虽然将C++列在了Eclipse中，但我并不推荐用IDE开发C++，因为这不是Linux的文化， 容易让你忽略一些你应该注意的问题。 IDE让你变懒，懒得跟猪一样。如果你对程序调试，测试工作很感兴趣，GDB也得学的很好， 如果不是GDB也是必修课。这是开发的第一步，注意我并没有提过一句Linux系统API的内容， 这个阶段也不要关心这个。你要做的就是积累经验，在Linux平台的开发经验。<br>我推荐的书如下：C语言程序设计。 C语言，白皮书当然更好。 C++推荐C++ Primer Plus， Java我不喜欢，就不推荐了，附一个别人的书单：java 入门书籍。 工具方面推荐VIM的官方手册，GCC中文文档，GDB中文文档，GNU开源软件开发指导（电子书）， 汇编语言程序设计（让你对库，链接，内嵌汇编，编译器优化选项有初步了解，不必深度）。<br>如果你这个阶段过不了就不必往下做了，这是底线，最基础的基础，否则离开，不要霍霍Linux开发。 不专业的Linux开发者作出的程序是与Linux文化或UNIX文化相背的，程序是走不远的， 不可能像Bash，VIM这些神品一样。 所以做不好干脆离开。</p>\n<h4 id=\"3、UNIX环境高级编程（作者英年早逝，第3版即将出版，稍等）\"><a href=\"#3、UNIX环境高级编程（作者英年早逝，第3版即将出版，稍等）\" class=\"headerlink\" title=\"3、UNIX环境高级编程（作者英年早逝，第3版即将出版，稍等）\"></a>3、UNIX环境高级编程（作者英年早逝，第3版即将出版，稍等）</h4><p><strong>UNIX环境高级编程</strong>堪称神作，经典中的经典。<br>接下来进入Linux系统编程，不二选择，APUE，UNIX环境高级编程，一遍一遍的看， 看10遍都嫌少，如果你可以在大学将这本书翻烂，里面的内容都实践过，有作品，你口头表达能力够强， 你可以在面试时说服所有的考官。（可能有点夸张，但APUE绝对是圣经一般的读物，即使是Windows程序员也从其中汲取养分， Google创始人的案头书籍，扎尔伯克的床头读物。）</p>\n<p>这本书看完后你会对Linux系统编程有相当的了解，知道Linux与Windows平台间开发的差异在哪？ 它们的优缺点在哪？我的总结如下：做Windows平台开发，很苦，微软的系统API总在扩容， 想使用最新潮，最高效的功能，最适合当前流行系统的功能你必须时刻学习。 Linux不是，Linux系统的核心API就100来个，记忆力好完全可以背下来。 而且经久不变，为什么不变，因为要同UNIX兼容，符合POSIX标准。 所以Linux平台的开发大多是专注于底层的或服务器编程。如果你看完APUE的感触有很多，希望验证你的某些想法或经验，推荐UNIX程序设计艺术， 世界顶级黑客将同你分享他的看法。</p>\n<p>亚马逊书店：<a href=\"https://www.amazon.cn/gp/product/B008Z1IEQ8/ref=as_li_ss_tl?ie=UTF8&amp;camp=536&amp;creative=3132&amp;creativeASIN=B008Z1IEQ8&amp;linkCode=as2&amp;tag=cfjh-23\">https://www.amazon.cn/gp/product/B008Z1IEQ8/ref=as_li_ss_tl?ie=UTF8&amp;camp=536&amp;creative=3132&amp;creativeASIN=B008Z1IEQ8&amp;linkCode=as2&amp;tag=cfjh-23</a></p>\n<h4 id=\"4、选择方向：网络，图形，嵌入式，设备驱动\"><a href=\"#4、选择方向：网络，图形，嵌入式，设备驱动\" class=\"headerlink\" title=\"4、选择方向：网络，图形，嵌入式，设备驱动\"></a>4、选择方向：网络，图形，嵌入式，设备驱动</h4><p>现在是时候做分流了。 大体上我分为四个方向：网络，图形，嵌入式，设备驱动。</p>\n<p><strong>网络方向：</strong>服务器软件编写及高性能的并发程序编写<br>如果选择网络，再细分，我对其他的不是他熟悉，只说服务器软件编写及高性能的并发程序编写吧。 相对来说这是网络编程中技术含量最高的，也是底层的。 需要很多的经验，看很多的书，做很多的项目。<br>我的看法是以下面的顺序来看书：</p>\n<ol>\n<li>APUE再深读 – 尤其是进程，线程，IPC，套接字</li>\n<li>多核程序设计 - Pthread一定得吃透了，你很NB</li>\n<li>UNIX网络编程 – 卷一，卷二</li>\n<li>TCP/IP网络详解 – 卷一 再看上面两本书时就该看了</li>\n<li>TCP/IP 网络详解 – 卷二 我觉得看到卷二就差不多了，当然卷三看了更好，努力，争取看了</li>\n<li>Lighttpd源代码 - 这个服务器也很有名了</li>\n<li>Nginx源代码 – 相较于Apache，Nginx的源码较少，如果能看个大致，很NB。看源代码主要是要学习里面的套接字编程及并发控制，想想都激动。如果你有这些本事，可以试着往暴雪投简历，为他们写服务器后台，想一想全球的魔兽都运行在你的服务器软件上。</li>\n<li>Linux内核 TCP/IP协议栈 – 深入了解TCP/IP的实现<br>如果你还喜欢驱动程序设计，可以看看更底层的协议，如链路层的，写什么路由器，网卡， 网络设备的驱动及嵌入式系统软件应该也不成问题了。<br>当然一般的网络公司，就算百度级别的也该毫不犹豫的雇用你。 只是看后面这些书需要时间与经验，所以35岁以前办到吧！跳槽到给你未来的地方！</li>\n</ol>\n<p><strong>图形方向：</strong>我觉得图形方向也是很有前途的，以下几个方面。</p>\n<ol>\n<li>Opengl的工业及游戏开发，国外较成熟。</li>\n<li>影视动画特效，如皮克斯，也是国外较成熟。</li>\n<li>GPU计算技术，可以应用在浏览器网页渲染上，GPU计算资源利用上，由于开源的原因，有很多的文档程序可以参考。如果能进火狐开发，或google做浏览器开发，应该会很好 。</li>\n</ol>\n<p><strong>嵌入式方向：</strong>嵌入式方向没说的，Linux很重要。<br>掌握多个架构，不仅X86的，ARM的，单片机什么的也必须得懂。 硬件不懂我预见你会死在半路上，我也想走嵌入式方向，但我觉得就学校教授嵌入式的方法， 我连学电子的那帮学生都竞争不过。 奉劝大家，一定得懂硬件再去做，如果走到嵌入式应用开发，只能祝你好运， 不要碰上像Nokia，Hp这样的公司，否则你会很惨的。</p>\n<p><strong>驱动程序设计：</strong>软件开发周期是很长的，硬件不同，很快。 每个月诞生那么多的新硬件，如何让他们在Linux上工作起来，这是你的工作。 由于Linux的兼容性很好，如果不是太低层的驱动，基本C语言就可以搞定，系统架构的影响不大， 因为有系统支持，你可能做些许更改就可以在ARM上使用PC的硬件了， 所以做硬件驱动开发不像嵌入式，对硬件知识的要求很高。<br>可以从事的方向也很多，如家电啊，特别是如索尼，日立，希捷，富士康这样的厂子，很稀缺的</p>\n<hr>\n"},{"title":"Linux常见面试题","abbrlink":21385,"date":"2016-11-08T01:34:29.000Z","_content":"\n关于IT行业面试题和面试经验，推荐网站：\n\n* 1.[leetcode](https://leetcode.com/)\n* 2.[牛客网](http://www.nowcoder.com/)\n\n---\n\n\n# 填空\n\n* 1、在Linux系统中，以 **文件** 方式访问设备。\n* 2、Linux内核引导时，从文件 **/etc/fstab** 中读取要加载的文件系统\n* 3、Linux文件系统中每个文件用 **i节点** 来标识\n* 4、全部磁盘块由四个部分组成，分别为: **引导块、专用块、i节点块、数据存储块**\n* 5、前台起动的进程使用:** ctrl+c** 禁止\n* 6、安装Linux系统对硬盘分区时，必须有两种分区类型：**文件系统 和 交换分区。**\n* 7、网络管理的重要任务是 **监控 和 控制**\n* 8、内核分为 **文件管理系统、I/O管理系统 、内存管理系统 和进程管理系统** 等四个子系统。\n\n# 系统\n## 1、Linux开机启动过程？\n\n*   1）主机加电自检，加载BOLS硬件信息\n*   2）读取MBR的引导文件（grub，lilo）\n*   3）引导linux内核\n*   4）运行第一个进程init（进程号永远为1）\n*   5）进入相应的运行级别\n*   6）运行终端，输入用户名和密码\n\n## 2、Linux系统缺省的运行级别\n```\n0.关机\n1.单机用户模式 \n2.字符界面的多用户模式（不支持网络）\n3.字符界面的多用户模式\n4.未分配使用 \n5.图形界面的多用户模式 \n6.重启```\n\n## 3、Linux系统是由那些部分组成？\nLinux系统内核，shell，文件系统和应用程序四部分组成\n\n## 4、硬链接和软链接有什么区别？\n* 1）硬链接不可以跨分区，软件链可以跨分区\n* 2）硬链接指向一个i节点，而软链接则是创建一个新的i节点\n* 3）删除硬链接文件，不会删除原文件，删除软链接文件，会把原文件删除\n\n## 5、如何规划一台Linux主机，步骤是怎样？\n* 1、确定机器是做什么用的，比如是做web、db、还是游戏服务器\n* 2、确定好之后，就要定系统需要怎么安装，默认安装哪些系统、分区怎么做\n* 3、需要优化系统的哪些参数，需要创建哪些用户等等的\n\n## 6、查看系统当前进程连接数？\n```\nnetstat -an | grep ESTABLISHED | wc -l```\n\n## 7、如何在/usr目录下找出大小超过10MB的文件?\n```\nfind /usr -type f -size +10240k ```\n\n## 8、添加一条到192.168.3.0/24的路由，网关为192.168.1.254？\n```\nroute add -net 192.168.3.0/24 netmask 255.255.255.0 gw 192.168.1.254```\n\n## 9、如何在/var目录下找出90天之内未被访问过的文件?\n```\nfind /var \\! -atime -90 ```\n\n## 10、如何在/home目录下找出120天之前被修改过的文件?\n```\nfind /home  -mtime +120```\n\n## 11、在整个目录树下查找文件“core”，如发现则无需提示直接删除它们。\n```\nfind / -name core -exec rm {} \\;```\n\n## 12、有一普通用户想在每周日凌晨零点零分定期备份/user/backup到/tmp目录下，该用户应如何做?\n```\ncrontab -e\n0 0 * * 7 /bin/cp /user/backup /tmp```\n\n# 安全\n## 1、防火墙有几张表几条链？\n4张表，5条链\n\n## 2、一台Linux系统初始化环境后需要做一些什么安全工作？\n* 1、添加普通用户登陆，禁止root用户登陆，更改SSH端口号\n* 2、服务器使用密钥登陆，禁止密码登陆\n* 3、开启防火墙，关闭SElinux，根据业务需求设置相应的防火墙规则\n* 4、装fail2ban这种防止SSH暴力破击的软件\n* 5、设置只允许公司办公网出口IP能登陆服务器（看公司实际需要）\n* 6、设置nginx_waf模块防止SQL注入\n* 7、把Web服务使用www用户启动，更改网站目录的所有者和所属组为www\n* 8、修改历史命令记录的条数为10条\n\n## 3、什么叫CC攻击？什么叫DDOS攻击？怎么预防CC攻击和DDOS攻击？\n   简介：\n*    CC攻击主要是用来攻击页面的，模拟多个用户不停的对你的页面进行访问，从而使你的系统资源消耗殆尽\n*    DDOS攻击中文名叫分布式拒绝服务攻击，指借助服务器技术将多个计算机联合起来作为攻击平台，来对一个或多个目标发动DDOS攻击，\n攻击即是通过大量合法的请求占用大量网络资源，以达到瘫痪网络的目的\n   预防： \n*    防CC/DDOS攻击这些只能是用硬件防火墙做流量清洗，将攻击流量引入黑洞\n   流量清洗这一块，主要是买ISP服务商的防攻击的服务就可以，机房一般有空余流量，\n   我们一般是买服务，毕竟攻击不会是持续长时间\n\n## 4、什么是网站数据库注入？怎么过滤与预防网站数据库注入？\n### 简介：\n*   由于程序员的水平及经验参差不齐，大部分程序员在编写代码的时候，没有对用户输入数据的合法性进行判断，\n*   应用程序存在安全隐患。用户可以提交一段数据库查询代码，根据程序返回的结果，获得某些他想得知的数据，这就是所谓的SQL注入。\n*   SQL注入是从正常的WWW端口访问，而且表面看起来跟一般的Web页面访问没什么区别，如果管理员没查看日志的习惯，可能被入侵很长时间都不会发觉。\n### 过滤与预防：\n数据库网页端注入这种，可以考虑使用nginx_waf做过滤与预防\n\n# 脚本\n* 1、用Shell编程，判断一文件是不是字符设备文件，如果是将其拷贝到 /dev 目录下。\n```\n#!/bin/bash\nread -p \"Input file name: \" FILENAME\nif [ -c \"$FILENAME\" ];then\n　　cp $FILENAME /dev\nfi```\n\n* 2、设计一个shell程序，添加一个新组为class1，然后添加属于这个组的30个用户，用户名的形式为stdxx，其中xx从01到30。\n```\n#!/bin/bash\ngroupadd class1\nfor((i=1;i<31;i++))\ndo\n        if [ $i -le 10 ];then\n                useradd -g class1 std0$i\n        else\n                useradd -g class1 std$i\n        fi\ndone```\n\n* 3、编写shell程序，实现自动删除50个账号的功能。账号名为stud1至stud50。\n```\n#!/bin/bash\nfor((i=1;i<51;i++))\ndo\n                userdel -r stud$i\ndone```\n\n\n---\n\n","source":"_posts/杂项/2016-11-08-Linux常见面试题.md","raw":"---\ntitle: Linux常见面试题\ncategories:\n  - 杂项\ntags:\n  - Linux常见面试题\nabbrlink: 21385\ndate: 2016-11-08 09:34:29\n---\n\n关于IT行业面试题和面试经验，推荐网站：\n\n* 1.[leetcode](https://leetcode.com/)\n* 2.[牛客网](http://www.nowcoder.com/)\n\n---\n\n\n# 填空\n\n* 1、在Linux系统中，以 **文件** 方式访问设备。\n* 2、Linux内核引导时，从文件 **/etc/fstab** 中读取要加载的文件系统\n* 3、Linux文件系统中每个文件用 **i节点** 来标识\n* 4、全部磁盘块由四个部分组成，分别为: **引导块、专用块、i节点块、数据存储块**\n* 5、前台起动的进程使用:** ctrl+c** 禁止\n* 6、安装Linux系统对硬盘分区时，必须有两种分区类型：**文件系统 和 交换分区。**\n* 7、网络管理的重要任务是 **监控 和 控制**\n* 8、内核分为 **文件管理系统、I/O管理系统 、内存管理系统 和进程管理系统** 等四个子系统。\n\n# 系统\n## 1、Linux开机启动过程？\n\n*   1）主机加电自检，加载BOLS硬件信息\n*   2）读取MBR的引导文件（grub，lilo）\n*   3）引导linux内核\n*   4）运行第一个进程init（进程号永远为1）\n*   5）进入相应的运行级别\n*   6）运行终端，输入用户名和密码\n\n## 2、Linux系统缺省的运行级别\n```\n0.关机\n1.单机用户模式 \n2.字符界面的多用户模式（不支持网络）\n3.字符界面的多用户模式\n4.未分配使用 \n5.图形界面的多用户模式 \n6.重启```\n\n## 3、Linux系统是由那些部分组成？\nLinux系统内核，shell，文件系统和应用程序四部分组成\n\n## 4、硬链接和软链接有什么区别？\n* 1）硬链接不可以跨分区，软件链可以跨分区\n* 2）硬链接指向一个i节点，而软链接则是创建一个新的i节点\n* 3）删除硬链接文件，不会删除原文件，删除软链接文件，会把原文件删除\n\n## 5、如何规划一台Linux主机，步骤是怎样？\n* 1、确定机器是做什么用的，比如是做web、db、还是游戏服务器\n* 2、确定好之后，就要定系统需要怎么安装，默认安装哪些系统、分区怎么做\n* 3、需要优化系统的哪些参数，需要创建哪些用户等等的\n\n## 6、查看系统当前进程连接数？\n```\nnetstat -an | grep ESTABLISHED | wc -l```\n\n## 7、如何在/usr目录下找出大小超过10MB的文件?\n```\nfind /usr -type f -size +10240k ```\n\n## 8、添加一条到192.168.3.0/24的路由，网关为192.168.1.254？\n```\nroute add -net 192.168.3.0/24 netmask 255.255.255.0 gw 192.168.1.254```\n\n## 9、如何在/var目录下找出90天之内未被访问过的文件?\n```\nfind /var \\! -atime -90 ```\n\n## 10、如何在/home目录下找出120天之前被修改过的文件?\n```\nfind /home  -mtime +120```\n\n## 11、在整个目录树下查找文件“core”，如发现则无需提示直接删除它们。\n```\nfind / -name core -exec rm {} \\;```\n\n## 12、有一普通用户想在每周日凌晨零点零分定期备份/user/backup到/tmp目录下，该用户应如何做?\n```\ncrontab -e\n0 0 * * 7 /bin/cp /user/backup /tmp```\n\n# 安全\n## 1、防火墙有几张表几条链？\n4张表，5条链\n\n## 2、一台Linux系统初始化环境后需要做一些什么安全工作？\n* 1、添加普通用户登陆，禁止root用户登陆，更改SSH端口号\n* 2、服务器使用密钥登陆，禁止密码登陆\n* 3、开启防火墙，关闭SElinux，根据业务需求设置相应的防火墙规则\n* 4、装fail2ban这种防止SSH暴力破击的软件\n* 5、设置只允许公司办公网出口IP能登陆服务器（看公司实际需要）\n* 6、设置nginx_waf模块防止SQL注入\n* 7、把Web服务使用www用户启动，更改网站目录的所有者和所属组为www\n* 8、修改历史命令记录的条数为10条\n\n## 3、什么叫CC攻击？什么叫DDOS攻击？怎么预防CC攻击和DDOS攻击？\n   简介：\n*    CC攻击主要是用来攻击页面的，模拟多个用户不停的对你的页面进行访问，从而使你的系统资源消耗殆尽\n*    DDOS攻击中文名叫分布式拒绝服务攻击，指借助服务器技术将多个计算机联合起来作为攻击平台，来对一个或多个目标发动DDOS攻击，\n攻击即是通过大量合法的请求占用大量网络资源，以达到瘫痪网络的目的\n   预防： \n*    防CC/DDOS攻击这些只能是用硬件防火墙做流量清洗，将攻击流量引入黑洞\n   流量清洗这一块，主要是买ISP服务商的防攻击的服务就可以，机房一般有空余流量，\n   我们一般是买服务，毕竟攻击不会是持续长时间\n\n## 4、什么是网站数据库注入？怎么过滤与预防网站数据库注入？\n### 简介：\n*   由于程序员的水平及经验参差不齐，大部分程序员在编写代码的时候，没有对用户输入数据的合法性进行判断，\n*   应用程序存在安全隐患。用户可以提交一段数据库查询代码，根据程序返回的结果，获得某些他想得知的数据，这就是所谓的SQL注入。\n*   SQL注入是从正常的WWW端口访问，而且表面看起来跟一般的Web页面访问没什么区别，如果管理员没查看日志的习惯，可能被入侵很长时间都不会发觉。\n### 过滤与预防：\n数据库网页端注入这种，可以考虑使用nginx_waf做过滤与预防\n\n# 脚本\n* 1、用Shell编程，判断一文件是不是字符设备文件，如果是将其拷贝到 /dev 目录下。\n```\n#!/bin/bash\nread -p \"Input file name: \" FILENAME\nif [ -c \"$FILENAME\" ];then\n　　cp $FILENAME /dev\nfi```\n\n* 2、设计一个shell程序，添加一个新组为class1，然后添加属于这个组的30个用户，用户名的形式为stdxx，其中xx从01到30。\n```\n#!/bin/bash\ngroupadd class1\nfor((i=1;i<31;i++))\ndo\n        if [ $i -le 10 ];then\n                useradd -g class1 std0$i\n        else\n                useradd -g class1 std$i\n        fi\ndone```\n\n* 3、编写shell程序，实现自动删除50个账号的功能。账号名为stud1至stud50。\n```\n#!/bin/bash\nfor((i=1;i<51;i++))\ndo\n                userdel -r stud$i\ndone```\n\n\n---\n\n","slug":"杂项-2016-11-08-Linux常见面试题","published":1,"updated":"2016-11-13T03:36:30.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civi8ouiz001l2c6n0tc0t3dd","content":"<p>关于IT行业面试题和面试经验，推荐网站：</p>\n<ul>\n<li>1.<a href=\"https://leetcode.com/\" target=\"_blank\" rel=\"external\">leetcode</a></li>\n<li>2.<a href=\"http://www.nowcoder.com/\" target=\"_blank\" rel=\"external\">牛客网</a></li>\n</ul>\n<hr>\n<h1 id=\"填空\"><a href=\"#填空\" class=\"headerlink\" title=\"填空\"></a>填空</h1><ul>\n<li>1、在Linux系统中，以 <strong>文件</strong> 方式访问设备。</li>\n<li>2、Linux内核引导时，从文件 <strong>/etc/fstab</strong> 中读取要加载的文件系统</li>\n<li>3、Linux文件系统中每个文件用 <strong>i节点</strong> 来标识</li>\n<li>4、全部磁盘块由四个部分组成，分别为: <strong>引导块、专用块、i节点块、数据存储块</strong></li>\n<li>5、前台起动的进程使用:<strong> ctrl+c</strong> 禁止</li>\n<li>6、安装Linux系统对硬盘分区时，必须有两种分区类型：<strong>文件系统 和 交换分区。</strong></li>\n<li>7、网络管理的重要任务是 <strong>监控 和 控制</strong></li>\n<li>8、内核分为 <strong>文件管理系统、I/O管理系统 、内存管理系统 和进程管理系统</strong> 等四个子系统。</li>\n</ul>\n<h1 id=\"系统\"><a href=\"#系统\" class=\"headerlink\" title=\"系统\"></a>系统</h1><h2 id=\"1、Linux开机启动过程？\"><a href=\"#1、Linux开机启动过程？\" class=\"headerlink\" title=\"1、Linux开机启动过程？\"></a>1、Linux开机启动过程？</h2><ul>\n<li>1）主机加电自检，加载BOLS硬件信息</li>\n<li>2）读取MBR的引导文件（grub，lilo）</li>\n<li>3）引导linux内核</li>\n<li>4）运行第一个进程init（进程号永远为1）</li>\n<li>5）进入相应的运行级别</li>\n<li>6）运行终端，输入用户名和密码</li>\n</ul>\n<h2 id=\"2、Linux系统缺省的运行级别\"><a href=\"#2、Linux系统缺省的运行级别\" class=\"headerlink\" title=\"2、Linux系统缺省的运行级别\"></a>2、Linux系统缺省的运行级别</h2><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"number\">0.</span>关机</div><div class=\"line\"><span class=\"number\">1.</span>单机用户模式 </div><div class=\"line\"><span class=\"number\">2.</span>字符界面的多用户模式（不支持网络）</div><div class=\"line\"><span class=\"number\">3.</span>字符界面的多用户模式</div><div class=\"line\"><span class=\"number\">4.</span>未分配使用 </div><div class=\"line\"><span class=\"number\">5.</span>图形界面的多用户模式 </div><div class=\"line\"><span class=\"number\">6.</span>重启</div></pre></td></tr></table></figure>\n<h2 id=\"3、Linux系统是由那些部分组成？\"><a href=\"#3、Linux系统是由那些部分组成？\" class=\"headerlink\" title=\"3、Linux系统是由那些部分组成？\"></a>3、Linux系统是由那些部分组成？</h2><p>Linux系统内核，shell，文件系统和应用程序四部分组成</p>\n<h2 id=\"4、硬链接和软链接有什么区别？\"><a href=\"#4、硬链接和软链接有什么区别？\" class=\"headerlink\" title=\"4、硬链接和软链接有什么区别？\"></a>4、硬链接和软链接有什么区别？</h2><ul>\n<li>1）硬链接不可以跨分区，软件链可以跨分区</li>\n<li>2）硬链接指向一个i节点，而软链接则是创建一个新的i节点</li>\n<li>3）删除硬链接文件，不会删除原文件，删除软链接文件，会把原文件删除</li>\n</ul>\n<h2 id=\"5、如何规划一台Linux主机，步骤是怎样？\"><a href=\"#5、如何规划一台Linux主机，步骤是怎样？\" class=\"headerlink\" title=\"5、如何规划一台Linux主机，步骤是怎样？\"></a>5、如何规划一台Linux主机，步骤是怎样？</h2><ul>\n<li>1、确定机器是做什么用的，比如是做web、db、还是游戏服务器</li>\n<li>2、确定好之后，就要定系统需要怎么安装，默认安装哪些系统、分区怎么做</li>\n<li>3、需要优化系统的哪些参数，需要创建哪些用户等等的</li>\n</ul>\n<h2 id=\"6、查看系统当前进程连接数？\"><a href=\"#6、查看系统当前进程连接数？\" class=\"headerlink\" title=\"6、查看系统当前进程连接数？\"></a>6、查看系统当前进程连接数？</h2><figure class=\"highlight coq\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">netstat -an | <span class=\"type\">grep</span> ESTABLISHED | <span class=\"type\">wc</span> -l</div></pre></td></tr></table></figure>\n<h2 id=\"7、如何在-usr目录下找出大小超过10MB的文件\"><a href=\"#7、如何在-usr目录下找出大小超过10MB的文件\" class=\"headerlink\" title=\"7、如何在/usr目录下找出大小超过10MB的文件?\"></a>7、如何在/usr目录下找出大小超过10MB的文件?</h2><figure class=\"highlight sqf\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">find</span> /usr -<span class=\"built_in\">type</span> f -<span class=\"built_in\">size</span> +<span class=\"number\">10240</span>k</div></pre></td></tr></table></figure>\n<h2 id=\"8、添加一条到192-168-3-0-24的路由，网关为192-168-1-254？\"><a href=\"#8、添加一条到192-168-3-0-24的路由，网关为192-168-1-254？\" class=\"headerlink\" title=\"8、添加一条到192.168.3.0/24的路由，网关为192.168.1.254？\"></a>8、添加一条到192.168.3.0/24的路由，网关为192.168.1.254？</h2><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">route add -net <span class=\"number\">192.168</span><span class=\"number\">.3</span><span class=\"number\">.0</span>/<span class=\"number\">24</span> netmask <span class=\"number\">255.255</span><span class=\"number\">.255</span><span class=\"number\">.0</span> gw <span class=\"number\">192.168</span><span class=\"number\">.1</span><span class=\"number\">.254</span></div></pre></td></tr></table></figure>\n<h2 id=\"9、如何在-var目录下找出90天之内未被访问过的文件\"><a href=\"#9、如何在-var目录下找出90天之内未被访问过的文件\" class=\"headerlink\" title=\"9、如何在/var目录下找出90天之内未被访问过的文件?\"></a>9、如何在/var目录下找出90天之内未被访问过的文件?</h2><figure class=\"highlight excel\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">find</span> /<span class=\"built_in\">var</span> \\! -atime -<span class=\"number\">90</span></div></pre></td></tr></table></figure>\n<h2 id=\"10、如何在-home目录下找出120天之前被修改过的文件\"><a href=\"#10、如何在-home目录下找出120天之前被修改过的文件\" class=\"headerlink\" title=\"10、如何在/home目录下找出120天之前被修改过的文件?\"></a>10、如何在/home目录下找出120天之前被修改过的文件?</h2><figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">find</span> /<span class=\"built_in\">home</span>  -mtime +<span class=\"number\">120</span></div></pre></td></tr></table></figure>\n<h2 id=\"11、在整个目录树下查找文件“core”，如发现则无需提示直接删除它们。\"><a href=\"#11、在整个目录树下查找文件“core”，如发现则无需提示直接删除它们。\" class=\"headerlink\" title=\"11、在整个目录树下查找文件“core”，如发现则无需提示直接删除它们。\"></a>11、在整个目录树下查找文件“core”，如发现则无需提示直接删除它们。</h2><figure class=\"highlight sqf\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">find</span> / -<span class=\"built_in\">name</span> core -<span class=\"built_in\">exec</span> rm &#123;&#125; \\;</div></pre></td></tr></table></figure>\n<h2 id=\"12、有一普通用户想在每周日凌晨零点零分定期备份-user-backup到-tmp目录下，该用户应如何做\"><a href=\"#12、有一普通用户想在每周日凌晨零点零分定期备份-user-backup到-tmp目录下，该用户应如何做\" class=\"headerlink\" title=\"12、有一普通用户想在每周日凌晨零点零分定期备份/user/backup到/tmp目录下，该用户应如何做?\"></a>12、有一普通用户想在每周日凌晨零点零分定期备份/user/backup到/tmp目录下，该用户应如何做?</h2><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">crontab -e</div><div class=\"line\"><span class=\"number\">0</span> <span class=\"number\">0</span> * * <span class=\"number\">7</span> /bin/cp /user/backup /tmp</div></pre></td></tr></table></figure>\n<h1 id=\"安全\"><a href=\"#安全\" class=\"headerlink\" title=\"安全\"></a>安全</h1><h2 id=\"1、防火墙有几张表几条链？\"><a href=\"#1、防火墙有几张表几条链？\" class=\"headerlink\" title=\"1、防火墙有几张表几条链？\"></a>1、防火墙有几张表几条链？</h2><p>4张表，5条链</p>\n<h2 id=\"2、一台Linux系统初始化环境后需要做一些什么安全工作？\"><a href=\"#2、一台Linux系统初始化环境后需要做一些什么安全工作？\" class=\"headerlink\" title=\"2、一台Linux系统初始化环境后需要做一些什么安全工作？\"></a>2、一台Linux系统初始化环境后需要做一些什么安全工作？</h2><ul>\n<li>1、添加普通用户登陆，禁止root用户登陆，更改SSH端口号</li>\n<li>2、服务器使用密钥登陆，禁止密码登陆</li>\n<li>3、开启防火墙，关闭SElinux，根据业务需求设置相应的防火墙规则</li>\n<li>4、装fail2ban这种防止SSH暴力破击的软件</li>\n<li>5、设置只允许公司办公网出口IP能登陆服务器（看公司实际需要）</li>\n<li>6、设置nginx_waf模块防止SQL注入</li>\n<li>7、把Web服务使用www用户启动，更改网站目录的所有者和所属组为www</li>\n<li>8、修改历史命令记录的条数为10条</li>\n</ul>\n<h2 id=\"3、什么叫CC攻击？什么叫DDOS攻击？怎么预防CC攻击和DDOS攻击？\"><a href=\"#3、什么叫CC攻击？什么叫DDOS攻击？怎么预防CC攻击和DDOS攻击？\" class=\"headerlink\" title=\"3、什么叫CC攻击？什么叫DDOS攻击？怎么预防CC攻击和DDOS攻击？\"></a>3、什么叫CC攻击？什么叫DDOS攻击？怎么预防CC攻击和DDOS攻击？</h2><p>   简介：</p>\n<ul>\n<li>CC攻击主要是用来攻击页面的，模拟多个用户不停的对你的页面进行访问，从而使你的系统资源消耗殆尽</li>\n<li>DDOS攻击中文名叫分布式拒绝服务攻击，指借助服务器技术将多个计算机联合起来作为攻击平台，来对一个或多个目标发动DDOS攻击，<br>攻击即是通过大量合法的请求占用大量网络资源，以达到瘫痪网络的目的<br>预防： </li>\n<li>防CC/DDOS攻击这些只能是用硬件防火墙做流量清洗，将攻击流量引入黑洞<br>流量清洗这一块，主要是买ISP服务商的防攻击的服务就可以，机房一般有空余流量，<br>我们一般是买服务，毕竟攻击不会是持续长时间</li>\n</ul>\n<h2 id=\"4、什么是网站数据库注入？怎么过滤与预防网站数据库注入？\"><a href=\"#4、什么是网站数据库注入？怎么过滤与预防网站数据库注入？\" class=\"headerlink\" title=\"4、什么是网站数据库注入？怎么过滤与预防网站数据库注入？\"></a>4、什么是网站数据库注入？怎么过滤与预防网站数据库注入？</h2><h3 id=\"简介：\"><a href=\"#简介：\" class=\"headerlink\" title=\"简介：\"></a>简介：</h3><ul>\n<li>由于程序员的水平及经验参差不齐，大部分程序员在编写代码的时候，没有对用户输入数据的合法性进行判断，</li>\n<li>应用程序存在安全隐患。用户可以提交一段数据库查询代码，根据程序返回的结果，获得某些他想得知的数据，这就是所谓的SQL注入。</li>\n<li>SQL注入是从正常的WWW端口访问，而且表面看起来跟一般的Web页面访问没什么区别，如果管理员没查看日志的习惯，可能被入侵很长时间都不会发觉。<h3 id=\"过滤与预防：\"><a href=\"#过滤与预防：\" class=\"headerlink\" title=\"过滤与预防：\"></a>过滤与预防：</h3>数据库网页端注入这种，可以考虑使用nginx_waf做过滤与预防</li>\n</ul>\n<h1 id=\"脚本\"><a href=\"#脚本\" class=\"headerlink\" title=\"脚本\"></a>脚本</h1><ul>\n<li><p>1、用Shell编程，判断一文件是不是字符设备文件，如果是将其拷贝到 /dev 目录下。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#!/bin/bash</span></div><div class=\"line\"><span class=\"built_in\">read</span> -p <span class=\"string\">\"Input file name: \"</span> FILENAME</div><div class=\"line\"><span class=\"keyword\">if</span> [ -c <span class=\"string\">\"<span class=\"variable\">$FILENAME</span>\"</span> ];<span class=\"keyword\">then</span></div><div class=\"line\">　　cp <span class=\"variable\">$FILENAME</span> /dev</div><div class=\"line\"><span class=\"keyword\">fi</span></div></pre></td></tr></table></figure>\n</li>\n<li><p>2、设计一个shell程序，添加一个新组为class1，然后添加属于这个组的30个用户，用户名的形式为stdxx，其中xx从01到30。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#!/bin/bash</span></div><div class=\"line\">groupadd class1</div><div class=\"line\"><span class=\"keyword\">for</span>((i=1;i&lt;31;i++))</div><div class=\"line\"><span class=\"keyword\">do</span></div><div class=\"line\">        <span class=\"keyword\">if</span> [ <span class=\"variable\">$i</span> -le 10 ];<span class=\"keyword\">then</span></div><div class=\"line\">                useradd -g class1 std0<span class=\"variable\">$i</span></div><div class=\"line\">        <span class=\"keyword\">else</span></div><div class=\"line\">                useradd -g class1 std<span class=\"variable\">$i</span></div><div class=\"line\">        <span class=\"keyword\">fi</span></div><div class=\"line\"><span class=\"keyword\">done</span></div></pre></td></tr></table></figure>\n</li>\n<li><p>3、编写shell程序，实现自动删除50个账号的功能。账号名为stud1至stud50。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#!/bin/bash</span></div><div class=\"line\"><span class=\"keyword\">for</span>((i=1;i&lt;51;i++))</div><div class=\"line\"><span class=\"keyword\">do</span></div><div class=\"line\">                userdel -r stud<span class=\"variable\">$i</span></div><div class=\"line\"><span class=\"keyword\">done</span></div></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n","excerpt":"","more":"<p>关于IT行业面试题和面试经验，推荐网站：</p>\n<ul>\n<li>1.<a href=\"https://leetcode.com/\">leetcode</a></li>\n<li>2.<a href=\"http://www.nowcoder.com/\">牛客网</a></li>\n</ul>\n<hr>\n<h1 id=\"填空\"><a href=\"#填空\" class=\"headerlink\" title=\"填空\"></a>填空</h1><ul>\n<li>1、在Linux系统中，以 <strong>文件</strong> 方式访问设备。</li>\n<li>2、Linux内核引导时，从文件 <strong>/etc/fstab</strong> 中读取要加载的文件系统</li>\n<li>3、Linux文件系统中每个文件用 <strong>i节点</strong> 来标识</li>\n<li>4、全部磁盘块由四个部分组成，分别为: <strong>引导块、专用块、i节点块、数据存储块</strong></li>\n<li>5、前台起动的进程使用:<strong> ctrl+c</strong> 禁止</li>\n<li>6、安装Linux系统对硬盘分区时，必须有两种分区类型：<strong>文件系统 和 交换分区。</strong></li>\n<li>7、网络管理的重要任务是 <strong>监控 和 控制</strong></li>\n<li>8、内核分为 <strong>文件管理系统、I/O管理系统 、内存管理系统 和进程管理系统</strong> 等四个子系统。</li>\n</ul>\n<h1 id=\"系统\"><a href=\"#系统\" class=\"headerlink\" title=\"系统\"></a>系统</h1><h2 id=\"1、Linux开机启动过程？\"><a href=\"#1、Linux开机启动过程？\" class=\"headerlink\" title=\"1、Linux开机启动过程？\"></a>1、Linux开机启动过程？</h2><ul>\n<li>1）主机加电自检，加载BOLS硬件信息</li>\n<li>2）读取MBR的引导文件（grub，lilo）</li>\n<li>3）引导linux内核</li>\n<li>4）运行第一个进程init（进程号永远为1）</li>\n<li>5）进入相应的运行级别</li>\n<li>6）运行终端，输入用户名和密码</li>\n</ul>\n<h2 id=\"2、Linux系统缺省的运行级别\"><a href=\"#2、Linux系统缺省的运行级别\" class=\"headerlink\" title=\"2、Linux系统缺省的运行级别\"></a>2、Linux系统缺省的运行级别</h2><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"number\">0.</span>关机</div><div class=\"line\"><span class=\"number\">1.</span>单机用户模式 </div><div class=\"line\"><span class=\"number\">2.</span>字符界面的多用户模式（不支持网络）</div><div class=\"line\"><span class=\"number\">3.</span>字符界面的多用户模式</div><div class=\"line\"><span class=\"number\">4.</span>未分配使用 </div><div class=\"line\"><span class=\"number\">5.</span>图形界面的多用户模式 </div><div class=\"line\"><span class=\"number\">6.</span>重启</div></pre></td></tr></table></figure>\n<h2 id=\"3、Linux系统是由那些部分组成？\"><a href=\"#3、Linux系统是由那些部分组成？\" class=\"headerlink\" title=\"3、Linux系统是由那些部分组成？\"></a>3、Linux系统是由那些部分组成？</h2><p>Linux系统内核，shell，文件系统和应用程序四部分组成</p>\n<h2 id=\"4、硬链接和软链接有什么区别？\"><a href=\"#4、硬链接和软链接有什么区别？\" class=\"headerlink\" title=\"4、硬链接和软链接有什么区别？\"></a>4、硬链接和软链接有什么区别？</h2><ul>\n<li>1）硬链接不可以跨分区，软件链可以跨分区</li>\n<li>2）硬链接指向一个i节点，而软链接则是创建一个新的i节点</li>\n<li>3）删除硬链接文件，不会删除原文件，删除软链接文件，会把原文件删除</li>\n</ul>\n<h2 id=\"5、如何规划一台Linux主机，步骤是怎样？\"><a href=\"#5、如何规划一台Linux主机，步骤是怎样？\" class=\"headerlink\" title=\"5、如何规划一台Linux主机，步骤是怎样？\"></a>5、如何规划一台Linux主机，步骤是怎样？</h2><ul>\n<li>1、确定机器是做什么用的，比如是做web、db、还是游戏服务器</li>\n<li>2、确定好之后，就要定系统需要怎么安装，默认安装哪些系统、分区怎么做</li>\n<li>3、需要优化系统的哪些参数，需要创建哪些用户等等的</li>\n</ul>\n<h2 id=\"6、查看系统当前进程连接数？\"><a href=\"#6、查看系统当前进程连接数？\" class=\"headerlink\" title=\"6、查看系统当前进程连接数？\"></a>6、查看系统当前进程连接数？</h2><figure class=\"highlight coq\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">netstat -an | <span class=\"type\">grep</span> ESTABLISHED | <span class=\"type\">wc</span> -l</div></pre></td></tr></table></figure>\n<h2 id=\"7、如何在-usr目录下找出大小超过10MB的文件\"><a href=\"#7、如何在-usr目录下找出大小超过10MB的文件\" class=\"headerlink\" title=\"7、如何在/usr目录下找出大小超过10MB的文件?\"></a>7、如何在/usr目录下找出大小超过10MB的文件?</h2><figure class=\"highlight sqf\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">find</span> /usr -<span class=\"built_in\">type</span> f -<span class=\"built_in\">size</span> +<span class=\"number\">10240</span>k</div></pre></td></tr></table></figure>\n<h2 id=\"8、添加一条到192-168-3-0-24的路由，网关为192-168-1-254？\"><a href=\"#8、添加一条到192-168-3-0-24的路由，网关为192-168-1-254？\" class=\"headerlink\" title=\"8、添加一条到192.168.3.0/24的路由，网关为192.168.1.254？\"></a>8、添加一条到192.168.3.0/24的路由，网关为192.168.1.254？</h2><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">route add -net <span class=\"number\">192.168</span><span class=\"number\">.3</span><span class=\"number\">.0</span>/<span class=\"number\">24</span> netmask <span class=\"number\">255.255</span><span class=\"number\">.255</span><span class=\"number\">.0</span> gw <span class=\"number\">192.168</span><span class=\"number\">.1</span><span class=\"number\">.254</span></div></pre></td></tr></table></figure>\n<h2 id=\"9、如何在-var目录下找出90天之内未被访问过的文件\"><a href=\"#9、如何在-var目录下找出90天之内未被访问过的文件\" class=\"headerlink\" title=\"9、如何在/var目录下找出90天之内未被访问过的文件?\"></a>9、如何在/var目录下找出90天之内未被访问过的文件?</h2><figure class=\"highlight excel\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">find</span> /<span class=\"built_in\">var</span> \\! -atime -<span class=\"number\">90</span></div></pre></td></tr></table></figure>\n<h2 id=\"10、如何在-home目录下找出120天之前被修改过的文件\"><a href=\"#10、如何在-home目录下找出120天之前被修改过的文件\" class=\"headerlink\" title=\"10、如何在/home目录下找出120天之前被修改过的文件?\"></a>10、如何在/home目录下找出120天之前被修改过的文件?</h2><figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">find</span> /<span class=\"built_in\">home</span>  -mtime +<span class=\"number\">120</span></div></pre></td></tr></table></figure>\n<h2 id=\"11、在整个目录树下查找文件“core”，如发现则无需提示直接删除它们。\"><a href=\"#11、在整个目录树下查找文件“core”，如发现则无需提示直接删除它们。\" class=\"headerlink\" title=\"11、在整个目录树下查找文件“core”，如发现则无需提示直接删除它们。\"></a>11、在整个目录树下查找文件“core”，如发现则无需提示直接删除它们。</h2><figure class=\"highlight sqf\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">find</span> / -<span class=\"built_in\">name</span> core -<span class=\"built_in\">exec</span> rm &#123;&#125; \\;</div></pre></td></tr></table></figure>\n<h2 id=\"12、有一普通用户想在每周日凌晨零点零分定期备份-user-backup到-tmp目录下，该用户应如何做\"><a href=\"#12、有一普通用户想在每周日凌晨零点零分定期备份-user-backup到-tmp目录下，该用户应如何做\" class=\"headerlink\" title=\"12、有一普通用户想在每周日凌晨零点零分定期备份/user/backup到/tmp目录下，该用户应如何做?\"></a>12、有一普通用户想在每周日凌晨零点零分定期备份/user/backup到/tmp目录下，该用户应如何做?</h2><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">crontab -e</div><div class=\"line\"><span class=\"number\">0</span> <span class=\"number\">0</span> * * <span class=\"number\">7</span> /bin/cp /user/backup /tmp</div></pre></td></tr></table></figure>\n<h1 id=\"安全\"><a href=\"#安全\" class=\"headerlink\" title=\"安全\"></a>安全</h1><h2 id=\"1、防火墙有几张表几条链？\"><a href=\"#1、防火墙有几张表几条链？\" class=\"headerlink\" title=\"1、防火墙有几张表几条链？\"></a>1、防火墙有几张表几条链？</h2><p>4张表，5条链</p>\n<h2 id=\"2、一台Linux系统初始化环境后需要做一些什么安全工作？\"><a href=\"#2、一台Linux系统初始化环境后需要做一些什么安全工作？\" class=\"headerlink\" title=\"2、一台Linux系统初始化环境后需要做一些什么安全工作？\"></a>2、一台Linux系统初始化环境后需要做一些什么安全工作？</h2><ul>\n<li>1、添加普通用户登陆，禁止root用户登陆，更改SSH端口号</li>\n<li>2、服务器使用密钥登陆，禁止密码登陆</li>\n<li>3、开启防火墙，关闭SElinux，根据业务需求设置相应的防火墙规则</li>\n<li>4、装fail2ban这种防止SSH暴力破击的软件</li>\n<li>5、设置只允许公司办公网出口IP能登陆服务器（看公司实际需要）</li>\n<li>6、设置nginx_waf模块防止SQL注入</li>\n<li>7、把Web服务使用www用户启动，更改网站目录的所有者和所属组为www</li>\n<li>8、修改历史命令记录的条数为10条</li>\n</ul>\n<h2 id=\"3、什么叫CC攻击？什么叫DDOS攻击？怎么预防CC攻击和DDOS攻击？\"><a href=\"#3、什么叫CC攻击？什么叫DDOS攻击？怎么预防CC攻击和DDOS攻击？\" class=\"headerlink\" title=\"3、什么叫CC攻击？什么叫DDOS攻击？怎么预防CC攻击和DDOS攻击？\"></a>3、什么叫CC攻击？什么叫DDOS攻击？怎么预防CC攻击和DDOS攻击？</h2><p>   简介：</p>\n<ul>\n<li>CC攻击主要是用来攻击页面的，模拟多个用户不停的对你的页面进行访问，从而使你的系统资源消耗殆尽</li>\n<li>DDOS攻击中文名叫分布式拒绝服务攻击，指借助服务器技术将多个计算机联合起来作为攻击平台，来对一个或多个目标发动DDOS攻击，<br>攻击即是通过大量合法的请求占用大量网络资源，以达到瘫痪网络的目的<br>预防： </li>\n<li>防CC/DDOS攻击这些只能是用硬件防火墙做流量清洗，将攻击流量引入黑洞<br>流量清洗这一块，主要是买ISP服务商的防攻击的服务就可以，机房一般有空余流量，<br>我们一般是买服务，毕竟攻击不会是持续长时间</li>\n</ul>\n<h2 id=\"4、什么是网站数据库注入？怎么过滤与预防网站数据库注入？\"><a href=\"#4、什么是网站数据库注入？怎么过滤与预防网站数据库注入？\" class=\"headerlink\" title=\"4、什么是网站数据库注入？怎么过滤与预防网站数据库注入？\"></a>4、什么是网站数据库注入？怎么过滤与预防网站数据库注入？</h2><h3 id=\"简介：\"><a href=\"#简介：\" class=\"headerlink\" title=\"简介：\"></a>简介：</h3><ul>\n<li>由于程序员的水平及经验参差不齐，大部分程序员在编写代码的时候，没有对用户输入数据的合法性进行判断，</li>\n<li>应用程序存在安全隐患。用户可以提交一段数据库查询代码，根据程序返回的结果，获得某些他想得知的数据，这就是所谓的SQL注入。</li>\n<li>SQL注入是从正常的WWW端口访问，而且表面看起来跟一般的Web页面访问没什么区别，如果管理员没查看日志的习惯，可能被入侵很长时间都不会发觉。<h3 id=\"过滤与预防：\"><a href=\"#过滤与预防：\" class=\"headerlink\" title=\"过滤与预防：\"></a>过滤与预防：</h3>数据库网页端注入这种，可以考虑使用nginx_waf做过滤与预防</li>\n</ul>\n<h1 id=\"脚本\"><a href=\"#脚本\" class=\"headerlink\" title=\"脚本\"></a>脚本</h1><ul>\n<li><p>1、用Shell编程，判断一文件是不是字符设备文件，如果是将其拷贝到 /dev 目录下。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#!/bin/bash</span></div><div class=\"line\"><span class=\"built_in\">read</span> -p <span class=\"string\">\"Input file name: \"</span> FILENAME</div><div class=\"line\"><span class=\"keyword\">if</span> [ -c <span class=\"string\">\"<span class=\"variable\">$FILENAME</span>\"</span> ];<span class=\"keyword\">then</span></div><div class=\"line\">　　cp <span class=\"variable\">$FILENAME</span> /dev</div><div class=\"line\"><span class=\"keyword\">fi</span></div></pre></td></tr></table></figure>\n</li>\n<li><p>2、设计一个shell程序，添加一个新组为class1，然后添加属于这个组的30个用户，用户名的形式为stdxx，其中xx从01到30。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#!/bin/bash</span></div><div class=\"line\">groupadd class1</div><div class=\"line\"><span class=\"keyword\">for</span>((i=1;i&lt;31;i++))</div><div class=\"line\"><span class=\"keyword\">do</span></div><div class=\"line\">        <span class=\"keyword\">if</span> [ <span class=\"variable\">$i</span> -le 10 ];<span class=\"keyword\">then</span></div><div class=\"line\">                useradd -g class1 std0<span class=\"variable\">$i</span></div><div class=\"line\">        <span class=\"keyword\">else</span></div><div class=\"line\">                useradd -g class1 std<span class=\"variable\">$i</span></div><div class=\"line\">        <span class=\"keyword\">fi</span></div><div class=\"line\"><span class=\"keyword\">done</span></div></pre></td></tr></table></figure>\n</li>\n<li><p>3、编写shell程序，实现自动删除50个账号的功能。账号名为stud1至stud50。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#!/bin/bash</span></div><div class=\"line\"><span class=\"keyword\">for</span>((i=1;i&lt;51;i++))</div><div class=\"line\"><span class=\"keyword\">do</span></div><div class=\"line\">                userdel -r stud<span class=\"variable\">$i</span></div><div class=\"line\"><span class=\"keyword\">done</span></div></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n"},{"title":"常用网站链接","abbrlink":44568,"date":"2016-11-11T06:25:27.000Z","_content":"\n一些方便个人查询的链接，而不用打开笔记，不喜欢请忽略。\n\n---\n# 环境搭建\n一键LNMP  http://lnmp.org\n一键LAMP  http://www.wdlinux.cn/bbs/forum-5-1.html\n\nphp官网     http://www.php.net/\nphpmyadmin  http://www.phpmyadmin.net/\nmysql       http://www.mysql.com/\n\t\nDiscuz!     http://www.discuz.net/forum.php\nWordPress   https://cn.wordpress.org/\n\n\n---\n# 网站管理\njoomla    https://www.joomla.org/\nWDCP      http://www.wdlinux.cn/wdcp/\nAMH       http://amh.sh/install.htm\nPHPCMS    http://www.phpcms.cn/\n\n\n---\n# yum源\n网易163源          http://mirrors.163.com/\n阿里云源           http://mirrors.aliyun.com/  \n搜狐源             http://mirrors.sohu.com/\n中科大源           http://mirrors.ustc.edu.cn/\n\n\n---\n# 系统下载\nCentOS官网        https://www.centos.org/\nUbuntu官网        http://www.ubuntu.com/download\nDebian官网        https://www.debian.org/\nFedora官网        https://getfedora.org/\nRedHat官网        https://www.redhat.com\n\n---\n# 运维\n在线man命令查询：http://man.linuxde.net/       \nLinux常用命令大全：\nhttp://www.cnblogs.com/DamonTang/archive/2012/10/17/2727942.html\n运维abcDocker：http://www.abcdocker.com/\n运维俱乐部：http://www.ywclub.org/\n\n持续集成（上线部署）：\n瓦力：http://www.walle-web.io\nJenkins：https://jenkins.io\n\n\n---\n# 学习、技能\n**HTML**：\n\nW3school：http://www.w3school.com.cn/index.html\n\n\n\n\n\n\n\n**Python**：\n\nPython简明教程：http://www.kuqin.com/abyteofpython_cn/\nPython之路：http://www.cnblogs.com/alex3714/articles/5465198.html#3519330\nPython在线手册：http://docs.pythontab.com/ \nPython 练手：https://www.zhihu.com/question/29372574\n\n\n\n\n**shell**：\n\n京峰免费shell课程：http://v.jfedu.net/web/course/2\ngithub年度shell：https://www.zhihu.com/question/28182203\n\n\n\n\n\n**PHP**：\n学PHP最快要多久？2个月学PHP：http://www.zhihu.com/question/39078661?plg_nld=1&plg_uin=1&plg_auth=1&plg_nld=1&plg_usr=1&plg_vkey=1&plg_dev=1\n\n\n\n**版本控制**\nGit知识：http://lib.csdn.net/base/git\n\nSVN：\n\n\n\n---\n# 别人的博客\nhttp://www.ilanni.com\nhttp://iwanli.me\nhttp://blog.foreverqing.com\nwww.jokinkuang.info\nhttp://www.tianfeiyu.com\nhttp://yonsm.net\nhttp://tianshaojie.com   Android\nhttp://www.ezlippi.com  \nhttp://www.joryhe.com\nhttps://www.maoshu.cc\nhttps://teddysun.com\n\n---\n\n","source":"_posts/杂项/2016-11-11-常用网站链接.md","raw":"---\ntitle: 常用网站链接\ncategories:\n  - 杂项\ntags:\n  - 网页链接更新页\nabbrlink: 44568\ndate: 2016-11-11 14:25:27\n---\n\n一些方便个人查询的链接，而不用打开笔记，不喜欢请忽略。\n\n---\n# 环境搭建\n一键LNMP  http://lnmp.org\n一键LAMP  http://www.wdlinux.cn/bbs/forum-5-1.html\n\nphp官网     http://www.php.net/\nphpmyadmin  http://www.phpmyadmin.net/\nmysql       http://www.mysql.com/\n\t\nDiscuz!     http://www.discuz.net/forum.php\nWordPress   https://cn.wordpress.org/\n\n\n---\n# 网站管理\njoomla    https://www.joomla.org/\nWDCP      http://www.wdlinux.cn/wdcp/\nAMH       http://amh.sh/install.htm\nPHPCMS    http://www.phpcms.cn/\n\n\n---\n# yum源\n网易163源          http://mirrors.163.com/\n阿里云源           http://mirrors.aliyun.com/  \n搜狐源             http://mirrors.sohu.com/\n中科大源           http://mirrors.ustc.edu.cn/\n\n\n---\n# 系统下载\nCentOS官网        https://www.centos.org/\nUbuntu官网        http://www.ubuntu.com/download\nDebian官网        https://www.debian.org/\nFedora官网        https://getfedora.org/\nRedHat官网        https://www.redhat.com\n\n---\n# 运维\n在线man命令查询：http://man.linuxde.net/       \nLinux常用命令大全：\nhttp://www.cnblogs.com/DamonTang/archive/2012/10/17/2727942.html\n运维abcDocker：http://www.abcdocker.com/\n运维俱乐部：http://www.ywclub.org/\n\n持续集成（上线部署）：\n瓦力：http://www.walle-web.io\nJenkins：https://jenkins.io\n\n\n---\n# 学习、技能\n**HTML**：\n\nW3school：http://www.w3school.com.cn/index.html\n\n\n\n\n\n\n\n**Python**：\n\nPython简明教程：http://www.kuqin.com/abyteofpython_cn/\nPython之路：http://www.cnblogs.com/alex3714/articles/5465198.html#3519330\nPython在线手册：http://docs.pythontab.com/ \nPython 练手：https://www.zhihu.com/question/29372574\n\n\n\n\n**shell**：\n\n京峰免费shell课程：http://v.jfedu.net/web/course/2\ngithub年度shell：https://www.zhihu.com/question/28182203\n\n\n\n\n\n**PHP**：\n学PHP最快要多久？2个月学PHP：http://www.zhihu.com/question/39078661?plg_nld=1&plg_uin=1&plg_auth=1&plg_nld=1&plg_usr=1&plg_vkey=1&plg_dev=1\n\n\n\n**版本控制**\nGit知识：http://lib.csdn.net/base/git\n\nSVN：\n\n\n\n---\n# 别人的博客\nhttp://www.ilanni.com\nhttp://iwanli.me\nhttp://blog.foreverqing.com\nwww.jokinkuang.info\nhttp://www.tianfeiyu.com\nhttp://yonsm.net\nhttp://tianshaojie.com   Android\nhttp://www.ezlippi.com  \nhttp://www.joryhe.com\nhttps://www.maoshu.cc\nhttps://teddysun.com\n\n---\n\n","slug":"杂项-2016-11-11-常用网站链接","published":1,"updated":"2016-11-13T03:36:30.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civi8ouj1001o2c6n5weht8zs","content":"<p>一些方便个人查询的链接，而不用打开笔记，不喜欢请忽略。</p>\n<hr>\n<h1 id=\"环境搭建\"><a href=\"#环境搭建\" class=\"headerlink\" title=\"环境搭建\"></a>环境搭建</h1><p>一键LNMP  <a href=\"http://lnmp.org\" target=\"_blank\" rel=\"external\">http://lnmp.org</a><br>一键LAMP  <a href=\"http://www.wdlinux.cn/bbs/forum-5-1.html\" target=\"_blank\" rel=\"external\">http://www.wdlinux.cn/bbs/forum-5-1.html</a></p>\n<p>php官网     <a href=\"http://www.php.net/\" target=\"_blank\" rel=\"external\">http://www.php.net/</a><br>phpmyadmin  <a href=\"http://www.phpmyadmin.net/\" target=\"_blank\" rel=\"external\">http://www.phpmyadmin.net/</a><br>mysql       <a href=\"http://www.mysql.com/\" target=\"_blank\" rel=\"external\">http://www.mysql.com/</a></p>\n<p>Discuz!     <a href=\"http://www.discuz.net/forum.php\" target=\"_blank\" rel=\"external\">http://www.discuz.net/forum.php</a><br>WordPress   <a href=\"https://cn.wordpress.org/\" target=\"_blank\" rel=\"external\">https://cn.wordpress.org/</a></p>\n<hr>\n<h1 id=\"网站管理\"><a href=\"#网站管理\" class=\"headerlink\" title=\"网站管理\"></a>网站管理</h1><p>joomla    <a href=\"https://www.joomla.org/\" target=\"_blank\" rel=\"external\">https://www.joomla.org/</a><br>WDCP      <a href=\"http://www.wdlinux.cn/wdcp/\" target=\"_blank\" rel=\"external\">http://www.wdlinux.cn/wdcp/</a><br>AMH       <a href=\"http://amh.sh/install.htm\" target=\"_blank\" rel=\"external\">http://amh.sh/install.htm</a><br>PHPCMS    <a href=\"http://www.phpcms.cn/\" target=\"_blank\" rel=\"external\">http://www.phpcms.cn/</a></p>\n<hr>\n<h1 id=\"yum源\"><a href=\"#yum源\" class=\"headerlink\" title=\"yum源\"></a>yum源</h1><p>网易163源          <a href=\"http://mirrors.163.com/\" target=\"_blank\" rel=\"external\">http://mirrors.163.com/</a><br>阿里云源           <a href=\"http://mirrors.aliyun.com/\" target=\"_blank\" rel=\"external\">http://mirrors.aliyun.com/</a><br>搜狐源             <a href=\"http://mirrors.sohu.com/\" target=\"_blank\" rel=\"external\">http://mirrors.sohu.com/</a><br>中科大源           <a href=\"http://mirrors.ustc.edu.cn/\" target=\"_blank\" rel=\"external\">http://mirrors.ustc.edu.cn/</a></p>\n<hr>\n<h1 id=\"系统下载\"><a href=\"#系统下载\" class=\"headerlink\" title=\"系统下载\"></a>系统下载</h1><p>CentOS官网        <a href=\"https://www.centos.org/\" target=\"_blank\" rel=\"external\">https://www.centos.org/</a><br>Ubuntu官网        <a href=\"http://www.ubuntu.com/download\" target=\"_blank\" rel=\"external\">http://www.ubuntu.com/download</a><br>Debian官网        <a href=\"https://www.debian.org/\" target=\"_blank\" rel=\"external\">https://www.debian.org/</a><br>Fedora官网        <a href=\"https://getfedora.org/\" target=\"_blank\" rel=\"external\">https://getfedora.org/</a><br>RedHat官网        <a href=\"https://www.redhat.com\" target=\"_blank\" rel=\"external\">https://www.redhat.com</a></p>\n<hr>\n<h1 id=\"运维\"><a href=\"#运维\" class=\"headerlink\" title=\"运维\"></a>运维</h1><p>在线man命令查询：<a href=\"http://man.linuxde.net/\" target=\"_blank\" rel=\"external\">http://man.linuxde.net/</a><br>Linux常用命令大全：<br><a href=\"http://www.cnblogs.com/DamonTang/archive/2012/10/17/2727942.html\" target=\"_blank\" rel=\"external\">http://www.cnblogs.com/DamonTang/archive/2012/10/17/2727942.html</a><br>运维abcDocker：<a href=\"http://www.abcdocker.com/\" target=\"_blank\" rel=\"external\">http://www.abcdocker.com/</a><br>运维俱乐部：<a href=\"http://www.ywclub.org/\" target=\"_blank\" rel=\"external\">http://www.ywclub.org/</a></p>\n<p>持续集成（上线部署）：<br>瓦力：<a href=\"http://www.walle-web.io\" target=\"_blank\" rel=\"external\">http://www.walle-web.io</a><br>Jenkins：<a href=\"https://jenkins.io\" target=\"_blank\" rel=\"external\">https://jenkins.io</a></p>\n<hr>\n<h1 id=\"学习、技能\"><a href=\"#学习、技能\" class=\"headerlink\" title=\"学习、技能\"></a>学习、技能</h1><p><strong>HTML</strong>：</p>\n<p>W3school：<a href=\"http://www.w3school.com.cn/index.html\" target=\"_blank\" rel=\"external\">http://www.w3school.com.cn/index.html</a></p>\n<p><strong>Python</strong>：</p>\n<p>Python简明教程：<a href=\"http://www.kuqin.com/abyteofpython_cn/\" target=\"_blank\" rel=\"external\">http://www.kuqin.com/abyteofpython_cn/</a><br>Python之路：<a href=\"http://www.cnblogs.com/alex3714/articles/5465198.html#3519330\" target=\"_blank\" rel=\"external\">http://www.cnblogs.com/alex3714/articles/5465198.html#3519330</a><br>Python在线手册：<a href=\"http://docs.pythontab.com/\" target=\"_blank\" rel=\"external\">http://docs.pythontab.com/</a><br>Python 练手：<a href=\"https://www.zhihu.com/question/29372574\" target=\"_blank\" rel=\"external\">https://www.zhihu.com/question/29372574</a></p>\n<p><strong>shell</strong>：</p>\n<p>京峰免费shell课程：<a href=\"http://v.jfedu.net/web/course/2\" target=\"_blank\" rel=\"external\">http://v.jfedu.net/web/course/2</a><br>github年度shell：<a href=\"https://www.zhihu.com/question/28182203\" target=\"_blank\" rel=\"external\">https://www.zhihu.com/question/28182203</a></p>\n<p><strong>PHP</strong>：<br>学PHP最快要多久？2个月学PHP：<a href=\"http://www.zhihu.com/question/39078661?plg_nld=1&amp;plg_uin=1&amp;plg_auth=1&amp;plg_nld=1&amp;plg_usr=1&amp;plg_vkey=1&amp;plg_dev=1\" target=\"_blank\" rel=\"external\">http://www.zhihu.com/question/39078661?plg_nld=1&amp;plg_uin=1&amp;plg_auth=1&amp;plg_nld=1&amp;plg_usr=1&amp;plg_vkey=1&amp;plg_dev=1</a></p>\n<p><strong>版本控制</strong><br>Git知识：<a href=\"http://lib.csdn.net/base/git\" target=\"_blank\" rel=\"external\">http://lib.csdn.net/base/git</a></p>\n<p>SVN：</p>\n<hr>\n<h1 id=\"别人的博客\"><a href=\"#别人的博客\" class=\"headerlink\" title=\"别人的博客\"></a>别人的博客</h1><p><a href=\"http://www.ilanni.com\" target=\"_blank\" rel=\"external\">http://www.ilanni.com</a><br><a href=\"http://iwanli.me\" target=\"_blank\" rel=\"external\">http://iwanli.me</a><br><a href=\"http://blog.foreverqing.com\" target=\"_blank\" rel=\"external\">http://blog.foreverqing.com</a><br>www.jokinkuang.info<br><a href=\"http://www.tianfeiyu.com\" target=\"_blank\" rel=\"external\">http://www.tianfeiyu.com</a><br><a href=\"http://yonsm.net\" target=\"_blank\" rel=\"external\">http://yonsm.net</a><br><a href=\"http://tianshaojie.com\" target=\"_blank\" rel=\"external\">http://tianshaojie.com</a>   Android<br><a href=\"http://www.ezlippi.com\" target=\"_blank\" rel=\"external\">http://www.ezlippi.com</a><br><a href=\"http://www.joryhe.com\" target=\"_blank\" rel=\"external\">http://www.joryhe.com</a><br><a href=\"https://www.maoshu.cc\" target=\"_blank\" rel=\"external\">https://www.maoshu.cc</a><br><a href=\"https://teddysun.com\" target=\"_blank\" rel=\"external\">https://teddysun.com</a></p>\n<hr>\n","excerpt":"","more":"<p>一些方便个人查询的链接，而不用打开笔记，不喜欢请忽略。</p>\n<hr>\n<h1 id=\"环境搭建\"><a href=\"#环境搭建\" class=\"headerlink\" title=\"环境搭建\"></a>环境搭建</h1><p>一键LNMP  <a href=\"http://lnmp.org\">http://lnmp.org</a><br>一键LAMP  <a href=\"http://www.wdlinux.cn/bbs/forum-5-1.html\">http://www.wdlinux.cn/bbs/forum-5-1.html</a></p>\n<p>php官网     <a href=\"http://www.php.net/\">http://www.php.net/</a><br>phpmyadmin  <a href=\"http://www.phpmyadmin.net/\">http://www.phpmyadmin.net/</a><br>mysql       <a href=\"http://www.mysql.com/\">http://www.mysql.com/</a></p>\n<p>Discuz!     <a href=\"http://www.discuz.net/forum.php\">http://www.discuz.net/forum.php</a><br>WordPress   <a href=\"https://cn.wordpress.org/\">https://cn.wordpress.org/</a></p>\n<hr>\n<h1 id=\"网站管理\"><a href=\"#网站管理\" class=\"headerlink\" title=\"网站管理\"></a>网站管理</h1><p>joomla    <a href=\"https://www.joomla.org/\">https://www.joomla.org/</a><br>WDCP      <a href=\"http://www.wdlinux.cn/wdcp/\">http://www.wdlinux.cn/wdcp/</a><br>AMH       <a href=\"http://amh.sh/install.htm\">http://amh.sh/install.htm</a><br>PHPCMS    <a href=\"http://www.phpcms.cn/\">http://www.phpcms.cn/</a></p>\n<hr>\n<h1 id=\"yum源\"><a href=\"#yum源\" class=\"headerlink\" title=\"yum源\"></a>yum源</h1><p>网易163源          <a href=\"http://mirrors.163.com/\">http://mirrors.163.com/</a><br>阿里云源           <a href=\"http://mirrors.aliyun.com/\">http://mirrors.aliyun.com/</a><br>搜狐源             <a href=\"http://mirrors.sohu.com/\">http://mirrors.sohu.com/</a><br>中科大源           <a href=\"http://mirrors.ustc.edu.cn/\">http://mirrors.ustc.edu.cn/</a></p>\n<hr>\n<h1 id=\"系统下载\"><a href=\"#系统下载\" class=\"headerlink\" title=\"系统下载\"></a>系统下载</h1><p>CentOS官网        <a href=\"https://www.centos.org/\">https://www.centos.org/</a><br>Ubuntu官网        <a href=\"http://www.ubuntu.com/download\">http://www.ubuntu.com/download</a><br>Debian官网        <a href=\"https://www.debian.org/\">https://www.debian.org/</a><br>Fedora官网        <a href=\"https://getfedora.org/\">https://getfedora.org/</a><br>RedHat官网        <a href=\"https://www.redhat.com\">https://www.redhat.com</a></p>\n<hr>\n<h1 id=\"运维\"><a href=\"#运维\" class=\"headerlink\" title=\"运维\"></a>运维</h1><p>在线man命令查询：<a href=\"http://man.linuxde.net/\">http://man.linuxde.net/</a><br>Linux常用命令大全：<br><a href=\"http://www.cnblogs.com/DamonTang/archive/2012/10/17/2727942.html\">http://www.cnblogs.com/DamonTang/archive/2012/10/17/2727942.html</a><br>运维abcDocker：<a href=\"http://www.abcdocker.com/\">http://www.abcdocker.com/</a><br>运维俱乐部：<a href=\"http://www.ywclub.org/\">http://www.ywclub.org/</a></p>\n<p>持续集成（上线部署）：<br>瓦力：<a href=\"http://www.walle-web.io\">http://www.walle-web.io</a><br>Jenkins：<a href=\"https://jenkins.io\">https://jenkins.io</a></p>\n<hr>\n<h1 id=\"学习、技能\"><a href=\"#学习、技能\" class=\"headerlink\" title=\"学习、技能\"></a>学习、技能</h1><p><strong>HTML</strong>：</p>\n<p>W3school：<a href=\"http://www.w3school.com.cn/index.html\">http://www.w3school.com.cn/index.html</a></p>\n<p><strong>Python</strong>：</p>\n<p>Python简明教程：<a href=\"http://www.kuqin.com/abyteofpython_cn/\">http://www.kuqin.com/abyteofpython_cn/</a><br>Python之路：<a href=\"http://www.cnblogs.com/alex3714/articles/5465198.html#3519330\">http://www.cnblogs.com/alex3714/articles/5465198.html#3519330</a><br>Python在线手册：<a href=\"http://docs.pythontab.com/\">http://docs.pythontab.com/</a><br>Python 练手：<a href=\"https://www.zhihu.com/question/29372574\">https://www.zhihu.com/question/29372574</a></p>\n<p><strong>shell</strong>：</p>\n<p>京峰免费shell课程：<a href=\"http://v.jfedu.net/web/course/2\">http://v.jfedu.net/web/course/2</a><br>github年度shell：<a href=\"https://www.zhihu.com/question/28182203\">https://www.zhihu.com/question/28182203</a></p>\n<p><strong>PHP</strong>：<br>学PHP最快要多久？2个月学PHP：<a href=\"http://www.zhihu.com/question/39078661?plg_nld=1&amp;plg_uin=1&amp;plg_auth=1&amp;plg_nld=1&amp;plg_usr=1&amp;plg_vkey=1&amp;plg_dev=1\">http://www.zhihu.com/question/39078661?plg_nld=1&amp;plg_uin=1&amp;plg_auth=1&amp;plg_nld=1&amp;plg_usr=1&amp;plg_vkey=1&amp;plg_dev=1</a></p>\n<p><strong>版本控制</strong><br>Git知识：<a href=\"http://lib.csdn.net/base/git\">http://lib.csdn.net/base/git</a></p>\n<p>SVN：</p>\n<hr>\n<h1 id=\"别人的博客\"><a href=\"#别人的博客\" class=\"headerlink\" title=\"别人的博客\"></a>别人的博客</h1><p><a href=\"http://www.ilanni.com\">http://www.ilanni.com</a><br><a href=\"http://iwanli.me\">http://iwanli.me</a><br><a href=\"http://blog.foreverqing.com\">http://blog.foreverqing.com</a><br>www.jokinkuang.info<br><a href=\"http://www.tianfeiyu.com\">http://www.tianfeiyu.com</a><br><a href=\"http://yonsm.net\">http://yonsm.net</a><br><a href=\"http://tianshaojie.com\">http://tianshaojie.com</a>   Android<br><a href=\"http://www.ezlippi.com\">http://www.ezlippi.com</a><br><a href=\"http://www.joryhe.com\">http://www.joryhe.com</a><br><a href=\"https://www.maoshu.cc\">https://www.maoshu.cc</a><br><a href=\"https://teddysun.com\">https://teddysun.com</a></p>\n<hr>\n"},{"title":"文章阅读链接更新页","abbrlink":37824,"date":"2016-11-02T07:53:58.000Z","_content":"\n##### 1、我的算法学习之路（Google工程师）\nhttp://zh.lucida.me/blog/on-learning-algorithms/\n\n---","source":"_posts/文章阅读/2016-11-02-文章阅读链接更新页.md","raw":"---\ntitle: 文章阅读链接更新页\ncategories:\n  - 文章阅读\ntags:\n  - 网页链接更新页\nabbrlink: 37824\ndate: 2016-11-02 15:53:58\n---\n\n##### 1、我的算法学习之路（Google工程师）\nhttp://zh.lucida.me/blog/on-learning-algorithms/\n\n---","slug":"文章阅读-2016-11-02-文章阅读链接更新页","published":1,"updated":"2016-11-13T03:36:30.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civi8ouj2001r2c6nmx09egen","content":"<h5 id=\"1、我的算法学习之路（Google工程师）\"><a href=\"#1、我的算法学习之路（Google工程师）\" class=\"headerlink\" title=\"1、我的算法学习之路（Google工程师）\"></a>1、我的算法学习之路（Google工程师）</h5><p><a href=\"http://zh.lucida.me/blog/on-learning-algorithms/\" target=\"_blank\" rel=\"external\">http://zh.lucida.me/blog/on-learning-algorithms/</a></p>\n<hr>\n","excerpt":"","more":"<h5 id=\"1、我的算法学习之路（Google工程师）\"><a href=\"#1、我的算法学习之路（Google工程师）\" class=\"headerlink\" title=\"1、我的算法学习之路（Google工程师）\"></a>1、我的算法学习之路（Google工程师）</h5><p><a href=\"http://zh.lucida.me/blog/on-learning-algorithms/\">http://zh.lucida.me/blog/on-learning-algorithms/</a></p>\n<hr>\n"},{"title":"用软文思维写工作总结","abbrlink":37921,"date":"2016-11-02T06:52:37.000Z","_content":"\n网上看到的网文，摘录分享\n\n## 如何用软文思维写工作总结？\n#### Step 1 : 工作总结的选题规划\n1. 给谁看\n工作总结，顾名思义就是要给领导看的，所以我们要做的第一件事就是分析领导的风格，领导的风格决定了总结的风格。一般来说主要有这么三类。\n请根据具体情况对号入座：\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8%E8%BD%AF%E6%96%87%E6%80%9D%E7%BB%B4%E5%86%99%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93001.png)\n2. 看什么\n领导主要想看些什么，你就要写些什么。\n这里有七个方面内容可供选择：你的（销售、生产）业绩、对未来工作的计划、工作心得、有哪些好的建议、对一些数据的分析和结论、对行业情况的调研结果，以及提出未来工作所需要的资源等等。当然其他方面也还有很多，以上仅供参考。\n3. 横向调研\n横向调研的意思是借鉴你同事的优秀工作总结，做到扬长避短。\n#### Step 2 : 挖掘工作总结的素材\n软文的素材主要是以下几个方面，它们的核心就是介绍企业的基本信息。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8%E8%BD%AF%E6%96%87%E6%80%9D%E7%BB%B4%E5%86%99%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93002.png)\n用在工作总结上，就不是以企业为主体，而是以个人以及个人所在的团队为介绍对象。它们分别可写的指标如下图所示：\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8%E8%BD%AF%E6%96%87%E6%80%9D%E7%BB%B4%E5%86%99%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93003.png)\n#### Step 3 : 整合素材\n可以单纯地列出数字，计算增长比、横向对比、逐月比较、趋势预测等等，对于数据来说，最好的呈现方式就是图表。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8%E8%BD%AF%E6%96%87%E6%80%9D%E7%BB%B4%E5%86%99%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93004.png)\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8%E8%BD%AF%E6%96%87%E6%80%9D%E7%BB%B4%E5%86%99%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93005.png)\n这时候可能有些人就要问了，我是属于行政类岗位，如果没有以上这些业绩指标，该怎么写呢？答案是，你依然可以从以下11个方框中找到你的成就感。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8%E8%BD%AF%E6%96%87%E6%80%9D%E7%BB%B4%E5%86%99%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93006.png)\n正文撰写和标题拟定，就要根据以上确定的选题整理的素材自由发挥了。不过学姐为大家提供了一些非常好用的的句式↓\n工作总结优化的9种句式\n\n你是不是也有这种感受，刚写完的一个文案/总结，当时怎么也看不出有哪里不好，但是隔了一两天再看一遍，就能发现不少可以改进的地方。\n对于影响你升职加薪的工作总结，当然要一改再改，优化几遍再上交啦！\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8%E8%BD%AF%E6%96%87%E6%80%9D%E7%BB%B4%E5%86%99%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93007.png)\n不过这里不是让你使用多么精美的措辞，毕竟不是写小说，工作总结的精髓还是在于它的理性意义。\n一篇优秀的工作总结要做到言语朴实但不呆板，成果累累却不张扬，让你的上司认为你是个踏实努力、有思想、有上进心、有潜力的好员工。怎么做到呢？\n可以参考以下9个句式，看看它们的巧妙之处。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8%E8%BD%AF%E6%96%87%E6%80%9D%E7%BB%B4%E5%86%99%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93008.png)\n或者用“首先，其次，再次”等有逻辑的句式，表明你有非常清晰的工作思路；\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8%E8%BD%AF%E6%96%87%E6%80%9D%E7%BB%B4%E5%86%99%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93009.png)\n文章里要出现这类词，因为总结不能面面俱到，要突出主次，以免领导丢失重点，也认为你是个没有重点的人；\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8%E8%BD%AF%E6%96%87%E6%80%9D%E7%BB%B4%E5%86%99%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93010.png)\n通过某些真实的案例和数据得出结论，有凭有据，表明你的观点并非是天马行空想出来的；\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8%E8%BD%AF%E6%96%87%E6%80%9D%E7%BB%B4%E5%86%99%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93011.png)\n同上，当你提出一个观点时，需要数据、图表来佐证，图文结合更具说服力；\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8%E8%BD%AF%E6%96%87%E6%80%9D%E7%BB%B4%E5%86%99%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93012.png)\n不光要做会提问题的员工，还要主动寻找解决问题的方法，向领导表明你是个有建设性意见的人；\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8%E8%BD%AF%E6%96%87%E6%80%9D%E7%BB%B4%E5%86%99%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93013.png)\n很多人在总结报告里喜欢讲一些行业的成功案例（运营、用人等经验），但是如果不联系到自己的工作中，就会说明你只是个爱借用他人来吹牛的人；但反之就能表明你是个爱学习、爱思考、爱应用的人；\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8%E8%BD%AF%E6%96%87%E6%80%9D%E7%BB%B4%E5%86%99%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93014.png)\n当向领导提出同行竞争者的成功做法时，你还需要指出本公司目前需要的条件或需要克服的障碍，表明你是个思虑周全、靠谱的人；\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8%E8%BD%AF%E6%96%87%E6%80%9D%E7%BB%B4%E5%86%99%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93015.png)\n当你提出建议时，你需要落实具体的资源、人员计划。表明你真正深入思考了这个问题，是一个有较强执行力的人。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8%E8%BD%AF%E6%96%87%E6%80%9D%E7%BB%B4%E5%86%99%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93016.png)\n最后总结一下，这半年（一年）自己哪方面做得好，哪方面还有待提高，如何提高，表明你是个勤思考，上进的人，也让领导相信你明年会做得更好（画大饼懂不懂？）。\n\n了解更多写工作总结的技巧，请戳[怎样用软文思维写工作总结？ >>](http://study.163.com/course/introduction/1599008.htm?inref=xuejieyouliao60#/courseDetail)\n\n\n\n---\n","source":"_posts/文章阅读/2016-11-02-用软文思维写工作总结.md","raw":"---\ntitle: 用软文思维写工作总结\ncategories:\n  - 文章阅读\ntags:\n  - 工作总结\nabbrlink: 37921\ndate: 2016-11-02 14:52:37\n---\n\n网上看到的网文，摘录分享\n\n## 如何用软文思维写工作总结？\n#### Step 1 : 工作总结的选题规划\n1. 给谁看\n工作总结，顾名思义就是要给领导看的，所以我们要做的第一件事就是分析领导的风格，领导的风格决定了总结的风格。一般来说主要有这么三类。\n请根据具体情况对号入座：\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8%E8%BD%AF%E6%96%87%E6%80%9D%E7%BB%B4%E5%86%99%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93001.png)\n2. 看什么\n领导主要想看些什么，你就要写些什么。\n这里有七个方面内容可供选择：你的（销售、生产）业绩、对未来工作的计划、工作心得、有哪些好的建议、对一些数据的分析和结论、对行业情况的调研结果，以及提出未来工作所需要的资源等等。当然其他方面也还有很多，以上仅供参考。\n3. 横向调研\n横向调研的意思是借鉴你同事的优秀工作总结，做到扬长避短。\n#### Step 2 : 挖掘工作总结的素材\n软文的素材主要是以下几个方面，它们的核心就是介绍企业的基本信息。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8%E8%BD%AF%E6%96%87%E6%80%9D%E7%BB%B4%E5%86%99%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93002.png)\n用在工作总结上，就不是以企业为主体，而是以个人以及个人所在的团队为介绍对象。它们分别可写的指标如下图所示：\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8%E8%BD%AF%E6%96%87%E6%80%9D%E7%BB%B4%E5%86%99%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93003.png)\n#### Step 3 : 整合素材\n可以单纯地列出数字，计算增长比、横向对比、逐月比较、趋势预测等等，对于数据来说，最好的呈现方式就是图表。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8%E8%BD%AF%E6%96%87%E6%80%9D%E7%BB%B4%E5%86%99%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93004.png)\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8%E8%BD%AF%E6%96%87%E6%80%9D%E7%BB%B4%E5%86%99%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93005.png)\n这时候可能有些人就要问了，我是属于行政类岗位，如果没有以上这些业绩指标，该怎么写呢？答案是，你依然可以从以下11个方框中找到你的成就感。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8%E8%BD%AF%E6%96%87%E6%80%9D%E7%BB%B4%E5%86%99%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93006.png)\n正文撰写和标题拟定，就要根据以上确定的选题整理的素材自由发挥了。不过学姐为大家提供了一些非常好用的的句式↓\n工作总结优化的9种句式\n\n你是不是也有这种感受，刚写完的一个文案/总结，当时怎么也看不出有哪里不好，但是隔了一两天再看一遍，就能发现不少可以改进的地方。\n对于影响你升职加薪的工作总结，当然要一改再改，优化几遍再上交啦！\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8%E8%BD%AF%E6%96%87%E6%80%9D%E7%BB%B4%E5%86%99%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93007.png)\n不过这里不是让你使用多么精美的措辞，毕竟不是写小说，工作总结的精髓还是在于它的理性意义。\n一篇优秀的工作总结要做到言语朴实但不呆板，成果累累却不张扬，让你的上司认为你是个踏实努力、有思想、有上进心、有潜力的好员工。怎么做到呢？\n可以参考以下9个句式，看看它们的巧妙之处。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8%E8%BD%AF%E6%96%87%E6%80%9D%E7%BB%B4%E5%86%99%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93008.png)\n或者用“首先，其次，再次”等有逻辑的句式，表明你有非常清晰的工作思路；\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8%E8%BD%AF%E6%96%87%E6%80%9D%E7%BB%B4%E5%86%99%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93009.png)\n文章里要出现这类词，因为总结不能面面俱到，要突出主次，以免领导丢失重点，也认为你是个没有重点的人；\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8%E8%BD%AF%E6%96%87%E6%80%9D%E7%BB%B4%E5%86%99%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93010.png)\n通过某些真实的案例和数据得出结论，有凭有据，表明你的观点并非是天马行空想出来的；\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8%E8%BD%AF%E6%96%87%E6%80%9D%E7%BB%B4%E5%86%99%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93011.png)\n同上，当你提出一个观点时，需要数据、图表来佐证，图文结合更具说服力；\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8%E8%BD%AF%E6%96%87%E6%80%9D%E7%BB%B4%E5%86%99%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93012.png)\n不光要做会提问题的员工，还要主动寻找解决问题的方法，向领导表明你是个有建设性意见的人；\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8%E8%BD%AF%E6%96%87%E6%80%9D%E7%BB%B4%E5%86%99%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93013.png)\n很多人在总结报告里喜欢讲一些行业的成功案例（运营、用人等经验），但是如果不联系到自己的工作中，就会说明你只是个爱借用他人来吹牛的人；但反之就能表明你是个爱学习、爱思考、爱应用的人；\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8%E8%BD%AF%E6%96%87%E6%80%9D%E7%BB%B4%E5%86%99%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93014.png)\n当向领导提出同行竞争者的成功做法时，你还需要指出本公司目前需要的条件或需要克服的障碍，表明你是个思虑周全、靠谱的人；\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8%E8%BD%AF%E6%96%87%E6%80%9D%E7%BB%B4%E5%86%99%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93015.png)\n当你提出建议时，你需要落实具体的资源、人员计划。表明你真正深入思考了这个问题，是一个有较强执行力的人。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8%E8%BD%AF%E6%96%87%E6%80%9D%E7%BB%B4%E5%86%99%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93016.png)\n最后总结一下，这半年（一年）自己哪方面做得好，哪方面还有待提高，如何提高，表明你是个勤思考，上进的人，也让领导相信你明年会做得更好（画大饼懂不懂？）。\n\n了解更多写工作总结的技巧，请戳[怎样用软文思维写工作总结？ >>](http://study.163.com/course/introduction/1599008.htm?inref=xuejieyouliao60#/courseDetail)\n\n\n\n---\n","slug":"文章阅读-2016-11-02-用软文思维写工作总结","published":1,"updated":"2016-11-13T03:36:30.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civi8ouj4001u2c6nwiwgd5av","content":"<p>网上看到的网文，摘录分享</p>\n<h2 id=\"如何用软文思维写工作总结？\"><a href=\"#如何用软文思维写工作总结？\" class=\"headerlink\" title=\"如何用软文思维写工作总结？\"></a>如何用软文思维写工作总结？</h2><h4 id=\"Step-1-工作总结的选题规划\"><a href=\"#Step-1-工作总结的选题规划\" class=\"headerlink\" title=\"Step 1 : 工作总结的选题规划\"></a>Step 1 : 工作总结的选题规划</h4><ol>\n<li>给谁看<br>工作总结，顾名思义就是要给领导看的，所以我们要做的第一件事就是分析领导的风格，领导的风格决定了总结的风格。一般来说主要有这么三类。<br>请根据具体情况对号入座：<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8%E8%BD%AF%E6%96%87%E6%80%9D%E7%BB%B4%E5%86%99%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93001.png\" alt=\"\"></li>\n<li>看什么<br>领导主要想看些什么，你就要写些什么。<br>这里有七个方面内容可供选择：你的（销售、生产）业绩、对未来工作的计划、工作心得、有哪些好的建议、对一些数据的分析和结论、对行业情况的调研结果，以及提出未来工作所需要的资源等等。当然其他方面也还有很多，以上仅供参考。</li>\n<li>横向调研<br>横向调研的意思是借鉴你同事的优秀工作总结，做到扬长避短。<h4 id=\"Step-2-挖掘工作总结的素材\"><a href=\"#Step-2-挖掘工作总结的素材\" class=\"headerlink\" title=\"Step 2 : 挖掘工作总结的素材\"></a>Step 2 : 挖掘工作总结的素材</h4>软文的素材主要是以下几个方面，它们的核心就是介绍企业的基本信息。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8%E8%BD%AF%E6%96%87%E6%80%9D%E7%BB%B4%E5%86%99%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93002.png\" alt=\"\"><br>用在工作总结上，就不是以企业为主体，而是以个人以及个人所在的团队为介绍对象。它们分别可写的指标如下图所示：<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8%E8%BD%AF%E6%96%87%E6%80%9D%E7%BB%B4%E5%86%99%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93003.png\" alt=\"\"><h4 id=\"Step-3-整合素材\"><a href=\"#Step-3-整合素材\" class=\"headerlink\" title=\"Step 3 : 整合素材\"></a>Step 3 : 整合素材</h4>可以单纯地列出数字，计算增长比、横向对比、逐月比较、趋势预测等等，对于数据来说，最好的呈现方式就是图表。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8%E8%BD%AF%E6%96%87%E6%80%9D%E7%BB%B4%E5%86%99%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93004.png\" alt=\"\"><br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8%E8%BD%AF%E6%96%87%E6%80%9D%E7%BB%B4%E5%86%99%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93005.png\" alt=\"\"><br>这时候可能有些人就要问了，我是属于行政类岗位，如果没有以上这些业绩指标，该怎么写呢？答案是，你依然可以从以下11个方框中找到你的成就感。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8%E8%BD%AF%E6%96%87%E6%80%9D%E7%BB%B4%E5%86%99%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93006.png\" alt=\"\"><br>正文撰写和标题拟定，就要根据以上确定的选题整理的素材自由发挥了。不过学姐为大家提供了一些非常好用的的句式↓<br>工作总结优化的9种句式</li>\n</ol>\n<p>你是不是也有这种感受，刚写完的一个文案/总结，当时怎么也看不出有哪里不好，但是隔了一两天再看一遍，就能发现不少可以改进的地方。<br>对于影响你升职加薪的工作总结，当然要一改再改，优化几遍再上交啦！<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8%E8%BD%AF%E6%96%87%E6%80%9D%E7%BB%B4%E5%86%99%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93007.png\" alt=\"\"><br>不过这里不是让你使用多么精美的措辞，毕竟不是写小说，工作总结的精髓还是在于它的理性意义。<br>一篇优秀的工作总结要做到言语朴实但不呆板，成果累累却不张扬，让你的上司认为你是个踏实努力、有思想、有上进心、有潜力的好员工。怎么做到呢？<br>可以参考以下9个句式，看看它们的巧妙之处。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8%E8%BD%AF%E6%96%87%E6%80%9D%E7%BB%B4%E5%86%99%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93008.png\" alt=\"\"><br>或者用“首先，其次，再次”等有逻辑的句式，表明你有非常清晰的工作思路；<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8%E8%BD%AF%E6%96%87%E6%80%9D%E7%BB%B4%E5%86%99%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93009.png\" alt=\"\"><br>文章里要出现这类词，因为总结不能面面俱到，要突出主次，以免领导丢失重点，也认为你是个没有重点的人；<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8%E8%BD%AF%E6%96%87%E6%80%9D%E7%BB%B4%E5%86%99%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93010.png\" alt=\"\"><br>通过某些真实的案例和数据得出结论，有凭有据，表明你的观点并非是天马行空想出来的；<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8%E8%BD%AF%E6%96%87%E6%80%9D%E7%BB%B4%E5%86%99%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93011.png\" alt=\"\"><br>同上，当你提出一个观点时，需要数据、图表来佐证，图文结合更具说服力；<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8%E8%BD%AF%E6%96%87%E6%80%9D%E7%BB%B4%E5%86%99%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93012.png\" alt=\"\"><br>不光要做会提问题的员工，还要主动寻找解决问题的方法，向领导表明你是个有建设性意见的人；<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8%E8%BD%AF%E6%96%87%E6%80%9D%E7%BB%B4%E5%86%99%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93013.png\" alt=\"\"><br>很多人在总结报告里喜欢讲一些行业的成功案例（运营、用人等经验），但是如果不联系到自己的工作中，就会说明你只是个爱借用他人来吹牛的人；但反之就能表明你是个爱学习、爱思考、爱应用的人；<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8%E8%BD%AF%E6%96%87%E6%80%9D%E7%BB%B4%E5%86%99%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93014.png\" alt=\"\"><br>当向领导提出同行竞争者的成功做法时，你还需要指出本公司目前需要的条件或需要克服的障碍，表明你是个思虑周全、靠谱的人；<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8%E8%BD%AF%E6%96%87%E6%80%9D%E7%BB%B4%E5%86%99%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93015.png\" alt=\"\"><br>当你提出建议时，你需要落实具体的资源、人员计划。表明你真正深入思考了这个问题，是一个有较强执行力的人。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8%E8%BD%AF%E6%96%87%E6%80%9D%E7%BB%B4%E5%86%99%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93016.png\" alt=\"\"><br>最后总结一下，这半年（一年）自己哪方面做得好，哪方面还有待提高，如何提高，表明你是个勤思考，上进的人，也让领导相信你明年会做得更好（画大饼懂不懂？）。</p>\n<p>了解更多写工作总结的技巧，请戳<a href=\"http://study.163.com/course/introduction/1599008.htm?inref=xuejieyouliao60#/courseDetail\" target=\"_blank\" rel=\"external\">怎样用软文思维写工作总结？ &gt;&gt;</a></p>\n<hr>\n","excerpt":"","more":"<p>网上看到的网文，摘录分享</p>\n<h2 id=\"如何用软文思维写工作总结？\"><a href=\"#如何用软文思维写工作总结？\" class=\"headerlink\" title=\"如何用软文思维写工作总结？\"></a>如何用软文思维写工作总结？</h2><h4 id=\"Step-1-工作总结的选题规划\"><a href=\"#Step-1-工作总结的选题规划\" class=\"headerlink\" title=\"Step 1 : 工作总结的选题规划\"></a>Step 1 : 工作总结的选题规划</h4><ol>\n<li>给谁看<br>工作总结，顾名思义就是要给领导看的，所以我们要做的第一件事就是分析领导的风格，领导的风格决定了总结的风格。一般来说主要有这么三类。<br>请根据具体情况对号入座：<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8%E8%BD%AF%E6%96%87%E6%80%9D%E7%BB%B4%E5%86%99%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93001.png\" alt=\"\"></li>\n<li>看什么<br>领导主要想看些什么，你就要写些什么。<br>这里有七个方面内容可供选择：你的（销售、生产）业绩、对未来工作的计划、工作心得、有哪些好的建议、对一些数据的分析和结论、对行业情况的调研结果，以及提出未来工作所需要的资源等等。当然其他方面也还有很多，以上仅供参考。</li>\n<li>横向调研<br>横向调研的意思是借鉴你同事的优秀工作总结，做到扬长避短。<h4 id=\"Step-2-挖掘工作总结的素材\"><a href=\"#Step-2-挖掘工作总结的素材\" class=\"headerlink\" title=\"Step 2 : 挖掘工作总结的素材\"></a>Step 2 : 挖掘工作总结的素材</h4>软文的素材主要是以下几个方面，它们的核心就是介绍企业的基本信息。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8%E8%BD%AF%E6%96%87%E6%80%9D%E7%BB%B4%E5%86%99%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93002.png\" alt=\"\"><br>用在工作总结上，就不是以企业为主体，而是以个人以及个人所在的团队为介绍对象。它们分别可写的指标如下图所示：<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8%E8%BD%AF%E6%96%87%E6%80%9D%E7%BB%B4%E5%86%99%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93003.png\" alt=\"\"><h4 id=\"Step-3-整合素材\"><a href=\"#Step-3-整合素材\" class=\"headerlink\" title=\"Step 3 : 整合素材\"></a>Step 3 : 整合素材</h4>可以单纯地列出数字，计算增长比、横向对比、逐月比较、趋势预测等等，对于数据来说，最好的呈现方式就是图表。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8%E8%BD%AF%E6%96%87%E6%80%9D%E7%BB%B4%E5%86%99%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93004.png\" alt=\"\"><br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8%E8%BD%AF%E6%96%87%E6%80%9D%E7%BB%B4%E5%86%99%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93005.png\" alt=\"\"><br>这时候可能有些人就要问了，我是属于行政类岗位，如果没有以上这些业绩指标，该怎么写呢？答案是，你依然可以从以下11个方框中找到你的成就感。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8%E8%BD%AF%E6%96%87%E6%80%9D%E7%BB%B4%E5%86%99%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93006.png\" alt=\"\"><br>正文撰写和标题拟定，就要根据以上确定的选题整理的素材自由发挥了。不过学姐为大家提供了一些非常好用的的句式↓<br>工作总结优化的9种句式</li>\n</ol>\n<p>你是不是也有这种感受，刚写完的一个文案/总结，当时怎么也看不出有哪里不好，但是隔了一两天再看一遍，就能发现不少可以改进的地方。<br>对于影响你升职加薪的工作总结，当然要一改再改，优化几遍再上交啦！<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8%E8%BD%AF%E6%96%87%E6%80%9D%E7%BB%B4%E5%86%99%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93007.png\" alt=\"\"><br>不过这里不是让你使用多么精美的措辞，毕竟不是写小说，工作总结的精髓还是在于它的理性意义。<br>一篇优秀的工作总结要做到言语朴实但不呆板，成果累累却不张扬，让你的上司认为你是个踏实努力、有思想、有上进心、有潜力的好员工。怎么做到呢？<br>可以参考以下9个句式，看看它们的巧妙之处。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8%E8%BD%AF%E6%96%87%E6%80%9D%E7%BB%B4%E5%86%99%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93008.png\" alt=\"\"><br>或者用“首先，其次，再次”等有逻辑的句式，表明你有非常清晰的工作思路；<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8%E8%BD%AF%E6%96%87%E6%80%9D%E7%BB%B4%E5%86%99%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93009.png\" alt=\"\"><br>文章里要出现这类词，因为总结不能面面俱到，要突出主次，以免领导丢失重点，也认为你是个没有重点的人；<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8%E8%BD%AF%E6%96%87%E6%80%9D%E7%BB%B4%E5%86%99%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93010.png\" alt=\"\"><br>通过某些真实的案例和数据得出结论，有凭有据，表明你的观点并非是天马行空想出来的；<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8%E8%BD%AF%E6%96%87%E6%80%9D%E7%BB%B4%E5%86%99%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93011.png\" alt=\"\"><br>同上，当你提出一个观点时，需要数据、图表来佐证，图文结合更具说服力；<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8%E8%BD%AF%E6%96%87%E6%80%9D%E7%BB%B4%E5%86%99%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93012.png\" alt=\"\"><br>不光要做会提问题的员工，还要主动寻找解决问题的方法，向领导表明你是个有建设性意见的人；<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8%E8%BD%AF%E6%96%87%E6%80%9D%E7%BB%B4%E5%86%99%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93013.png\" alt=\"\"><br>很多人在总结报告里喜欢讲一些行业的成功案例（运营、用人等经验），但是如果不联系到自己的工作中，就会说明你只是个爱借用他人来吹牛的人；但反之就能表明你是个爱学习、爱思考、爱应用的人；<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8%E8%BD%AF%E6%96%87%E6%80%9D%E7%BB%B4%E5%86%99%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93014.png\" alt=\"\"><br>当向领导提出同行竞争者的成功做法时，你还需要指出本公司目前需要的条件或需要克服的障碍，表明你是个思虑周全、靠谱的人；<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8%E8%BD%AF%E6%96%87%E6%80%9D%E7%BB%B4%E5%86%99%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93015.png\" alt=\"\"><br>当你提出建议时，你需要落实具体的资源、人员计划。表明你真正深入思考了这个问题，是一个有较强执行力的人。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8%E8%BD%AF%E6%96%87%E6%80%9D%E7%BB%B4%E5%86%99%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93016.png\" alt=\"\"><br>最后总结一下，这半年（一年）自己哪方面做得好，哪方面还有待提高，如何提高，表明你是个勤思考，上进的人，也让领导相信你明年会做得更好（画大饼懂不懂？）。</p>\n<p>了解更多写工作总结的技巧，请戳<a href=\"http://study.163.com/course/introduction/1599008.htm?inref=xuejieyouliao60#/courseDetail\">怎样用软文思维写工作总结？ &gt;&gt;</a></p>\n<hr>\n"},{"title":"程序员怎样才能找到一个靠谱的创业公司","abbrlink":48545,"date":"2016-11-02T06:32:40.000Z","_content":"\n### 推酷上看到的一篇文网文，摘录学习\n\n#### 项目前景\n面试公司之前，要首先从网上搜集该公司有关的新闻和资料，大致了解一下公司所做的项目，面试的时候和经理深入探讨一下关于产品项目的想法，以便更全面的有个大概的了解。项目是一个公司的内在核心，产品是公司的孩子，代表着公司的前景和未来。根据当前互联网的大环境和未来发展以及当下的用户市场来诊断一下该公司的核心产品项目的前途，以及是否是你感兴趣的方向。如果你感觉没有前景，而且又不是你感兴趣的方向，建议不要选择，一个合适的环境和项目才能促进你提高。\n当然，如果你仅仅考虑的是当下为了挣钱，而不是自己的兴趣爱好，那如果你感觉该公司项目产品有市场前景，有钱途，但是又没有自己的主见和兴趣，那你可以选择这家公司。没有前景的项目公司建议大家慎重选择，毕竟融资困难，最后有可能发不出工资来。你可能会说，我们怎么能判断准确？是的，并不是每个人都能判断准确，投资人都叫风投，风险投资，所有的选择都是有风险的，这需要自己平时多关心互联网的发展和未来的方向，以及一些热点，扩展自己的一些知识量和阅历，使自己判断能力的准确度更高，仅此而已。\n#### CEO的魅力\n我这里把CEO的魅力分为两个：一是领导力，二是执行力。这是一个优秀的CEO必不可少的素质。\n这里的领导力，我暂时定义为以下几点：广阔视野，分析思维，概念思维，真知灼见，知人善任，卓越领导，影响他人，相信自己。前面的几点视野，思维，灼见，这些能力，可以使CEO能够准确的判断市场和未来，带着公司稳步的走向未来，发展更好。后面的知人善任，卓越领导，影响他人，相信自己，才能能够使创业团队更加团结稳定，使大家更加信服的追随他。对于影响他人，我们不求每个CEO都像乔布斯一样，具有现实扭曲力场的能力，最起码能够让他人和你观点不会冲突，这样才能领到团队，团结一心。\n关于执行力，我想说这里的执行力我更加偏向与作为一个公司的领导，他的承诺的执行力，而不是整天那股权和期权忽悠创业团队，说公司上市了大家都是元老，都会有股份或者期权。整天那摸不着，看不见的东西忽悠大家拼命给他干活的CEO不是一个让人信服的人，让团队没有安全感。记住：画大饼谁都会，让你能吃到的CEO不多见。从创业起，融到资金后，整天自己抱着钱，不顾员工利益的CEO,即使将来创业成功，他也不会让你知道饼是啥味。记住：口头承诺不如白纸黑字。\n如果你去的公司，在工作了几个月之后，发现公司的CEO没有领导力，也没有执行力，果断劝你们赶紧给自己找下家和后路，否则……后果自负。\n#### 管理团队\n刚才我们谈到了CEO的魅力问题，CEO影响着管理团队的团结和战斗力。如果一个CEO和管理团队因为期权、股权问题，还有对于公司的战略规划上有分歧，整天勾心斗角，明面上精致团结或者矛盾隐私化，暗地里暗度陈仓，这样的公司是没有任何战斗力和前景的。\n如果你所在的公司，你发现了有这样的苗头或者征兆，甚至已经正在发生，内部管理团队不和的现象，建议你们慎重选择，或者尽早离职。所谓上身不正下身外，管理团队把心思都放在了勾心头角上，哪有心力去按照既定的战略规划去安心，用心经营项目和产品啊。\n#### 技术团队\n有些创业公司号称是产品驱动型的，还有什么运营驱动型，用户驱动型，当然还有技术驱动型的公司，不管什么驱动型的公司，归根结底得有自己的产品，做产品就得需要技术，所以一个公司技术的重要性不言而喻，尤其是创业公司前期，产品未获得市场认可之前，技术尤为重要。一个好的技术团队可以成就一个好的产品的同时，更能够提高技术团队内程序员的技术水平。如果技术团队能力不强，你认为公司的产品性能，体验，交互会好吗？交互体验是用户使用产品最直观的感受。一个成功的产品需要强大的运营，需要市场的认可，更需要技术的提高和优化。\n如果你去的公司技术团队技术能力不强，你在里面学不到东西，一直在用自己之前学到的陈旧技术，那还是别呆在哪里了，提高技术最好的方法就是：勇于挑战自己不会的东西。作为技术型的人员，切记不要自己待在一个舒适区太久，会让你变得懒惰，落后，甚至淘汰，要向温水煮青蛙一样，我们要适度的学会跳出舒适区，去挑战自己。\n#### 总结\n当然，你看到这里可能会对比自己的处境，感觉完全达到以上几点要求的创业公司太少了，是人在一起就会磕磕绊绊，当然，这是肯定的，但是如果你待在的那个公司触犯了上面的两条及以上，我还是建议你要重新选择或者离职，去找更好的公司。这仅仅是我个人的观点，可以参考，也可以不认同，我只是用经验告诉大家以后小心上当。我为什么把项目前景和CEO的魅力放在前两位呢，因为如果你工作的那个公司，这两点都做到了，后面管理团队和技术团队也差不到哪里去。\n记住：路是自己走出来的，路更是自己选择的。我们不要做一个敢于跳槽的程序员，而是要做一个不害怕跳槽的程序员。你们懂我的意思吧？我相信大家都懂。\n\n\n---\n\n \n","source":"_posts/文章阅读/2016-11-02-程序员怎样才能找到一个靠谱的创业公司.md","raw":"---\ntitle: 程序员怎样才能找到一个靠谱的创业公司\ncategories:\n  - 文章阅读\ntags:\n  - 创业的公司\nabbrlink: 48545\ndate: 2016-11-02 14:32:40\n---\n\n### 推酷上看到的一篇文网文，摘录学习\n\n#### 项目前景\n面试公司之前，要首先从网上搜集该公司有关的新闻和资料，大致了解一下公司所做的项目，面试的时候和经理深入探讨一下关于产品项目的想法，以便更全面的有个大概的了解。项目是一个公司的内在核心，产品是公司的孩子，代表着公司的前景和未来。根据当前互联网的大环境和未来发展以及当下的用户市场来诊断一下该公司的核心产品项目的前途，以及是否是你感兴趣的方向。如果你感觉没有前景，而且又不是你感兴趣的方向，建议不要选择，一个合适的环境和项目才能促进你提高。\n当然，如果你仅仅考虑的是当下为了挣钱，而不是自己的兴趣爱好，那如果你感觉该公司项目产品有市场前景，有钱途，但是又没有自己的主见和兴趣，那你可以选择这家公司。没有前景的项目公司建议大家慎重选择，毕竟融资困难，最后有可能发不出工资来。你可能会说，我们怎么能判断准确？是的，并不是每个人都能判断准确，投资人都叫风投，风险投资，所有的选择都是有风险的，这需要自己平时多关心互联网的发展和未来的方向，以及一些热点，扩展自己的一些知识量和阅历，使自己判断能力的准确度更高，仅此而已。\n#### CEO的魅力\n我这里把CEO的魅力分为两个：一是领导力，二是执行力。这是一个优秀的CEO必不可少的素质。\n这里的领导力，我暂时定义为以下几点：广阔视野，分析思维，概念思维，真知灼见，知人善任，卓越领导，影响他人，相信自己。前面的几点视野，思维，灼见，这些能力，可以使CEO能够准确的判断市场和未来，带着公司稳步的走向未来，发展更好。后面的知人善任，卓越领导，影响他人，相信自己，才能能够使创业团队更加团结稳定，使大家更加信服的追随他。对于影响他人，我们不求每个CEO都像乔布斯一样，具有现实扭曲力场的能力，最起码能够让他人和你观点不会冲突，这样才能领到团队，团结一心。\n关于执行力，我想说这里的执行力我更加偏向与作为一个公司的领导，他的承诺的执行力，而不是整天那股权和期权忽悠创业团队，说公司上市了大家都是元老，都会有股份或者期权。整天那摸不着，看不见的东西忽悠大家拼命给他干活的CEO不是一个让人信服的人，让团队没有安全感。记住：画大饼谁都会，让你能吃到的CEO不多见。从创业起，融到资金后，整天自己抱着钱，不顾员工利益的CEO,即使将来创业成功，他也不会让你知道饼是啥味。记住：口头承诺不如白纸黑字。\n如果你去的公司，在工作了几个月之后，发现公司的CEO没有领导力，也没有执行力，果断劝你们赶紧给自己找下家和后路，否则……后果自负。\n#### 管理团队\n刚才我们谈到了CEO的魅力问题，CEO影响着管理团队的团结和战斗力。如果一个CEO和管理团队因为期权、股权问题，还有对于公司的战略规划上有分歧，整天勾心斗角，明面上精致团结或者矛盾隐私化，暗地里暗度陈仓，这样的公司是没有任何战斗力和前景的。\n如果你所在的公司，你发现了有这样的苗头或者征兆，甚至已经正在发生，内部管理团队不和的现象，建议你们慎重选择，或者尽早离职。所谓上身不正下身外，管理团队把心思都放在了勾心头角上，哪有心力去按照既定的战略规划去安心，用心经营项目和产品啊。\n#### 技术团队\n有些创业公司号称是产品驱动型的，还有什么运营驱动型，用户驱动型，当然还有技术驱动型的公司，不管什么驱动型的公司，归根结底得有自己的产品，做产品就得需要技术，所以一个公司技术的重要性不言而喻，尤其是创业公司前期，产品未获得市场认可之前，技术尤为重要。一个好的技术团队可以成就一个好的产品的同时，更能够提高技术团队内程序员的技术水平。如果技术团队能力不强，你认为公司的产品性能，体验，交互会好吗？交互体验是用户使用产品最直观的感受。一个成功的产品需要强大的运营，需要市场的认可，更需要技术的提高和优化。\n如果你去的公司技术团队技术能力不强，你在里面学不到东西，一直在用自己之前学到的陈旧技术，那还是别呆在哪里了，提高技术最好的方法就是：勇于挑战自己不会的东西。作为技术型的人员，切记不要自己待在一个舒适区太久，会让你变得懒惰，落后，甚至淘汰，要向温水煮青蛙一样，我们要适度的学会跳出舒适区，去挑战自己。\n#### 总结\n当然，你看到这里可能会对比自己的处境，感觉完全达到以上几点要求的创业公司太少了，是人在一起就会磕磕绊绊，当然，这是肯定的，但是如果你待在的那个公司触犯了上面的两条及以上，我还是建议你要重新选择或者离职，去找更好的公司。这仅仅是我个人的观点，可以参考，也可以不认同，我只是用经验告诉大家以后小心上当。我为什么把项目前景和CEO的魅力放在前两位呢，因为如果你工作的那个公司，这两点都做到了，后面管理团队和技术团队也差不到哪里去。\n记住：路是自己走出来的，路更是自己选择的。我们不要做一个敢于跳槽的程序员，而是要做一个不害怕跳槽的程序员。你们懂我的意思吧？我相信大家都懂。\n\n\n---\n\n \n","slug":"文章阅读-2016-11-02-程序员怎样才能找到一个靠谱的创业公司","published":1,"updated":"2016-11-13T03:36:30.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civi8ouj7001y2c6nwu81umdt","content":"<h3 id=\"推酷上看到的一篇文网文，摘录学习\"><a href=\"#推酷上看到的一篇文网文，摘录学习\" class=\"headerlink\" title=\"推酷上看到的一篇文网文，摘录学习\"></a>推酷上看到的一篇文网文，摘录学习</h3><h4 id=\"项目前景\"><a href=\"#项目前景\" class=\"headerlink\" title=\"项目前景\"></a>项目前景</h4><p>面试公司之前，要首先从网上搜集该公司有关的新闻和资料，大致了解一下公司所做的项目，面试的时候和经理深入探讨一下关于产品项目的想法，以便更全面的有个大概的了解。项目是一个公司的内在核心，产品是公司的孩子，代表着公司的前景和未来。根据当前互联网的大环境和未来发展以及当下的用户市场来诊断一下该公司的核心产品项目的前途，以及是否是你感兴趣的方向。如果你感觉没有前景，而且又不是你感兴趣的方向，建议不要选择，一个合适的环境和项目才能促进你提高。<br>当然，如果你仅仅考虑的是当下为了挣钱，而不是自己的兴趣爱好，那如果你感觉该公司项目产品有市场前景，有钱途，但是又没有自己的主见和兴趣，那你可以选择这家公司。没有前景的项目公司建议大家慎重选择，毕竟融资困难，最后有可能发不出工资来。你可能会说，我们怎么能判断准确？是的，并不是每个人都能判断准确，投资人都叫风投，风险投资，所有的选择都是有风险的，这需要自己平时多关心互联网的发展和未来的方向，以及一些热点，扩展自己的一些知识量和阅历，使自己判断能力的准确度更高，仅此而已。</p>\n<h4 id=\"CEO的魅力\"><a href=\"#CEO的魅力\" class=\"headerlink\" title=\"CEO的魅力\"></a>CEO的魅力</h4><p>我这里把CEO的魅力分为两个：一是领导力，二是执行力。这是一个优秀的CEO必不可少的素质。<br>这里的领导力，我暂时定义为以下几点：广阔视野，分析思维，概念思维，真知灼见，知人善任，卓越领导，影响他人，相信自己。前面的几点视野，思维，灼见，这些能力，可以使CEO能够准确的判断市场和未来，带着公司稳步的走向未来，发展更好。后面的知人善任，卓越领导，影响他人，相信自己，才能能够使创业团队更加团结稳定，使大家更加信服的追随他。对于影响他人，我们不求每个CEO都像乔布斯一样，具有现实扭曲力场的能力，最起码能够让他人和你观点不会冲突，这样才能领到团队，团结一心。<br>关于执行力，我想说这里的执行力我更加偏向与作为一个公司的领导，他的承诺的执行力，而不是整天那股权和期权忽悠创业团队，说公司上市了大家都是元老，都会有股份或者期权。整天那摸不着，看不见的东西忽悠大家拼命给他干活的CEO不是一个让人信服的人，让团队没有安全感。记住：画大饼谁都会，让你能吃到的CEO不多见。从创业起，融到资金后，整天自己抱着钱，不顾员工利益的CEO,即使将来创业成功，他也不会让你知道饼是啥味。记住：口头承诺不如白纸黑字。<br>如果你去的公司，在工作了几个月之后，发现公司的CEO没有领导力，也没有执行力，果断劝你们赶紧给自己找下家和后路，否则……后果自负。</p>\n<h4 id=\"管理团队\"><a href=\"#管理团队\" class=\"headerlink\" title=\"管理团队\"></a>管理团队</h4><p>刚才我们谈到了CEO的魅力问题，CEO影响着管理团队的团结和战斗力。如果一个CEO和管理团队因为期权、股权问题，还有对于公司的战略规划上有分歧，整天勾心斗角，明面上精致团结或者矛盾隐私化，暗地里暗度陈仓，这样的公司是没有任何战斗力和前景的。<br>如果你所在的公司，你发现了有这样的苗头或者征兆，甚至已经正在发生，内部管理团队不和的现象，建议你们慎重选择，或者尽早离职。所谓上身不正下身外，管理团队把心思都放在了勾心头角上，哪有心力去按照既定的战略规划去安心，用心经营项目和产品啊。</p>\n<h4 id=\"技术团队\"><a href=\"#技术团队\" class=\"headerlink\" title=\"技术团队\"></a>技术团队</h4><p>有些创业公司号称是产品驱动型的，还有什么运营驱动型，用户驱动型，当然还有技术驱动型的公司，不管什么驱动型的公司，归根结底得有自己的产品，做产品就得需要技术，所以一个公司技术的重要性不言而喻，尤其是创业公司前期，产品未获得市场认可之前，技术尤为重要。一个好的技术团队可以成就一个好的产品的同时，更能够提高技术团队内程序员的技术水平。如果技术团队能力不强，你认为公司的产品性能，体验，交互会好吗？交互体验是用户使用产品最直观的感受。一个成功的产品需要强大的运营，需要市场的认可，更需要技术的提高和优化。<br>如果你去的公司技术团队技术能力不强，你在里面学不到东西，一直在用自己之前学到的陈旧技术，那还是别呆在哪里了，提高技术最好的方法就是：勇于挑战自己不会的东西。作为技术型的人员，切记不要自己待在一个舒适区太久，会让你变得懒惰，落后，甚至淘汰，要向温水煮青蛙一样，我们要适度的学会跳出舒适区，去挑战自己。</p>\n<h4 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h4><p>当然，你看到这里可能会对比自己的处境，感觉完全达到以上几点要求的创业公司太少了，是人在一起就会磕磕绊绊，当然，这是肯定的，但是如果你待在的那个公司触犯了上面的两条及以上，我还是建议你要重新选择或者离职，去找更好的公司。这仅仅是我个人的观点，可以参考，也可以不认同，我只是用经验告诉大家以后小心上当。我为什么把项目前景和CEO的魅力放在前两位呢，因为如果你工作的那个公司，这两点都做到了，后面管理团队和技术团队也差不到哪里去。<br>记住：路是自己走出来的，路更是自己选择的。我们不要做一个敢于跳槽的程序员，而是要做一个不害怕跳槽的程序员。你们懂我的意思吧？我相信大家都懂。</p>\n<hr>\n","excerpt":"","more":"<h3 id=\"推酷上看到的一篇文网文，摘录学习\"><a href=\"#推酷上看到的一篇文网文，摘录学习\" class=\"headerlink\" title=\"推酷上看到的一篇文网文，摘录学习\"></a>推酷上看到的一篇文网文，摘录学习</h3><h4 id=\"项目前景\"><a href=\"#项目前景\" class=\"headerlink\" title=\"项目前景\"></a>项目前景</h4><p>面试公司之前，要首先从网上搜集该公司有关的新闻和资料，大致了解一下公司所做的项目，面试的时候和经理深入探讨一下关于产品项目的想法，以便更全面的有个大概的了解。项目是一个公司的内在核心，产品是公司的孩子，代表着公司的前景和未来。根据当前互联网的大环境和未来发展以及当下的用户市场来诊断一下该公司的核心产品项目的前途，以及是否是你感兴趣的方向。如果你感觉没有前景，而且又不是你感兴趣的方向，建议不要选择，一个合适的环境和项目才能促进你提高。<br>当然，如果你仅仅考虑的是当下为了挣钱，而不是自己的兴趣爱好，那如果你感觉该公司项目产品有市场前景，有钱途，但是又没有自己的主见和兴趣，那你可以选择这家公司。没有前景的项目公司建议大家慎重选择，毕竟融资困难，最后有可能发不出工资来。你可能会说，我们怎么能判断准确？是的，并不是每个人都能判断准确，投资人都叫风投，风险投资，所有的选择都是有风险的，这需要自己平时多关心互联网的发展和未来的方向，以及一些热点，扩展自己的一些知识量和阅历，使自己判断能力的准确度更高，仅此而已。</p>\n<h4 id=\"CEO的魅力\"><a href=\"#CEO的魅力\" class=\"headerlink\" title=\"CEO的魅力\"></a>CEO的魅力</h4><p>我这里把CEO的魅力分为两个：一是领导力，二是执行力。这是一个优秀的CEO必不可少的素质。<br>这里的领导力，我暂时定义为以下几点：广阔视野，分析思维，概念思维，真知灼见，知人善任，卓越领导，影响他人，相信自己。前面的几点视野，思维，灼见，这些能力，可以使CEO能够准确的判断市场和未来，带着公司稳步的走向未来，发展更好。后面的知人善任，卓越领导，影响他人，相信自己，才能能够使创业团队更加团结稳定，使大家更加信服的追随他。对于影响他人，我们不求每个CEO都像乔布斯一样，具有现实扭曲力场的能力，最起码能够让他人和你观点不会冲突，这样才能领到团队，团结一心。<br>关于执行力，我想说这里的执行力我更加偏向与作为一个公司的领导，他的承诺的执行力，而不是整天那股权和期权忽悠创业团队，说公司上市了大家都是元老，都会有股份或者期权。整天那摸不着，看不见的东西忽悠大家拼命给他干活的CEO不是一个让人信服的人，让团队没有安全感。记住：画大饼谁都会，让你能吃到的CEO不多见。从创业起，融到资金后，整天自己抱着钱，不顾员工利益的CEO,即使将来创业成功，他也不会让你知道饼是啥味。记住：口头承诺不如白纸黑字。<br>如果你去的公司，在工作了几个月之后，发现公司的CEO没有领导力，也没有执行力，果断劝你们赶紧给自己找下家和后路，否则……后果自负。</p>\n<h4 id=\"管理团队\"><a href=\"#管理团队\" class=\"headerlink\" title=\"管理团队\"></a>管理团队</h4><p>刚才我们谈到了CEO的魅力问题，CEO影响着管理团队的团结和战斗力。如果一个CEO和管理团队因为期权、股权问题，还有对于公司的战略规划上有分歧，整天勾心斗角，明面上精致团结或者矛盾隐私化，暗地里暗度陈仓，这样的公司是没有任何战斗力和前景的。<br>如果你所在的公司，你发现了有这样的苗头或者征兆，甚至已经正在发生，内部管理团队不和的现象，建议你们慎重选择，或者尽早离职。所谓上身不正下身外，管理团队把心思都放在了勾心头角上，哪有心力去按照既定的战略规划去安心，用心经营项目和产品啊。</p>\n<h4 id=\"技术团队\"><a href=\"#技术团队\" class=\"headerlink\" title=\"技术团队\"></a>技术团队</h4><p>有些创业公司号称是产品驱动型的，还有什么运营驱动型，用户驱动型，当然还有技术驱动型的公司，不管什么驱动型的公司，归根结底得有自己的产品，做产品就得需要技术，所以一个公司技术的重要性不言而喻，尤其是创业公司前期，产品未获得市场认可之前，技术尤为重要。一个好的技术团队可以成就一个好的产品的同时，更能够提高技术团队内程序员的技术水平。如果技术团队能力不强，你认为公司的产品性能，体验，交互会好吗？交互体验是用户使用产品最直观的感受。一个成功的产品需要强大的运营，需要市场的认可，更需要技术的提高和优化。<br>如果你去的公司技术团队技术能力不强，你在里面学不到东西，一直在用自己之前学到的陈旧技术，那还是别呆在哪里了，提高技术最好的方法就是：勇于挑战自己不会的东西。作为技术型的人员，切记不要自己待在一个舒适区太久，会让你变得懒惰，落后，甚至淘汰，要向温水煮青蛙一样，我们要适度的学会跳出舒适区，去挑战自己。</p>\n<h4 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h4><p>当然，你看到这里可能会对比自己的处境，感觉完全达到以上几点要求的创业公司太少了，是人在一起就会磕磕绊绊，当然，这是肯定的，但是如果你待在的那个公司触犯了上面的两条及以上，我还是建议你要重新选择或者离职，去找更好的公司。这仅仅是我个人的观点，可以参考，也可以不认同，我只是用经验告诉大家以后小心上当。我为什么把项目前景和CEO的魅力放在前两位呢，因为如果你工作的那个公司，这两点都做到了，后面管理团队和技术团队也差不到哪里去。<br>记住：路是自己走出来的，路更是自己选择的。我们不要做一个敢于跳槽的程序员，而是要做一个不害怕跳槽的程序员。你们懂我的意思吧？我相信大家都懂。</p>\n<hr>\n"},{"title":"高并发系统之服务器降级","abbrlink":19285,"date":"2016-11-02T09:19:21.000Z","_content":"\n#### 网上看到的文章，摘录分享。\n\n\n​在开发高并发系统时有三把利器用来保护系统：**缓存、降级和限流**。之前已经有一些文章介绍过缓存和限流了。本文将详细聊聊降级。当访问量剧增、服务出现问题（如响应时间慢或不响应）或非核心服务影响到核心流程的性能时，仍然需要保证服务还是可用的，即使是有损服务。系统可以根据一些关键数据进行自动降级，也可以配置开关实现人工降级。本文将介绍一些笔者在实际工作中遇到的或见到过的一些降级方案供大家参考。\n \n**降级的最终目的是保证核心服务可用**，即使是有损的。而且有些服务是无法降级的（如加入购物车、结算）。\n \n降级预案\n在进行降级之前要对系统进行梳理，看看系统是不是可以丢卒保帅；从而梳理出哪些必须誓死保护，哪些可降级；比如可以参考日志级别设置预案：\n\n**一般：**比如有些服务偶尔因为网络抖动或者服务正在上线而超时，可以自动降级；\n\n**警告：**有些服务在一段时间内成功率有波动（如在95~100%之间），可以自动降级或人工降级，并发送告警；\n\n**错误：**比如可用率低于90%，或者数据库连接池被打爆了，或者访问量突然猛增到系统能承受的最大阀值，此时可以根据情况自动降级或者人工降级；\n严重错误：比如因为特殊原因数据错误了，此时需要紧急人工降级。\n \n降级按照是否自动化可分为：**自动开关降级和人工开关降级**。\n\n降级按照功能可分为：**读服务降级、写服务降级**。\n\n降级按照处于的系统层次可分为：**多级降级**。\n\n---\n \n降级的功能点主要从服务端链路考虑，即根据用户访问的服务调用链路来梳理哪里需要降级：\n页面降级：在大促或者某些特殊情况下，某些页面占用了一些稀缺服务资源，在紧急情况下可以对其整个降级，以达到丢卒保帅；\n\n* 页面片段降级：比如商品详情页中的商家部分因为数据错误了，此时需要对其进行降级；\n页面异步请求降级：比如商品详情页上有推荐信息/配送至等异步加载的请求，如果这些信息响应慢或者后端服务有问题，可以进行降级；\n\n* 服务功能降级：比如渲染商品详情页时需要调用一些不太重要的服务：相关分类、热销榜等，而这些服务在异常情况下直接不获取，即降级即可；\n\n* 读降级：比如多级缓存模式，如果后端服务有问题，可以降级为只读缓存，这种方式适用于对读一致性要求不高的场景；\n\n* 写降级：比如秒杀抢购，我们可以只进行Cache的更新，然后异步同步扣减库存到DB，保证最终一致性即可，此时可以将DB降级为Cache。\n爬虫降级：在大促活动时，可以将爬虫流量导向静态页或者返回空数据，从而保护后端稀缺资源。\n \n* 自动开关降级\n自动降级是根据系统负载、资源使用情况、SLA等指标进行降级。\n\n* 超时降级\n当访问的数据库/http服务/远程调用响应慢或者长时间响应慢，且该服务不是核心服务的话可以在超时后自动降级；比如商品详情页上有推荐内容/评价，但是推荐内容/评价暂时不展示对用户购物流程不会产生很大的影响；对于这种服务是可以超时降级的。如果是调用别人的远程服务，和对方定义一个服务响应最大时间，如果超时了则自动降级。\n \n之前总结过一些的文章《使用httpclient必须知道的参数设置及代码写法、存在的风险》和《dbcp配置及jdbc超时设置总结》。在实际场景用一定主要配置好超时时间和超时重试次数和机制。\n \n* 统计失败次数降级\n有时候依赖一些不稳定的API，比如调用外部机票服务，当失败调用次数达到一定阀值自动降级；然后通过异步线程去探测服务是否恢复了，则取消降级。\n \n* 故障降级\n比如要调用的远程服务挂掉了（网络故障、DNS故障、http服务返回错误的状态码、rpc服务抛出异常），则可以直接降级。降级后的处理方案有：默认值（比如库存服务挂了，返回默认现货）、兜底数据（比如广告挂了，返回提前准备好的一些静态页面）、缓存（之前暂存的一些缓存数据）。\n \n* 限流降级\n当我们去秒杀或者抢购一些限购商品时，此时可能会因为访问量太大而导致系统崩溃，此时开发者会使用限流来进行限制访问量，当达到限流阀值，后续请求会被降级；降级后的处理方案可以是：排队页面（将用户导流到排队页面等一会重试）、无货（直接告知用户没货了）、错误页（如活动太火爆了，稍后重试）。\n \n* 人工开关降级\n在大促期间通过监控发现线上的一些服务存在问题，这个时候需要暂时将这些服务摘掉；还有有时候通过任务系统调用一些服务，但是服务依赖的数据库可能存在：网卡被打满了、挂掉了或者很多慢查询，此时需要暂停下任务系统让服务方进行处理；还有发现突然调用量太大，可能需要改变处理方式（比如同步转换为异步）；此时就可以使用开关来完成降级。开关可以存放到配置文件、存放到数据库、存放到Redis/ZooKeeper；如果不是存放在本地，可以定期同步开关数据（比如1秒同步一次）。然后通过判断某个KEY的值来决定是否降级。\n \n另外对于新开发的服务想上线进行灰度测试；但是不太确定该服务的逻辑是否正确，此时就需要设置开关，当新服务有问题可以通过开关切换回老服务。还有多机房服务，如果某个机房挂掉了，此时需要将一个机房的服务切到另一个机房，此时也可以通过开关完成切换。\n \n还有一些是因为功能问题需要暂时屏蔽掉某些功能，比如商品规格参数数据有问题，数据问题不能用回滚解决，此时需要开关控制降级。\n \n* 读服务降级\n对于读服务降级一般采用的策略有：暂时切换读（降级到读缓存、降级到走静态化）、暂时屏蔽读（屏蔽读入口、屏蔽某个读服务）。在《应用多级缓存模式支撑海量读服务》中曾经介绍过读服务，即接入层缓存-->应用层本地缓存-->分布式缓存-->RPC服务/DB，我们会在接入层、应用层设置开关，当分布式缓存、RPC服务/DB有问题自动降级为不调用。当然这种情况适用于对读一致性要求不高的场景。\n \n* 页面降级、页面片段降级、页面异步请求降级都是读服务降级，目的是丢卒保帅（比如因为这些服务也要使用核心资源、或者占了带宽影响到核心服务）或者因数据问题暂时屏蔽。\n \n还有一种是页面静态化场景：\n动态化降级为静态化：比如平时网站可以走动态化渲染商品详情页，但是到了大促来临之际可以将其切换为静态化来减少对核心资源的占用，而且可以提升性能；其他还有如列表页、首页、频道页都可以这么玩；可以通过一个程序定期的推送静态页到缓存或者生成到磁盘，出问题时直接切过去；\n静态化降级为动态化：比如当使用静态化来实现商品详情页架构时，平时使用静态化来提供服务，但是因为特殊原因静态化页面有问题了，需要暂时切换回动态化来保证服务正确性。\n \n**以上都保证出问题了有预案，用户还是可以使用网站，不影响用户购物。**\n \n* 写服务降级\n写服务在大多数场景下是不可降级的，不过可以通过一些迂回战术来解决问题。比如将同步操作转换为异步操作，或者限制写的量/比例。\n比如扣减库存一般这样操作：\n方案1：\n1、扣减DB库存，2、扣减成功后更新Redis中的库存；\n方案2：\n1、扣减Redis库存，2、同步扣减DB库存，如果扣减失败则回滚Redis库存；\n前两种方案非常依赖DB，假设此时DB性能跟不上则扣减库存就会遇到问题；因此我们可以想到方案3：\n1、扣减Redis库存，2、正常同步扣减DB库存，性能扛不住时降级为发送一条扣减DB库存的消息，然后异步进行DB库存扣减实现最终一致即可；\n这种方式发送扣减DB库存消息也可能成为瓶颈；这种情况我们可以考虑方案4：\n1、扣减Redis库存，2、正常同步扣减DB库存，性能扛不住时降级为写扣减DB库存消息到本机，然后本机通过异步进行DB库存扣减来实现最终一致性。\n \n也就是说正常情况可以同步扣减库存，在性能扛不住时降级为异步；另外如果是秒杀场景可以直接降级为异步，从而保护系统。还有如下单操作可以在大促时暂时降级将下单数据写入Redis，然后等峰值过去了再同步回DB，当然也有更好的解决方案，但是更复杂，不是本文的重点。\n还有如用户评价，如果评价量太大，也可以把评价从同步写降级为异步写。当然也可以对评价按钮进行按比例开放（比如一些人的看不到评价操作按钮）。比如评价成功后会发一些奖励，在必要的时候降级同步到异步。\n \n* 多级降级\n缓存是离用户最近越高效；而降级是离用户越近越能对系统保护的好。因为业务的复杂性导致越到后端QPS/TPS越低。\n \n* 页面JS降级开关：主要控制页面功能的降级，在页面中通过JS脚本部署功能降级开关，在适当时机开启/关闭开关。\n\n* 接入层降级开关：主要控制请求入口的降级，请求进入后会首先进入接入层，在接入层可以配置功能降级开关，可以根据实际情况进行自动/人工降级；这个可以参考《京东商品详情页服务闭环实践》，尤其在后端应用服务出问题时，通过接入层降级从而给应用服务有足够的时间恢复服务；\n应用层降级开关：主要控制业务的降级，在应用中配置相应的功能开关，根据实际业务情况进行自动/人工降级。\n\n\n原文：http://jinnianshilongnian.iteye.com/blog/2306477\n\n---","source":"_posts/文章阅读/2016-11-02-高并发系统之服务器降级.md","raw":"---\ntitle: 高并发系统之服务器降级\ncategories:\n  - 文章阅读\ntags:\n  - 高并发系统之降级特技\nabbrlink: 19285\ndate: 2016-11-02 17:19:21\n---\n\n#### 网上看到的文章，摘录分享。\n\n\n​在开发高并发系统时有三把利器用来保护系统：**缓存、降级和限流**。之前已经有一些文章介绍过缓存和限流了。本文将详细聊聊降级。当访问量剧增、服务出现问题（如响应时间慢或不响应）或非核心服务影响到核心流程的性能时，仍然需要保证服务还是可用的，即使是有损服务。系统可以根据一些关键数据进行自动降级，也可以配置开关实现人工降级。本文将介绍一些笔者在实际工作中遇到的或见到过的一些降级方案供大家参考。\n \n**降级的最终目的是保证核心服务可用**，即使是有损的。而且有些服务是无法降级的（如加入购物车、结算）。\n \n降级预案\n在进行降级之前要对系统进行梳理，看看系统是不是可以丢卒保帅；从而梳理出哪些必须誓死保护，哪些可降级；比如可以参考日志级别设置预案：\n\n**一般：**比如有些服务偶尔因为网络抖动或者服务正在上线而超时，可以自动降级；\n\n**警告：**有些服务在一段时间内成功率有波动（如在95~100%之间），可以自动降级或人工降级，并发送告警；\n\n**错误：**比如可用率低于90%，或者数据库连接池被打爆了，或者访问量突然猛增到系统能承受的最大阀值，此时可以根据情况自动降级或者人工降级；\n严重错误：比如因为特殊原因数据错误了，此时需要紧急人工降级。\n \n降级按照是否自动化可分为：**自动开关降级和人工开关降级**。\n\n降级按照功能可分为：**读服务降级、写服务降级**。\n\n降级按照处于的系统层次可分为：**多级降级**。\n\n---\n \n降级的功能点主要从服务端链路考虑，即根据用户访问的服务调用链路来梳理哪里需要降级：\n页面降级：在大促或者某些特殊情况下，某些页面占用了一些稀缺服务资源，在紧急情况下可以对其整个降级，以达到丢卒保帅；\n\n* 页面片段降级：比如商品详情页中的商家部分因为数据错误了，此时需要对其进行降级；\n页面异步请求降级：比如商品详情页上有推荐信息/配送至等异步加载的请求，如果这些信息响应慢或者后端服务有问题，可以进行降级；\n\n* 服务功能降级：比如渲染商品详情页时需要调用一些不太重要的服务：相关分类、热销榜等，而这些服务在异常情况下直接不获取，即降级即可；\n\n* 读降级：比如多级缓存模式，如果后端服务有问题，可以降级为只读缓存，这种方式适用于对读一致性要求不高的场景；\n\n* 写降级：比如秒杀抢购，我们可以只进行Cache的更新，然后异步同步扣减库存到DB，保证最终一致性即可，此时可以将DB降级为Cache。\n爬虫降级：在大促活动时，可以将爬虫流量导向静态页或者返回空数据，从而保护后端稀缺资源。\n \n* 自动开关降级\n自动降级是根据系统负载、资源使用情况、SLA等指标进行降级。\n\n* 超时降级\n当访问的数据库/http服务/远程调用响应慢或者长时间响应慢，且该服务不是核心服务的话可以在超时后自动降级；比如商品详情页上有推荐内容/评价，但是推荐内容/评价暂时不展示对用户购物流程不会产生很大的影响；对于这种服务是可以超时降级的。如果是调用别人的远程服务，和对方定义一个服务响应最大时间，如果超时了则自动降级。\n \n之前总结过一些的文章《使用httpclient必须知道的参数设置及代码写法、存在的风险》和《dbcp配置及jdbc超时设置总结》。在实际场景用一定主要配置好超时时间和超时重试次数和机制。\n \n* 统计失败次数降级\n有时候依赖一些不稳定的API，比如调用外部机票服务，当失败调用次数达到一定阀值自动降级；然后通过异步线程去探测服务是否恢复了，则取消降级。\n \n* 故障降级\n比如要调用的远程服务挂掉了（网络故障、DNS故障、http服务返回错误的状态码、rpc服务抛出异常），则可以直接降级。降级后的处理方案有：默认值（比如库存服务挂了，返回默认现货）、兜底数据（比如广告挂了，返回提前准备好的一些静态页面）、缓存（之前暂存的一些缓存数据）。\n \n* 限流降级\n当我们去秒杀或者抢购一些限购商品时，此时可能会因为访问量太大而导致系统崩溃，此时开发者会使用限流来进行限制访问量，当达到限流阀值，后续请求会被降级；降级后的处理方案可以是：排队页面（将用户导流到排队页面等一会重试）、无货（直接告知用户没货了）、错误页（如活动太火爆了，稍后重试）。\n \n* 人工开关降级\n在大促期间通过监控发现线上的一些服务存在问题，这个时候需要暂时将这些服务摘掉；还有有时候通过任务系统调用一些服务，但是服务依赖的数据库可能存在：网卡被打满了、挂掉了或者很多慢查询，此时需要暂停下任务系统让服务方进行处理；还有发现突然调用量太大，可能需要改变处理方式（比如同步转换为异步）；此时就可以使用开关来完成降级。开关可以存放到配置文件、存放到数据库、存放到Redis/ZooKeeper；如果不是存放在本地，可以定期同步开关数据（比如1秒同步一次）。然后通过判断某个KEY的值来决定是否降级。\n \n另外对于新开发的服务想上线进行灰度测试；但是不太确定该服务的逻辑是否正确，此时就需要设置开关，当新服务有问题可以通过开关切换回老服务。还有多机房服务，如果某个机房挂掉了，此时需要将一个机房的服务切到另一个机房，此时也可以通过开关完成切换。\n \n还有一些是因为功能问题需要暂时屏蔽掉某些功能，比如商品规格参数数据有问题，数据问题不能用回滚解决，此时需要开关控制降级。\n \n* 读服务降级\n对于读服务降级一般采用的策略有：暂时切换读（降级到读缓存、降级到走静态化）、暂时屏蔽读（屏蔽读入口、屏蔽某个读服务）。在《应用多级缓存模式支撑海量读服务》中曾经介绍过读服务，即接入层缓存-->应用层本地缓存-->分布式缓存-->RPC服务/DB，我们会在接入层、应用层设置开关，当分布式缓存、RPC服务/DB有问题自动降级为不调用。当然这种情况适用于对读一致性要求不高的场景。\n \n* 页面降级、页面片段降级、页面异步请求降级都是读服务降级，目的是丢卒保帅（比如因为这些服务也要使用核心资源、或者占了带宽影响到核心服务）或者因数据问题暂时屏蔽。\n \n还有一种是页面静态化场景：\n动态化降级为静态化：比如平时网站可以走动态化渲染商品详情页，但是到了大促来临之际可以将其切换为静态化来减少对核心资源的占用，而且可以提升性能；其他还有如列表页、首页、频道页都可以这么玩；可以通过一个程序定期的推送静态页到缓存或者生成到磁盘，出问题时直接切过去；\n静态化降级为动态化：比如当使用静态化来实现商品详情页架构时，平时使用静态化来提供服务，但是因为特殊原因静态化页面有问题了，需要暂时切换回动态化来保证服务正确性。\n \n**以上都保证出问题了有预案，用户还是可以使用网站，不影响用户购物。**\n \n* 写服务降级\n写服务在大多数场景下是不可降级的，不过可以通过一些迂回战术来解决问题。比如将同步操作转换为异步操作，或者限制写的量/比例。\n比如扣减库存一般这样操作：\n方案1：\n1、扣减DB库存，2、扣减成功后更新Redis中的库存；\n方案2：\n1、扣减Redis库存，2、同步扣减DB库存，如果扣减失败则回滚Redis库存；\n前两种方案非常依赖DB，假设此时DB性能跟不上则扣减库存就会遇到问题；因此我们可以想到方案3：\n1、扣减Redis库存，2、正常同步扣减DB库存，性能扛不住时降级为发送一条扣减DB库存的消息，然后异步进行DB库存扣减实现最终一致即可；\n这种方式发送扣减DB库存消息也可能成为瓶颈；这种情况我们可以考虑方案4：\n1、扣减Redis库存，2、正常同步扣减DB库存，性能扛不住时降级为写扣减DB库存消息到本机，然后本机通过异步进行DB库存扣减来实现最终一致性。\n \n也就是说正常情况可以同步扣减库存，在性能扛不住时降级为异步；另外如果是秒杀场景可以直接降级为异步，从而保护系统。还有如下单操作可以在大促时暂时降级将下单数据写入Redis，然后等峰值过去了再同步回DB，当然也有更好的解决方案，但是更复杂，不是本文的重点。\n还有如用户评价，如果评价量太大，也可以把评价从同步写降级为异步写。当然也可以对评价按钮进行按比例开放（比如一些人的看不到评价操作按钮）。比如评价成功后会发一些奖励，在必要的时候降级同步到异步。\n \n* 多级降级\n缓存是离用户最近越高效；而降级是离用户越近越能对系统保护的好。因为业务的复杂性导致越到后端QPS/TPS越低。\n \n* 页面JS降级开关：主要控制页面功能的降级，在页面中通过JS脚本部署功能降级开关，在适当时机开启/关闭开关。\n\n* 接入层降级开关：主要控制请求入口的降级，请求进入后会首先进入接入层，在接入层可以配置功能降级开关，可以根据实际情况进行自动/人工降级；这个可以参考《京东商品详情页服务闭环实践》，尤其在后端应用服务出问题时，通过接入层降级从而给应用服务有足够的时间恢复服务；\n应用层降级开关：主要控制业务的降级，在应用中配置相应的功能开关，根据实际业务情况进行自动/人工降级。\n\n\n原文：http://jinnianshilongnian.iteye.com/blog/2306477\n\n---","slug":"文章阅读-2016-11-02-高并发系统之服务器降级","published":1,"updated":"2016-11-13T03:36:30.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civi8ouj900212c6n0n4iu2k2","content":"<h4 id=\"网上看到的文章，摘录分享。\"><a href=\"#网上看到的文章，摘录分享。\" class=\"headerlink\" title=\"网上看到的文章，摘录分享。\"></a>网上看到的文章，摘录分享。</h4><p>​在开发高并发系统时有三把利器用来保护系统：<strong>缓存、降级和限流</strong>。之前已经有一些文章介绍过缓存和限流了。本文将详细聊聊降级。当访问量剧增、服务出现问题（如响应时间慢或不响应）或非核心服务影响到核心流程的性能时，仍然需要保证服务还是可用的，即使是有损服务。系统可以根据一些关键数据进行自动降级，也可以配置开关实现人工降级。本文将介绍一些笔者在实际工作中遇到的或见到过的一些降级方案供大家参考。</p>\n<p><strong>降级的最终目的是保证核心服务可用</strong>，即使是有损的。而且有些服务是无法降级的（如加入购物车、结算）。</p>\n<p>降级预案<br>在进行降级之前要对系统进行梳理，看看系统是不是可以丢卒保帅；从而梳理出哪些必须誓死保护，哪些可降级；比如可以参考日志级别设置预案：</p>\n<p><strong>一般：</strong>比如有些服务偶尔因为网络抖动或者服务正在上线而超时，可以自动降级；</p>\n<p><strong>警告：</strong>有些服务在一段时间内成功率有波动（如在95~100%之间），可以自动降级或人工降级，并发送告警；</p>\n<p><strong>错误：</strong>比如可用率低于90%，或者数据库连接池被打爆了，或者访问量突然猛增到系统能承受的最大阀值，此时可以根据情况自动降级或者人工降级；<br>严重错误：比如因为特殊原因数据错误了，此时需要紧急人工降级。</p>\n<p>降级按照是否自动化可分为：<strong>自动开关降级和人工开关降级</strong>。</p>\n<p>降级按照功能可分为：<strong>读服务降级、写服务降级</strong>。</p>\n<p>降级按照处于的系统层次可分为：<strong>多级降级</strong>。</p>\n<hr>\n<p>降级的功能点主要从服务端链路考虑，即根据用户访问的服务调用链路来梳理哪里需要降级：<br>页面降级：在大促或者某些特殊情况下，某些页面占用了一些稀缺服务资源，在紧急情况下可以对其整个降级，以达到丢卒保帅；</p>\n<ul>\n<li><p>页面片段降级：比如商品详情页中的商家部分因为数据错误了，此时需要对其进行降级；<br>页面异步请求降级：比如商品详情页上有推荐信息/配送至等异步加载的请求，如果这些信息响应慢或者后端服务有问题，可以进行降级；</p>\n</li>\n<li><p>服务功能降级：比如渲染商品详情页时需要调用一些不太重要的服务：相关分类、热销榜等，而这些服务在异常情况下直接不获取，即降级即可；</p>\n</li>\n<li><p>读降级：比如多级缓存模式，如果后端服务有问题，可以降级为只读缓存，这种方式适用于对读一致性要求不高的场景；</p>\n</li>\n<li><p>写降级：比如秒杀抢购，我们可以只进行Cache的更新，然后异步同步扣减库存到DB，保证最终一致性即可，此时可以将DB降级为Cache。<br>爬虫降级：在大促活动时，可以将爬虫流量导向静态页或者返回空数据，从而保护后端稀缺资源。</p>\n</li>\n<li><p>自动开关降级<br>自动降级是根据系统负载、资源使用情况、SLA等指标进行降级。</p>\n</li>\n<li><p>超时降级<br>当访问的数据库/http服务/远程调用响应慢或者长时间响应慢，且该服务不是核心服务的话可以在超时后自动降级；比如商品详情页上有推荐内容/评价，但是推荐内容/评价暂时不展示对用户购物流程不会产生很大的影响；对于这种服务是可以超时降级的。如果是调用别人的远程服务，和对方定义一个服务响应最大时间，如果超时了则自动降级。</p>\n</li>\n</ul>\n<p>之前总结过一些的文章《使用httpclient必须知道的参数设置及代码写法、存在的风险》和《dbcp配置及jdbc超时设置总结》。在实际场景用一定主要配置好超时时间和超时重试次数和机制。</p>\n<ul>\n<li><p>统计失败次数降级<br>有时候依赖一些不稳定的API，比如调用外部机票服务，当失败调用次数达到一定阀值自动降级；然后通过异步线程去探测服务是否恢复了，则取消降级。</p>\n</li>\n<li><p>故障降级<br>比如要调用的远程服务挂掉了（网络故障、DNS故障、http服务返回错误的状态码、rpc服务抛出异常），则可以直接降级。降级后的处理方案有：默认值（比如库存服务挂了，返回默认现货）、兜底数据（比如广告挂了，返回提前准备好的一些静态页面）、缓存（之前暂存的一些缓存数据）。</p>\n</li>\n<li><p>限流降级<br>当我们去秒杀或者抢购一些限购商品时，此时可能会因为访问量太大而导致系统崩溃，此时开发者会使用限流来进行限制访问量，当达到限流阀值，后续请求会被降级；降级后的处理方案可以是：排队页面（将用户导流到排队页面等一会重试）、无货（直接告知用户没货了）、错误页（如活动太火爆了，稍后重试）。</p>\n</li>\n<li><p>人工开关降级<br>在大促期间通过监控发现线上的一些服务存在问题，这个时候需要暂时将这些服务摘掉；还有有时候通过任务系统调用一些服务，但是服务依赖的数据库可能存在：网卡被打满了、挂掉了或者很多慢查询，此时需要暂停下任务系统让服务方进行处理；还有发现突然调用量太大，可能需要改变处理方式（比如同步转换为异步）；此时就可以使用开关来完成降级。开关可以存放到配置文件、存放到数据库、存放到Redis/ZooKeeper；如果不是存放在本地，可以定期同步开关数据（比如1秒同步一次）。然后通过判断某个KEY的值来决定是否降级。</p>\n</li>\n</ul>\n<p>另外对于新开发的服务想上线进行灰度测试；但是不太确定该服务的逻辑是否正确，此时就需要设置开关，当新服务有问题可以通过开关切换回老服务。还有多机房服务，如果某个机房挂掉了，此时需要将一个机房的服务切到另一个机房，此时也可以通过开关完成切换。</p>\n<p>还有一些是因为功能问题需要暂时屏蔽掉某些功能，比如商品规格参数数据有问题，数据问题不能用回滚解决，此时需要开关控制降级。</p>\n<ul>\n<li><p>读服务降级<br>对于读服务降级一般采用的策略有：暂时切换读（降级到读缓存、降级到走静态化）、暂时屏蔽读（屏蔽读入口、屏蔽某个读服务）。在《应用多级缓存模式支撑海量读服务》中曾经介绍过读服务，即接入层缓存–&gt;应用层本地缓存–&gt;分布式缓存–&gt;RPC服务/DB，我们会在接入层、应用层设置开关，当分布式缓存、RPC服务/DB有问题自动降级为不调用。当然这种情况适用于对读一致性要求不高的场景。</p>\n</li>\n<li><p>页面降级、页面片段降级、页面异步请求降级都是读服务降级，目的是丢卒保帅（比如因为这些服务也要使用核心资源、或者占了带宽影响到核心服务）或者因数据问题暂时屏蔽。</p>\n</li>\n</ul>\n<p>还有一种是页面静态化场景：<br>动态化降级为静态化：比如平时网站可以走动态化渲染商品详情页，但是到了大促来临之际可以将其切换为静态化来减少对核心资源的占用，而且可以提升性能；其他还有如列表页、首页、频道页都可以这么玩；可以通过一个程序定期的推送静态页到缓存或者生成到磁盘，出问题时直接切过去；<br>静态化降级为动态化：比如当使用静态化来实现商品详情页架构时，平时使用静态化来提供服务，但是因为特殊原因静态化页面有问题了，需要暂时切换回动态化来保证服务正确性。</p>\n<p><strong>以上都保证出问题了有预案，用户还是可以使用网站，不影响用户购物。</strong></p>\n<ul>\n<li>写服务降级<br>写服务在大多数场景下是不可降级的，不过可以通过一些迂回战术来解决问题。比如将同步操作转换为异步操作，或者限制写的量/比例。<br>比如扣减库存一般这样操作：<br>方案1：<br>1、扣减DB库存，2、扣减成功后更新Redis中的库存；<br>方案2：<br>1、扣减Redis库存，2、同步扣减DB库存，如果扣减失败则回滚Redis库存；<br>前两种方案非常依赖DB，假设此时DB性能跟不上则扣减库存就会遇到问题；因此我们可以想到方案3：<br>1、扣减Redis库存，2、正常同步扣减DB库存，性能扛不住时降级为发送一条扣减DB库存的消息，然后异步进行DB库存扣减实现最终一致即可；<br>这种方式发送扣减DB库存消息也可能成为瓶颈；这种情况我们可以考虑方案4：<br>1、扣减Redis库存，2、正常同步扣减DB库存，性能扛不住时降级为写扣减DB库存消息到本机，然后本机通过异步进行DB库存扣减来实现最终一致性。</li>\n</ul>\n<p>也就是说正常情况可以同步扣减库存，在性能扛不住时降级为异步；另外如果是秒杀场景可以直接降级为异步，从而保护系统。还有如下单操作可以在大促时暂时降级将下单数据写入Redis，然后等峰值过去了再同步回DB，当然也有更好的解决方案，但是更复杂，不是本文的重点。<br>还有如用户评价，如果评价量太大，也可以把评价从同步写降级为异步写。当然也可以对评价按钮进行按比例开放（比如一些人的看不到评价操作按钮）。比如评价成功后会发一些奖励，在必要的时候降级同步到异步。</p>\n<ul>\n<li><p>多级降级<br>缓存是离用户最近越高效；而降级是离用户越近越能对系统保护的好。因为业务的复杂性导致越到后端QPS/TPS越低。</p>\n</li>\n<li><p>页面JS降级开关：主要控制页面功能的降级，在页面中通过JS脚本部署功能降级开关，在适当时机开启/关闭开关。</p>\n</li>\n<li><p>接入层降级开关：主要控制请求入口的降级，请求进入后会首先进入接入层，在接入层可以配置功能降级开关，可以根据实际情况进行自动/人工降级；这个可以参考《京东商品详情页服务闭环实践》，尤其在后端应用服务出问题时，通过接入层降级从而给应用服务有足够的时间恢复服务；<br>应用层降级开关：主要控制业务的降级，在应用中配置相应的功能开关，根据实际业务情况进行自动/人工降级。</p>\n</li>\n</ul>\n<p>原文：<a href=\"http://jinnianshilongnian.iteye.com/blog/2306477\" target=\"_blank\" rel=\"external\">http://jinnianshilongnian.iteye.com/blog/2306477</a></p>\n<hr>\n","excerpt":"","more":"<h4 id=\"网上看到的文章，摘录分享。\"><a href=\"#网上看到的文章，摘录分享。\" class=\"headerlink\" title=\"网上看到的文章，摘录分享。\"></a>网上看到的文章，摘录分享。</h4><p>​在开发高并发系统时有三把利器用来保护系统：<strong>缓存、降级和限流</strong>。之前已经有一些文章介绍过缓存和限流了。本文将详细聊聊降级。当访问量剧增、服务出现问题（如响应时间慢或不响应）或非核心服务影响到核心流程的性能时，仍然需要保证服务还是可用的，即使是有损服务。系统可以根据一些关键数据进行自动降级，也可以配置开关实现人工降级。本文将介绍一些笔者在实际工作中遇到的或见到过的一些降级方案供大家参考。</p>\n<p><strong>降级的最终目的是保证核心服务可用</strong>，即使是有损的。而且有些服务是无法降级的（如加入购物车、结算）。</p>\n<p>降级预案<br>在进行降级之前要对系统进行梳理，看看系统是不是可以丢卒保帅；从而梳理出哪些必须誓死保护，哪些可降级；比如可以参考日志级别设置预案：</p>\n<p><strong>一般：</strong>比如有些服务偶尔因为网络抖动或者服务正在上线而超时，可以自动降级；</p>\n<p><strong>警告：</strong>有些服务在一段时间内成功率有波动（如在95~100%之间），可以自动降级或人工降级，并发送告警；</p>\n<p><strong>错误：</strong>比如可用率低于90%，或者数据库连接池被打爆了，或者访问量突然猛增到系统能承受的最大阀值，此时可以根据情况自动降级或者人工降级；<br>严重错误：比如因为特殊原因数据错误了，此时需要紧急人工降级。</p>\n<p>降级按照是否自动化可分为：<strong>自动开关降级和人工开关降级</strong>。</p>\n<p>降级按照功能可分为：<strong>读服务降级、写服务降级</strong>。</p>\n<p>降级按照处于的系统层次可分为：<strong>多级降级</strong>。</p>\n<hr>\n<p>降级的功能点主要从服务端链路考虑，即根据用户访问的服务调用链路来梳理哪里需要降级：<br>页面降级：在大促或者某些特殊情况下，某些页面占用了一些稀缺服务资源，在紧急情况下可以对其整个降级，以达到丢卒保帅；</p>\n<ul>\n<li><p>页面片段降级：比如商品详情页中的商家部分因为数据错误了，此时需要对其进行降级；<br>页面异步请求降级：比如商品详情页上有推荐信息/配送至等异步加载的请求，如果这些信息响应慢或者后端服务有问题，可以进行降级；</p>\n</li>\n<li><p>服务功能降级：比如渲染商品详情页时需要调用一些不太重要的服务：相关分类、热销榜等，而这些服务在异常情况下直接不获取，即降级即可；</p>\n</li>\n<li><p>读降级：比如多级缓存模式，如果后端服务有问题，可以降级为只读缓存，这种方式适用于对读一致性要求不高的场景；</p>\n</li>\n<li><p>写降级：比如秒杀抢购，我们可以只进行Cache的更新，然后异步同步扣减库存到DB，保证最终一致性即可，此时可以将DB降级为Cache。<br>爬虫降级：在大促活动时，可以将爬虫流量导向静态页或者返回空数据，从而保护后端稀缺资源。</p>\n</li>\n<li><p>自动开关降级<br>自动降级是根据系统负载、资源使用情况、SLA等指标进行降级。</p>\n</li>\n<li><p>超时降级<br>当访问的数据库/http服务/远程调用响应慢或者长时间响应慢，且该服务不是核心服务的话可以在超时后自动降级；比如商品详情页上有推荐内容/评价，但是推荐内容/评价暂时不展示对用户购物流程不会产生很大的影响；对于这种服务是可以超时降级的。如果是调用别人的远程服务，和对方定义一个服务响应最大时间，如果超时了则自动降级。</p>\n</li>\n</ul>\n<p>之前总结过一些的文章《使用httpclient必须知道的参数设置及代码写法、存在的风险》和《dbcp配置及jdbc超时设置总结》。在实际场景用一定主要配置好超时时间和超时重试次数和机制。</p>\n<ul>\n<li><p>统计失败次数降级<br>有时候依赖一些不稳定的API，比如调用外部机票服务，当失败调用次数达到一定阀值自动降级；然后通过异步线程去探测服务是否恢复了，则取消降级。</p>\n</li>\n<li><p>故障降级<br>比如要调用的远程服务挂掉了（网络故障、DNS故障、http服务返回错误的状态码、rpc服务抛出异常），则可以直接降级。降级后的处理方案有：默认值（比如库存服务挂了，返回默认现货）、兜底数据（比如广告挂了，返回提前准备好的一些静态页面）、缓存（之前暂存的一些缓存数据）。</p>\n</li>\n<li><p>限流降级<br>当我们去秒杀或者抢购一些限购商品时，此时可能会因为访问量太大而导致系统崩溃，此时开发者会使用限流来进行限制访问量，当达到限流阀值，后续请求会被降级；降级后的处理方案可以是：排队页面（将用户导流到排队页面等一会重试）、无货（直接告知用户没货了）、错误页（如活动太火爆了，稍后重试）。</p>\n</li>\n<li><p>人工开关降级<br>在大促期间通过监控发现线上的一些服务存在问题，这个时候需要暂时将这些服务摘掉；还有有时候通过任务系统调用一些服务，但是服务依赖的数据库可能存在：网卡被打满了、挂掉了或者很多慢查询，此时需要暂停下任务系统让服务方进行处理；还有发现突然调用量太大，可能需要改变处理方式（比如同步转换为异步）；此时就可以使用开关来完成降级。开关可以存放到配置文件、存放到数据库、存放到Redis/ZooKeeper；如果不是存放在本地，可以定期同步开关数据（比如1秒同步一次）。然后通过判断某个KEY的值来决定是否降级。</p>\n</li>\n</ul>\n<p>另外对于新开发的服务想上线进行灰度测试；但是不太确定该服务的逻辑是否正确，此时就需要设置开关，当新服务有问题可以通过开关切换回老服务。还有多机房服务，如果某个机房挂掉了，此时需要将一个机房的服务切到另一个机房，此时也可以通过开关完成切换。</p>\n<p>还有一些是因为功能问题需要暂时屏蔽掉某些功能，比如商品规格参数数据有问题，数据问题不能用回滚解决，此时需要开关控制降级。</p>\n<ul>\n<li><p>读服务降级<br>对于读服务降级一般采用的策略有：暂时切换读（降级到读缓存、降级到走静态化）、暂时屏蔽读（屏蔽读入口、屏蔽某个读服务）。在《应用多级缓存模式支撑海量读服务》中曾经介绍过读服务，即接入层缓存–&gt;应用层本地缓存–&gt;分布式缓存–&gt;RPC服务/DB，我们会在接入层、应用层设置开关，当分布式缓存、RPC服务/DB有问题自动降级为不调用。当然这种情况适用于对读一致性要求不高的场景。</p>\n</li>\n<li><p>页面降级、页面片段降级、页面异步请求降级都是读服务降级，目的是丢卒保帅（比如因为这些服务也要使用核心资源、或者占了带宽影响到核心服务）或者因数据问题暂时屏蔽。</p>\n</li>\n</ul>\n<p>还有一种是页面静态化场景：<br>动态化降级为静态化：比如平时网站可以走动态化渲染商品详情页，但是到了大促来临之际可以将其切换为静态化来减少对核心资源的占用，而且可以提升性能；其他还有如列表页、首页、频道页都可以这么玩；可以通过一个程序定期的推送静态页到缓存或者生成到磁盘，出问题时直接切过去；<br>静态化降级为动态化：比如当使用静态化来实现商品详情页架构时，平时使用静态化来提供服务，但是因为特殊原因静态化页面有问题了，需要暂时切换回动态化来保证服务正确性。</p>\n<p><strong>以上都保证出问题了有预案，用户还是可以使用网站，不影响用户购物。</strong></p>\n<ul>\n<li>写服务降级<br>写服务在大多数场景下是不可降级的，不过可以通过一些迂回战术来解决问题。比如将同步操作转换为异步操作，或者限制写的量/比例。<br>比如扣减库存一般这样操作：<br>方案1：<br>1、扣减DB库存，2、扣减成功后更新Redis中的库存；<br>方案2：<br>1、扣减Redis库存，2、同步扣减DB库存，如果扣减失败则回滚Redis库存；<br>前两种方案非常依赖DB，假设此时DB性能跟不上则扣减库存就会遇到问题；因此我们可以想到方案3：<br>1、扣减Redis库存，2、正常同步扣减DB库存，性能扛不住时降级为发送一条扣减DB库存的消息，然后异步进行DB库存扣减实现最终一致即可；<br>这种方式发送扣减DB库存消息也可能成为瓶颈；这种情况我们可以考虑方案4：<br>1、扣减Redis库存，2、正常同步扣减DB库存，性能扛不住时降级为写扣减DB库存消息到本机，然后本机通过异步进行DB库存扣减来实现最终一致性。</li>\n</ul>\n<p>也就是说正常情况可以同步扣减库存，在性能扛不住时降级为异步；另外如果是秒杀场景可以直接降级为异步，从而保护系统。还有如下单操作可以在大促时暂时降级将下单数据写入Redis，然后等峰值过去了再同步回DB，当然也有更好的解决方案，但是更复杂，不是本文的重点。<br>还有如用户评价，如果评价量太大，也可以把评价从同步写降级为异步写。当然也可以对评价按钮进行按比例开放（比如一些人的看不到评价操作按钮）。比如评价成功后会发一些奖励，在必要的时候降级同步到异步。</p>\n<ul>\n<li><p>多级降级<br>缓存是离用户最近越高效；而降级是离用户越近越能对系统保护的好。因为业务的复杂性导致越到后端QPS/TPS越低。</p>\n</li>\n<li><p>页面JS降级开关：主要控制页面功能的降级，在页面中通过JS脚本部署功能降级开关，在适当时机开启/关闭开关。</p>\n</li>\n<li><p>接入层降级开关：主要控制请求入口的降级，请求进入后会首先进入接入层，在接入层可以配置功能降级开关，可以根据实际情况进行自动/人工降级；这个可以参考《京东商品详情页服务闭环实践》，尤其在后端应用服务出问题时，通过接入层降级从而给应用服务有足够的时间恢复服务；<br>应用层降级开关：主要控制业务的降级，在应用中配置相应的功能开关，根据实际业务情况进行自动/人工降级。</p>\n</li>\n</ul>\n<p>原文：<a href=\"http://jinnianshilongnian.iteye.com/blog/2306477\">http://jinnianshilongnian.iteye.com/blog/2306477</a></p>\n<hr>\n"},{"title":"Linux 发行版汇总","abbrlink":51445,"date":"2016-11-07T14:36:49.000Z","_content":"\n# 前言\n### 本文是在开源中国看到的，觉得还不错，说的很详细，特地摘录下来。\n\n---\n## Linux入门\n### Ubuntu\nUbuntu是一款基于Debian发行版，以Unity作为默认桌面环境的Linux操作系统。他是世界上最流行的发行版之一，每次发行，它都有提升。最新发行版为桌面、移动及其桌面移动混合版的优化。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB01.png)\n\n现在依然有Ubuntu移动平台，它专用于一些合作的智能手机及少数致力于Ubuntu触屏手持设备。较新的设备集成了汇集软件（Convergence software），使你可以通过无线HDMI连接器将你的智能手机转到PC上。\n\n \n### Kubuntu\nKubuntu是Ubuntu的衍生版，使用KDE而不是Unity作为默认桌面环境. 在此情况下，Kubuntu与Ubuntu大同小异，其发行时间也与Ubuntu保持一致。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB02.png)\n \n### Mint\nMint是优雅、现代Linux发行版，它易于使用且功能强大。它基于Ubuntu开发，可靠而安全，是最好用的管理软件之一。最近，它又成为了最为流行的Linux发行版之一，声称为Windows及Mac OS后最为流行的家用操作系统。\n\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB03.png)\n\nMint有着丰富的桌面选项，默认为Cinnamon桌面, 你还可以使用MATE, KDE或Xfce.。Mint的Debian版也可用，定位为有经验的Linux用户。\n\n\n\n### Deepin\nDeepin 是一个基于 Ubuntu 的发行版，它带有时尚美观的深度桌面环境(Deepin Desktop Environment，DDE), 旨在吸引新的 Linux 用户。它的界面简单直观，系统设置面板的是所有发行版中最好看的一个。 DMusic, DPlayer 和 DTalk 是其专有的应用程序。\n\n有许多的基于 Ubuntu 的衍生版本都在视图用它们自己的方式来解决一些问题，而其中特别受关注的一个就是 Deepin。                \n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB04.png)\n\nDeepin 还具备易于使用的软件中心，远胜于其它具备类似功能的发行版。\n\n\n\n### PCLinuxOS\nPCLinuxOS 是专为普通 PC 用户设计的，它默认使用的是 KDE Plasma 桌面。这个发行版在安装驱动，获取办公软件，编辑照片，上网以及使用多媒体等操作上使用非常方便，还能快速创建快照备份。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB05.png)\n\n\n\n### Linux Lite\n基于 Ubuntu LTS 发行版, Linux Lite 是一个最小化的省空间型发行版, 它拥有一个干净简单的 Xfce 桌面，而且是 Windows 风格的。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB06.png)\n\nLinux Lite 的目标是将 Windows 用户引向 Linux。它对资源的节省意味这你可以在一台  CPU 只有 700Mhz 而且内存只有 512M 的 PC 上安装它。这就是我们所说的轻便（light）!\n\n \n### Zorin OS\nZorin OS 是专门为 Linux 新手设计的，便于人们从Windows 向 Linux 过渡。它拥有 Windows 用户比较熟悉的基于 Ubuntu 发行版的功能以及应用，也能让用户方便的使用他们仍然需要的 Windows 应用。Zorin OS 9 看起来很像 Windows 7，这样做只是单纯为了赢得一些从 Windows 到 Linux 的转化。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB07.png)\n\n\n---\n## 震撼的视觉\n### Elementary OS\n另外一个基于 Ubuntu 的发行版 Elementary OS ，自从其 Elementary OS Luna 版本发行依赖，已经拥有了属于它自己的不通表现。它拥有漂亮简介的默认应用，它们遵循这操作系统的美感诉求，例如电子邮件程序 Geary，网页浏览器 Midori, 日历程序 Maya, 电影播放器 Totem , 以及音乐播放器 Noise。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB08.png)\n\n\n### Apricity OS\n为了“最性感的 Linux 发行版”这个非正式的头衔而向 Elementary OS 发起挑战，就是 Apricity, 它采取了一种类似的方法。没有采用 Windows 式样的 Cinnamon 和 MATE 风格, Apricity 提供了一个令人惊叹的桌面换进，比起微软的那一套，它更能让人联想其 Android或者 iOS。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB09.png)\n\n---\n## 普通版\n### OpenSUSE\nOpenSUSE 发行版是 Linux 的一个普通发行版，由 OpenSUSE 项目构建，目标是在成为一个不错面向新手的发行版的同时，也能满足有经验的 Linux 用户的需求。OpenSUSE 附带有 YAST, 它是一个管理员程序，能对安装，包管理以及其它一些东西进行控制。\n\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB10.png)\n\n \n### Fedora\nFedora 默认使用 GNOME 桌面环境，但是用户可以轻松的将其切换到 KDE， XFce， MATE 以及 Cinnamon。Fedora 的自定义变体, 被称作 Fedora 扩展，它们能满足用户的一些特殊需求。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB11.png)\n\n\n### Debian\nDebian 是一个比较老的 Linux 发行版，是跟着 GNOME 桌面环境一起出现的。不过，这个桌面环境也能用于 FreeBSD，并且对于其它内核的支持工作也在进行中， 比如Hurd。 Debian 以其预装的超过 37500 的程序包为荣，并且带有简单的功能使得其能轻松的获取到更多的包。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB12.png)\n \n### Korora\nKorora 最初基于 Gentoo Linux，并且投身于让 Linux 对新手来说使用起来更轻松，但同时能让专家使用起来感到实用。它在桌面环境方面由多种选择，包括 Cinnamon, GNOME, KDE, MATE 以及 Xfce 桌面。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB13.png)\n\n \n### Slackware Linux\nSlackware 是专注于安全和简单得发行版, 旨在成为最像 Unix 的 Linux 发行版。它在服务器管理方面特别有用，因为它拥有 FTP， email 以及 web 服务器，能立即投入使用。\n\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB14.png)\n\n \n### Mageia\nMageia起初是一个由社区驱动的，非营利的法国Mandriva Linux分支，它包括了所有主要的桌面环境，它主要使用KDE和GNOME作为其默认桌面。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB15.png)\n\n \n### SparkyLinux\n\nSparkyLinux发行版是从Debian的“测试”分支演变而来的。主版本配备了定制版的轻量级的LXDE桌面，同时还可以使用其它一些定制桌面。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB16.png)\n\n\n### Gentoo Linux\nGentoo Linux几乎可以满足你任何的需求。它的通用性和优异的性能正是它区别于其他发行版的。Gentoo Linux还配备了先进的软件包管理系统，称为Portage。\n\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB17.png)\n\n \n### CentOS\nCentOS（社区企业操作系统）是一个由社区重建的Red Hat企业版Linux。它是专为那些想免费使用一个企业标准发行版的人而设计的。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB18.png)\n\n \n### PinGuy OS\nPinGuyOS很漂亮，从一开始我就想使用它。这个基于Ubuntu的发行版预装了所有常用的以及用于网络设置的最好软件，这使得它非常适合初学者。它具有一个修改过的GNOME用户界面。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB19.png)\n\n\n---\n## 多媒体创作 \n### Fedora设计套件\n如果要节省时间，向Fedora中安装一些艺术工具和程序的话，你只需要安装来自Fedora艺术设计团队的spin版本。它重点关注的是绘画和桌面出版，你可以找到其中预安装的 Inkscape和GIMP等工具，还有其它很多的工具。 \n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB20.png)\n\n \n### Ubuntu Studio\nUbuntu Studio于2007年首次发布，它可能是那些具有创意天分的Linux用户的默认选择。有了XFCE桌面环境和低内核延迟，一切都是面向媒体制作。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB21.png)\n \n### KXStudio\n这里列举的所有用于创作的发行版都提供了优秀的工具集，然而KXStudio却不同，它侧重于音频制作。当你沉浸在KDE桌面中时，你就拥有了一个性能相当出色的数字工作室。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB22.png)\n\n \n### ArtistX\nArtistX专门面向所有类型的艺术家，从音乐到图形设计。它基于Ubuntu，并且预装了所有最好的2D和3D图形设计、视频制作，和GNU / Linux音频制作软件。\n\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB23.png)\n\n\n### Iro\n如果动画、3D建模、合成、数字绘画和图像编辑是您首选的多媒体技术，你就需要Iro。没有大量的工具库（例如，像Ubuntu Studio）满足每个人的需要，而是提供了一组专门的应用程序。它们被集成在精简的用户界面中，如果你有一个发行版，就可以安装并开始工作，一点也不麻烦。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB24.png)\n\n\n---\n## 教育\n### DouDou\nDouDou Linux是为小孩子设计的，其目的是教他们如何探索计算机并使用计算机学习。它提供了一些适合2-12岁孩子玩的游戏和教育节目，它是一个安全的环境，家长不必整天看着。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB25.png)\n\n \n### Edubuntu\nEdubuntu被开发成了一个（感谢Ubuntu给予的合作）尽可能方便教师设置的版本，并且可以供所有年龄的儿童使用。它预装了所有最好的免费教育软件。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB26.png)\n\n \n### Uberstudent\nUberstudent是专门为大专院校和高级中学的学生而设计的。它预装的软件可以使做作业和管理任务变得更加容易。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB27.png)\n\n\n---\n## 树莓派发行\n### Raspbian Jessie\n流行的Raspberry Pi默认的操作系统是Raspbian Jessie，由树莓派基金会内部生产，它基于Debian。这款ARM发行版配备了大量编程工具，如Scratch，旨在帮助新手学习编程。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB28.png)\n\n \n### Kano OS\n和Raspbian类似的操作系统是Kano OS，它也是基于Debian，但更多地是侧重编程，不过这次针对的是儿童。它在一个更直观的用户界面中提供了儿童进行编程需要的所有工具，目的是让他们尽量少点麻烦。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB29.png)\n\n---\n## 轻量级/小型化\n### Lubuntu\nLubuntu 是一个基于 Ubuntu 的轻量级发行版，非常适合在笔记本电脑上使用。它使用的是小型化的 LXDE（轻量级 X11桌面环境 Lightweight X11 Desktop Environment)，附带拥有一些针对能效和速度方面进行过优化设计的轻量级应用程序。因为它对 RAM 和 系统资源需求不高，因此非常适合那些古老的计算机、网络以及移动设备。\n\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB30.png)\n\n \n### Xubuntu\nXubuntu 是 Ubuntu 的一个衍生版本，使用 Xfce (XForms Common Environment) 桌面环境，因此它是优雅和轻量级的。它非常适合于笔记本和上网本，当然还有台式机。它比较轻巧，对系统资源的耗费不多，因此在比较古老的计算机上使用是比较理想的。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB31.png)\n\n \n### Puppy Linux\nPuppy Linux 是一个非常小巧的发行版，它可以整个放到 RAM 上面运行。因此 Puppy Linux 非常适合比较古老的计算机，即时计算机没有安装硬盘驱动器也是可以的! 它在删除恶意软件方面使用起来也比较轻松。\n\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB32.png)\n\n### Manjaro Linux\nManjaro Linux 基于 Arch Linux， 它是一个运行快速，容易使用，轻量级的发行版。它的目标是 Arch Linux 的好处都能提供，此外对用户更加友好和易于使用，使得新手能轻松上手。它默认使用的是 Xfce 桌面，不过也可以选择其它的桌面环境。\n\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB33.png)\n\n\n### Arch Linux\nArch Linux是一个为经验丰富的用户而设计的发行版。这个轻量级的最小化的发行版旨在使事情变得简单，更新时使用滚动发布模型。它具有一个定制的软件包管理器称为“Pacman”，这使得它易于编译、修改和共享软件包。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB34.png)\n\n \n### Tiny Core\nTiny Core Linux是一个非常轻便的，模块化的发行版，特别要指出的是其小尺寸（目前有15MB）。它基于Linux内核，并且使用了BusyBox和FLTK（快速、轻便的工具包）。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB35.png)\n\n \n### Bodhi \n这个基于Ubuntu的Bodhi Linux发行版具有轻量级而且漂亮的Enlightenment桌面。Bodhi尤其具有可定制性，可以使用主题和应用程序扩展开始的轻量级桌面环境。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB36.png)\n\n\n---\n## 视频游戏\n### Steam OS\nLinux上的游戏变得越来越受欢迎，虽然你可以在Ubuntu上轻松的安装Steam数字版下载服务，但你可能更喜欢一步到位安装Steam OS。这是一个以游戏为中心的发行版，针对游戏性能进行了优化，内置了专有的图形和声音驱动程序，以及Steam客户端。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB37.png)\n\nSteam OS是Steam 机器使用的发行版，所以如果你正安装自己的系统，你肯定想使用这个版本。\n\n\n### Ubuntu Game Pack\n能让你玩差不多6000种游戏，Ubuntu游戏包配有内置Steam，以及PlayOnLinux和Windows游戏模拟器。这个游戏包基于Ubuntu 14.04，如果你只想安装新操作系统并且想马上开始游戏，那么这是一个绝佳的选择！\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB38.png)\n\n\n### Play Linux\nPlay Linux基于Ubuntu 15.10，是一个优化的发行版，由于自动GPU安装程序工具可以使你的Linux当作游戏机来使用。这基本上简化了安装合适的显卡驱动程序的问题，满足你只玩游戏的需求。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB39.png)\n\n\n### SparkyLinux – Game Over Edition\n各种版本的SparkyLinux都是可选用的，但拥有游戏为中心的这个版本可能是最有用的。配备LXDE桌面和大量的预装游戏，而且你还会发现Steam，PlayOnLinux和预装的windows游戏模拟器。这是一个免费且又高端的巨大的游戏库！\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB40.png)\n\n---\n## 安全和恢复\n### Kali Linux\nKali Linux以前被称为BackTrack，是一个渗透测试发行版，被广泛应用于在线安全社区。这种基于Debian的Linux发行版可以轻松地执行数字取证任务。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB41.png)\n\n\n### Parted Magic\nParted Magic本质上是一个磁盘管理工具，作为硬盘分区和复制的主要工具，它还能轻松完成数据恢复和安全清理。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB042.png)\n \n### GParted\nGParted是一个用途单一的发行版，旨在使用图形界面对硬盘驱动器变的更加轻松。 众多发行版中的标准版本将被Linux用户熟知。这个版本是一个独立的专用操作系统，然而，它准备作为一张自启动光盘运行。你需要执行一些磁盘管理而不引导到您的计算机的操作系统么？那么就使用GParted吧。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB43.png)\n\n\n### TAILS\nTAILS是一个完全围绕隐私和安全概念的发行版。它是一个实时操作系统，您可以移植从DVD，USB棒或SD卡中，这样你就可以在任何的计算机上安全的使用，并使用完成后不会被行为追踪。为了最好的匿名性，所有的互联网连接都通过TOR（The Onion Router）路由，并且加密工具全程保护您的通信方法不会被窥视。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB44.png)\n\n\n---\n## 商业版本 \n### Red Hat Enterprise Linux\n红帽企业版Linux是Fedora的商业衍生产品，专为企业客户设计。 它提供诸多变体、插件以及认证可供管理员和应用程序使用。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB45.png)\n\n\n### SUSE Linux Enterprise\nSUSE Linux Enterprise桌面版专为企业使用而设计，它是可供企业安装使用的，这使其易于使用各种办公程序。 它具有足够的灵活性，可以在各种设备上运行，但对于极为关键的进程来说是足够可靠的。 同时还提供SUSE Linux Enterprise Server版本。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB46.png)\n\n\n---\n","source":"_posts/文章阅读/2016-11-07-Linux-发行版汇总.md","raw":"---\ntitle: Linux 发行版汇总\ncategories:\n  - 文章阅读\ntags:\n  - 最佳 Linux 发行版汇总\nabbrlink: 51445\ndate: 2016-11-07 22:36:49\n---\n\n# 前言\n### 本文是在开源中国看到的，觉得还不错，说的很详细，特地摘录下来。\n\n---\n## Linux入门\n### Ubuntu\nUbuntu是一款基于Debian发行版，以Unity作为默认桌面环境的Linux操作系统。他是世界上最流行的发行版之一，每次发行，它都有提升。最新发行版为桌面、移动及其桌面移动混合版的优化。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB01.png)\n\n现在依然有Ubuntu移动平台，它专用于一些合作的智能手机及少数致力于Ubuntu触屏手持设备。较新的设备集成了汇集软件（Convergence software），使你可以通过无线HDMI连接器将你的智能手机转到PC上。\n\n \n### Kubuntu\nKubuntu是Ubuntu的衍生版，使用KDE而不是Unity作为默认桌面环境. 在此情况下，Kubuntu与Ubuntu大同小异，其发行时间也与Ubuntu保持一致。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB02.png)\n \n### Mint\nMint是优雅、现代Linux发行版，它易于使用且功能强大。它基于Ubuntu开发，可靠而安全，是最好用的管理软件之一。最近，它又成为了最为流行的Linux发行版之一，声称为Windows及Mac OS后最为流行的家用操作系统。\n\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB03.png)\n\nMint有着丰富的桌面选项，默认为Cinnamon桌面, 你还可以使用MATE, KDE或Xfce.。Mint的Debian版也可用，定位为有经验的Linux用户。\n\n\n\n### Deepin\nDeepin 是一个基于 Ubuntu 的发行版，它带有时尚美观的深度桌面环境(Deepin Desktop Environment，DDE), 旨在吸引新的 Linux 用户。它的界面简单直观，系统设置面板的是所有发行版中最好看的一个。 DMusic, DPlayer 和 DTalk 是其专有的应用程序。\n\n有许多的基于 Ubuntu 的衍生版本都在视图用它们自己的方式来解决一些问题，而其中特别受关注的一个就是 Deepin。                \n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB04.png)\n\nDeepin 还具备易于使用的软件中心，远胜于其它具备类似功能的发行版。\n\n\n\n### PCLinuxOS\nPCLinuxOS 是专为普通 PC 用户设计的，它默认使用的是 KDE Plasma 桌面。这个发行版在安装驱动，获取办公软件，编辑照片，上网以及使用多媒体等操作上使用非常方便，还能快速创建快照备份。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB05.png)\n\n\n\n### Linux Lite\n基于 Ubuntu LTS 发行版, Linux Lite 是一个最小化的省空间型发行版, 它拥有一个干净简单的 Xfce 桌面，而且是 Windows 风格的。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB06.png)\n\nLinux Lite 的目标是将 Windows 用户引向 Linux。它对资源的节省意味这你可以在一台  CPU 只有 700Mhz 而且内存只有 512M 的 PC 上安装它。这就是我们所说的轻便（light）!\n\n \n### Zorin OS\nZorin OS 是专门为 Linux 新手设计的，便于人们从Windows 向 Linux 过渡。它拥有 Windows 用户比较熟悉的基于 Ubuntu 发行版的功能以及应用，也能让用户方便的使用他们仍然需要的 Windows 应用。Zorin OS 9 看起来很像 Windows 7，这样做只是单纯为了赢得一些从 Windows 到 Linux 的转化。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB07.png)\n\n\n---\n## 震撼的视觉\n### Elementary OS\n另外一个基于 Ubuntu 的发行版 Elementary OS ，自从其 Elementary OS Luna 版本发行依赖，已经拥有了属于它自己的不通表现。它拥有漂亮简介的默认应用，它们遵循这操作系统的美感诉求，例如电子邮件程序 Geary，网页浏览器 Midori, 日历程序 Maya, 电影播放器 Totem , 以及音乐播放器 Noise。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB08.png)\n\n\n### Apricity OS\n为了“最性感的 Linux 发行版”这个非正式的头衔而向 Elementary OS 发起挑战，就是 Apricity, 它采取了一种类似的方法。没有采用 Windows 式样的 Cinnamon 和 MATE 风格, Apricity 提供了一个令人惊叹的桌面换进，比起微软的那一套，它更能让人联想其 Android或者 iOS。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB09.png)\n\n---\n## 普通版\n### OpenSUSE\nOpenSUSE 发行版是 Linux 的一个普通发行版，由 OpenSUSE 项目构建，目标是在成为一个不错面向新手的发行版的同时，也能满足有经验的 Linux 用户的需求。OpenSUSE 附带有 YAST, 它是一个管理员程序，能对安装，包管理以及其它一些东西进行控制。\n\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB10.png)\n\n \n### Fedora\nFedora 默认使用 GNOME 桌面环境，但是用户可以轻松的将其切换到 KDE， XFce， MATE 以及 Cinnamon。Fedora 的自定义变体, 被称作 Fedora 扩展，它们能满足用户的一些特殊需求。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB11.png)\n\n\n### Debian\nDebian 是一个比较老的 Linux 发行版，是跟着 GNOME 桌面环境一起出现的。不过，这个桌面环境也能用于 FreeBSD，并且对于其它内核的支持工作也在进行中， 比如Hurd。 Debian 以其预装的超过 37500 的程序包为荣，并且带有简单的功能使得其能轻松的获取到更多的包。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB12.png)\n \n### Korora\nKorora 最初基于 Gentoo Linux，并且投身于让 Linux 对新手来说使用起来更轻松，但同时能让专家使用起来感到实用。它在桌面环境方面由多种选择，包括 Cinnamon, GNOME, KDE, MATE 以及 Xfce 桌面。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB13.png)\n\n \n### Slackware Linux\nSlackware 是专注于安全和简单得发行版, 旨在成为最像 Unix 的 Linux 发行版。它在服务器管理方面特别有用，因为它拥有 FTP， email 以及 web 服务器，能立即投入使用。\n\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB14.png)\n\n \n### Mageia\nMageia起初是一个由社区驱动的，非营利的法国Mandriva Linux分支，它包括了所有主要的桌面环境，它主要使用KDE和GNOME作为其默认桌面。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB15.png)\n\n \n### SparkyLinux\n\nSparkyLinux发行版是从Debian的“测试”分支演变而来的。主版本配备了定制版的轻量级的LXDE桌面，同时还可以使用其它一些定制桌面。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB16.png)\n\n\n### Gentoo Linux\nGentoo Linux几乎可以满足你任何的需求。它的通用性和优异的性能正是它区别于其他发行版的。Gentoo Linux还配备了先进的软件包管理系统，称为Portage。\n\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB17.png)\n\n \n### CentOS\nCentOS（社区企业操作系统）是一个由社区重建的Red Hat企业版Linux。它是专为那些想免费使用一个企业标准发行版的人而设计的。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB18.png)\n\n \n### PinGuy OS\nPinGuyOS很漂亮，从一开始我就想使用它。这个基于Ubuntu的发行版预装了所有常用的以及用于网络设置的最好软件，这使得它非常适合初学者。它具有一个修改过的GNOME用户界面。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB19.png)\n\n\n---\n## 多媒体创作 \n### Fedora设计套件\n如果要节省时间，向Fedora中安装一些艺术工具和程序的话，你只需要安装来自Fedora艺术设计团队的spin版本。它重点关注的是绘画和桌面出版，你可以找到其中预安装的 Inkscape和GIMP等工具，还有其它很多的工具。 \n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB20.png)\n\n \n### Ubuntu Studio\nUbuntu Studio于2007年首次发布，它可能是那些具有创意天分的Linux用户的默认选择。有了XFCE桌面环境和低内核延迟，一切都是面向媒体制作。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB21.png)\n \n### KXStudio\n这里列举的所有用于创作的发行版都提供了优秀的工具集，然而KXStudio却不同，它侧重于音频制作。当你沉浸在KDE桌面中时，你就拥有了一个性能相当出色的数字工作室。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB22.png)\n\n \n### ArtistX\nArtistX专门面向所有类型的艺术家，从音乐到图形设计。它基于Ubuntu，并且预装了所有最好的2D和3D图形设计、视频制作，和GNU / Linux音频制作软件。\n\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB23.png)\n\n\n### Iro\n如果动画、3D建模、合成、数字绘画和图像编辑是您首选的多媒体技术，你就需要Iro。没有大量的工具库（例如，像Ubuntu Studio）满足每个人的需要，而是提供了一组专门的应用程序。它们被集成在精简的用户界面中，如果你有一个发行版，就可以安装并开始工作，一点也不麻烦。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB24.png)\n\n\n---\n## 教育\n### DouDou\nDouDou Linux是为小孩子设计的，其目的是教他们如何探索计算机并使用计算机学习。它提供了一些适合2-12岁孩子玩的游戏和教育节目，它是一个安全的环境，家长不必整天看着。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB25.png)\n\n \n### Edubuntu\nEdubuntu被开发成了一个（感谢Ubuntu给予的合作）尽可能方便教师设置的版本，并且可以供所有年龄的儿童使用。它预装了所有最好的免费教育软件。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB26.png)\n\n \n### Uberstudent\nUberstudent是专门为大专院校和高级中学的学生而设计的。它预装的软件可以使做作业和管理任务变得更加容易。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB27.png)\n\n\n---\n## 树莓派发行\n### Raspbian Jessie\n流行的Raspberry Pi默认的操作系统是Raspbian Jessie，由树莓派基金会内部生产，它基于Debian。这款ARM发行版配备了大量编程工具，如Scratch，旨在帮助新手学习编程。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB28.png)\n\n \n### Kano OS\n和Raspbian类似的操作系统是Kano OS，它也是基于Debian，但更多地是侧重编程，不过这次针对的是儿童。它在一个更直观的用户界面中提供了儿童进行编程需要的所有工具，目的是让他们尽量少点麻烦。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB29.png)\n\n---\n## 轻量级/小型化\n### Lubuntu\nLubuntu 是一个基于 Ubuntu 的轻量级发行版，非常适合在笔记本电脑上使用。它使用的是小型化的 LXDE（轻量级 X11桌面环境 Lightweight X11 Desktop Environment)，附带拥有一些针对能效和速度方面进行过优化设计的轻量级应用程序。因为它对 RAM 和 系统资源需求不高，因此非常适合那些古老的计算机、网络以及移动设备。\n\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB30.png)\n\n \n### Xubuntu\nXubuntu 是 Ubuntu 的一个衍生版本，使用 Xfce (XForms Common Environment) 桌面环境，因此它是优雅和轻量级的。它非常适合于笔记本和上网本，当然还有台式机。它比较轻巧，对系统资源的耗费不多，因此在比较古老的计算机上使用是比较理想的。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB31.png)\n\n \n### Puppy Linux\nPuppy Linux 是一个非常小巧的发行版，它可以整个放到 RAM 上面运行。因此 Puppy Linux 非常适合比较古老的计算机，即时计算机没有安装硬盘驱动器也是可以的! 它在删除恶意软件方面使用起来也比较轻松。\n\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB32.png)\n\n### Manjaro Linux\nManjaro Linux 基于 Arch Linux， 它是一个运行快速，容易使用，轻量级的发行版。它的目标是 Arch Linux 的好处都能提供，此外对用户更加友好和易于使用，使得新手能轻松上手。它默认使用的是 Xfce 桌面，不过也可以选择其它的桌面环境。\n\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB33.png)\n\n\n### Arch Linux\nArch Linux是一个为经验丰富的用户而设计的发行版。这个轻量级的最小化的发行版旨在使事情变得简单，更新时使用滚动发布模型。它具有一个定制的软件包管理器称为“Pacman”，这使得它易于编译、修改和共享软件包。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB34.png)\n\n \n### Tiny Core\nTiny Core Linux是一个非常轻便的，模块化的发行版，特别要指出的是其小尺寸（目前有15MB）。它基于Linux内核，并且使用了BusyBox和FLTK（快速、轻便的工具包）。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB35.png)\n\n \n### Bodhi \n这个基于Ubuntu的Bodhi Linux发行版具有轻量级而且漂亮的Enlightenment桌面。Bodhi尤其具有可定制性，可以使用主题和应用程序扩展开始的轻量级桌面环境。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB36.png)\n\n\n---\n## 视频游戏\n### Steam OS\nLinux上的游戏变得越来越受欢迎，虽然你可以在Ubuntu上轻松的安装Steam数字版下载服务，但你可能更喜欢一步到位安装Steam OS。这是一个以游戏为中心的发行版，针对游戏性能进行了优化，内置了专有的图形和声音驱动程序，以及Steam客户端。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB37.png)\n\nSteam OS是Steam 机器使用的发行版，所以如果你正安装自己的系统，你肯定想使用这个版本。\n\n\n### Ubuntu Game Pack\n能让你玩差不多6000种游戏，Ubuntu游戏包配有内置Steam，以及PlayOnLinux和Windows游戏模拟器。这个游戏包基于Ubuntu 14.04，如果你只想安装新操作系统并且想马上开始游戏，那么这是一个绝佳的选择！\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB38.png)\n\n\n### Play Linux\nPlay Linux基于Ubuntu 15.10，是一个优化的发行版，由于自动GPU安装程序工具可以使你的Linux当作游戏机来使用。这基本上简化了安装合适的显卡驱动程序的问题，满足你只玩游戏的需求。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB39.png)\n\n\n### SparkyLinux – Game Over Edition\n各种版本的SparkyLinux都是可选用的，但拥有游戏为中心的这个版本可能是最有用的。配备LXDE桌面和大量的预装游戏，而且你还会发现Steam，PlayOnLinux和预装的windows游戏模拟器。这是一个免费且又高端的巨大的游戏库！\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB40.png)\n\n---\n## 安全和恢复\n### Kali Linux\nKali Linux以前被称为BackTrack，是一个渗透测试发行版，被广泛应用于在线安全社区。这种基于Debian的Linux发行版可以轻松地执行数字取证任务。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB41.png)\n\n\n### Parted Magic\nParted Magic本质上是一个磁盘管理工具，作为硬盘分区和复制的主要工具，它还能轻松完成数据恢复和安全清理。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB042.png)\n \n### GParted\nGParted是一个用途单一的发行版，旨在使用图形界面对硬盘驱动器变的更加轻松。 众多发行版中的标准版本将被Linux用户熟知。这个版本是一个独立的专用操作系统，然而，它准备作为一张自启动光盘运行。你需要执行一些磁盘管理而不引导到您的计算机的操作系统么？那么就使用GParted吧。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB43.png)\n\n\n### TAILS\nTAILS是一个完全围绕隐私和安全概念的发行版。它是一个实时操作系统，您可以移植从DVD，USB棒或SD卡中，这样你就可以在任何的计算机上安全的使用，并使用完成后不会被行为追踪。为了最好的匿名性，所有的互联网连接都通过TOR（The Onion Router）路由，并且加密工具全程保护您的通信方法不会被窥视。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB44.png)\n\n\n---\n## 商业版本 \n### Red Hat Enterprise Linux\n红帽企业版Linux是Fedora的商业衍生产品，专为企业客户设计。 它提供诸多变体、插件以及认证可供管理员和应用程序使用。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB45.png)\n\n\n### SUSE Linux Enterprise\nSUSE Linux Enterprise桌面版专为企业使用而设计，它是可供企业安装使用的，这使其易于使用各种办公程序。 它具有足够的灵活性，可以在各种设备上运行，但对于极为关键的进程来说是足够可靠的。 同时还提供SUSE Linux Enterprise Server版本。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB46.png)\n\n\n---\n","slug":"文章阅读-2016-11-07-Linux-发行版汇总","published":1,"updated":"2016-11-13T03:36:30.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civi8oujb00252c6n1fhpc6ht","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><h3 id=\"本文是在开源中国看到的，觉得还不错，说的很详细，特地摘录下来。\"><a href=\"#本文是在开源中国看到的，觉得还不错，说的很详细，特地摘录下来。\" class=\"headerlink\" title=\"本文是在开源中国看到的，觉得还不错，说的很详细，特地摘录下来。\"></a>本文是在开源中国看到的，觉得还不错，说的很详细，特地摘录下来。</h3><hr>\n<h2 id=\"Linux入门\"><a href=\"#Linux入门\" class=\"headerlink\" title=\"Linux入门\"></a>Linux入门</h2><h3 id=\"Ubuntu\"><a href=\"#Ubuntu\" class=\"headerlink\" title=\"Ubuntu\"></a>Ubuntu</h3><p>Ubuntu是一款基于Debian发行版，以Unity作为默认桌面环境的Linux操作系统。他是世界上最流行的发行版之一，每次发行，它都有提升。最新发行版为桌面、移动及其桌面移动混合版的优化。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB01.png\" alt=\"\"></p>\n<p>现在依然有Ubuntu移动平台，它专用于一些合作的智能手机及少数致力于Ubuntu触屏手持设备。较新的设备集成了汇集软件（Convergence software），使你可以通过无线HDMI连接器将你的智能手机转到PC上。</p>\n<h3 id=\"Kubuntu\"><a href=\"#Kubuntu\" class=\"headerlink\" title=\"Kubuntu\"></a>Kubuntu</h3><p>Kubuntu是Ubuntu的衍生版，使用KDE而不是Unity作为默认桌面环境. 在此情况下，Kubuntu与Ubuntu大同小异，其发行时间也与Ubuntu保持一致。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB02.png\" alt=\"\"></p>\n<h3 id=\"Mint\"><a href=\"#Mint\" class=\"headerlink\" title=\"Mint\"></a>Mint</h3><p>Mint是优雅、现代Linux发行版，它易于使用且功能强大。它基于Ubuntu开发，可靠而安全，是最好用的管理软件之一。最近，它又成为了最为流行的Linux发行版之一，声称为Windows及Mac OS后最为流行的家用操作系统。</p>\n<p><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB03.png\" alt=\"\"></p>\n<p>Mint有着丰富的桌面选项，默认为Cinnamon桌面, 你还可以使用MATE, KDE或Xfce.。Mint的Debian版也可用，定位为有经验的Linux用户。</p>\n<h3 id=\"Deepin\"><a href=\"#Deepin\" class=\"headerlink\" title=\"Deepin\"></a>Deepin</h3><p>Deepin 是一个基于 Ubuntu 的发行版，它带有时尚美观的深度桌面环境(Deepin Desktop Environment，DDE), 旨在吸引新的 Linux 用户。它的界面简单直观，系统设置面板的是所有发行版中最好看的一个。 DMusic, DPlayer 和 DTalk 是其专有的应用程序。</p>\n<p>有许多的基于 Ubuntu 的衍生版本都在视图用它们自己的方式来解决一些问题，而其中特别受关注的一个就是 Deepin。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB04.png\" alt=\"\"></p>\n<p>Deepin 还具备易于使用的软件中心，远胜于其它具备类似功能的发行版。</p>\n<h3 id=\"PCLinuxOS\"><a href=\"#PCLinuxOS\" class=\"headerlink\" title=\"PCLinuxOS\"></a>PCLinuxOS</h3><p>PCLinuxOS 是专为普通 PC 用户设计的，它默认使用的是 KDE Plasma 桌面。这个发行版在安装驱动，获取办公软件，编辑照片，上网以及使用多媒体等操作上使用非常方便，还能快速创建快照备份。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB05.png\" alt=\"\"></p>\n<h3 id=\"Linux-Lite\"><a href=\"#Linux-Lite\" class=\"headerlink\" title=\"Linux Lite\"></a>Linux Lite</h3><p>基于 Ubuntu LTS 发行版, Linux Lite 是一个最小化的省空间型发行版, 它拥有一个干净简单的 Xfce 桌面，而且是 Windows 风格的。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB06.png\" alt=\"\"></p>\n<p>Linux Lite 的目标是将 Windows 用户引向 Linux。它对资源的节省意味这你可以在一台  CPU 只有 700Mhz 而且内存只有 512M 的 PC 上安装它。这就是我们所说的轻便（light）!</p>\n<h3 id=\"Zorin-OS\"><a href=\"#Zorin-OS\" class=\"headerlink\" title=\"Zorin OS\"></a>Zorin OS</h3><p>Zorin OS 是专门为 Linux 新手设计的，便于人们从Windows 向 Linux 过渡。它拥有 Windows 用户比较熟悉的基于 Ubuntu 发行版的功能以及应用，也能让用户方便的使用他们仍然需要的 Windows 应用。Zorin OS 9 看起来很像 Windows 7，这样做只是单纯为了赢得一些从 Windows 到 Linux 的转化。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB07.png\" alt=\"\"></p>\n<hr>\n<h2 id=\"震撼的视觉\"><a href=\"#震撼的视觉\" class=\"headerlink\" title=\"震撼的视觉\"></a>震撼的视觉</h2><h3 id=\"Elementary-OS\"><a href=\"#Elementary-OS\" class=\"headerlink\" title=\"Elementary OS\"></a>Elementary OS</h3><p>另外一个基于 Ubuntu 的发行版 Elementary OS ，自从其 Elementary OS Luna 版本发行依赖，已经拥有了属于它自己的不通表现。它拥有漂亮简介的默认应用，它们遵循这操作系统的美感诉求，例如电子邮件程序 Geary，网页浏览器 Midori, 日历程序 Maya, 电影播放器 Totem , 以及音乐播放器 Noise。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB08.png\" alt=\"\"></p>\n<h3 id=\"Apricity-OS\"><a href=\"#Apricity-OS\" class=\"headerlink\" title=\"Apricity OS\"></a>Apricity OS</h3><p>为了“最性感的 Linux 发行版”这个非正式的头衔而向 Elementary OS 发起挑战，就是 Apricity, 它采取了一种类似的方法。没有采用 Windows 式样的 Cinnamon 和 MATE 风格, Apricity 提供了一个令人惊叹的桌面换进，比起微软的那一套，它更能让人联想其 Android或者 iOS。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB09.png\" alt=\"\"></p>\n<hr>\n<h2 id=\"普通版\"><a href=\"#普通版\" class=\"headerlink\" title=\"普通版\"></a>普通版</h2><h3 id=\"OpenSUSE\"><a href=\"#OpenSUSE\" class=\"headerlink\" title=\"OpenSUSE\"></a>OpenSUSE</h3><p>OpenSUSE 发行版是 Linux 的一个普通发行版，由 OpenSUSE 项目构建，目标是在成为一个不错面向新手的发行版的同时，也能满足有经验的 Linux 用户的需求。OpenSUSE 附带有 YAST, 它是一个管理员程序，能对安装，包管理以及其它一些东西进行控制。</p>\n<p><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB10.png\" alt=\"\"></p>\n<h3 id=\"Fedora\"><a href=\"#Fedora\" class=\"headerlink\" title=\"Fedora\"></a>Fedora</h3><p>Fedora 默认使用 GNOME 桌面环境，但是用户可以轻松的将其切换到 KDE， XFce， MATE 以及 Cinnamon。Fedora 的自定义变体, 被称作 Fedora 扩展，它们能满足用户的一些特殊需求。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB11.png\" alt=\"\"></p>\n<h3 id=\"Debian\"><a href=\"#Debian\" class=\"headerlink\" title=\"Debian\"></a>Debian</h3><p>Debian 是一个比较老的 Linux 发行版，是跟着 GNOME 桌面环境一起出现的。不过，这个桌面环境也能用于 FreeBSD，并且对于其它内核的支持工作也在进行中， 比如Hurd。 Debian 以其预装的超过 37500 的程序包为荣，并且带有简单的功能使得其能轻松的获取到更多的包。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB12.png\" alt=\"\"></p>\n<h3 id=\"Korora\"><a href=\"#Korora\" class=\"headerlink\" title=\"Korora\"></a>Korora</h3><p>Korora 最初基于 Gentoo Linux，并且投身于让 Linux 对新手来说使用起来更轻松，但同时能让专家使用起来感到实用。它在桌面环境方面由多种选择，包括 Cinnamon, GNOME, KDE, MATE 以及 Xfce 桌面。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB13.png\" alt=\"\"></p>\n<h3 id=\"Slackware-Linux\"><a href=\"#Slackware-Linux\" class=\"headerlink\" title=\"Slackware Linux\"></a>Slackware Linux</h3><p>Slackware 是专注于安全和简单得发行版, 旨在成为最像 Unix 的 Linux 发行版。它在服务器管理方面特别有用，因为它拥有 FTP， email 以及 web 服务器，能立即投入使用。</p>\n<p><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB14.png\" alt=\"\"></p>\n<h3 id=\"Mageia\"><a href=\"#Mageia\" class=\"headerlink\" title=\"Mageia\"></a>Mageia</h3><p>Mageia起初是一个由社区驱动的，非营利的法国Mandriva Linux分支，它包括了所有主要的桌面环境，它主要使用KDE和GNOME作为其默认桌面。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB15.png\" alt=\"\"></p>\n<h3 id=\"SparkyLinux\"><a href=\"#SparkyLinux\" class=\"headerlink\" title=\"SparkyLinux\"></a>SparkyLinux</h3><p>SparkyLinux发行版是从Debian的“测试”分支演变而来的。主版本配备了定制版的轻量级的LXDE桌面，同时还可以使用其它一些定制桌面。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB16.png\" alt=\"\"></p>\n<h3 id=\"Gentoo-Linux\"><a href=\"#Gentoo-Linux\" class=\"headerlink\" title=\"Gentoo Linux\"></a>Gentoo Linux</h3><p>Gentoo Linux几乎可以满足你任何的需求。它的通用性和优异的性能正是它区别于其他发行版的。Gentoo Linux还配备了先进的软件包管理系统，称为Portage。</p>\n<p><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB17.png\" alt=\"\"></p>\n<h3 id=\"CentOS\"><a href=\"#CentOS\" class=\"headerlink\" title=\"CentOS\"></a>CentOS</h3><p>CentOS（社区企业操作系统）是一个由社区重建的Red Hat企业版Linux。它是专为那些想免费使用一个企业标准发行版的人而设计的。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB18.png\" alt=\"\"></p>\n<h3 id=\"PinGuy-OS\"><a href=\"#PinGuy-OS\" class=\"headerlink\" title=\"PinGuy OS\"></a>PinGuy OS</h3><p>PinGuyOS很漂亮，从一开始我就想使用它。这个基于Ubuntu的发行版预装了所有常用的以及用于网络设置的最好软件，这使得它非常适合初学者。它具有一个修改过的GNOME用户界面。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB19.png\" alt=\"\"></p>\n<hr>\n<h2 id=\"多媒体创作\"><a href=\"#多媒体创作\" class=\"headerlink\" title=\"多媒体创作\"></a>多媒体创作</h2><h3 id=\"Fedora设计套件\"><a href=\"#Fedora设计套件\" class=\"headerlink\" title=\"Fedora设计套件\"></a>Fedora设计套件</h3><p>如果要节省时间，向Fedora中安装一些艺术工具和程序的话，你只需要安装来自Fedora艺术设计团队的spin版本。它重点关注的是绘画和桌面出版，你可以找到其中预安装的 Inkscape和GIMP等工具，还有其它很多的工具。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB20.png\" alt=\"\"></p>\n<h3 id=\"Ubuntu-Studio\"><a href=\"#Ubuntu-Studio\" class=\"headerlink\" title=\"Ubuntu Studio\"></a>Ubuntu Studio</h3><p>Ubuntu Studio于2007年首次发布，它可能是那些具有创意天分的Linux用户的默认选择。有了XFCE桌面环境和低内核延迟，一切都是面向媒体制作。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB21.png\" alt=\"\"></p>\n<h3 id=\"KXStudio\"><a href=\"#KXStudio\" class=\"headerlink\" title=\"KXStudio\"></a>KXStudio</h3><p>这里列举的所有用于创作的发行版都提供了优秀的工具集，然而KXStudio却不同，它侧重于音频制作。当你沉浸在KDE桌面中时，你就拥有了一个性能相当出色的数字工作室。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB22.png\" alt=\"\"></p>\n<h3 id=\"ArtistX\"><a href=\"#ArtistX\" class=\"headerlink\" title=\"ArtistX\"></a>ArtistX</h3><p>ArtistX专门面向所有类型的艺术家，从音乐到图形设计。它基于Ubuntu，并且预装了所有最好的2D和3D图形设计、视频制作，和GNU / Linux音频制作软件。</p>\n<p><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB23.png\" alt=\"\"></p>\n<h3 id=\"Iro\"><a href=\"#Iro\" class=\"headerlink\" title=\"Iro\"></a>Iro</h3><p>如果动画、3D建模、合成、数字绘画和图像编辑是您首选的多媒体技术，你就需要Iro。没有大量的工具库（例如，像Ubuntu Studio）满足每个人的需要，而是提供了一组专门的应用程序。它们被集成在精简的用户界面中，如果你有一个发行版，就可以安装并开始工作，一点也不麻烦。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB24.png\" alt=\"\"></p>\n<hr>\n<h2 id=\"教育\"><a href=\"#教育\" class=\"headerlink\" title=\"教育\"></a>教育</h2><h3 id=\"DouDou\"><a href=\"#DouDou\" class=\"headerlink\" title=\"DouDou\"></a>DouDou</h3><p>DouDou Linux是为小孩子设计的，其目的是教他们如何探索计算机并使用计算机学习。它提供了一些适合2-12岁孩子玩的游戏和教育节目，它是一个安全的环境，家长不必整天看着。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB25.png\" alt=\"\"></p>\n<h3 id=\"Edubuntu\"><a href=\"#Edubuntu\" class=\"headerlink\" title=\"Edubuntu\"></a>Edubuntu</h3><p>Edubuntu被开发成了一个（感谢Ubuntu给予的合作）尽可能方便教师设置的版本，并且可以供所有年龄的儿童使用。它预装了所有最好的免费教育软件。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB26.png\" alt=\"\"></p>\n<h3 id=\"Uberstudent\"><a href=\"#Uberstudent\" class=\"headerlink\" title=\"Uberstudent\"></a>Uberstudent</h3><p>Uberstudent是专门为大专院校和高级中学的学生而设计的。它预装的软件可以使做作业和管理任务变得更加容易。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB27.png\" alt=\"\"></p>\n<hr>\n<h2 id=\"树莓派发行\"><a href=\"#树莓派发行\" class=\"headerlink\" title=\"树莓派发行\"></a>树莓派发行</h2><h3 id=\"Raspbian-Jessie\"><a href=\"#Raspbian-Jessie\" class=\"headerlink\" title=\"Raspbian Jessie\"></a>Raspbian Jessie</h3><p>流行的Raspberry Pi默认的操作系统是Raspbian Jessie，由树莓派基金会内部生产，它基于Debian。这款ARM发行版配备了大量编程工具，如Scratch，旨在帮助新手学习编程。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB28.png\" alt=\"\"></p>\n<h3 id=\"Kano-OS\"><a href=\"#Kano-OS\" class=\"headerlink\" title=\"Kano OS\"></a>Kano OS</h3><p>和Raspbian类似的操作系统是Kano OS，它也是基于Debian，但更多地是侧重编程，不过这次针对的是儿童。它在一个更直观的用户界面中提供了儿童进行编程需要的所有工具，目的是让他们尽量少点麻烦。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB29.png\" alt=\"\"></p>\n<hr>\n<h2 id=\"轻量级-小型化\"><a href=\"#轻量级-小型化\" class=\"headerlink\" title=\"轻量级/小型化\"></a>轻量级/小型化</h2><h3 id=\"Lubuntu\"><a href=\"#Lubuntu\" class=\"headerlink\" title=\"Lubuntu\"></a>Lubuntu</h3><p>Lubuntu 是一个基于 Ubuntu 的轻量级发行版，非常适合在笔记本电脑上使用。它使用的是小型化的 LXDE（轻量级 X11桌面环境 Lightweight X11 Desktop Environment)，附带拥有一些针对能效和速度方面进行过优化设计的轻量级应用程序。因为它对 RAM 和 系统资源需求不高，因此非常适合那些古老的计算机、网络以及移动设备。</p>\n<p><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB30.png\" alt=\"\"></p>\n<h3 id=\"Xubuntu\"><a href=\"#Xubuntu\" class=\"headerlink\" title=\"Xubuntu\"></a>Xubuntu</h3><p>Xubuntu 是 Ubuntu 的一个衍生版本，使用 Xfce (XForms Common Environment) 桌面环境，因此它是优雅和轻量级的。它非常适合于笔记本和上网本，当然还有台式机。它比较轻巧，对系统资源的耗费不多，因此在比较古老的计算机上使用是比较理想的。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB31.png\" alt=\"\"></p>\n<h3 id=\"Puppy-Linux\"><a href=\"#Puppy-Linux\" class=\"headerlink\" title=\"Puppy Linux\"></a>Puppy Linux</h3><p>Puppy Linux 是一个非常小巧的发行版，它可以整个放到 RAM 上面运行。因此 Puppy Linux 非常适合比较古老的计算机，即时计算机没有安装硬盘驱动器也是可以的! 它在删除恶意软件方面使用起来也比较轻松。</p>\n<p><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB32.png\" alt=\"\"></p>\n<h3 id=\"Manjaro-Linux\"><a href=\"#Manjaro-Linux\" class=\"headerlink\" title=\"Manjaro Linux\"></a>Manjaro Linux</h3><p>Manjaro Linux 基于 Arch Linux， 它是一个运行快速，容易使用，轻量级的发行版。它的目标是 Arch Linux 的好处都能提供，此外对用户更加友好和易于使用，使得新手能轻松上手。它默认使用的是 Xfce 桌面，不过也可以选择其它的桌面环境。</p>\n<p><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB33.png\" alt=\"\"></p>\n<h3 id=\"Arch-Linux\"><a href=\"#Arch-Linux\" class=\"headerlink\" title=\"Arch Linux\"></a>Arch Linux</h3><p>Arch Linux是一个为经验丰富的用户而设计的发行版。这个轻量级的最小化的发行版旨在使事情变得简单，更新时使用滚动发布模型。它具有一个定制的软件包管理器称为“Pacman”，这使得它易于编译、修改和共享软件包。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB34.png\" alt=\"\"></p>\n<h3 id=\"Tiny-Core\"><a href=\"#Tiny-Core\" class=\"headerlink\" title=\"Tiny Core\"></a>Tiny Core</h3><p>Tiny Core Linux是一个非常轻便的，模块化的发行版，特别要指出的是其小尺寸（目前有15MB）。它基于Linux内核，并且使用了BusyBox和FLTK（快速、轻便的工具包）。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB35.png\" alt=\"\"></p>\n<h3 id=\"Bodhi\"><a href=\"#Bodhi\" class=\"headerlink\" title=\"Bodhi\"></a>Bodhi</h3><p>这个基于Ubuntu的Bodhi Linux发行版具有轻量级而且漂亮的Enlightenment桌面。Bodhi尤其具有可定制性，可以使用主题和应用程序扩展开始的轻量级桌面环境。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB36.png\" alt=\"\"></p>\n<hr>\n<h2 id=\"视频游戏\"><a href=\"#视频游戏\" class=\"headerlink\" title=\"视频游戏\"></a>视频游戏</h2><h3 id=\"Steam-OS\"><a href=\"#Steam-OS\" class=\"headerlink\" title=\"Steam OS\"></a>Steam OS</h3><p>Linux上的游戏变得越来越受欢迎，虽然你可以在Ubuntu上轻松的安装Steam数字版下载服务，但你可能更喜欢一步到位安装Steam OS。这是一个以游戏为中心的发行版，针对游戏性能进行了优化，内置了专有的图形和声音驱动程序，以及Steam客户端。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB37.png\" alt=\"\"></p>\n<p>Steam OS是Steam 机器使用的发行版，所以如果你正安装自己的系统，你肯定想使用这个版本。</p>\n<h3 id=\"Ubuntu-Game-Pack\"><a href=\"#Ubuntu-Game-Pack\" class=\"headerlink\" title=\"Ubuntu Game Pack\"></a>Ubuntu Game Pack</h3><p>能让你玩差不多6000种游戏，Ubuntu游戏包配有内置Steam，以及PlayOnLinux和Windows游戏模拟器。这个游戏包基于Ubuntu 14.04，如果你只想安装新操作系统并且想马上开始游戏，那么这是一个绝佳的选择！<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB38.png\" alt=\"\"></p>\n<h3 id=\"Play-Linux\"><a href=\"#Play-Linux\" class=\"headerlink\" title=\"Play Linux\"></a>Play Linux</h3><p>Play Linux基于Ubuntu 15.10，是一个优化的发行版，由于自动GPU安装程序工具可以使你的Linux当作游戏机来使用。这基本上简化了安装合适的显卡驱动程序的问题，满足你只玩游戏的需求。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB39.png\" alt=\"\"></p>\n<h3 id=\"SparkyLinux-–-Game-Over-Edition\"><a href=\"#SparkyLinux-–-Game-Over-Edition\" class=\"headerlink\" title=\"SparkyLinux – Game Over Edition\"></a>SparkyLinux – Game Over Edition</h3><p>各种版本的SparkyLinux都是可选用的，但拥有游戏为中心的这个版本可能是最有用的。配备LXDE桌面和大量的预装游戏，而且你还会发现Steam，PlayOnLinux和预装的windows游戏模拟器。这是一个免费且又高端的巨大的游戏库！<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB40.png\" alt=\"\"></p>\n<hr>\n<h2 id=\"安全和恢复\"><a href=\"#安全和恢复\" class=\"headerlink\" title=\"安全和恢复\"></a>安全和恢复</h2><h3 id=\"Kali-Linux\"><a href=\"#Kali-Linux\" class=\"headerlink\" title=\"Kali Linux\"></a>Kali Linux</h3><p>Kali Linux以前被称为BackTrack，是一个渗透测试发行版，被广泛应用于在线安全社区。这种基于Debian的Linux发行版可以轻松地执行数字取证任务。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB41.png\" alt=\"\"></p>\n<h3 id=\"Parted-Magic\"><a href=\"#Parted-Magic\" class=\"headerlink\" title=\"Parted Magic\"></a>Parted Magic</h3><p>Parted Magic本质上是一个磁盘管理工具，作为硬盘分区和复制的主要工具，它还能轻松完成数据恢复和安全清理。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB042.png\" alt=\"\"></p>\n<h3 id=\"GParted\"><a href=\"#GParted\" class=\"headerlink\" title=\"GParted\"></a>GParted</h3><p>GParted是一个用途单一的发行版，旨在使用图形界面对硬盘驱动器变的更加轻松。 众多发行版中的标准版本将被Linux用户熟知。这个版本是一个独立的专用操作系统，然而，它准备作为一张自启动光盘运行。你需要执行一些磁盘管理而不引导到您的计算机的操作系统么？那么就使用GParted吧。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB43.png\" alt=\"\"></p>\n<h3 id=\"TAILS\"><a href=\"#TAILS\" class=\"headerlink\" title=\"TAILS\"></a>TAILS</h3><p>TAILS是一个完全围绕隐私和安全概念的发行版。它是一个实时操作系统，您可以移植从DVD，USB棒或SD卡中，这样你就可以在任何的计算机上安全的使用，并使用完成后不会被行为追踪。为了最好的匿名性，所有的互联网连接都通过TOR（The Onion Router）路由，并且加密工具全程保护您的通信方法不会被窥视。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB44.png\" alt=\"\"></p>\n<hr>\n<h2 id=\"商业版本\"><a href=\"#商业版本\" class=\"headerlink\" title=\"商业版本\"></a>商业版本</h2><h3 id=\"Red-Hat-Enterprise-Linux\"><a href=\"#Red-Hat-Enterprise-Linux\" class=\"headerlink\" title=\"Red Hat Enterprise Linux\"></a>Red Hat Enterprise Linux</h3><p>红帽企业版Linux是Fedora的商业衍生产品，专为企业客户设计。 它提供诸多变体、插件以及认证可供管理员和应用程序使用。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB45.png\" alt=\"\"></p>\n<h3 id=\"SUSE-Linux-Enterprise\"><a href=\"#SUSE-Linux-Enterprise\" class=\"headerlink\" title=\"SUSE Linux Enterprise\"></a>SUSE Linux Enterprise</h3><p>SUSE Linux Enterprise桌面版专为企业使用而设计，它是可供企业安装使用的，这使其易于使用各种办公程序。 它具有足够的灵活性，可以在各种设备上运行，但对于极为关键的进程来说是足够可靠的。 同时还提供SUSE Linux Enterprise Server版本。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB46.png\" alt=\"\"></p>\n<hr>\n","excerpt":"","more":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><h3 id=\"本文是在开源中国看到的，觉得还不错，说的很详细，特地摘录下来。\"><a href=\"#本文是在开源中国看到的，觉得还不错，说的很详细，特地摘录下来。\" class=\"headerlink\" title=\"本文是在开源中国看到的，觉得还不错，说的很详细，特地摘录下来。\"></a>本文是在开源中国看到的，觉得还不错，说的很详细，特地摘录下来。</h3><hr>\n<h2 id=\"Linux入门\"><a href=\"#Linux入门\" class=\"headerlink\" title=\"Linux入门\"></a>Linux入门</h2><h3 id=\"Ubuntu\"><a href=\"#Ubuntu\" class=\"headerlink\" title=\"Ubuntu\"></a>Ubuntu</h3><p>Ubuntu是一款基于Debian发行版，以Unity作为默认桌面环境的Linux操作系统。他是世界上最流行的发行版之一，每次发行，它都有提升。最新发行版为桌面、移动及其桌面移动混合版的优化。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB01.png\" alt=\"\"></p>\n<p>现在依然有Ubuntu移动平台，它专用于一些合作的智能手机及少数致力于Ubuntu触屏手持设备。较新的设备集成了汇集软件（Convergence software），使你可以通过无线HDMI连接器将你的智能手机转到PC上。</p>\n<h3 id=\"Kubuntu\"><a href=\"#Kubuntu\" class=\"headerlink\" title=\"Kubuntu\"></a>Kubuntu</h3><p>Kubuntu是Ubuntu的衍生版，使用KDE而不是Unity作为默认桌面环境. 在此情况下，Kubuntu与Ubuntu大同小异，其发行时间也与Ubuntu保持一致。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB02.png\" alt=\"\"></p>\n<h3 id=\"Mint\"><a href=\"#Mint\" class=\"headerlink\" title=\"Mint\"></a>Mint</h3><p>Mint是优雅、现代Linux发行版，它易于使用且功能强大。它基于Ubuntu开发，可靠而安全，是最好用的管理软件之一。最近，它又成为了最为流行的Linux发行版之一，声称为Windows及Mac OS后最为流行的家用操作系统。</p>\n<p><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB03.png\" alt=\"\"></p>\n<p>Mint有着丰富的桌面选项，默认为Cinnamon桌面, 你还可以使用MATE, KDE或Xfce.。Mint的Debian版也可用，定位为有经验的Linux用户。</p>\n<h3 id=\"Deepin\"><a href=\"#Deepin\" class=\"headerlink\" title=\"Deepin\"></a>Deepin</h3><p>Deepin 是一个基于 Ubuntu 的发行版，它带有时尚美观的深度桌面环境(Deepin Desktop Environment，DDE), 旨在吸引新的 Linux 用户。它的界面简单直观，系统设置面板的是所有发行版中最好看的一个。 DMusic, DPlayer 和 DTalk 是其专有的应用程序。</p>\n<p>有许多的基于 Ubuntu 的衍生版本都在视图用它们自己的方式来解决一些问题，而其中特别受关注的一个就是 Deepin。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB04.png\" alt=\"\"></p>\n<p>Deepin 还具备易于使用的软件中心，远胜于其它具备类似功能的发行版。</p>\n<h3 id=\"PCLinuxOS\"><a href=\"#PCLinuxOS\" class=\"headerlink\" title=\"PCLinuxOS\"></a>PCLinuxOS</h3><p>PCLinuxOS 是专为普通 PC 用户设计的，它默认使用的是 KDE Plasma 桌面。这个发行版在安装驱动，获取办公软件，编辑照片，上网以及使用多媒体等操作上使用非常方便，还能快速创建快照备份。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB05.png\" alt=\"\"></p>\n<h3 id=\"Linux-Lite\"><a href=\"#Linux-Lite\" class=\"headerlink\" title=\"Linux Lite\"></a>Linux Lite</h3><p>基于 Ubuntu LTS 发行版, Linux Lite 是一个最小化的省空间型发行版, 它拥有一个干净简单的 Xfce 桌面，而且是 Windows 风格的。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB06.png\" alt=\"\"></p>\n<p>Linux Lite 的目标是将 Windows 用户引向 Linux。它对资源的节省意味这你可以在一台  CPU 只有 700Mhz 而且内存只有 512M 的 PC 上安装它。这就是我们所说的轻便（light）!</p>\n<h3 id=\"Zorin-OS\"><a href=\"#Zorin-OS\" class=\"headerlink\" title=\"Zorin OS\"></a>Zorin OS</h3><p>Zorin OS 是专门为 Linux 新手设计的，便于人们从Windows 向 Linux 过渡。它拥有 Windows 用户比较熟悉的基于 Ubuntu 发行版的功能以及应用，也能让用户方便的使用他们仍然需要的 Windows 应用。Zorin OS 9 看起来很像 Windows 7，这样做只是单纯为了赢得一些从 Windows 到 Linux 的转化。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB07.png\" alt=\"\"></p>\n<hr>\n<h2 id=\"震撼的视觉\"><a href=\"#震撼的视觉\" class=\"headerlink\" title=\"震撼的视觉\"></a>震撼的视觉</h2><h3 id=\"Elementary-OS\"><a href=\"#Elementary-OS\" class=\"headerlink\" title=\"Elementary OS\"></a>Elementary OS</h3><p>另外一个基于 Ubuntu 的发行版 Elementary OS ，自从其 Elementary OS Luna 版本发行依赖，已经拥有了属于它自己的不通表现。它拥有漂亮简介的默认应用，它们遵循这操作系统的美感诉求，例如电子邮件程序 Geary，网页浏览器 Midori, 日历程序 Maya, 电影播放器 Totem , 以及音乐播放器 Noise。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB08.png\" alt=\"\"></p>\n<h3 id=\"Apricity-OS\"><a href=\"#Apricity-OS\" class=\"headerlink\" title=\"Apricity OS\"></a>Apricity OS</h3><p>为了“最性感的 Linux 发行版”这个非正式的头衔而向 Elementary OS 发起挑战，就是 Apricity, 它采取了一种类似的方法。没有采用 Windows 式样的 Cinnamon 和 MATE 风格, Apricity 提供了一个令人惊叹的桌面换进，比起微软的那一套，它更能让人联想其 Android或者 iOS。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB09.png\" alt=\"\"></p>\n<hr>\n<h2 id=\"普通版\"><a href=\"#普通版\" class=\"headerlink\" title=\"普通版\"></a>普通版</h2><h3 id=\"OpenSUSE\"><a href=\"#OpenSUSE\" class=\"headerlink\" title=\"OpenSUSE\"></a>OpenSUSE</h3><p>OpenSUSE 发行版是 Linux 的一个普通发行版，由 OpenSUSE 项目构建，目标是在成为一个不错面向新手的发行版的同时，也能满足有经验的 Linux 用户的需求。OpenSUSE 附带有 YAST, 它是一个管理员程序，能对安装，包管理以及其它一些东西进行控制。</p>\n<p><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB10.png\" alt=\"\"></p>\n<h3 id=\"Fedora\"><a href=\"#Fedora\" class=\"headerlink\" title=\"Fedora\"></a>Fedora</h3><p>Fedora 默认使用 GNOME 桌面环境，但是用户可以轻松的将其切换到 KDE， XFce， MATE 以及 Cinnamon。Fedora 的自定义变体, 被称作 Fedora 扩展，它们能满足用户的一些特殊需求。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB11.png\" alt=\"\"></p>\n<h3 id=\"Debian\"><a href=\"#Debian\" class=\"headerlink\" title=\"Debian\"></a>Debian</h3><p>Debian 是一个比较老的 Linux 发行版，是跟着 GNOME 桌面环境一起出现的。不过，这个桌面环境也能用于 FreeBSD，并且对于其它内核的支持工作也在进行中， 比如Hurd。 Debian 以其预装的超过 37500 的程序包为荣，并且带有简单的功能使得其能轻松的获取到更多的包。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB12.png\" alt=\"\"></p>\n<h3 id=\"Korora\"><a href=\"#Korora\" class=\"headerlink\" title=\"Korora\"></a>Korora</h3><p>Korora 最初基于 Gentoo Linux，并且投身于让 Linux 对新手来说使用起来更轻松，但同时能让专家使用起来感到实用。它在桌面环境方面由多种选择，包括 Cinnamon, GNOME, KDE, MATE 以及 Xfce 桌面。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB13.png\" alt=\"\"></p>\n<h3 id=\"Slackware-Linux\"><a href=\"#Slackware-Linux\" class=\"headerlink\" title=\"Slackware Linux\"></a>Slackware Linux</h3><p>Slackware 是专注于安全和简单得发行版, 旨在成为最像 Unix 的 Linux 发行版。它在服务器管理方面特别有用，因为它拥有 FTP， email 以及 web 服务器，能立即投入使用。</p>\n<p><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB14.png\" alt=\"\"></p>\n<h3 id=\"Mageia\"><a href=\"#Mageia\" class=\"headerlink\" title=\"Mageia\"></a>Mageia</h3><p>Mageia起初是一个由社区驱动的，非营利的法国Mandriva Linux分支，它包括了所有主要的桌面环境，它主要使用KDE和GNOME作为其默认桌面。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB15.png\" alt=\"\"></p>\n<h3 id=\"SparkyLinux\"><a href=\"#SparkyLinux\" class=\"headerlink\" title=\"SparkyLinux\"></a>SparkyLinux</h3><p>SparkyLinux发行版是从Debian的“测试”分支演变而来的。主版本配备了定制版的轻量级的LXDE桌面，同时还可以使用其它一些定制桌面。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB16.png\" alt=\"\"></p>\n<h3 id=\"Gentoo-Linux\"><a href=\"#Gentoo-Linux\" class=\"headerlink\" title=\"Gentoo Linux\"></a>Gentoo Linux</h3><p>Gentoo Linux几乎可以满足你任何的需求。它的通用性和优异的性能正是它区别于其他发行版的。Gentoo Linux还配备了先进的软件包管理系统，称为Portage。</p>\n<p><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB17.png\" alt=\"\"></p>\n<h3 id=\"CentOS\"><a href=\"#CentOS\" class=\"headerlink\" title=\"CentOS\"></a>CentOS</h3><p>CentOS（社区企业操作系统）是一个由社区重建的Red Hat企业版Linux。它是专为那些想免费使用一个企业标准发行版的人而设计的。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB18.png\" alt=\"\"></p>\n<h3 id=\"PinGuy-OS\"><a href=\"#PinGuy-OS\" class=\"headerlink\" title=\"PinGuy OS\"></a>PinGuy OS</h3><p>PinGuyOS很漂亮，从一开始我就想使用它。这个基于Ubuntu的发行版预装了所有常用的以及用于网络设置的最好软件，这使得它非常适合初学者。它具有一个修改过的GNOME用户界面。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB19.png\" alt=\"\"></p>\n<hr>\n<h2 id=\"多媒体创作\"><a href=\"#多媒体创作\" class=\"headerlink\" title=\"多媒体创作\"></a>多媒体创作</h2><h3 id=\"Fedora设计套件\"><a href=\"#Fedora设计套件\" class=\"headerlink\" title=\"Fedora设计套件\"></a>Fedora设计套件</h3><p>如果要节省时间，向Fedora中安装一些艺术工具和程序的话，你只需要安装来自Fedora艺术设计团队的spin版本。它重点关注的是绘画和桌面出版，你可以找到其中预安装的 Inkscape和GIMP等工具，还有其它很多的工具。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB20.png\" alt=\"\"></p>\n<h3 id=\"Ubuntu-Studio\"><a href=\"#Ubuntu-Studio\" class=\"headerlink\" title=\"Ubuntu Studio\"></a>Ubuntu Studio</h3><p>Ubuntu Studio于2007年首次发布，它可能是那些具有创意天分的Linux用户的默认选择。有了XFCE桌面环境和低内核延迟，一切都是面向媒体制作。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB21.png\" alt=\"\"></p>\n<h3 id=\"KXStudio\"><a href=\"#KXStudio\" class=\"headerlink\" title=\"KXStudio\"></a>KXStudio</h3><p>这里列举的所有用于创作的发行版都提供了优秀的工具集，然而KXStudio却不同，它侧重于音频制作。当你沉浸在KDE桌面中时，你就拥有了一个性能相当出色的数字工作室。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB22.png\" alt=\"\"></p>\n<h3 id=\"ArtistX\"><a href=\"#ArtistX\" class=\"headerlink\" title=\"ArtistX\"></a>ArtistX</h3><p>ArtistX专门面向所有类型的艺术家，从音乐到图形设计。它基于Ubuntu，并且预装了所有最好的2D和3D图形设计、视频制作，和GNU / Linux音频制作软件。</p>\n<p><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB23.png\" alt=\"\"></p>\n<h3 id=\"Iro\"><a href=\"#Iro\" class=\"headerlink\" title=\"Iro\"></a>Iro</h3><p>如果动画、3D建模、合成、数字绘画和图像编辑是您首选的多媒体技术，你就需要Iro。没有大量的工具库（例如，像Ubuntu Studio）满足每个人的需要，而是提供了一组专门的应用程序。它们被集成在精简的用户界面中，如果你有一个发行版，就可以安装并开始工作，一点也不麻烦。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB24.png\" alt=\"\"></p>\n<hr>\n<h2 id=\"教育\"><a href=\"#教育\" class=\"headerlink\" title=\"教育\"></a>教育</h2><h3 id=\"DouDou\"><a href=\"#DouDou\" class=\"headerlink\" title=\"DouDou\"></a>DouDou</h3><p>DouDou Linux是为小孩子设计的，其目的是教他们如何探索计算机并使用计算机学习。它提供了一些适合2-12岁孩子玩的游戏和教育节目，它是一个安全的环境，家长不必整天看着。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB25.png\" alt=\"\"></p>\n<h3 id=\"Edubuntu\"><a href=\"#Edubuntu\" class=\"headerlink\" title=\"Edubuntu\"></a>Edubuntu</h3><p>Edubuntu被开发成了一个（感谢Ubuntu给予的合作）尽可能方便教师设置的版本，并且可以供所有年龄的儿童使用。它预装了所有最好的免费教育软件。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB26.png\" alt=\"\"></p>\n<h3 id=\"Uberstudent\"><a href=\"#Uberstudent\" class=\"headerlink\" title=\"Uberstudent\"></a>Uberstudent</h3><p>Uberstudent是专门为大专院校和高级中学的学生而设计的。它预装的软件可以使做作业和管理任务变得更加容易。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB27.png\" alt=\"\"></p>\n<hr>\n<h2 id=\"树莓派发行\"><a href=\"#树莓派发行\" class=\"headerlink\" title=\"树莓派发行\"></a>树莓派发行</h2><h3 id=\"Raspbian-Jessie\"><a href=\"#Raspbian-Jessie\" class=\"headerlink\" title=\"Raspbian Jessie\"></a>Raspbian Jessie</h3><p>流行的Raspberry Pi默认的操作系统是Raspbian Jessie，由树莓派基金会内部生产，它基于Debian。这款ARM发行版配备了大量编程工具，如Scratch，旨在帮助新手学习编程。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB28.png\" alt=\"\"></p>\n<h3 id=\"Kano-OS\"><a href=\"#Kano-OS\" class=\"headerlink\" title=\"Kano OS\"></a>Kano OS</h3><p>和Raspbian类似的操作系统是Kano OS，它也是基于Debian，但更多地是侧重编程，不过这次针对的是儿童。它在一个更直观的用户界面中提供了儿童进行编程需要的所有工具，目的是让他们尽量少点麻烦。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB29.png\" alt=\"\"></p>\n<hr>\n<h2 id=\"轻量级-小型化\"><a href=\"#轻量级-小型化\" class=\"headerlink\" title=\"轻量级/小型化\"></a>轻量级/小型化</h2><h3 id=\"Lubuntu\"><a href=\"#Lubuntu\" class=\"headerlink\" title=\"Lubuntu\"></a>Lubuntu</h3><p>Lubuntu 是一个基于 Ubuntu 的轻量级发行版，非常适合在笔记本电脑上使用。它使用的是小型化的 LXDE（轻量级 X11桌面环境 Lightweight X11 Desktop Environment)，附带拥有一些针对能效和速度方面进行过优化设计的轻量级应用程序。因为它对 RAM 和 系统资源需求不高，因此非常适合那些古老的计算机、网络以及移动设备。</p>\n<p><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB30.png\" alt=\"\"></p>\n<h3 id=\"Xubuntu\"><a href=\"#Xubuntu\" class=\"headerlink\" title=\"Xubuntu\"></a>Xubuntu</h3><p>Xubuntu 是 Ubuntu 的一个衍生版本，使用 Xfce (XForms Common Environment) 桌面环境，因此它是优雅和轻量级的。它非常适合于笔记本和上网本，当然还有台式机。它比较轻巧，对系统资源的耗费不多，因此在比较古老的计算机上使用是比较理想的。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB31.png\" alt=\"\"></p>\n<h3 id=\"Puppy-Linux\"><a href=\"#Puppy-Linux\" class=\"headerlink\" title=\"Puppy Linux\"></a>Puppy Linux</h3><p>Puppy Linux 是一个非常小巧的发行版，它可以整个放到 RAM 上面运行。因此 Puppy Linux 非常适合比较古老的计算机，即时计算机没有安装硬盘驱动器也是可以的! 它在删除恶意软件方面使用起来也比较轻松。</p>\n<p><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB32.png\" alt=\"\"></p>\n<h3 id=\"Manjaro-Linux\"><a href=\"#Manjaro-Linux\" class=\"headerlink\" title=\"Manjaro Linux\"></a>Manjaro Linux</h3><p>Manjaro Linux 基于 Arch Linux， 它是一个运行快速，容易使用，轻量级的发行版。它的目标是 Arch Linux 的好处都能提供，此外对用户更加友好和易于使用，使得新手能轻松上手。它默认使用的是 Xfce 桌面，不过也可以选择其它的桌面环境。</p>\n<p><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB33.png\" alt=\"\"></p>\n<h3 id=\"Arch-Linux\"><a href=\"#Arch-Linux\" class=\"headerlink\" title=\"Arch Linux\"></a>Arch Linux</h3><p>Arch Linux是一个为经验丰富的用户而设计的发行版。这个轻量级的最小化的发行版旨在使事情变得简单，更新时使用滚动发布模型。它具有一个定制的软件包管理器称为“Pacman”，这使得它易于编译、修改和共享软件包。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB34.png\" alt=\"\"></p>\n<h3 id=\"Tiny-Core\"><a href=\"#Tiny-Core\" class=\"headerlink\" title=\"Tiny Core\"></a>Tiny Core</h3><p>Tiny Core Linux是一个非常轻便的，模块化的发行版，特别要指出的是其小尺寸（目前有15MB）。它基于Linux内核，并且使用了BusyBox和FLTK（快速、轻便的工具包）。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB35.png\" alt=\"\"></p>\n<h3 id=\"Bodhi\"><a href=\"#Bodhi\" class=\"headerlink\" title=\"Bodhi\"></a>Bodhi</h3><p>这个基于Ubuntu的Bodhi Linux发行版具有轻量级而且漂亮的Enlightenment桌面。Bodhi尤其具有可定制性，可以使用主题和应用程序扩展开始的轻量级桌面环境。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB36.png\" alt=\"\"></p>\n<hr>\n<h2 id=\"视频游戏\"><a href=\"#视频游戏\" class=\"headerlink\" title=\"视频游戏\"></a>视频游戏</h2><h3 id=\"Steam-OS\"><a href=\"#Steam-OS\" class=\"headerlink\" title=\"Steam OS\"></a>Steam OS</h3><p>Linux上的游戏变得越来越受欢迎，虽然你可以在Ubuntu上轻松的安装Steam数字版下载服务，但你可能更喜欢一步到位安装Steam OS。这是一个以游戏为中心的发行版，针对游戏性能进行了优化，内置了专有的图形和声音驱动程序，以及Steam客户端。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB37.png\" alt=\"\"></p>\n<p>Steam OS是Steam 机器使用的发行版，所以如果你正安装自己的系统，你肯定想使用这个版本。</p>\n<h3 id=\"Ubuntu-Game-Pack\"><a href=\"#Ubuntu-Game-Pack\" class=\"headerlink\" title=\"Ubuntu Game Pack\"></a>Ubuntu Game Pack</h3><p>能让你玩差不多6000种游戏，Ubuntu游戏包配有内置Steam，以及PlayOnLinux和Windows游戏模拟器。这个游戏包基于Ubuntu 14.04，如果你只想安装新操作系统并且想马上开始游戏，那么这是一个绝佳的选择！<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB38.png\" alt=\"\"></p>\n<h3 id=\"Play-Linux\"><a href=\"#Play-Linux\" class=\"headerlink\" title=\"Play Linux\"></a>Play Linux</h3><p>Play Linux基于Ubuntu 15.10，是一个优化的发行版，由于自动GPU安装程序工具可以使你的Linux当作游戏机来使用。这基本上简化了安装合适的显卡驱动程序的问题，满足你只玩游戏的需求。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB39.png\" alt=\"\"></p>\n<h3 id=\"SparkyLinux-–-Game-Over-Edition\"><a href=\"#SparkyLinux-–-Game-Over-Edition\" class=\"headerlink\" title=\"SparkyLinux – Game Over Edition\"></a>SparkyLinux – Game Over Edition</h3><p>各种版本的SparkyLinux都是可选用的，但拥有游戏为中心的这个版本可能是最有用的。配备LXDE桌面和大量的预装游戏，而且你还会发现Steam，PlayOnLinux和预装的windows游戏模拟器。这是一个免费且又高端的巨大的游戏库！<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB40.png\" alt=\"\"></p>\n<hr>\n<h2 id=\"安全和恢复\"><a href=\"#安全和恢复\" class=\"headerlink\" title=\"安全和恢复\"></a>安全和恢复</h2><h3 id=\"Kali-Linux\"><a href=\"#Kali-Linux\" class=\"headerlink\" title=\"Kali Linux\"></a>Kali Linux</h3><p>Kali Linux以前被称为BackTrack，是一个渗透测试发行版，被广泛应用于在线安全社区。这种基于Debian的Linux发行版可以轻松地执行数字取证任务。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB41.png\" alt=\"\"></p>\n<h3 id=\"Parted-Magic\"><a href=\"#Parted-Magic\" class=\"headerlink\" title=\"Parted Magic\"></a>Parted Magic</h3><p>Parted Magic本质上是一个磁盘管理工具，作为硬盘分区和复制的主要工具，它还能轻松完成数据恢复和安全清理。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB042.png\" alt=\"\"></p>\n<h3 id=\"GParted\"><a href=\"#GParted\" class=\"headerlink\" title=\"GParted\"></a>GParted</h3><p>GParted是一个用途单一的发行版，旨在使用图形界面对硬盘驱动器变的更加轻松。 众多发行版中的标准版本将被Linux用户熟知。这个版本是一个独立的专用操作系统，然而，它准备作为一张自启动光盘运行。你需要执行一些磁盘管理而不引导到您的计算机的操作系统么？那么就使用GParted吧。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB43.png\" alt=\"\"></p>\n<h3 id=\"TAILS\"><a href=\"#TAILS\" class=\"headerlink\" title=\"TAILS\"></a>TAILS</h3><p>TAILS是一个完全围绕隐私和安全概念的发行版。它是一个实时操作系统，您可以移植从DVD，USB棒或SD卡中，这样你就可以在任何的计算机上安全的使用，并使用完成后不会被行为追踪。为了最好的匿名性，所有的互联网连接都通过TOR（The Onion Router）路由，并且加密工具全程保护您的通信方法不会被窥视。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB44.png\" alt=\"\"></p>\n<hr>\n<h2 id=\"商业版本\"><a href=\"#商业版本\" class=\"headerlink\" title=\"商业版本\"></a>商业版本</h2><h3 id=\"Red-Hat-Enterprise-Linux\"><a href=\"#Red-Hat-Enterprise-Linux\" class=\"headerlink\" title=\"Red Hat Enterprise Linux\"></a>Red Hat Enterprise Linux</h3><p>红帽企业版Linux是Fedora的商业衍生产品，专为企业客户设计。 它提供诸多变体、插件以及认证可供管理员和应用程序使用。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB45.png\" alt=\"\"></p>\n<h3 id=\"SUSE-Linux-Enterprise\"><a href=\"#SUSE-Linux-Enterprise\" class=\"headerlink\" title=\"SUSE Linux Enterprise\"></a>SUSE Linux Enterprise</h3><p>SUSE Linux Enterprise桌面版专为企业使用而设计，它是可供企业安装使用的，这使其易于使用各种办公程序。 它具有足够的灵活性，可以在各种设备上运行，但对于极为关键的进程来说是足够可靠的。 同时还提供SUSE Linux Enterprise Server版本。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%9C%80%E4%BD%B3%20Linux%20%E5%8F%91%E8%A1%8C%E7%89%88%E6%B1%87%E6%80%BB46.png\" alt=\"\"></p>\n<hr>\n"},{"layout":"post","title":"ruby开发环境搭建","abbrlink":31766,"date":"2016-10-31T03:21:24.000Z","_content":"# Ubuntu 16 #\n安装ruby环境\n`sudo apt-get install ruby ruby-dev`\n检查ruby版本\n`ruby -v`\n`gem --version`\n irb     环境测试\nirb(main):001:0> 3+5\n=> 8\nirb(main):002:0> puts \"hello world!\"\nhello world!\nirb(main):001:0>exit\n\n---\n\n# Centos #\n`yum list ruby `看看yum仓库版本是多少，版本太低就源码安装。\n```\nyum install openssl* openssl-devel zlib-devel gcc gcc-c++ make autoconf readline-devel curl-devel expat-devel gettext-devel -y\n```\n\n关闭iptables和SELINUX（不关闭也是可以的）\n```\nservice iptables stop\nsetenforce 0\nvi /etc/sysconfig/selinux\nSELINUX=disabled         #禁用selinux  \n```\n源码编译安装：\n```\nwget http://ftp.ruby-lang.org/pub/ruby/2.3/ruby-2.3.1.tar.gz\ntar zxvf ruby-2.3.1.tar.gz\ncd ruby-2.3.1\n./configure --enable-shared --enable-pthread --prefix=/usr/local/ruby\nmake && make install\n```\n编译时如果报错如下：\nossl_pkey_ec.c:815: error: ‘EC_GROUP_new_curve_GF2m' undeclared (first use in this function)\n需要安装补丁，也就是替换两个ssl库文件，以下为该补丁文件打包下载地址\n详见：https://bugs.ruby-lang.org/projects/ruby-trunk/repository/revisions/41808\n解决方法：\n```\ncd ruby-2.3.1\nwget --no-check-certificate https://bugs.ruby-lang.org/projects/rubytrunk/repository/revisions/41808/raw/ext/openssl/ossl_pkey_ec.c\nwget --no-check-certificate https://bugs.ruby-lang.org/projects/ruby-trunk/repository/revisions/41808/raw/test/openssl/test_pkey_ec.rb\nmv ext/openssl/ossl_pkey_ec.c  ext/openssl/ossl_pkey_ec.c.bak\ncp ossl_pkey_ec.c ext/openssl/\nmv test/openssl/test_pkey_ec.rb test/openssl/test_pkey_ec.rb.bak\ncp test_pkey_ec.rb  test/openssl/\n```\n重新编译：\n`make && make install`\n\n将ruby命令集加入系统环境变量\n```\necho \"PATH=$PATH:/usr/local/ruby/bin;export PATH\" >> /etc/profile\nsource /etc/profile\n```\n检查ruby版本\n`ruby -v`\n`gem --version`\n irb     环境测试\nirb(main):001:0> 3+5\n=> 8\nirb(main):002:0> puts \"hello world!\"\nhello world!\nirb(main):001:0>exit\n\n---\n\n# Mac10.12 #\nmac在10.11之后的版本，安全机制发生了变更，/usr/local/目录已经没有写权限了。\n\n* xcode升级到8.0及以上版本\n\n不要用mac自带的ruby及brew方式安装ruby，容易出各种错误。\n安装rvm（ruby的版本控制器）https://github.com/rvm/rvm\n`curl -L https://get.rvm.io | bash -s stable --autolibs=enabled --ruby --rails --trace`\n可能会有警告，有提示把某一句加入/Users/用户名/.bash_profile 中，重开终端。`rvm -v`显示版本，说明安装成功。\n\n安装homebrew （官网http://brew.sh/index_zh-cn.html）\n\ngithub:https://github.com/Homebrew/homebrew\n\n`/usr/bin/ruby`使用的是mac自带的2.0版本的ruby，也可以直接用ruby使用新版本的ruby。\n```ruby\n/usr/bin/ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\" \n```\n`brew -v`\n\n列出ruby可安装的版本信息\n`rvm list known`\n安装一个ruby版本\n`rvm install 2.3.1`\n如果想设置为默认版本，可以用这条命令来完成\n`rvm use 2.3.1 --default`     一般上一步安装好就已经设为默认了\n查看已安装的ruby\n`rvm list`\n卸载一个已安装ruby版本\n`rvm remove 2.3.1`\n`ruby -v`\n会发现版本号变成最新的啦！\n\n检查ruby版本\n`ruby -v`\n`gem --version`\n irb     环境测试\nirb(main):001:0> 3+5\n=> 8\nirb(main):002:0> puts \"hello world!\"\nhello world!\nirb(main):001:0>exit\n\n安装各种扩展（可选）\nrails：ruby web框架\n`gem install rails`\n\n---\n\n# Windows #\n直接到官网下载：\nhttp://rubyinstaller.org/downloads \nhttp://www.ruby-lang.org/zh_cn/downloads/ （源码）\n安装时勾选自动添加PATH，安装完成后重启生效。\n也可以cmd运行 `set a = b` 然后重开cmd，环境变量就生效了。\n\n---\n\n# Ruby源 #\n国外源如果屏蔽了，更改gem安装源到淘宝，每条命令都有成功提示\n`gem update --system`     #升级gem版本\n`gem uninstall rubygems-update`    #移除gem升级脚本\n`gem sources --remove https://rubygems.org/`\n`gem sources -a https://ruby.taobao.org/`\n`gem sources -l`\n\n* windows 不要更换源，添加不了淘宝源，就换回原来的源。\n\n* Mac 如果报-SSL错误请把https改为http。\n*** CURRENT SOURCES ***\nhttp://ruby.taobao.org/\n\n\n\n---","source":"_posts/环境搭建/2016-10-21-Ruby开发环境搭建.md","raw":"---\nlayout: post\ntitle: ruby开发环境搭建\ncategories:\n  - 环境搭建\ntags:\n  - ruby2.3.1安装\nabbrlink: 31766\ndate: 2016-10-31 11:21:24\n---\n# Ubuntu 16 #\n安装ruby环境\n`sudo apt-get install ruby ruby-dev`\n检查ruby版本\n`ruby -v`\n`gem --version`\n irb     环境测试\nirb(main):001:0> 3+5\n=> 8\nirb(main):002:0> puts \"hello world!\"\nhello world!\nirb(main):001:0>exit\n\n---\n\n# Centos #\n`yum list ruby `看看yum仓库版本是多少，版本太低就源码安装。\n```\nyum install openssl* openssl-devel zlib-devel gcc gcc-c++ make autoconf readline-devel curl-devel expat-devel gettext-devel -y\n```\n\n关闭iptables和SELINUX（不关闭也是可以的）\n```\nservice iptables stop\nsetenforce 0\nvi /etc/sysconfig/selinux\nSELINUX=disabled         #禁用selinux  \n```\n源码编译安装：\n```\nwget http://ftp.ruby-lang.org/pub/ruby/2.3/ruby-2.3.1.tar.gz\ntar zxvf ruby-2.3.1.tar.gz\ncd ruby-2.3.1\n./configure --enable-shared --enable-pthread --prefix=/usr/local/ruby\nmake && make install\n```\n编译时如果报错如下：\nossl_pkey_ec.c:815: error: ‘EC_GROUP_new_curve_GF2m' undeclared (first use in this function)\n需要安装补丁，也就是替换两个ssl库文件，以下为该补丁文件打包下载地址\n详见：https://bugs.ruby-lang.org/projects/ruby-trunk/repository/revisions/41808\n解决方法：\n```\ncd ruby-2.3.1\nwget --no-check-certificate https://bugs.ruby-lang.org/projects/rubytrunk/repository/revisions/41808/raw/ext/openssl/ossl_pkey_ec.c\nwget --no-check-certificate https://bugs.ruby-lang.org/projects/ruby-trunk/repository/revisions/41808/raw/test/openssl/test_pkey_ec.rb\nmv ext/openssl/ossl_pkey_ec.c  ext/openssl/ossl_pkey_ec.c.bak\ncp ossl_pkey_ec.c ext/openssl/\nmv test/openssl/test_pkey_ec.rb test/openssl/test_pkey_ec.rb.bak\ncp test_pkey_ec.rb  test/openssl/\n```\n重新编译：\n`make && make install`\n\n将ruby命令集加入系统环境变量\n```\necho \"PATH=$PATH:/usr/local/ruby/bin;export PATH\" >> /etc/profile\nsource /etc/profile\n```\n检查ruby版本\n`ruby -v`\n`gem --version`\n irb     环境测试\nirb(main):001:0> 3+5\n=> 8\nirb(main):002:0> puts \"hello world!\"\nhello world!\nirb(main):001:0>exit\n\n---\n\n# Mac10.12 #\nmac在10.11之后的版本，安全机制发生了变更，/usr/local/目录已经没有写权限了。\n\n* xcode升级到8.0及以上版本\n\n不要用mac自带的ruby及brew方式安装ruby，容易出各种错误。\n安装rvm（ruby的版本控制器）https://github.com/rvm/rvm\n`curl -L https://get.rvm.io | bash -s stable --autolibs=enabled --ruby --rails --trace`\n可能会有警告，有提示把某一句加入/Users/用户名/.bash_profile 中，重开终端。`rvm -v`显示版本，说明安装成功。\n\n安装homebrew （官网http://brew.sh/index_zh-cn.html）\n\ngithub:https://github.com/Homebrew/homebrew\n\n`/usr/bin/ruby`使用的是mac自带的2.0版本的ruby，也可以直接用ruby使用新版本的ruby。\n```ruby\n/usr/bin/ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\" \n```\n`brew -v`\n\n列出ruby可安装的版本信息\n`rvm list known`\n安装一个ruby版本\n`rvm install 2.3.1`\n如果想设置为默认版本，可以用这条命令来完成\n`rvm use 2.3.1 --default`     一般上一步安装好就已经设为默认了\n查看已安装的ruby\n`rvm list`\n卸载一个已安装ruby版本\n`rvm remove 2.3.1`\n`ruby -v`\n会发现版本号变成最新的啦！\n\n检查ruby版本\n`ruby -v`\n`gem --version`\n irb     环境测试\nirb(main):001:0> 3+5\n=> 8\nirb(main):002:0> puts \"hello world!\"\nhello world!\nirb(main):001:0>exit\n\n安装各种扩展（可选）\nrails：ruby web框架\n`gem install rails`\n\n---\n\n# Windows #\n直接到官网下载：\nhttp://rubyinstaller.org/downloads \nhttp://www.ruby-lang.org/zh_cn/downloads/ （源码）\n安装时勾选自动添加PATH，安装完成后重启生效。\n也可以cmd运行 `set a = b` 然后重开cmd，环境变量就生效了。\n\n---\n\n# Ruby源 #\n国外源如果屏蔽了，更改gem安装源到淘宝，每条命令都有成功提示\n`gem update --system`     #升级gem版本\n`gem uninstall rubygems-update`    #移除gem升级脚本\n`gem sources --remove https://rubygems.org/`\n`gem sources -a https://ruby.taobao.org/`\n`gem sources -l`\n\n* windows 不要更换源，添加不了淘宝源，就换回原来的源。\n\n* Mac 如果报-SSL错误请把https改为http。\n*** CURRENT SOURCES ***\nhttp://ruby.taobao.org/\n\n\n\n---","slug":"环境搭建-2016-10-21-Ruby开发环境搭建","published":1,"updated":"2016-11-13T03:36:30.000Z","comments":1,"photos":[],"link":"","_id":"civi8oujd00272c6ntzifvf3m","content":"<h1 id=\"Ubuntu-16\"><a href=\"#Ubuntu-16\" class=\"headerlink\" title=\"Ubuntu 16\"></a>Ubuntu 16</h1><p>安装ruby环境<br><code>sudo apt-get install ruby ruby-dev</code><br>检查ruby版本<br><code>ruby -v</code><br><code>gem --version</code><br> irb     环境测试<br>irb(main):001:0&gt; 3+5<br>=&gt; 8<br>irb(main):002:0&gt; puts “hello world!”<br>hello world!<br>irb(main):001:0&gt;exit</p>\n<hr>\n<h1 id=\"Centos\"><a href=\"#Centos\" class=\"headerlink\" title=\"Centos\"></a>Centos</h1><p><code>yum list ruby</code>看看yum仓库版本是多少，版本太低就源码安装。<br><figure class=\"highlight brainfuck\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">yum</span> <span class=\"comment\">install</span> <span class=\"comment\">openssl*</span> <span class=\"comment\">openssl</span><span class=\"literal\">-</span><span class=\"comment\">devel</span> <span class=\"comment\">zlib</span><span class=\"literal\">-</span><span class=\"comment\">devel</span> <span class=\"comment\">gcc</span> <span class=\"comment\">gcc</span><span class=\"literal\">-</span><span class=\"comment\">c</span><span class=\"literal\">+</span><span class=\"literal\">+</span> <span class=\"comment\">make</span> <span class=\"comment\">autoconf</span> <span class=\"comment\">readline</span><span class=\"literal\">-</span><span class=\"comment\">devel</span> <span class=\"comment\">curl</span><span class=\"literal\">-</span><span class=\"comment\">devel</span> <span class=\"comment\">expat</span><span class=\"literal\">-</span><span class=\"comment\">devel</span> <span class=\"comment\">gettext</span><span class=\"literal\">-</span><span class=\"comment\">devel</span> <span class=\"literal\">-</span><span class=\"comment\">y</span></div></pre></td></tr></table></figure></p>\n<p>关闭iptables和SELINUX（不关闭也是可以的）<br><figure class=\"highlight armasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"symbol\">service</span> iptables stop</div><div class=\"line\"><span class=\"symbol\">setenforce</span> <span class=\"number\">0</span></div><div class=\"line\"><span class=\"symbol\">vi</span> /etc/sysconfig/<span class=\"keyword\">selinux</span></div><div class=\"line\"><span class=\"keyword\">SELINUX=disabled </span>        #禁用<span class=\"keyword\">selinux</span></div></pre></td></tr></table></figure></p>\n<p>源码编译安装：<br><figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">wget http://ftp.<span class=\"keyword\">ruby</span>-lang.org/pub/<span class=\"keyword\">ruby</span>/<span class=\"number\">2.3</span>/<span class=\"keyword\">ruby</span>-<span class=\"number\">2.3</span>.<span class=\"number\">1</span>.tar.gz</div><div class=\"line\">tar zxvf <span class=\"keyword\">ruby</span>-<span class=\"number\">2.3</span>.<span class=\"number\">1</span>.tar.gz</div><div class=\"line\"><span class=\"keyword\">cd</span> <span class=\"keyword\">ruby</span>-<span class=\"number\">2.3</span>.<span class=\"number\">1</span></div><div class=\"line\">./configure --enable-shared --enable-pthread --prefix=/usr/local/<span class=\"keyword\">ruby</span></div><div class=\"line\"><span class=\"keyword\">make</span> &amp;&amp; <span class=\"keyword\">make</span> install</div></pre></td></tr></table></figure></p>\n<p>编译时如果报错如下：<br>ossl_pkey_ec.c:815: error: ‘EC_GROUP_new_curve_GF2m’ undeclared (first use in this function)<br>需要安装补丁，也就是替换两个ssl库文件，以下为该补丁文件打包下载地址<br>详见：<a href=\"https://bugs.ruby-lang.org/projects/ruby-trunk/repository/revisions/41808\" target=\"_blank\" rel=\"external\">https://bugs.ruby-lang.org/projects/ruby-trunk/repository/revisions/41808</a><br>解决方法：<br><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd ruby-<span class=\"number\">2.3</span>.<span class=\"number\">1</span></div><div class=\"line\">wget --no-check-certificate https:<span class=\"comment\">//bugs.ruby-lang.org/projects/rubytrunk/repository/revisions/41808/raw/ext/openssl/ossl_pkey_ec.c</span></div><div class=\"line\">wget --no-check-certificate https:<span class=\"comment\">//bugs.ruby-lang.org/projects/ruby-trunk/repository/revisions/41808/raw/test/openssl/test_pkey_ec.rb</span></div><div class=\"line\">mv ext/openssl/ossl_pkey_ec<span class=\"selector-class\">.c</span>  ext/openssl/ossl_pkey_ec<span class=\"selector-class\">.c</span><span class=\"selector-class\">.bak</span></div><div class=\"line\">cp ossl_pkey_ec<span class=\"selector-class\">.c</span> ext/openssl/</div><div class=\"line\">mv test/openssl/test_pkey_ec<span class=\"selector-class\">.rb</span> test/openssl/test_pkey_ec<span class=\"selector-class\">.rb</span><span class=\"selector-class\">.bak</span></div><div class=\"line\">cp test_pkey_ec<span class=\"selector-class\">.rb</span>  test/openssl/</div></pre></td></tr></table></figure></p>\n<p>重新编译：<br><code>make &amp;&amp; make install</code></p>\n<p>将ruby命令集加入系统环境变量<br><figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">\"PATH=$PATH:/usr/local/ruby/bin;export PATH\"</span> &gt;&gt; /etc/<span class=\"keyword\">profile</span></div><div class=\"line\"><span class=\"keyword\">source</span> /etc/<span class=\"keyword\">profile</span></div></pre></td></tr></table></figure></p>\n<p>检查ruby版本<br><code>ruby -v</code><br><code>gem --version</code><br> irb     环境测试<br>irb(main):001:0&gt; 3+5<br>=&gt; 8<br>irb(main):002:0&gt; puts “hello world!”<br>hello world!<br>irb(main):001:0&gt;exit</p>\n<hr>\n<h1 id=\"Mac10-12\"><a href=\"#Mac10-12\" class=\"headerlink\" title=\"Mac10.12\"></a>Mac10.12</h1><p>mac在10.11之后的版本，安全机制发生了变更，/usr/local/目录已经没有写权限了。</p>\n<ul>\n<li>xcode升级到8.0及以上版本</li>\n</ul>\n<p>不要用mac自带的ruby及brew方式安装ruby，容易出各种错误。<br>安装rvm（ruby的版本控制器）<a href=\"https://github.com/rvm/rvm\" target=\"_blank\" rel=\"external\">https://github.com/rvm/rvm</a><br><code>curl -L https://get.rvm.io | bash -s stable --autolibs=enabled --ruby --rails --trace</code><br>可能会有警告，有提示把某一句加入/Users/用户名/.bash_profile 中，重开终端。<code>rvm -v</code>显示版本，说明安装成功。</p>\n<p>安装homebrew （官网<a href=\"http://brew.sh/index_zh-cn.html）\" target=\"_blank\" rel=\"external\">http://brew.sh/index_zh-cn.html）</a></p>\n<p>github:<a href=\"https://github.com/Homebrew/homebrew\" target=\"_blank\" rel=\"external\">https://github.com/Homebrew/homebrew</a></p>\n<p><code>/usr/bin/ruby</code>使用的是mac自带的2.0版本的ruby，也可以直接用ruby使用新版本的ruby。<br><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">/usr/bin/ruby -e <span class=\"string\">\"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"</span></div></pre></td></tr></table></figure></p>\n<p><code>brew -v</code></p>\n<p>列出ruby可安装的版本信息<br><code>rvm list known</code><br>安装一个ruby版本<br><code>rvm install 2.3.1</code><br>如果想设置为默认版本，可以用这条命令来完成<br><code>rvm use 2.3.1 --default</code>     一般上一步安装好就已经设为默认了<br>查看已安装的ruby<br><code>rvm list</code><br>卸载一个已安装ruby版本<br><code>rvm remove 2.3.1</code><br><code>ruby -v</code><br>会发现版本号变成最新的啦！</p>\n<p>检查ruby版本<br><code>ruby -v</code><br><code>gem --version</code><br> irb     环境测试<br>irb(main):001:0&gt; 3+5<br>=&gt; 8<br>irb(main):002:0&gt; puts “hello world!”<br>hello world!<br>irb(main):001:0&gt;exit</p>\n<p>安装各种扩展（可选）<br>rails：ruby web框架<br><code>gem install rails</code></p>\n<hr>\n<h1 id=\"Windows\"><a href=\"#Windows\" class=\"headerlink\" title=\"Windows\"></a>Windows</h1><p>直接到官网下载：<br><a href=\"http://rubyinstaller.org/downloads\" target=\"_blank\" rel=\"external\">http://rubyinstaller.org/downloads</a><br><a href=\"http://www.ruby-lang.org/zh_cn/downloads/\" target=\"_blank\" rel=\"external\">http://www.ruby-lang.org/zh_cn/downloads/</a> （源码）<br>安装时勾选自动添加PATH，安装完成后重启生效。<br>也可以cmd运行 <code>set a = b</code> 然后重开cmd，环境变量就生效了。</p>\n<hr>\n<h1 id=\"Ruby源\"><a href=\"#Ruby源\" class=\"headerlink\" title=\"Ruby源\"></a>Ruby源</h1><p>国外源如果屏蔽了，更改gem安装源到淘宝，每条命令都有成功提示<br><code>gem update --system</code>     #升级gem版本<br><code>gem uninstall rubygems-update</code>    #移除gem升级脚本<br><code>gem sources --remove https://rubygems.org/</code><br><code>gem sources -a https://ruby.taobao.org/</code><br><code>gem sources -l</code></p>\n<ul>\n<li><p>windows 不要更换源，添加不了淘宝源，就换回原来的源。</p>\n</li>\n<li><p>Mac 如果报-SSL错误请把https改为http。<br><strong><em> CURRENT SOURCES </em></strong><br><a href=\"http://ruby.taobao.org/\" target=\"_blank\" rel=\"external\">http://ruby.taobao.org/</a></p>\n</li>\n</ul>\n<hr>\n","excerpt":"","more":"<h1 id=\"Ubuntu-16\"><a href=\"#Ubuntu-16\" class=\"headerlink\" title=\"Ubuntu 16\"></a>Ubuntu 16</h1><p>安装ruby环境<br><code>sudo apt-get install ruby ruby-dev</code><br>检查ruby版本<br><code>ruby -v</code><br><code>gem --version</code><br> irb     环境测试<br>irb(main):001:0&gt; 3+5<br>=&gt; 8<br>irb(main):002:0&gt; puts “hello world!”<br>hello world!<br>irb(main):001:0&gt;exit</p>\n<hr>\n<h1 id=\"Centos\"><a href=\"#Centos\" class=\"headerlink\" title=\"Centos\"></a>Centos</h1><p><code>yum list ruby</code>看看yum仓库版本是多少，版本太低就源码安装。<br><figure class=\"highlight brainfuck\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">yum</span> <span class=\"comment\">install</span> <span class=\"comment\">openssl*</span> <span class=\"comment\">openssl</span><span class=\"literal\">-</span><span class=\"comment\">devel</span> <span class=\"comment\">zlib</span><span class=\"literal\">-</span><span class=\"comment\">devel</span> <span class=\"comment\">gcc</span> <span class=\"comment\">gcc</span><span class=\"literal\">-</span><span class=\"comment\">c</span><span class=\"literal\">+</span><span class=\"literal\">+</span> <span class=\"comment\">make</span> <span class=\"comment\">autoconf</span> <span class=\"comment\">readline</span><span class=\"literal\">-</span><span class=\"comment\">devel</span> <span class=\"comment\">curl</span><span class=\"literal\">-</span><span class=\"comment\">devel</span> <span class=\"comment\">expat</span><span class=\"literal\">-</span><span class=\"comment\">devel</span> <span class=\"comment\">gettext</span><span class=\"literal\">-</span><span class=\"comment\">devel</span> <span class=\"literal\">-</span><span class=\"comment\">y</span></div></pre></td></tr></table></figure></p>\n<p>关闭iptables和SELINUX（不关闭也是可以的）<br><figure class=\"highlight armasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"symbol\">service</span> iptables stop</div><div class=\"line\"><span class=\"symbol\">setenforce</span> <span class=\"number\">0</span></div><div class=\"line\"><span class=\"symbol\">vi</span> /etc/sysconfig/<span class=\"keyword\">selinux</div><div class=\"line\"></span><span class=\"keyword\">SELINUX=disabled </span>        #禁用<span class=\"keyword\">selinux</span></div></pre></td></tr></table></figure></p>\n<p>源码编译安装：<br><figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">wget http://ftp.<span class=\"keyword\">ruby</span>-lang.org/pub/<span class=\"keyword\">ruby</span>/<span class=\"number\">2.3</span>/<span class=\"keyword\">ruby</span>-<span class=\"number\">2.3</span>.<span class=\"number\">1</span>.tar.gz</div><div class=\"line\">tar zxvf <span class=\"keyword\">ruby</span>-<span class=\"number\">2.3</span>.<span class=\"number\">1</span>.tar.gz</div><div class=\"line\"><span class=\"keyword\">cd</span> <span class=\"keyword\">ruby</span>-<span class=\"number\">2.3</span>.<span class=\"number\">1</span></div><div class=\"line\">./configure --enable-shared --enable-pthread --prefix=/usr/local/<span class=\"keyword\">ruby</span></div><div class=\"line\"><span class=\"keyword\">make</span> &amp;&amp; <span class=\"keyword\">make</span> install</div></pre></td></tr></table></figure></p>\n<p>编译时如果报错如下：<br>ossl_pkey_ec.c:815: error: ‘EC_GROUP_new_curve_GF2m’ undeclared (first use in this function)<br>需要安装补丁，也就是替换两个ssl库文件，以下为该补丁文件打包下载地址<br>详见：<a href=\"https://bugs.ruby-lang.org/projects/ruby-trunk/repository/revisions/41808\">https://bugs.ruby-lang.org/projects/ruby-trunk/repository/revisions/41808</a><br>解决方法：<br><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd ruby-<span class=\"number\">2.3</span>.<span class=\"number\">1</span></div><div class=\"line\">wget --no-check-certificate https:<span class=\"comment\">//bugs.ruby-lang.org/projects/rubytrunk/repository/revisions/41808/raw/ext/openssl/ossl_pkey_ec.c</span></div><div class=\"line\">wget --no-check-certificate https:<span class=\"comment\">//bugs.ruby-lang.org/projects/ruby-trunk/repository/revisions/41808/raw/test/openssl/test_pkey_ec.rb</span></div><div class=\"line\">mv ext/openssl/ossl_pkey_ec<span class=\"selector-class\">.c</span>  ext/openssl/ossl_pkey_ec<span class=\"selector-class\">.c</span><span class=\"selector-class\">.bak</span></div><div class=\"line\">cp ossl_pkey_ec<span class=\"selector-class\">.c</span> ext/openssl/</div><div class=\"line\">mv test/openssl/test_pkey_ec<span class=\"selector-class\">.rb</span> test/openssl/test_pkey_ec<span class=\"selector-class\">.rb</span><span class=\"selector-class\">.bak</span></div><div class=\"line\">cp test_pkey_ec<span class=\"selector-class\">.rb</span>  test/openssl/</div></pre></td></tr></table></figure></p>\n<p>重新编译：<br><code>make &amp;&amp; make install</code></p>\n<p>将ruby命令集加入系统环境变量<br><figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">\"PATH=$PATH:/usr/local/ruby/bin;export PATH\"</span> &gt;&gt; /etc/<span class=\"keyword\">profile</span></div><div class=\"line\"><span class=\"keyword\">source</span> /etc/<span class=\"keyword\">profile</span></div></pre></td></tr></table></figure></p>\n<p>检查ruby版本<br><code>ruby -v</code><br><code>gem --version</code><br> irb     环境测试<br>irb(main):001:0&gt; 3+5<br>=&gt; 8<br>irb(main):002:0&gt; puts “hello world!”<br>hello world!<br>irb(main):001:0&gt;exit</p>\n<hr>\n<h1 id=\"Mac10-12\"><a href=\"#Mac10-12\" class=\"headerlink\" title=\"Mac10.12\"></a>Mac10.12</h1><p>mac在10.11之后的版本，安全机制发生了变更，/usr/local/目录已经没有写权限了。</p>\n<ul>\n<li>xcode升级到8.0及以上版本</li>\n</ul>\n<p>不要用mac自带的ruby及brew方式安装ruby，容易出各种错误。<br>安装rvm（ruby的版本控制器）<a href=\"https://github.com/rvm/rvm\">https://github.com/rvm/rvm</a><br><code>curl -L https://get.rvm.io | bash -s stable --autolibs=enabled --ruby --rails --trace</code><br>可能会有警告，有提示把某一句加入/Users/用户名/.bash_profile 中，重开终端。<code>rvm -v</code>显示版本，说明安装成功。</p>\n<p>安装homebrew （官网<a href=\"http://brew.sh/index_zh-cn.html）\">http://brew.sh/index_zh-cn.html）</a></p>\n<p>github:<a href=\"https://github.com/Homebrew/homebrew\">https://github.com/Homebrew/homebrew</a></p>\n<p><code>/usr/bin/ruby</code>使用的是mac自带的2.0版本的ruby，也可以直接用ruby使用新版本的ruby。<br><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">/usr/bin/ruby -e <span class=\"string\">\"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"</span></div></pre></td></tr></table></figure></p>\n<p><code>brew -v</code></p>\n<p>列出ruby可安装的版本信息<br><code>rvm list known</code><br>安装一个ruby版本<br><code>rvm install 2.3.1</code><br>如果想设置为默认版本，可以用这条命令来完成<br><code>rvm use 2.3.1 --default</code>     一般上一步安装好就已经设为默认了<br>查看已安装的ruby<br><code>rvm list</code><br>卸载一个已安装ruby版本<br><code>rvm remove 2.3.1</code><br><code>ruby -v</code><br>会发现版本号变成最新的啦！</p>\n<p>检查ruby版本<br><code>ruby -v</code><br><code>gem --version</code><br> irb     环境测试<br>irb(main):001:0&gt; 3+5<br>=&gt; 8<br>irb(main):002:0&gt; puts “hello world!”<br>hello world!<br>irb(main):001:0&gt;exit</p>\n<p>安装各种扩展（可选）<br>rails：ruby web框架<br><code>gem install rails</code></p>\n<hr>\n<h1 id=\"Windows\"><a href=\"#Windows\" class=\"headerlink\" title=\"Windows\"></a>Windows</h1><p>直接到官网下载：<br><a href=\"http://rubyinstaller.org/downloads\">http://rubyinstaller.org/downloads</a><br><a href=\"http://www.ruby-lang.org/zh_cn/downloads/\">http://www.ruby-lang.org/zh_cn/downloads/</a> （源码）<br>安装时勾选自动添加PATH，安装完成后重启生效。<br>也可以cmd运行 <code>set a = b</code> 然后重开cmd，环境变量就生效了。</p>\n<hr>\n<h1 id=\"Ruby源\"><a href=\"#Ruby源\" class=\"headerlink\" title=\"Ruby源\"></a>Ruby源</h1><p>国外源如果屏蔽了，更改gem安装源到淘宝，每条命令都有成功提示<br><code>gem update --system</code>     #升级gem版本<br><code>gem uninstall rubygems-update</code>    #移除gem升级脚本<br><code>gem sources --remove https://rubygems.org/</code><br><code>gem sources -a https://ruby.taobao.org/</code><br><code>gem sources -l</code></p>\n<ul>\n<li><p>windows 不要更换源，添加不了淘宝源，就换回原来的源。</p>\n</li>\n<li><p>Mac 如果报-SSL错误请把https改为http。<br><strong><em> CURRENT SOURCES </em></strong><br><a href=\"http://ruby.taobao.org/\">http://ruby.taobao.org/</a></p>\n</li>\n</ul>\n<hr>\n"},{"title":"CentOS 7安装配置LAMP服务器","abbrlink":60501,"date":"2016-11-02T04:21:52.000Z","_content":"\n# CentOS 7搭建LAMP环境(Apache+PHP+MariaDB)\n\n在CentOS上搭建PHP服务器环境,可以使用一键自动部署环境的工具，请参见网友开发的这个工具LAMP，LNMP，LNAMP\n**http://www.centos.bz/2013/08/ezhttp-tutorial/**\n \n## 准备篇（可跳过此步）：\n### 一、配置防火墙，开启80端口、3306端口\nCentOS 7默认使用的是firewall作为防火墙，这里改为iptables防火墙。\n#### 1、关闭firewall：\n```\nsystemctl stop firewalld.service #停止firewall\nsystemctl disable firewalld.service #禁止firewall开机启动```\n#### 2、安装iptables防火墙\n```\nyum install iptables-services #安装\nvim /etc/sysconfig/iptables #编辑防火墙配置文件```\n增加规则：\n```\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 22 -j ACCEPT\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 80 -j ACCEPT\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 3306 -j ACCEPT```\n:wq! #保存退出\n```\nsystemctl restart iptables #最后重启防火墙使配置生效\nsystemctl enable iptables #设置防火墙开机启动```\n### 二、关闭SELINUX\n```\nvim /etc/selinux/config\n#SELINUX=enforcing #注释掉\n#SELINUXTYPE=targeted #注释掉\nSELINUX=disabled #增加```\n:wq! #保存退出\n`setenforce 0` #使配置立即生效\n---\n## 安装篇：\n一、安装MariaDB\nCentOS 7.0中，已经使用MariaDB替代了MySQL数据库\n#### 1、安装MariaDB\n```\nyum install mariadb mariadb-server -y\nsystemctl start mariadb #启动MariaDB```\n\n`cp /usr/share/mysql/my-huge.cnf /etc/my.cnf` 拷贝配置文件（注意：如果/etc目录下面默认有一个my.cnf，直接覆盖即可）\n#### 2、为root账户设置密码\n`mysql_secure_installation`\n\n* 回车，根据提示输入Y\n* 输入2次密码，回车\n* 根据提示一路输入Y\n* 最后出现：Thanks for using MySQL!\n* MariaDB密码设置完成，重新启动 MariaDB：\n`systemctl restart mariadb` #重启MariaDB\n\n#### 3、安装Apache和PHP\n```\nyum install http php php-mysql php-gd libjpeg* php-ldap php-odbc php-pear php-xml php-xmlrpc php-mbstring php-bcmath php-mhash -y\nsystemctl restart mariadb  #重启MariaDB\nsystemctl enable mariadb #设置开机启动\nsystemctl start httpd #启动apache\nsystemctl enable httpd #设置apache开机启动```\n\n在客户端浏览器中打开服务器IP地址，会出现测试界面，说明apache安装成功\n\n---\n\n## 配置篇:\n### 一、Apache配置\n`vim /etc/httpd/conf/httpd.conf` 编辑配置文件\n\n* ServerSignature On  #添加，在错误页中显示Apache的版本，Off为不显示\n* Options Indexes FollowSymLinks  #修改为：Options Includes ExecCGI FollowSymLinks（允许服务器执行CGI及SSI，禁止列出目录）\n* #AddHandler cgi-script .cgi　取消注释（允许扩展名为.pl的CGI脚本运行）\n* AllowOverride None　 #修改为：AllowOverride All （允许.htaccess）\n* AddDefaultCharset UTF-8　#修改为：AddDefaultCharset GB2312　（添加GB2312为默认编码）\n* #Options Indexes FollowSymLinks   #修改为 Options FollowSymLinks（不在浏览器上显示树状目录结构）\n* DirectoryIndex index.html   #修改为：DirectoryIndex index.html index.htm\n* Default.html Default.htmindex.php（设置默认首页文件，增加index.php）\n* MaxKeepAliveRequests 500  #添加MaxKeepAliveRequests 500 （增加同时连接数）\n\n:wq! #保存退出\n`systemctl restart httpd`重启apache\n`rm -f /etc/httpd/conf.d/welcome.conf /var/www/error/noindex.html` 删除默认测试页\n\n---\n\n### 二、php配置\n`vim /etc/php.ini` 编辑配置文件\n\n* date.timezone = PRC #把前面的分号去掉，改为date.timezone = PRC\n* (这里列出了PHP禁用的函数，如果某些程序需要用到这个函数，可以删除，取消禁用。)\n```\ndisable_functions = passthru,exec,system,chroot,scandir,chgrp,chown,shell_exec,proc_open,proc_get_status,ini_alter,ini_alter,ini_restore,dl,openlog,syslog,readlink,symlink,popepassthru,stream_socket_server,escapeshellcmd,dll,popen,disk_free_space,checkdnsrr,checkdnsrr,getservbyname,getservbyport,disk_total_space,posix_ctermid,posix_get_last_error,posix_getcwd, posix_getegid,posix_geteuid,posix_getgid, posix_getgrgid,posix_getgrnam,posix_getgroups,posix_getlogin,posix_getpgid,posix_getpgrp,posix_getpid, posix_getppid,posix_getpwnam,posix_getpwuid, posix_getrlimit, posix_getsid,posix_getuid,posix_isatty, posix_kill,posix_mkfifo,posix_setegid,posix_seteuid,posix_setgid, posix_setpgid,posix_setsid,posix_setuid,posix_strerror,posix_times,posix_ttyname,posix_uname \n```\n* expose_php = Off #禁止显示php版本的信息\n* short_open_tag = ON #支持php短标签\n* open_basedir = .:/tmp/  (设置表示允许访问当前目录(即PHP脚本文件所在之目录)和/tmp/目录,可以防止php木马跨站,如果改了之后安装程序有问题(例如：织梦内容管理系统)，可以注销此行，或者直接写上程序的目录/data/www.osyunwei.com/:/tmp/)\n* \n:wq! #保存退出\n```\nsystemctl restart mariadb #重启MariaDB\nsystemctl restart httpd #重启apache```\n测试篇\n```cd /var/www/html\nvim index.php #输入下面内容```\n```php\n<?php\nphpinfo();\n?>\n```\n:wq! #保存退出\n在客户端浏览器输入服务器IP地址，可以看到相关的配置信息！\n\n注意：apache默认的程序目录是**/var/www/html**\n权限设置：`chown apache.apache -R /var/www/html`\n\n参考：http://www.osyunwei.com/archives/7829.html\n\n---","source":"_posts/环境搭建/2016-11-02-CentOS-7安装配置LAMP服务器.md","raw":"---\ntitle: CentOS 7安装配置LAMP服务器\ncategories:\n  - 环境搭建\ntags:\n  - Centos7 lanm\nabbrlink: 60501\ndate: 2016-11-02 12:21:52\n---\n\n# CentOS 7搭建LAMP环境(Apache+PHP+MariaDB)\n\n在CentOS上搭建PHP服务器环境,可以使用一键自动部署环境的工具，请参见网友开发的这个工具LAMP，LNMP，LNAMP\n**http://www.centos.bz/2013/08/ezhttp-tutorial/**\n \n## 准备篇（可跳过此步）：\n### 一、配置防火墙，开启80端口、3306端口\nCentOS 7默认使用的是firewall作为防火墙，这里改为iptables防火墙。\n#### 1、关闭firewall：\n```\nsystemctl stop firewalld.service #停止firewall\nsystemctl disable firewalld.service #禁止firewall开机启动```\n#### 2、安装iptables防火墙\n```\nyum install iptables-services #安装\nvim /etc/sysconfig/iptables #编辑防火墙配置文件```\n增加规则：\n```\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 22 -j ACCEPT\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 80 -j ACCEPT\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 3306 -j ACCEPT```\n:wq! #保存退出\n```\nsystemctl restart iptables #最后重启防火墙使配置生效\nsystemctl enable iptables #设置防火墙开机启动```\n### 二、关闭SELINUX\n```\nvim /etc/selinux/config\n#SELINUX=enforcing #注释掉\n#SELINUXTYPE=targeted #注释掉\nSELINUX=disabled #增加```\n:wq! #保存退出\n`setenforce 0` #使配置立即生效\n---\n## 安装篇：\n一、安装MariaDB\nCentOS 7.0中，已经使用MariaDB替代了MySQL数据库\n#### 1、安装MariaDB\n```\nyum install mariadb mariadb-server -y\nsystemctl start mariadb #启动MariaDB```\n\n`cp /usr/share/mysql/my-huge.cnf /etc/my.cnf` 拷贝配置文件（注意：如果/etc目录下面默认有一个my.cnf，直接覆盖即可）\n#### 2、为root账户设置密码\n`mysql_secure_installation`\n\n* 回车，根据提示输入Y\n* 输入2次密码，回车\n* 根据提示一路输入Y\n* 最后出现：Thanks for using MySQL!\n* MariaDB密码设置完成，重新启动 MariaDB：\n`systemctl restart mariadb` #重启MariaDB\n\n#### 3、安装Apache和PHP\n```\nyum install http php php-mysql php-gd libjpeg* php-ldap php-odbc php-pear php-xml php-xmlrpc php-mbstring php-bcmath php-mhash -y\nsystemctl restart mariadb  #重启MariaDB\nsystemctl enable mariadb #设置开机启动\nsystemctl start httpd #启动apache\nsystemctl enable httpd #设置apache开机启动```\n\n在客户端浏览器中打开服务器IP地址，会出现测试界面，说明apache安装成功\n\n---\n\n## 配置篇:\n### 一、Apache配置\n`vim /etc/httpd/conf/httpd.conf` 编辑配置文件\n\n* ServerSignature On  #添加，在错误页中显示Apache的版本，Off为不显示\n* Options Indexes FollowSymLinks  #修改为：Options Includes ExecCGI FollowSymLinks（允许服务器执行CGI及SSI，禁止列出目录）\n* #AddHandler cgi-script .cgi　取消注释（允许扩展名为.pl的CGI脚本运行）\n* AllowOverride None　 #修改为：AllowOverride All （允许.htaccess）\n* AddDefaultCharset UTF-8　#修改为：AddDefaultCharset GB2312　（添加GB2312为默认编码）\n* #Options Indexes FollowSymLinks   #修改为 Options FollowSymLinks（不在浏览器上显示树状目录结构）\n* DirectoryIndex index.html   #修改为：DirectoryIndex index.html index.htm\n* Default.html Default.htmindex.php（设置默认首页文件，增加index.php）\n* MaxKeepAliveRequests 500  #添加MaxKeepAliveRequests 500 （增加同时连接数）\n\n:wq! #保存退出\n`systemctl restart httpd`重启apache\n`rm -f /etc/httpd/conf.d/welcome.conf /var/www/error/noindex.html` 删除默认测试页\n\n---\n\n### 二、php配置\n`vim /etc/php.ini` 编辑配置文件\n\n* date.timezone = PRC #把前面的分号去掉，改为date.timezone = PRC\n* (这里列出了PHP禁用的函数，如果某些程序需要用到这个函数，可以删除，取消禁用。)\n```\ndisable_functions = passthru,exec,system,chroot,scandir,chgrp,chown,shell_exec,proc_open,proc_get_status,ini_alter,ini_alter,ini_restore,dl,openlog,syslog,readlink,symlink,popepassthru,stream_socket_server,escapeshellcmd,dll,popen,disk_free_space,checkdnsrr,checkdnsrr,getservbyname,getservbyport,disk_total_space,posix_ctermid,posix_get_last_error,posix_getcwd, posix_getegid,posix_geteuid,posix_getgid, posix_getgrgid,posix_getgrnam,posix_getgroups,posix_getlogin,posix_getpgid,posix_getpgrp,posix_getpid, posix_getppid,posix_getpwnam,posix_getpwuid, posix_getrlimit, posix_getsid,posix_getuid,posix_isatty, posix_kill,posix_mkfifo,posix_setegid,posix_seteuid,posix_setgid, posix_setpgid,posix_setsid,posix_setuid,posix_strerror,posix_times,posix_ttyname,posix_uname \n```\n* expose_php = Off #禁止显示php版本的信息\n* short_open_tag = ON #支持php短标签\n* open_basedir = .:/tmp/  (设置表示允许访问当前目录(即PHP脚本文件所在之目录)和/tmp/目录,可以防止php木马跨站,如果改了之后安装程序有问题(例如：织梦内容管理系统)，可以注销此行，或者直接写上程序的目录/data/www.osyunwei.com/:/tmp/)\n* \n:wq! #保存退出\n```\nsystemctl restart mariadb #重启MariaDB\nsystemctl restart httpd #重启apache```\n测试篇\n```cd /var/www/html\nvim index.php #输入下面内容```\n```php\n<?php\nphpinfo();\n?>\n```\n:wq! #保存退出\n在客户端浏览器输入服务器IP地址，可以看到相关的配置信息！\n\n注意：apache默认的程序目录是**/var/www/html**\n权限设置：`chown apache.apache -R /var/www/html`\n\n参考：http://www.osyunwei.com/archives/7829.html\n\n---","slug":"环境搭建-2016-11-02-CentOS-7安装配置LAMP服务器","published":1,"updated":"2016-11-13T03:36:30.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civi8oujf002c2c6n5trh1xfe","content":"<h1 id=\"CentOS-7搭建LAMP环境-Apache-PHP-MariaDB\"><a href=\"#CentOS-7搭建LAMP环境-Apache-PHP-MariaDB\" class=\"headerlink\" title=\"CentOS 7搭建LAMP环境(Apache+PHP+MariaDB)\"></a>CentOS 7搭建LAMP环境(Apache+PHP+MariaDB)</h1><p>在CentOS上搭建PHP服务器环境,可以使用一键自动部署环境的工具，请参见网友开发的这个工具LAMP，LNMP，LNAMP<br><strong><a href=\"http://www.centos.bz/2013/08/ezhttp-tutorial/\" target=\"_blank\" rel=\"external\">http://www.centos.bz/2013/08/ezhttp-tutorial/</a></strong></p>\n<h2 id=\"准备篇（可跳过此步）：\"><a href=\"#准备篇（可跳过此步）：\" class=\"headerlink\" title=\"准备篇（可跳过此步）：\"></a>准备篇（可跳过此步）：</h2><h3 id=\"一、配置防火墙，开启80端口、3306端口\"><a href=\"#一、配置防火墙，开启80端口、3306端口\" class=\"headerlink\" title=\"一、配置防火墙，开启80端口、3306端口\"></a>一、配置防火墙，开启80端口、3306端口</h3><p>CentOS 7默认使用的是firewall作为防火墙，这里改为iptables防火墙。</p>\n<h4 id=\"1、关闭firewall：\"><a href=\"#1、关闭firewall：\" class=\"headerlink\" title=\"1、关闭firewall：\"></a>1、关闭firewall：</h4><figure class=\"highlight gauss\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">systemctl <span class=\"keyword\">stop</span> firewalld.service <span class=\"meta\">#停止firewall</span></div><div class=\"line\">systemctl <span class=\"keyword\">disable</span> firewalld.service <span class=\"meta\">#禁止firewall开机启动</span></div></pre></td></tr></table></figure>\n<h4 id=\"2、安装iptables防火墙\"><a href=\"#2、安装iptables防火墙\" class=\"headerlink\" title=\"2、安装iptables防火墙\"></a>2、安装iptables防火墙</h4><figure class=\"highlight cmake\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">yum <span class=\"keyword\">install</span> iptables-services <span class=\"comment\">#安装</span></div><div class=\"line\">vim /etc/sysconfig/iptables <span class=\"comment\">#编辑防火墙配置文件</span></div></pre></td></tr></table></figure>\n<p>增加规则：<br><figure class=\"highlight pf\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">-A INPUT -m <span class=\"keyword\">state</span> --state NEW -m tcp -p tcp --dport <span class=\"number\">22</span> -j ACCEPT</div><div class=\"line\">-A INPUT -m <span class=\"keyword\">state</span> --state NEW -m tcp -p tcp --dport <span class=\"number\">80</span> -j ACCEPT</div><div class=\"line\">-A INPUT -m <span class=\"keyword\">state</span> --state NEW -m tcp -p tcp --dport <span class=\"number\">3306</span> -j ACCEPT</div></pre></td></tr></table></figure></p>\n<p>:wq! #保存退出<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">systemctl restart iptables <span class=\"comment\">#最后重启防火墙使配置生效</span></div><div class=\"line\">systemctl <span class=\"built_in\">enable</span> iptables <span class=\"comment\">#设置防火墙开机启动</span></div></pre></td></tr></table></figure></p>\n<h3 id=\"二、关闭SELINUX\"><a href=\"#二、关闭SELINUX\" class=\"headerlink\" title=\"二、关闭SELINUX\"></a>二、关闭SELINUX</h3><figure class=\"highlight dts\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">vim <span class=\"meta-keyword\">/etc/</span>selinux/config</div><div class=\"line\"><span class=\"meta\">#SELINUX=enforcing #注释掉</span></div><div class=\"line\"><span class=\"meta\">#SELINUXTYPE=targeted #注释掉</span></div><div class=\"line\">SELINUX=disabled <span class=\"meta\">#增加</span></div></pre></td></tr></table></figure>\n<p>:wq! #保存退出</p>\n<h2 id=\"setenforce-0-使配置立即生效\"><a href=\"#setenforce-0-使配置立即生效\" class=\"headerlink\" title=\"setenforce 0 #使配置立即生效\"></a><code>setenforce 0</code> #使配置立即生效</h2><h2 id=\"安装篇：\"><a href=\"#安装篇：\" class=\"headerlink\" title=\"安装篇：\"></a>安装篇：</h2><p>一、安装MariaDB<br>CentOS 7.0中，已经使用MariaDB替代了MySQL数据库</p>\n<h4 id=\"1、安装MariaDB\"><a href=\"#1、安装MariaDB\" class=\"headerlink\" title=\"1、安装MariaDB\"></a>1、安装MariaDB</h4><figure class=\"highlight armasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"symbol\">yum</span> install <span class=\"keyword\">mariadb </span><span class=\"keyword\">mariadb-server </span>-y</div><div class=\"line\"><span class=\"symbol\">systemctl</span> start <span class=\"keyword\">mariadb </span>#启动<span class=\"keyword\">MariaDB</span></div></pre></td></tr></table></figure>\n<p><code>cp /usr/share/mysql/my-huge.cnf /etc/my.cnf</code> 拷贝配置文件（注意：如果/etc目录下面默认有一个my.cnf，直接覆盖即可）</p>\n<h4 id=\"2、为root账户设置密码\"><a href=\"#2、为root账户设置密码\" class=\"headerlink\" title=\"2、为root账户设置密码\"></a>2、为root账户设置密码</h4><p><code>mysql_secure_installation</code></p>\n<ul>\n<li>回车，根据提示输入Y</li>\n<li>输入2次密码，回车</li>\n<li>根据提示一路输入Y</li>\n<li>最后出现：Thanks for using MySQL!</li>\n<li>MariaDB密码设置完成，重新启动 MariaDB：<br><code>systemctl restart mariadb</code> #重启MariaDB</li>\n</ul>\n<h4 id=\"3、安装Apache和PHP\"><a href=\"#3、安装Apache和PHP\" class=\"headerlink\" title=\"3、安装Apache和PHP\"></a>3、安装Apache和PHP</h4><figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">yum install http php php-mysql php-gd libjpeg* php-ldap php-odbc php-pear php-<span class=\"keyword\">xml</span> <span class=\"title\">php-xmlrpc</span> php-mbstring php-bcmath php-mhash -y</div><div class=\"line\">systemctl restart mariadb  <span class=\"comment\">#重启MariaDB</span></div><div class=\"line\">systemctl enable mariadb <span class=\"comment\">#设置开机启动</span></div><div class=\"line\">systemctl <span class=\"literal\">start</span> httpd <span class=\"comment\">#启动apache</span></div><div class=\"line\">systemctl enable httpd <span class=\"comment\">#设置apache开机启动</span></div></pre></td></tr></table></figure>\n<p>在客户端浏览器中打开服务器IP地址，会出现测试界面，说明apache安装成功</p>\n<hr>\n<h2 id=\"配置篇\"><a href=\"#配置篇\" class=\"headerlink\" title=\"配置篇:\"></a>配置篇:</h2><h3 id=\"一、Apache配置\"><a href=\"#一、Apache配置\" class=\"headerlink\" title=\"一、Apache配置\"></a>一、Apache配置</h3><p><code>vim /etc/httpd/conf/httpd.conf</code> 编辑配置文件</p>\n<ul>\n<li>ServerSignature On  #添加，在错误页中显示Apache的版本，Off为不显示</li>\n<li>Options Indexes FollowSymLinks  #修改为：Options Includes ExecCGI FollowSymLinks（允许服务器执行CGI及SSI，禁止列出目录）</li>\n<li>#AddHandler cgi-script .cgi　取消注释（允许扩展名为.pl的CGI脚本运行）</li>\n<li>AllowOverride None　 #修改为：AllowOverride All （允许.htaccess）</li>\n<li>AddDefaultCharset UTF-8　#修改为：AddDefaultCharset GB2312　（添加GB2312为默认编码）</li>\n<li>#Options Indexes FollowSymLinks   #修改为 Options FollowSymLinks（不在浏览器上显示树状目录结构）</li>\n<li>DirectoryIndex index.html   #修改为：DirectoryIndex index.html index.htm</li>\n<li>Default.html Default.htmindex.php（设置默认首页文件，增加index.php）</li>\n<li>MaxKeepAliveRequests 500  #添加MaxKeepAliveRequests 500 （增加同时连接数）</li>\n</ul>\n<p>:wq! #保存退出<br><code>systemctl restart httpd</code>重启apache<br><code>rm -f /etc/httpd/conf.d/welcome.conf /var/www/error/noindex.html</code> 删除默认测试页</p>\n<hr>\n<h3 id=\"二、php配置\"><a href=\"#二、php配置\" class=\"headerlink\" title=\"二、php配置\"></a>二、php配置</h3><p><code>vim /etc/php.ini</code> 编辑配置文件</p>\n<ul>\n<li>date.timezone = PRC #把前面的分号去掉，改为date.timezone = PRC</li>\n<li><p>(这里列出了PHP禁用的函数，如果某些程序需要用到这个函数，可以删除，取消禁用。)</p>\n<figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">disable_functions = passthru,<span class=\"keyword\">exec</span>,<span class=\"keyword\">system</span>,<span class=\"keyword\">chroot</span>,scandir,chgrp,<span class=\"keyword\">chown</span>,shell_exec,proc_open,proc_get_status,ini_alter,ini_alter,ini_restore,dl,openlog,syslog,<span class=\"keyword\">readlink</span>,<span class=\"keyword\">symlink</span>,popepassthru,stream_socket_server,escapeshellcmd,dll,popen,disk_free_space,checkdnsrr,checkdnsrr,<span class=\"keyword\">getservbyname</span>,<span class=\"keyword\">getservbyport</span>,disk_total_space,posix_ctermid,posix_get_last_error,posix_getcwd, posix_getegid,posix_geteuid,posix_getgid, posix_getgrgid,posix_getgrnam,posix_getgroups,posix_getlogin,posix_getpgid,posix_getpgrp,posix_getpid, posix_getppid,posix_getpwnam,posix_getpwuid, posix_getrlimit, posix_getsid,posix_getuid,posix_isatty, posix_kill,posix_mkfifo,posix_setegid,posix_seteuid,posix_setgid, posix_setpgid,posix_setsid,posix_setuid,posix_strerror,posix_times,posix_ttyname,posix_uname</div></pre></td></tr></table></figure>\n</li>\n<li><p>expose_php = Off #禁止显示php版本的信息</p>\n</li>\n<li>short_open_tag = ON #支持php短标签</li>\n<li>open_basedir = .:/tmp/  (设置表示允许访问当前目录(即PHP脚本文件所在之目录)和/tmp/目录,可以防止php木马跨站,如果改了之后安装程序有问题(例如：织梦内容管理系统)，可以注销此行，或者直接写上程序的目录/data/www.osyunwei.com/:/tmp/)</li>\n<li>:wq! #保存退出<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attribute\">systemctl</span> restart mariadb <span class=\"comment\">#重启MariaDB</span></div><div class=\"line\">systemctl restart httpd <span class=\"comment\">#重启apache</span></div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>测试篇<br><figure class=\"highlight plain\"><figcaption><span>/var/www/html</span></figcaption><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">vim index.php #输入下面内容</div></pre></td></tr></table></figure></p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;?php</span></div><div class=\"line\">phpinfo();</div><div class=\"line\"><span class=\"meta\">?&gt;</span></div></pre></td></tr></table></figure>\n<p>:wq! #保存退出<br>在客户端浏览器输入服务器IP地址，可以看到相关的配置信息！</p>\n<p>注意：apache默认的程序目录是<strong>/var/www/html</strong><br>权限设置：<code>chown apache.apache -R /var/www/html</code></p>\n<p>参考：<a href=\"http://www.osyunwei.com/archives/7829.html\" target=\"_blank\" rel=\"external\">http://www.osyunwei.com/archives/7829.html</a></p>\n<hr>\n","excerpt":"","more":"<h1 id=\"CentOS-7搭建LAMP环境-Apache-PHP-MariaDB\"><a href=\"#CentOS-7搭建LAMP环境-Apache-PHP-MariaDB\" class=\"headerlink\" title=\"CentOS 7搭建LAMP环境(Apache+PHP+MariaDB)\"></a>CentOS 7搭建LAMP环境(Apache+PHP+MariaDB)</h1><p>在CentOS上搭建PHP服务器环境,可以使用一键自动部署环境的工具，请参见网友开发的这个工具LAMP，LNMP，LNAMP<br><strong><a href=\"http://www.centos.bz/2013/08/ezhttp-tutorial/\">http://www.centos.bz/2013/08/ezhttp-tutorial/</a></strong></p>\n<h2 id=\"准备篇（可跳过此步）：\"><a href=\"#准备篇（可跳过此步）：\" class=\"headerlink\" title=\"准备篇（可跳过此步）：\"></a>准备篇（可跳过此步）：</h2><h3 id=\"一、配置防火墙，开启80端口、3306端口\"><a href=\"#一、配置防火墙，开启80端口、3306端口\" class=\"headerlink\" title=\"一、配置防火墙，开启80端口、3306端口\"></a>一、配置防火墙，开启80端口、3306端口</h3><p>CentOS 7默认使用的是firewall作为防火墙，这里改为iptables防火墙。</p>\n<h4 id=\"1、关闭firewall：\"><a href=\"#1、关闭firewall：\" class=\"headerlink\" title=\"1、关闭firewall：\"></a>1、关闭firewall：</h4><figure class=\"highlight gauss\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">systemctl <span class=\"keyword\">stop</span> firewalld.service <span class=\"meta\">#停止firewall</span></div><div class=\"line\">systemctl <span class=\"keyword\">disable</span> firewalld.service <span class=\"meta\">#禁止firewall开机启动</span></div></pre></td></tr></table></figure>\n<h4 id=\"2、安装iptables防火墙\"><a href=\"#2、安装iptables防火墙\" class=\"headerlink\" title=\"2、安装iptables防火墙\"></a>2、安装iptables防火墙</h4><figure class=\"highlight cmake\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">yum <span class=\"keyword\">install</span> iptables-services <span class=\"comment\">#安装</span></div><div class=\"line\">vim /etc/sysconfig/iptables <span class=\"comment\">#编辑防火墙配置文件</span></div></pre></td></tr></table></figure>\n<p>增加规则：<br><figure class=\"highlight pf\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">-A INPUT -m <span class=\"keyword\">state</span> --state NEW -m tcp -p tcp --dport <span class=\"number\">22</span> -j ACCEPT</div><div class=\"line\">-A INPUT -m <span class=\"keyword\">state</span> --state NEW -m tcp -p tcp --dport <span class=\"number\">80</span> -j ACCEPT</div><div class=\"line\">-A INPUT -m <span class=\"keyword\">state</span> --state NEW -m tcp -p tcp --dport <span class=\"number\">3306</span> -j ACCEPT</div></pre></td></tr></table></figure></p>\n<p>:wq! #保存退出<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">systemctl restart iptables <span class=\"comment\">#最后重启防火墙使配置生效</span></div><div class=\"line\">systemctl <span class=\"built_in\">enable</span> iptables <span class=\"comment\">#设置防火墙开机启动</span></div></pre></td></tr></table></figure></p>\n<h3 id=\"二、关闭SELINUX\"><a href=\"#二、关闭SELINUX\" class=\"headerlink\" title=\"二、关闭SELINUX\"></a>二、关闭SELINUX</h3><figure class=\"highlight dts\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">vim <span class=\"meta-keyword\">/etc/</span>selinux/config</div><div class=\"line\"><span class=\"meta\">#SELINUX=enforcing #注释掉</span></div><div class=\"line\"><span class=\"meta\">#SELINUXTYPE=targeted #注释掉</span></div><div class=\"line\">SELINUX=disabled <span class=\"meta\">#增加</span></div></pre></td></tr></table></figure>\n<p>:wq! #保存退出</p>\n<h2 id=\"setenforce-0-使配置立即生效\"><a href=\"#setenforce-0-使配置立即生效\" class=\"headerlink\" title=\"setenforce 0 #使配置立即生效\"></a><code>setenforce 0</code> #使配置立即生效</h2><h2 id=\"安装篇：\"><a href=\"#安装篇：\" class=\"headerlink\" title=\"安装篇：\"></a>安装篇：</h2><p>一、安装MariaDB<br>CentOS 7.0中，已经使用MariaDB替代了MySQL数据库</p>\n<h4 id=\"1、安装MariaDB\"><a href=\"#1、安装MariaDB\" class=\"headerlink\" title=\"1、安装MariaDB\"></a>1、安装MariaDB</h4><figure class=\"highlight armasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"symbol\">yum</span> install <span class=\"keyword\">mariadb </span><span class=\"keyword\">mariadb-server </span>-y</div><div class=\"line\"><span class=\"symbol\">systemctl</span> start <span class=\"keyword\">mariadb </span>#启动<span class=\"keyword\">MariaDB</span></div></pre></td></tr></table></figure>\n<p><code>cp /usr/share/mysql/my-huge.cnf /etc/my.cnf</code> 拷贝配置文件（注意：如果/etc目录下面默认有一个my.cnf，直接覆盖即可）</p>\n<h4 id=\"2、为root账户设置密码\"><a href=\"#2、为root账户设置密码\" class=\"headerlink\" title=\"2、为root账户设置密码\"></a>2、为root账户设置密码</h4><p><code>mysql_secure_installation</code></p>\n<ul>\n<li>回车，根据提示输入Y</li>\n<li>输入2次密码，回车</li>\n<li>根据提示一路输入Y</li>\n<li>最后出现：Thanks for using MySQL!</li>\n<li>MariaDB密码设置完成，重新启动 MariaDB：<br><code>systemctl restart mariadb</code> #重启MariaDB</li>\n</ul>\n<h4 id=\"3、安装Apache和PHP\"><a href=\"#3、安装Apache和PHP\" class=\"headerlink\" title=\"3、安装Apache和PHP\"></a>3、安装Apache和PHP</h4><figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">yum install http php php-mysql php-gd libjpeg* php-ldap php-odbc php-pear php-<span class=\"keyword\">xml</span> <span class=\"title\">php-xmlrpc</span> php-mbstring php-bcmath php-mhash -y</div><div class=\"line\">systemctl restart mariadb  <span class=\"comment\">#重启MariaDB</span></div><div class=\"line\">systemctl enable mariadb <span class=\"comment\">#设置开机启动</span></div><div class=\"line\">systemctl <span class=\"literal\">start</span> httpd <span class=\"comment\">#启动apache</span></div><div class=\"line\">systemctl enable httpd <span class=\"comment\">#设置apache开机启动</span></div></pre></td></tr></table></figure>\n<p>在客户端浏览器中打开服务器IP地址，会出现测试界面，说明apache安装成功</p>\n<hr>\n<h2 id=\"配置篇\"><a href=\"#配置篇\" class=\"headerlink\" title=\"配置篇:\"></a>配置篇:</h2><h3 id=\"一、Apache配置\"><a href=\"#一、Apache配置\" class=\"headerlink\" title=\"一、Apache配置\"></a>一、Apache配置</h3><p><code>vim /etc/httpd/conf/httpd.conf</code> 编辑配置文件</p>\n<ul>\n<li>ServerSignature On  #添加，在错误页中显示Apache的版本，Off为不显示</li>\n<li>Options Indexes FollowSymLinks  #修改为：Options Includes ExecCGI FollowSymLinks（允许服务器执行CGI及SSI，禁止列出目录）</li>\n<li>#AddHandler cgi-script .cgi　取消注释（允许扩展名为.pl的CGI脚本运行）</li>\n<li>AllowOverride None　 #修改为：AllowOverride All （允许.htaccess）</li>\n<li>AddDefaultCharset UTF-8　#修改为：AddDefaultCharset GB2312　（添加GB2312为默认编码）</li>\n<li>#Options Indexes FollowSymLinks   #修改为 Options FollowSymLinks（不在浏览器上显示树状目录结构）</li>\n<li>DirectoryIndex index.html   #修改为：DirectoryIndex index.html index.htm</li>\n<li>Default.html Default.htmindex.php（设置默认首页文件，增加index.php）</li>\n<li>MaxKeepAliveRequests 500  #添加MaxKeepAliveRequests 500 （增加同时连接数）</li>\n</ul>\n<p>:wq! #保存退出<br><code>systemctl restart httpd</code>重启apache<br><code>rm -f /etc/httpd/conf.d/welcome.conf /var/www/error/noindex.html</code> 删除默认测试页</p>\n<hr>\n<h3 id=\"二、php配置\"><a href=\"#二、php配置\" class=\"headerlink\" title=\"二、php配置\"></a>二、php配置</h3><p><code>vim /etc/php.ini</code> 编辑配置文件</p>\n<ul>\n<li>date.timezone = PRC #把前面的分号去掉，改为date.timezone = PRC</li>\n<li><p>(这里列出了PHP禁用的函数，如果某些程序需要用到这个函数，可以删除，取消禁用。)</p>\n<figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">disable_functions = passthru,<span class=\"keyword\">exec</span>,<span class=\"keyword\">system</span>,<span class=\"keyword\">chroot</span>,scandir,chgrp,<span class=\"keyword\">chown</span>,shell_exec,proc_open,proc_get_status,ini_alter,ini_alter,ini_restore,dl,openlog,syslog,<span class=\"keyword\">readlink</span>,<span class=\"keyword\">symlink</span>,popepassthru,stream_socket_server,escapeshellcmd,dll,popen,disk_free_space,checkdnsrr,checkdnsrr,<span class=\"keyword\">getservbyname</span>,<span class=\"keyword\">getservbyport</span>,disk_total_space,posix_ctermid,posix_get_last_error,posix_getcwd, posix_getegid,posix_geteuid,posix_getgid, posix_getgrgid,posix_getgrnam,posix_getgroups,posix_getlogin,posix_getpgid,posix_getpgrp,posix_getpid, posix_getppid,posix_getpwnam,posix_getpwuid, posix_getrlimit, posix_getsid,posix_getuid,posix_isatty, posix_kill,posix_mkfifo,posix_setegid,posix_seteuid,posix_setgid, posix_setpgid,posix_setsid,posix_setuid,posix_strerror,posix_times,posix_ttyname,posix_uname</div></pre></td></tr></table></figure>\n</li>\n<li><p>expose_php = Off #禁止显示php版本的信息</p>\n</li>\n<li>short_open_tag = ON #支持php短标签</li>\n<li>open_basedir = .:/tmp/  (设置表示允许访问当前目录(即PHP脚本文件所在之目录)和/tmp/目录,可以防止php木马跨站,如果改了之后安装程序有问题(例如：织梦内容管理系统)，可以注销此行，或者直接写上程序的目录/data/www.osyunwei.com/:/tmp/)</li>\n<li>:wq! #保存退出<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attribute\">systemctl</span> restart mariadb <span class=\"comment\">#重启MariaDB</span></div><div class=\"line\">systemctl restart httpd <span class=\"comment\">#重启apache</span></div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>测试篇<br><figure class=\"highlight plain\"><figcaption><span>/var/www/html</span></figcaption><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">vim index.php #输入下面内容</div></pre></td></tr></table></figure></p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;?php</span></div><div class=\"line\">phpinfo();</div><div class=\"line\"><span class=\"meta\">?&gt;</span></div></pre></td></tr></table></figure>\n<p>:wq! #保存退出<br>在客户端浏览器输入服务器IP地址，可以看到相关的配置信息！</p>\n<p>注意：apache默认的程序目录是<strong>/var/www/html</strong><br>权限设置：<code>chown apache.apache -R /var/www/html</code></p>\n<p>参考：<a href=\"http://www.osyunwei.com/archives/7829.html\">http://www.osyunwei.com/archives/7829.html</a></p>\n<hr>\n"},{"title":"CentOS上搭建PHP环境","abbrlink":36733,"date":"2016-11-02T04:21:24.000Z","_content":"\n在CentOS上搭建PHP服务器环境,可以使用一键自动部署环境的工具，请参见网友开发的这个工具LAMP，LNMP，LNAMP\n**http://www.centos.bz/2013/08/ezhttp-tutorial/**\n \n安装:\n\n```\nyum install httpd httpd-devel\nyum install php php-devel\nyum install php-mysql php-gd php-imap php-ldap php-odbc php-pear php-xml php-xmlrpc\nyum install mysql mysql-server\n/etc/init.d/mysqld start\n/etc/init.d/httpd restart\n```\n\n此时可以在目录：/var/www/html/下建立一个PHP文件\n代码：\n\n`<?php phpinfo(); ?>`\n\n然后访问这个文件，就能看到PHP的一些信息，php.ini配置文件的路径可以在这个页面上看到\n\n \n**测试mysql是否链接成功的php代码**\n\n```php\n<?php\n$con = mysql_connect(\"10.0.@.@@\",\"@@\",\"@@\");\nif (!$con)\n  {\n  die('Could not connect: ' . mysql_error());\n  }\n \nmysql_select_db(\"mydb\", $con);\n \n$result = mysql_query(\"SELECT * FROM sys_user\");\n \nwhile($row = mysql_fetch_array($result))\n  {\n  echo $row['UserName'] . \" \" . $row['PassWord'] . \" \" . $row['id'];\n  echo \"<br />\";\n  }\n \nmysql_close($con);\n?>\n```\n\n可以把上面的代码传入目录/var/www/html/\n就可以看到执行情况\n\n\n\n---\n","source":"_posts/环境搭建/2016-11-02-CentOS搭建PHP环境.md","raw":"---\ntitle: CentOS上搭建PHP环境\ncategories:\n  - 环境搭建\ntags:\n  - Centos PHP\nabbrlink: 36733\ndate: 2016-11-02 12:21:24\n---\n\n在CentOS上搭建PHP服务器环境,可以使用一键自动部署环境的工具，请参见网友开发的这个工具LAMP，LNMP，LNAMP\n**http://www.centos.bz/2013/08/ezhttp-tutorial/**\n \n安装:\n\n```\nyum install httpd httpd-devel\nyum install php php-devel\nyum install php-mysql php-gd php-imap php-ldap php-odbc php-pear php-xml php-xmlrpc\nyum install mysql mysql-server\n/etc/init.d/mysqld start\n/etc/init.d/httpd restart\n```\n\n此时可以在目录：/var/www/html/下建立一个PHP文件\n代码：\n\n`<?php phpinfo(); ?>`\n\n然后访问这个文件，就能看到PHP的一些信息，php.ini配置文件的路径可以在这个页面上看到\n\n \n**测试mysql是否链接成功的php代码**\n\n```php\n<?php\n$con = mysql_connect(\"10.0.@.@@\",\"@@\",\"@@\");\nif (!$con)\n  {\n  die('Could not connect: ' . mysql_error());\n  }\n \nmysql_select_db(\"mydb\", $con);\n \n$result = mysql_query(\"SELECT * FROM sys_user\");\n \nwhile($row = mysql_fetch_array($result))\n  {\n  echo $row['UserName'] . \" \" . $row['PassWord'] . \" \" . $row['id'];\n  echo \"<br />\";\n  }\n \nmysql_close($con);\n?>\n```\n\n可以把上面的代码传入目录/var/www/html/\n就可以看到执行情况\n\n\n\n---\n","slug":"环境搭建-2016-11-02-CentOS搭建PHP环境","published":1,"updated":"2016-11-13T03:36:30.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civi8oujh002e2c6n8qdzyr6i","content":"<p>在CentOS上搭建PHP服务器环境,可以使用一键自动部署环境的工具，请参见网友开发的这个工具LAMP，LNMP，LNAMP<br><strong><a href=\"http://www.centos.bz/2013/08/ezhttp-tutorial/\" target=\"_blank\" rel=\"external\">http://www.centos.bz/2013/08/ezhttp-tutorial/</a></strong></p>\n<p>安装:</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">yum <span class=\"keyword\">install</span> httpd httpd-devel</div><div class=\"line\">yum <span class=\"keyword\">install</span> php php-devel</div><div class=\"line\">yum <span class=\"keyword\">install</span> php-mysql php-gd php-imap php-ldap php-odbc php-pear php-<span class=\"keyword\">xml</span> php-xmlrpc</div><div class=\"line\">yum <span class=\"keyword\">install</span> mysql mysql-<span class=\"keyword\">server</span></div><div class=\"line\">/etc/init.d/mysqld <span class=\"keyword\">start</span></div><div class=\"line\">/etc/init.d/httpd restart</div></pre></td></tr></table></figure>\n<p>此时可以在目录：/var/www/html/下建立一个PHP文件<br>代码：</p>\n<p><code>&lt;?php phpinfo(); ?&gt;</code></p>\n<p>然后访问这个文件，就能看到PHP的一些信息，php.ini配置文件的路径可以在这个页面上看到</p>\n<p><strong>测试mysql是否链接成功的php代码</strong></p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;?php</span></div><div class=\"line\">$con = mysql_connect(<span class=\"string\">\"10.0.@.@@\"</span>,<span class=\"string\">\"@@\"</span>,<span class=\"string\">\"@@\"</span>);</div><div class=\"line\"><span class=\"keyword\">if</span> (!$con)</div><div class=\"line\">  &#123;</div><div class=\"line\">  <span class=\"keyword\">die</span>(<span class=\"string\">'Could not connect: '</span> . mysql_error());</div><div class=\"line\">  &#125;</div><div class=\"line\"> </div><div class=\"line\">mysql_select_db(<span class=\"string\">\"mydb\"</span>, $con);</div><div class=\"line\"> </div><div class=\"line\">$result = mysql_query(<span class=\"string\">\"SELECT * FROM sys_user\"</span>);</div><div class=\"line\"> </div><div class=\"line\"><span class=\"keyword\">while</span>($row = mysql_fetch_array($result))</div><div class=\"line\">  &#123;</div><div class=\"line\">  <span class=\"keyword\">echo</span> $row[<span class=\"string\">'UserName'</span>] . <span class=\"string\">\" \"</span> . $row[<span class=\"string\">'PassWord'</span>] . <span class=\"string\">\" \"</span> . $row[<span class=\"string\">'id'</span>];</div><div class=\"line\">  <span class=\"keyword\">echo</span> <span class=\"string\">\"&lt;br /&gt;\"</span>;</div><div class=\"line\">  &#125;</div><div class=\"line\"> </div><div class=\"line\">mysql_close($con);</div><div class=\"line\"><span class=\"meta\">?&gt;</span></div></pre></td></tr></table></figure>\n<p>可以把上面的代码传入目录/var/www/html/<br>就可以看到执行情况</p>\n<hr>\n","excerpt":"","more":"<p>在CentOS上搭建PHP服务器环境,可以使用一键自动部署环境的工具，请参见网友开发的这个工具LAMP，LNMP，LNAMP<br><strong><a href=\"http://www.centos.bz/2013/08/ezhttp-tutorial/\">http://www.centos.bz/2013/08/ezhttp-tutorial/</a></strong></p>\n<p>安装:</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">yum <span class=\"keyword\">install</span> httpd httpd-devel</div><div class=\"line\">yum <span class=\"keyword\">install</span> php php-devel</div><div class=\"line\">yum <span class=\"keyword\">install</span> php-mysql php-gd php-imap php-ldap php-odbc php-pear php-<span class=\"keyword\">xml</span> php-xmlrpc</div><div class=\"line\">yum <span class=\"keyword\">install</span> mysql mysql-<span class=\"keyword\">server</span></div><div class=\"line\">/etc/init.d/mysqld <span class=\"keyword\">start</span></div><div class=\"line\">/etc/init.d/httpd restart</div></pre></td></tr></table></figure>\n<p>此时可以在目录：/var/www/html/下建立一个PHP文件<br>代码：</p>\n<p><code>&lt;?php phpinfo(); ?&gt;</code></p>\n<p>然后访问这个文件，就能看到PHP的一些信息，php.ini配置文件的路径可以在这个页面上看到</p>\n<p><strong>测试mysql是否链接成功的php代码</strong></p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;?php</span></div><div class=\"line\">$con = mysql_connect(<span class=\"string\">\"10.0.@.@@\"</span>,<span class=\"string\">\"@@\"</span>,<span class=\"string\">\"@@\"</span>);</div><div class=\"line\"><span class=\"keyword\">if</span> (!$con)</div><div class=\"line\">  &#123;</div><div class=\"line\">  <span class=\"keyword\">die</span>(<span class=\"string\">'Could not connect: '</span> . mysql_error());</div><div class=\"line\">  &#125;</div><div class=\"line\"> </div><div class=\"line\">mysql_select_db(<span class=\"string\">\"mydb\"</span>, $con);</div><div class=\"line\"> </div><div class=\"line\">$result = mysql_query(<span class=\"string\">\"SELECT * FROM sys_user\"</span>);</div><div class=\"line\"> </div><div class=\"line\"><span class=\"keyword\">while</span>($row = mysql_fetch_array($result))</div><div class=\"line\">  &#123;</div><div class=\"line\">  <span class=\"keyword\">echo</span> $row[<span class=\"string\">'UserName'</span>] . <span class=\"string\">\" \"</span> . $row[<span class=\"string\">'PassWord'</span>] . <span class=\"string\">\" \"</span> . $row[<span class=\"string\">'id'</span>];</div><div class=\"line\">  <span class=\"keyword\">echo</span> <span class=\"string\">\"&lt;br /&gt;\"</span>;</div><div class=\"line\">  &#125;</div><div class=\"line\"> </div><div class=\"line\">mysql_close($con);</div><div class=\"line\"><span class=\"meta\">?&gt;</span></div></pre></td></tr></table></figure>\n<p>可以把上面的代码传入目录/var/www/html/<br>就可以看到执行情况</p>\n<hr>\n"},{"title":"Node.js开发环境搭建","abbrlink":34025,"date":"2016-11-02T03:44:34.000Z","_content":"\n\n官网：https://nodejs.org \n# Mac、Windows\n官网下载对应的安装包安装即可。\n带有**Source Code**字样的才是源码；带有**linux** 字样的是编译好的文件，解压**bin**目录下可以看到**node、npm** 文件，复制到**/usr/local/bin/**下即可，**node_modules**目录是模块（不推荐，很多库及模块没有安装，这种方法我没有安装成功）。\n\n---\n\n# Ubuntu 16 、CentOS 7 \n### 法一：apt-get命令安装\n\n```\napt install nodejs-legacy nodejs npm\n```\n\n### 法二：源码安装(用root用户操作)\n \n**（6版本以下要升级g++及其他库，去官网下载带linux字样的编译好的版本简单点）**\n### gcc版本要4.8以上\nCentos: **yum install g++ cmake gcc-c++ gmake -y**           \n\nUbuntu：**apt-get install python build-essential gcc g++**   \n\n```\ngit clone https://github.com/nodejs/node.git\nchmod -R 755 node\ncd node\n./configure    #指定安装目录加上--prefix=/usr/local/node/版本号\nmake\nmake install\n```\n\n也可在**https://nodejs.org/en/download/**下载Nodejs带**Source Code**字样的源码，`tar -zxvf filename` 解压，之后的操作是一样的。\n\n查看 node 版本：`node --version`\n\n命令无法运行的话,需要设置nodejs环境变量：\n`vim /etc/profile`\n在空行出添加以下内容：\n\n```\n\t#set for nodejs\n\t#若./configure时指定了安装路径则改为安装路径：/usr/local/node/版本号\n\texport NODE_HOME=/usr/bin/node  \t\n\texport PATH=$NODE_HOME/bin:$PATH\n```\n\n保存并退出，编译**/etc/profile** 使配置生效\n\n`source /etc/profile`\n\n现在就可以正常使用啦！\n\nnpm模块安装路径\n默认：**/usr/local/lib/node_modules**\n\n指定路径：**/usr/local/node/版本号/lib/node_modules**\n\n--------------------------------------------------------------------------------\n\n# 淘宝 NPM 镜像源\n国内直接使用 npm 的官方镜像可能非常慢的，可以使用淘宝 NPM 镜像。\n淘宝 NPM 镜像是一个完整 npmjs.org 镜像，你可以用此代替官方版本(只读)，同步频率目前为 10分钟 一次以保证尽量与官方服务同步。\n**http://npm.taobao.org/**\n### 方法一、通过config命令\n\n```\nnpm config set registry https://registry.npm.taobao.org\nnpm info underscore #（如果上面配置正确这个命令会有字符串response） \n```\n\n### 方法二、命令行指定\n`npm --registry https://registry.npm.taobao.org info underscore` \n\n### 方法三、编辑 ~/.npmrc 加入下面内容\n`registry = https://registry.npm.taobao.org`\n\n你可以使用淘宝定制的 cnpm (gzip 压缩支持) 命令行工具代替默认的 npm:\n(不推荐，这样自由手动安装是用cnpm,脚本安装还是用的默认npm)\n`npm install -g cnpm --registry=https://registry.npm.taobao.org`\n\n这样就可以使用 cnpm 命令来安装模块了：\n\n`cnpm install [name]`\n\n\nNode.js教程:\nhttp://www.runoob.com/nodejs/nodejs-npm.html\n\n---","source":"_posts/环境搭建/2016-11-02-Node-js开发环境搭建.md","raw":"---\ntitle: Node.js开发环境搭建\ncategories:\n  - 环境搭建\ntags:\n  - Node.js\nabbrlink: 34025\ndate: 2016-11-02 11:44:34\n---\n\n\n官网：https://nodejs.org \n# Mac、Windows\n官网下载对应的安装包安装即可。\n带有**Source Code**字样的才是源码；带有**linux** 字样的是编译好的文件，解压**bin**目录下可以看到**node、npm** 文件，复制到**/usr/local/bin/**下即可，**node_modules**目录是模块（不推荐，很多库及模块没有安装，这种方法我没有安装成功）。\n\n---\n\n# Ubuntu 16 、CentOS 7 \n### 法一：apt-get命令安装\n\n```\napt install nodejs-legacy nodejs npm\n```\n\n### 法二：源码安装(用root用户操作)\n \n**（6版本以下要升级g++及其他库，去官网下载带linux字样的编译好的版本简单点）**\n### gcc版本要4.8以上\nCentos: **yum install g++ cmake gcc-c++ gmake -y**           \n\nUbuntu：**apt-get install python build-essential gcc g++**   \n\n```\ngit clone https://github.com/nodejs/node.git\nchmod -R 755 node\ncd node\n./configure    #指定安装目录加上--prefix=/usr/local/node/版本号\nmake\nmake install\n```\n\n也可在**https://nodejs.org/en/download/**下载Nodejs带**Source Code**字样的源码，`tar -zxvf filename` 解压，之后的操作是一样的。\n\n查看 node 版本：`node --version`\n\n命令无法运行的话,需要设置nodejs环境变量：\n`vim /etc/profile`\n在空行出添加以下内容：\n\n```\n\t#set for nodejs\n\t#若./configure时指定了安装路径则改为安装路径：/usr/local/node/版本号\n\texport NODE_HOME=/usr/bin/node  \t\n\texport PATH=$NODE_HOME/bin:$PATH\n```\n\n保存并退出，编译**/etc/profile** 使配置生效\n\n`source /etc/profile`\n\n现在就可以正常使用啦！\n\nnpm模块安装路径\n默认：**/usr/local/lib/node_modules**\n\n指定路径：**/usr/local/node/版本号/lib/node_modules**\n\n--------------------------------------------------------------------------------\n\n# 淘宝 NPM 镜像源\n国内直接使用 npm 的官方镜像可能非常慢的，可以使用淘宝 NPM 镜像。\n淘宝 NPM 镜像是一个完整 npmjs.org 镜像，你可以用此代替官方版本(只读)，同步频率目前为 10分钟 一次以保证尽量与官方服务同步。\n**http://npm.taobao.org/**\n### 方法一、通过config命令\n\n```\nnpm config set registry https://registry.npm.taobao.org\nnpm info underscore #（如果上面配置正确这个命令会有字符串response） \n```\n\n### 方法二、命令行指定\n`npm --registry https://registry.npm.taobao.org info underscore` \n\n### 方法三、编辑 ~/.npmrc 加入下面内容\n`registry = https://registry.npm.taobao.org`\n\n你可以使用淘宝定制的 cnpm (gzip 压缩支持) 命令行工具代替默认的 npm:\n(不推荐，这样自由手动安装是用cnpm,脚本安装还是用的默认npm)\n`npm install -g cnpm --registry=https://registry.npm.taobao.org`\n\n这样就可以使用 cnpm 命令来安装模块了：\n\n`cnpm install [name]`\n\n\nNode.js教程:\nhttp://www.runoob.com/nodejs/nodejs-npm.html\n\n---","slug":"环境搭建-2016-11-02-Node-js开发环境搭建","published":1,"updated":"2016-11-13T03:36:30.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civi8ouji002h2c6n0cdwpuyf","content":"<p>官网：<a href=\"https://nodejs.org\" target=\"_blank\" rel=\"external\">https://nodejs.org</a> </p>\n<h1 id=\"Mac、Windows\"><a href=\"#Mac、Windows\" class=\"headerlink\" title=\"Mac、Windows\"></a>Mac、Windows</h1><p>官网下载对应的安装包安装即可。<br>带有<strong>Source Code</strong>字样的才是源码；带有<strong>linux</strong> 字样的是编译好的文件，解压<strong>bin</strong>目录下可以看到<strong>node、npm</strong> 文件，复制到<strong>/usr/local/bin/</strong>下即可，<strong>node_modules</strong>目录是模块（不推荐，很多库及模块没有安装，这种方法我没有安装成功）。</p>\n<hr>\n<h1 id=\"Ubuntu-16-、CentOS-7\"><a href=\"#Ubuntu-16-、CentOS-7\" class=\"headerlink\" title=\"Ubuntu 16 、CentOS 7\"></a>Ubuntu 16 、CentOS 7</h1><h3 id=\"法一：apt-get命令安装\"><a href=\"#法一：apt-get命令安装\" class=\"headerlink\" title=\"法一：apt-get命令安装\"></a>法一：apt-get命令安装</h3><figure class=\"highlight cmake\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">apt <span class=\"keyword\">install</span> nodejs-legacy nodejs npm</div></pre></td></tr></table></figure>\n<h3 id=\"法二：源码安装-用root用户操作\"><a href=\"#法二：源码安装-用root用户操作\" class=\"headerlink\" title=\"法二：源码安装(用root用户操作)\"></a>法二：源码安装(用root用户操作)</h3><p><strong>（6版本以下要升级g++及其他库，去官网下载带linux字样的编译好的版本简单点）</strong></p>\n<h3 id=\"gcc版本要4-8以上\"><a href=\"#gcc版本要4-8以上\" class=\"headerlink\" title=\"gcc版本要4.8以上\"></a>gcc版本要4.8以上</h3><p>Centos: <strong>yum install g++ cmake gcc-c++ gmake -y</strong>           </p>\n<p>Ubuntu：<strong>apt-get install python build-essential gcc g++</strong>   </p>\n<figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">git <span class=\"keyword\">clone</span> <span class=\"title\">https</span>://github.com/nodejs/<span class=\"keyword\">node</span>.<span class=\"title\">git</span></div><div class=\"line\">chmod -R <span class=\"number\">755</span> <span class=\"keyword\">node</span></div><div class=\"line\"><span class=\"title\">cd</span> <span class=\"keyword\">node</span></div><div class=\"line\"><span class=\"title\">./configure</span>    <span class=\"comment\">#指定安装目录加上--prefix=/usr/local/node/版本号</span></div><div class=\"line\">make</div><div class=\"line\">make install</div></pre></td></tr></table></figure>\n<p>也可在<strong><a href=\"https://nodejs.org/en/download/\" target=\"_blank\" rel=\"external\">https://nodejs.org/en/download/</a></strong>下载Nodejs带<strong>Source Code</strong>字样的源码，<code>tar -zxvf filename</code> 解压，之后的操作是一样的。</p>\n<p>查看 node 版本：<code>node --version</code></p>\n<p>命令无法运行的话,需要设置nodejs环境变量：<br><code>vim /etc/profile</code><br>在空行出添加以下内容：</p>\n<figure class=\"highlight gams\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">#<span class=\"keyword\">set</span> for <span class=\"comment\">nodejs</span></div><div class=\"line\">#若./configure时指定了安装路径则改为安装路径：/usr/local/node/版本号</div><div class=\"line\">export NODE_HOME=/usr/bin/node  \t</div><div class=\"line\">export <span class=\"comment\">PATH=$NODE_HOME</span>/bin:$PATH</div></pre></td></tr></table></figure>\n<p>保存并退出，编译<strong>/etc/profile</strong> 使配置生效</p>\n<p><code>source /etc/profile</code></p>\n<p>现在就可以正常使用啦！</p>\n<p>npm模块安装路径<br>默认：<strong>/usr/local/lib/node_modules</strong></p>\n<p>指定路径：<strong>/usr/local/node/版本号/lib/node_modules</strong></p>\n<hr>\n<h1 id=\"淘宝-NPM-镜像源\"><a href=\"#淘宝-NPM-镜像源\" class=\"headerlink\" title=\"淘宝 NPM 镜像源\"></a>淘宝 NPM 镜像源</h1><p>国内直接使用 npm 的官方镜像可能非常慢的，可以使用淘宝 NPM 镜像。<br>淘宝 NPM 镜像是一个完整 npmjs.org 镜像，你可以用此代替官方版本(只读)，同步频率目前为 10分钟 一次以保证尽量与官方服务同步。<br><strong><a href=\"http://npm.taobao.org/\" target=\"_blank\" rel=\"external\">http://npm.taobao.org/</a></strong></p>\n<h3 id=\"方法一、通过config命令\"><a href=\"#方法一、通过config命令\" class=\"headerlink\" title=\"方法一、通过config命令\"></a>方法一、通过config命令</h3><figure class=\"highlight coffeescript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">npm</span> config set registry https:<span class=\"regexp\">//</span>registry.<span class=\"built_in\">npm</span>.taobao.org</div><div class=\"line\"><span class=\"built_in\">npm</span> info underscore <span class=\"comment\">#（如果上面配置正确这个命令会有字符串response）</span></div></pre></td></tr></table></figure>\n<h3 id=\"方法二、命令行指定\"><a href=\"#方法二、命令行指定\" class=\"headerlink\" title=\"方法二、命令行指定\"></a>方法二、命令行指定</h3><p><code>npm --registry https://registry.npm.taobao.org info underscore</code> </p>\n<h3 id=\"方法三、编辑-npmrc-加入下面内容\"><a href=\"#方法三、编辑-npmrc-加入下面内容\" class=\"headerlink\" title=\"方法三、编辑 ~/.npmrc 加入下面内容\"></a>方法三、编辑 ~/.npmrc 加入下面内容</h3><p><code>registry = https://registry.npm.taobao.org</code></p>\n<p>你可以使用淘宝定制的 cnpm (gzip 压缩支持) 命令行工具代替默认的 npm:<br>(不推荐，这样自由手动安装是用cnpm,脚本安装还是用的默认npm)<br><code>npm install -g cnpm --registry=https://registry.npm.taobao.org</code></p>\n<p>这样就可以使用 cnpm 命令来安装模块了：</p>\n<p><code>cnpm install [name]</code></p>\n<p>Node.js教程:<br><a href=\"http://www.runoob.com/nodejs/nodejs-npm.html\" target=\"_blank\" rel=\"external\">http://www.runoob.com/nodejs/nodejs-npm.html</a></p>\n<hr>\n","excerpt":"","more":"<p>官网：<a href=\"https://nodejs.org\">https://nodejs.org</a> </p>\n<h1 id=\"Mac、Windows\"><a href=\"#Mac、Windows\" class=\"headerlink\" title=\"Mac、Windows\"></a>Mac、Windows</h1><p>官网下载对应的安装包安装即可。<br>带有<strong>Source Code</strong>字样的才是源码；带有<strong>linux</strong> 字样的是编译好的文件，解压<strong>bin</strong>目录下可以看到<strong>node、npm</strong> 文件，复制到<strong>/usr/local/bin/</strong>下即可，<strong>node_modules</strong>目录是模块（不推荐，很多库及模块没有安装，这种方法我没有安装成功）。</p>\n<hr>\n<h1 id=\"Ubuntu-16-、CentOS-7\"><a href=\"#Ubuntu-16-、CentOS-7\" class=\"headerlink\" title=\"Ubuntu 16 、CentOS 7\"></a>Ubuntu 16 、CentOS 7</h1><h3 id=\"法一：apt-get命令安装\"><a href=\"#法一：apt-get命令安装\" class=\"headerlink\" title=\"法一：apt-get命令安装\"></a>法一：apt-get命令安装</h3><figure class=\"highlight cmake\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">apt <span class=\"keyword\">install</span> nodejs-legacy nodejs npm</div></pre></td></tr></table></figure>\n<h3 id=\"法二：源码安装-用root用户操作\"><a href=\"#法二：源码安装-用root用户操作\" class=\"headerlink\" title=\"法二：源码安装(用root用户操作)\"></a>法二：源码安装(用root用户操作)</h3><p><strong>（6版本以下要升级g++及其他库，去官网下载带linux字样的编译好的版本简单点）</strong></p>\n<h3 id=\"gcc版本要4-8以上\"><a href=\"#gcc版本要4-8以上\" class=\"headerlink\" title=\"gcc版本要4.8以上\"></a>gcc版本要4.8以上</h3><p>Centos: <strong>yum install g++ cmake gcc-c++ gmake -y</strong>           </p>\n<p>Ubuntu：<strong>apt-get install python build-essential gcc g++</strong>   </p>\n<figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">git <span class=\"keyword\">clone</span> <span class=\"title\">https</span>://github.com/nodejs/<span class=\"keyword\">node</span>.<span class=\"title\">git</span></div><div class=\"line\">chmod -R <span class=\"number\">755</span> <span class=\"keyword\">node</span></div><div class=\"line\"><span class=\"title\">cd</span> <span class=\"keyword\">node</span></div><div class=\"line\"><span class=\"title\">./configure</span>    <span class=\"comment\">#指定安装目录加上--prefix=/usr/local/node/版本号</span></div><div class=\"line\">make</div><div class=\"line\">make install</div></pre></td></tr></table></figure>\n<p>也可在<strong><a href=\"https://nodejs.org/en/download/\">https://nodejs.org/en/download/</a></strong>下载Nodejs带<strong>Source Code</strong>字样的源码，<code>tar -zxvf filename</code> 解压，之后的操作是一样的。</p>\n<p>查看 node 版本：<code>node --version</code></p>\n<p>命令无法运行的话,需要设置nodejs环境变量：<br><code>vim /etc/profile</code><br>在空行出添加以下内容：</p>\n<figure class=\"highlight gams\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">#<span class=\"keyword\">set</span> for <span class=\"comment\">nodejs</span></div><div class=\"line\">#若./configure时指定了安装路径则改为安装路径：/usr/local/node/版本号</div><div class=\"line\">export NODE_HOME=/usr/bin/node  \t</div><div class=\"line\">export <span class=\"comment\">PATH=$NODE_HOME</span>/bin:$PATH</div></pre></td></tr></table></figure>\n<p>保存并退出，编译<strong>/etc/profile</strong> 使配置生效</p>\n<p><code>source /etc/profile</code></p>\n<p>现在就可以正常使用啦！</p>\n<p>npm模块安装路径<br>默认：<strong>/usr/local/lib/node_modules</strong></p>\n<p>指定路径：<strong>/usr/local/node/版本号/lib/node_modules</strong></p>\n<hr>\n<h1 id=\"淘宝-NPM-镜像源\"><a href=\"#淘宝-NPM-镜像源\" class=\"headerlink\" title=\"淘宝 NPM 镜像源\"></a>淘宝 NPM 镜像源</h1><p>国内直接使用 npm 的官方镜像可能非常慢的，可以使用淘宝 NPM 镜像。<br>淘宝 NPM 镜像是一个完整 npmjs.org 镜像，你可以用此代替官方版本(只读)，同步频率目前为 10分钟 一次以保证尽量与官方服务同步。<br><strong><a href=\"http://npm.taobao.org/\">http://npm.taobao.org/</a></strong></p>\n<h3 id=\"方法一、通过config命令\"><a href=\"#方法一、通过config命令\" class=\"headerlink\" title=\"方法一、通过config命令\"></a>方法一、通过config命令</h3><figure class=\"highlight coffeescript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">npm</span> config set registry https:<span class=\"regexp\">//</span>registry.<span class=\"built_in\">npm</span>.taobao.org</div><div class=\"line\"><span class=\"built_in\">npm</span> info underscore <span class=\"comment\">#（如果上面配置正确这个命令会有字符串response）</span></div></pre></td></tr></table></figure>\n<h3 id=\"方法二、命令行指定\"><a href=\"#方法二、命令行指定\" class=\"headerlink\" title=\"方法二、命令行指定\"></a>方法二、命令行指定</h3><p><code>npm --registry https://registry.npm.taobao.org info underscore</code> </p>\n<h3 id=\"方法三、编辑-npmrc-加入下面内容\"><a href=\"#方法三、编辑-npmrc-加入下面内容\" class=\"headerlink\" title=\"方法三、编辑 ~/.npmrc 加入下面内容\"></a>方法三、编辑 ~/.npmrc 加入下面内容</h3><p><code>registry = https://registry.npm.taobao.org</code></p>\n<p>你可以使用淘宝定制的 cnpm (gzip 压缩支持) 命令行工具代替默认的 npm:<br>(不推荐，这样自由手动安装是用cnpm,脚本安装还是用的默认npm)<br><code>npm install -g cnpm --registry=https://registry.npm.taobao.org</code></p>\n<p>这样就可以使用 cnpm 命令来安装模块了：</p>\n<p><code>cnpm install [name]</code></p>\n<p>Node.js教程:<br><a href=\"http://www.runoob.com/nodejs/nodejs-npm.html\">http://www.runoob.com/nodejs/nodejs-npm.html</a></p>\n<hr>\n"},{"title":"Zabbix监控","abbrlink":27796,"date":"2016-11-08T03:57:22.000Z","_content":"\n# Zabbix 基础部分\n## Zabbix 简介\n  Zabbix 是一个高度集成的网络监控解决方案，可以提供企业级的开源分布式监控解决方案，由一个国外的团队持续维护更新，软件可以自由下载使用，运作团队靠提供收费的技术支持赢利\n  zabbix是一个基于Web界面的，提供分布式系统监控以及网络监视功能的企业级的开源解决方案。\n  zabbix能监视各种网络参数，保证服务器系统的安全运营，并提供灵活的通知机制以让系统管理员快速定位/解决存在的各种问题\n  zabbix主要由2部分构成zabbix server和zabbix agent，可选组建zabbix proxy\n  zabbix server可以通过SNMP，zabbix agent，fping端口监视等方法对远程服务器或网络状态完成监视，数据收集等功能。同时支持Linux以及Unix平台，Windows平台只能安装客户端\n\n### Zabbix 功能\n* ①具备常见的商业监控软件所具备的功能（主机的性能监控、网络设备性能监控、数据库、性能监控、FTP 等通用协议监控、多种告警方式、详细的报表图表绘制） \n* ②支持自动发现网络设备和服务器（可以通过配置自动发现服务器规则来实现） \n* ③支持自动发现（low discovery）key 实现动态监控项的批量监控（需写脚本） \n* ④支持分布式，能集中展示、管理分布式的监控点 \n* ⑤扩展性强，server 提供通用接口（api 功能），可以自己开发完善各类监控（根据相关接口编写程序实现）编写插件容易，可以自定义监控项，报警级别的设置。 \n* ⑥数据收集 \n\n\t1.可用和性能检测 ;支持snmp(包括trapping and polling)，IPMI，JMX，SSH，TELNET\n\t2.自定义的检测,自定义收集数据的频率 \n\t3.服务器/代理和客户端模式 \n\t4.灵活的触发器 ;可以定义非常灵活的问题阈值，称为触发器，从后端数据库的参考值 \n\t5.高可定制的报警 ;发送通知，可定制的报警升级，收件人，媒体类型 ;通知可以使用宏变量有用的变量\n\t6.自动操作包括远程命令 \n\t7.实时的绘图功能 ;监控项实时的将数据绘制在图形上面 \n\t8.WEB 监控能力 ;ZABBIX 可以模拟鼠标点击了一个网站，并检查返回值和响应时间\n\t9.Api 功能 ;应用api功能，可以方便的和其他系统结合，包括手机客户端的使用。\n \n更多功能请查看官网文档：http://www.zabbix.com/documentation.php\n\n### Zabbix优缺点\n#### 优点 \n　1、开源，无软件成本投入 \n　2、Server 对设备性能要求低 \n　3、支持设备多，自带多种监控模板 \n　4、支持分布式集中管理，有自动发现功能，可以实现自动化监控 \n　5、开放式接口，扩展性强，插件编写容易 \n　6、当监控的item 比较多服务器队列比较大时可以采用被动状态，被监控客户端主动从 \n　7、server 端去下载需要监控的item 然后取数据上传到server 端。这种方式对服务器的负载比较小。 \n　8、Api 的支持，方便与其他系统结合 \n#### 缺点 \n　　需在被监控主机上安装**agent**，所有数据都存在数据库里，产生的数据很大,瓶颈主要在数据库。\n\n### Zabbix监控原理:\nZabbix 通过C/S 模式采集数据，通过B/S模式在web 端展示和配置。 \n\n**被监控端**：主机通过安装agent 方式采集数据，网络设备通过SNMP 方式采集数据 \n**Server 端**：通过收集SNMP 和agent 发送的数据，写入数据库（MySQL，ORACLE 等），再通过php+apache 在web 前端展示。\n\n### Zabbix 运行条件:\n**Server**：Zabbix Server 需运行在LAMP（Linux+Apache+Mysql+PHP）环境下（或者LNMP），对硬件要求低 \n**Agent**：目前已有的agent 基本支持市面常见的OS，包含Linux、HPUX、Solaris、Sun、 \nwindows \n**SNMP**：支持各类常见的网络设备 ;SNMP(Simple Network Management Protocol,简单网络管理协议\n\n**Zabbix监控过程逻辑图 **\n![](http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7001.png)\n\n### 监控类型\n**硬件监控:**适用于物理机、远程管理卡（iDRAC），IPMI（只能平台管理接口） \n**ipmitools:**，MegaCli（查看Raid磁盘） \n**系统监控:** 监控cpt：lscpu、uptime、top、vmstat 1 、mpstat 1、htop \n**监控内存：** free -m\n**监控硬盘：**df -h、iotop \n**监控网络：**iftop、netstat、ss \n**应用服务监控：**nfs、MySQL、nginx、apache、php、rsync \n更详细的监控类型可以参考：http://www.abcdocker.com/abcdocker/1376\n\n所有监控范畴，都可以整合到Zabbix中 \n　　　硬件监控：Zabbix、IPMI、lnterface \n　　　系统监控：Zabbix、Agent、Interface \n　　　Java监控：Zabbix、JMX、lnterface \n　　　网络设备监控：Zabbix、SNMP、lnterface \n　　　应用服务监控：Zabbix、Agent、UserParameter \n　　　MySQL数据库监控：percona-monitoring-plulgins \n　　　URL监控：Zabbix Web监控 \n\n---\n## Zabbix 环境配置\nCentos 7 yum安装\n1、环境信息\n```\n[root@localhost ~]# cat /etc/redhat-release \nCentOS Linux release 7.2.1511 (Core) \n[root@localhost ~]# uname -r\n3.10.0-327.28.3.el7.x86_64```\n\n2、yum安装 \n我们使用阿里云yum源,官方yum源下载会比较慢。\n```\nrpm -ivh http://mirrors.aliyun.com/zabbix/zabbix/3.0/rhel/7/x86_64/zabbix-release-3.0-1.el7.noarch.rpm```\n下载release版本，会在yum.repos.d下面生成一个zabbix.repo的文件\n\n3、服务端安装相关软件包\n```\nyum install zabbix-server zabbix-web zabbix-server-mysql zabbix-web-mysql mariadb-server mariadb -y```\n注：如果Server端也需要监控则需要安装**zabbix-agent**;在Centos7中，mysql改名为**mariadb**\n\n4、修改PHP时区设置\n```\nsed -i 's@# php_value date.timezone Europe/Riga@php_value date.timezone Asia/Shanghai@g' /etc/httpd/conf.d/zabbix.conf```\n注：要注意需要改的配置文件是**/etc/httpd/conf.d/zabbix.conf**而不是**/etc/php.ini**\n\n---\n## 数据库设置\n1.启动数据库\n`systemctl start mariadb`\n\n2.创建zabbix数据库及用户\n```\nmysql\ncreate database zabbix character set utf8 collate utf8_bin;\ngrant all on zabbix.* to zabbix@'localhost' identified by '123456';\nexit```\n\n3.导入数据\n```\ncd /usr/share/doc/zabbix-server-mysql-3.0.4/\nll          #可看到有create.sql.gz文件\nzcat create.sql.gz |mysql -uzabbix -p123456 zabbix```\n注：我们使用zcat，可以查看压缩包包，和cat基本相似；类似的还有：zgrep、zless、zdiff 等\n\n4.修改zabbix配置文件\n```\nvim /etc/zabbix/zabbix_server.conf \nDBHost=localhost    #数据库所在主机\nDBName=zabbix       #数据库名\nDBUser=zabbix       #数据库用户\nDBPassword=123456   #数据库密码 ```\n\n5.启动zabbix及apache\n```\nsystemctl start zabbix-server\nsystemctl start httpd```\n注：如果没有启动成功，要看一下是不是80端口被占用\n\n6.Web界面安装master \n访问地址：http://IP/zabbix/setup.php \n点击Next step进行安装 \n首先要确保没有no，如果时区没有改好会提示我们进行修改 \n![](http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7002.png)\n\n账号密码都是我们刚刚在配置文件中设置的，端口默认就是3306 \n![](http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7003.png)\n\n为我们的zabbix起个名字，一会在右上角会显示 \n![](http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7004.png)\n最后是展示我们的配置信息，可以查看到哪里有错误 \n点击Finish \n![](http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7005.png)\n提示：登录之后请立即修改密码\n\n7.配置zabbix-agent端\n```\nvim /etc/zabbix/zabbix_agentd.conf \nServer=127.0.0.1           #修改Server端的IP地址（被动模式IP地址）\nServerActive=127.0.0.1     #主动模式，主动向server端报告\nsystemctl start zabbix-agent```\n\n查看端口号:` netstat -lntp `\n10051为server端口，10050为agent端口\n\n---\n## Web界面配置\n找到Configuration---->Hosts 添加一台监控主机 \n![](http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7006.png)\n![](http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7007.png)\n\n开启后，如果出现错误我们可以看一下zabbix的日志:`ls /var/log/zabbix/zabbix_`\n看这两个文件：**zabbix_agentd.log**  **zabbix_server.log ** \n![](http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7008.png)\n当ZBX变成绿色的时候，说明监控成功。因为我们没有配置SNMP、JMX、IPMI等。所以我发监控 \n![](http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7009.png)\n\n因为我们现在只安装了一台服务器，所以只有一个主机。我们可以查看现在这台主机的CPU等及基本的信息 \n![](http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7010.png)\n\n点击Monitoring-----Graphs，选择我们要监控的内容 \n![](http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7011.png)\n\n我们选择可以随便选择一个进行查看信息 \n例如：我们查看CPU的负载 \n![](http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7012.png)\n\n某一段时间内，CPU正在处理以及等待CPU处理的进程数的之和。Load Average是从另一个角度来体现CPU的使用状态的。 \n\n这些监控其实就是zabbix在数据库查找数据，然后使用jd进行画图，所以Zabbix性能依赖于mysql数据库\n\n---\n## Zabbix页面安全设置\n1、设置默认账号密码 \n![](http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7013.png)\n![](http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7014.png)\n\n设置完中文 \n![](http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7015.png)\n\n---\n## Zabbix 菜单说明\nZabbix 上方的菜单简单介绍说明 \n![](http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7016.png)\n\nDoshboard下面可以设置你想设置的图形，添加方法如下： \n![](http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7017.png)\n![](http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7018.png)\n\n这时，就可以找到你喜爱的了，直接打开 \n![](http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7019.png)\n\nscreens其实就是一个聚合图形，可以把多个图片合在一起。然后放在大屏幕上，供别人查看 \n![](http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7020.png)\n\nmaps就是一个架构图 \n![](http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7021.png)\n\nStatus of Zabbix就是一个状态栏 \n![](http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7022.png)\n\n　第一行：Server是否运行[yes]和后面的运行地址 \n　第二行：监控的机器 （启用的/关闭的/模板） \n　第三行：监控项 （启用的/关闭的/不支持的） \n　第四行：触发器的状态 （启用的/关闭的/【故障/正常】） \n　第五行：当前用户数量 （在线数量） \n　第六行：zabbix每秒可以收到的一个新值\n\n告警的级别 \n![](http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7023.png)\n\n我们可以设置报警响铃，让他在前端响 \n![](http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7024.png)\n![](http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7025.png)\n\n我们首页的监控列表是可以随意拖动的 \n![](http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7026.png)\n\n我们还可以将它关闭，并且设置刷新时间 \n![](http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7027.png)\nZabbix 基础完!\n\n本文参考了：http://www.abcdocker.com/abcdocker/1402\n\n\n---\n# Zabbix 进阶\n\n-未完-\n\n\n---","source":"_posts/环境搭建/2016-11-08-Zibbix监控.md","raw":"---\ntitle: Zabbix监控\ncategories:\n  - 环境搭建\ntags:\n  - Zabbix监控\n  - Zabbix Centos7\nabbrlink: 27796\ndate: 2016-11-08 11:57:22\n---\n\n# Zabbix 基础部分\n## Zabbix 简介\n  Zabbix 是一个高度集成的网络监控解决方案，可以提供企业级的开源分布式监控解决方案，由一个国外的团队持续维护更新，软件可以自由下载使用，运作团队靠提供收费的技术支持赢利\n  zabbix是一个基于Web界面的，提供分布式系统监控以及网络监视功能的企业级的开源解决方案。\n  zabbix能监视各种网络参数，保证服务器系统的安全运营，并提供灵活的通知机制以让系统管理员快速定位/解决存在的各种问题\n  zabbix主要由2部分构成zabbix server和zabbix agent，可选组建zabbix proxy\n  zabbix server可以通过SNMP，zabbix agent，fping端口监视等方法对远程服务器或网络状态完成监视，数据收集等功能。同时支持Linux以及Unix平台，Windows平台只能安装客户端\n\n### Zabbix 功能\n* ①具备常见的商业监控软件所具备的功能（主机的性能监控、网络设备性能监控、数据库、性能监控、FTP 等通用协议监控、多种告警方式、详细的报表图表绘制） \n* ②支持自动发现网络设备和服务器（可以通过配置自动发现服务器规则来实现） \n* ③支持自动发现（low discovery）key 实现动态监控项的批量监控（需写脚本） \n* ④支持分布式，能集中展示、管理分布式的监控点 \n* ⑤扩展性强，server 提供通用接口（api 功能），可以自己开发完善各类监控（根据相关接口编写程序实现）编写插件容易，可以自定义监控项，报警级别的设置。 \n* ⑥数据收集 \n\n\t1.可用和性能检测 ;支持snmp(包括trapping and polling)，IPMI，JMX，SSH，TELNET\n\t2.自定义的检测,自定义收集数据的频率 \n\t3.服务器/代理和客户端模式 \n\t4.灵活的触发器 ;可以定义非常灵活的问题阈值，称为触发器，从后端数据库的参考值 \n\t5.高可定制的报警 ;发送通知，可定制的报警升级，收件人，媒体类型 ;通知可以使用宏变量有用的变量\n\t6.自动操作包括远程命令 \n\t7.实时的绘图功能 ;监控项实时的将数据绘制在图形上面 \n\t8.WEB 监控能力 ;ZABBIX 可以模拟鼠标点击了一个网站，并检查返回值和响应时间\n\t9.Api 功能 ;应用api功能，可以方便的和其他系统结合，包括手机客户端的使用。\n \n更多功能请查看官网文档：http://www.zabbix.com/documentation.php\n\n### Zabbix优缺点\n#### 优点 \n　1、开源，无软件成本投入 \n　2、Server 对设备性能要求低 \n　3、支持设备多，自带多种监控模板 \n　4、支持分布式集中管理，有自动发现功能，可以实现自动化监控 \n　5、开放式接口，扩展性强，插件编写容易 \n　6、当监控的item 比较多服务器队列比较大时可以采用被动状态，被监控客户端主动从 \n　7、server 端去下载需要监控的item 然后取数据上传到server 端。这种方式对服务器的负载比较小。 \n　8、Api 的支持，方便与其他系统结合 \n#### 缺点 \n　　需在被监控主机上安装**agent**，所有数据都存在数据库里，产生的数据很大,瓶颈主要在数据库。\n\n### Zabbix监控原理:\nZabbix 通过C/S 模式采集数据，通过B/S模式在web 端展示和配置。 \n\n**被监控端**：主机通过安装agent 方式采集数据，网络设备通过SNMP 方式采集数据 \n**Server 端**：通过收集SNMP 和agent 发送的数据，写入数据库（MySQL，ORACLE 等），再通过php+apache 在web 前端展示。\n\n### Zabbix 运行条件:\n**Server**：Zabbix Server 需运行在LAMP（Linux+Apache+Mysql+PHP）环境下（或者LNMP），对硬件要求低 \n**Agent**：目前已有的agent 基本支持市面常见的OS，包含Linux、HPUX、Solaris、Sun、 \nwindows \n**SNMP**：支持各类常见的网络设备 ;SNMP(Simple Network Management Protocol,简单网络管理协议\n\n**Zabbix监控过程逻辑图 **\n![](http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7001.png)\n\n### 监控类型\n**硬件监控:**适用于物理机、远程管理卡（iDRAC），IPMI（只能平台管理接口） \n**ipmitools:**，MegaCli（查看Raid磁盘） \n**系统监控:** 监控cpt：lscpu、uptime、top、vmstat 1 、mpstat 1、htop \n**监控内存：** free -m\n**监控硬盘：**df -h、iotop \n**监控网络：**iftop、netstat、ss \n**应用服务监控：**nfs、MySQL、nginx、apache、php、rsync \n更详细的监控类型可以参考：http://www.abcdocker.com/abcdocker/1376\n\n所有监控范畴，都可以整合到Zabbix中 \n　　　硬件监控：Zabbix、IPMI、lnterface \n　　　系统监控：Zabbix、Agent、Interface \n　　　Java监控：Zabbix、JMX、lnterface \n　　　网络设备监控：Zabbix、SNMP、lnterface \n　　　应用服务监控：Zabbix、Agent、UserParameter \n　　　MySQL数据库监控：percona-monitoring-plulgins \n　　　URL监控：Zabbix Web监控 \n\n---\n## Zabbix 环境配置\nCentos 7 yum安装\n1、环境信息\n```\n[root@localhost ~]# cat /etc/redhat-release \nCentOS Linux release 7.2.1511 (Core) \n[root@localhost ~]# uname -r\n3.10.0-327.28.3.el7.x86_64```\n\n2、yum安装 \n我们使用阿里云yum源,官方yum源下载会比较慢。\n```\nrpm -ivh http://mirrors.aliyun.com/zabbix/zabbix/3.0/rhel/7/x86_64/zabbix-release-3.0-1.el7.noarch.rpm```\n下载release版本，会在yum.repos.d下面生成一个zabbix.repo的文件\n\n3、服务端安装相关软件包\n```\nyum install zabbix-server zabbix-web zabbix-server-mysql zabbix-web-mysql mariadb-server mariadb -y```\n注：如果Server端也需要监控则需要安装**zabbix-agent**;在Centos7中，mysql改名为**mariadb**\n\n4、修改PHP时区设置\n```\nsed -i 's@# php_value date.timezone Europe/Riga@php_value date.timezone Asia/Shanghai@g' /etc/httpd/conf.d/zabbix.conf```\n注：要注意需要改的配置文件是**/etc/httpd/conf.d/zabbix.conf**而不是**/etc/php.ini**\n\n---\n## 数据库设置\n1.启动数据库\n`systemctl start mariadb`\n\n2.创建zabbix数据库及用户\n```\nmysql\ncreate database zabbix character set utf8 collate utf8_bin;\ngrant all on zabbix.* to zabbix@'localhost' identified by '123456';\nexit```\n\n3.导入数据\n```\ncd /usr/share/doc/zabbix-server-mysql-3.0.4/\nll          #可看到有create.sql.gz文件\nzcat create.sql.gz |mysql -uzabbix -p123456 zabbix```\n注：我们使用zcat，可以查看压缩包包，和cat基本相似；类似的还有：zgrep、zless、zdiff 等\n\n4.修改zabbix配置文件\n```\nvim /etc/zabbix/zabbix_server.conf \nDBHost=localhost    #数据库所在主机\nDBName=zabbix       #数据库名\nDBUser=zabbix       #数据库用户\nDBPassword=123456   #数据库密码 ```\n\n5.启动zabbix及apache\n```\nsystemctl start zabbix-server\nsystemctl start httpd```\n注：如果没有启动成功，要看一下是不是80端口被占用\n\n6.Web界面安装master \n访问地址：http://IP/zabbix/setup.php \n点击Next step进行安装 \n首先要确保没有no，如果时区没有改好会提示我们进行修改 \n![](http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7002.png)\n\n账号密码都是我们刚刚在配置文件中设置的，端口默认就是3306 \n![](http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7003.png)\n\n为我们的zabbix起个名字，一会在右上角会显示 \n![](http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7004.png)\n最后是展示我们的配置信息，可以查看到哪里有错误 \n点击Finish \n![](http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7005.png)\n提示：登录之后请立即修改密码\n\n7.配置zabbix-agent端\n```\nvim /etc/zabbix/zabbix_agentd.conf \nServer=127.0.0.1           #修改Server端的IP地址（被动模式IP地址）\nServerActive=127.0.0.1     #主动模式，主动向server端报告\nsystemctl start zabbix-agent```\n\n查看端口号:` netstat -lntp `\n10051为server端口，10050为agent端口\n\n---\n## Web界面配置\n找到Configuration---->Hosts 添加一台监控主机 \n![](http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7006.png)\n![](http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7007.png)\n\n开启后，如果出现错误我们可以看一下zabbix的日志:`ls /var/log/zabbix/zabbix_`\n看这两个文件：**zabbix_agentd.log**  **zabbix_server.log ** \n![](http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7008.png)\n当ZBX变成绿色的时候，说明监控成功。因为我们没有配置SNMP、JMX、IPMI等。所以我发监控 \n![](http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7009.png)\n\n因为我们现在只安装了一台服务器，所以只有一个主机。我们可以查看现在这台主机的CPU等及基本的信息 \n![](http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7010.png)\n\n点击Monitoring-----Graphs，选择我们要监控的内容 \n![](http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7011.png)\n\n我们选择可以随便选择一个进行查看信息 \n例如：我们查看CPU的负载 \n![](http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7012.png)\n\n某一段时间内，CPU正在处理以及等待CPU处理的进程数的之和。Load Average是从另一个角度来体现CPU的使用状态的。 \n\n这些监控其实就是zabbix在数据库查找数据，然后使用jd进行画图，所以Zabbix性能依赖于mysql数据库\n\n---\n## Zabbix页面安全设置\n1、设置默认账号密码 \n![](http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7013.png)\n![](http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7014.png)\n\n设置完中文 \n![](http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7015.png)\n\n---\n## Zabbix 菜单说明\nZabbix 上方的菜单简单介绍说明 \n![](http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7016.png)\n\nDoshboard下面可以设置你想设置的图形，添加方法如下： \n![](http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7017.png)\n![](http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7018.png)\n\n这时，就可以找到你喜爱的了，直接打开 \n![](http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7019.png)\n\nscreens其实就是一个聚合图形，可以把多个图片合在一起。然后放在大屏幕上，供别人查看 \n![](http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7020.png)\n\nmaps就是一个架构图 \n![](http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7021.png)\n\nStatus of Zabbix就是一个状态栏 \n![](http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7022.png)\n\n　第一行：Server是否运行[yes]和后面的运行地址 \n　第二行：监控的机器 （启用的/关闭的/模板） \n　第三行：监控项 （启用的/关闭的/不支持的） \n　第四行：触发器的状态 （启用的/关闭的/【故障/正常】） \n　第五行：当前用户数量 （在线数量） \n　第六行：zabbix每秒可以收到的一个新值\n\n告警的级别 \n![](http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7023.png)\n\n我们可以设置报警响铃，让他在前端响 \n![](http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7024.png)\n![](http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7025.png)\n\n我们首页的监控列表是可以随意拖动的 \n![](http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7026.png)\n\n我们还可以将它关闭，并且设置刷新时间 \n![](http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7027.png)\nZabbix 基础完!\n\n本文参考了：http://www.abcdocker.com/abcdocker/1402\n\n\n---\n# Zabbix 进阶\n\n-未完-\n\n\n---","slug":"环境搭建-2016-11-08-Zibbix监控","published":1,"updated":"2016-11-13T03:36:30.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civi8oujk002k2c6nk688yrf0","content":"<h1 id=\"Zabbix-基础部分\"><a href=\"#Zabbix-基础部分\" class=\"headerlink\" title=\"Zabbix 基础部分\"></a>Zabbix 基础部分</h1><h2 id=\"Zabbix-简介\"><a href=\"#Zabbix-简介\" class=\"headerlink\" title=\"Zabbix 简介\"></a>Zabbix 简介</h2><p>  Zabbix 是一个高度集成的网络监控解决方案，可以提供企业级的开源分布式监控解决方案，由一个国外的团队持续维护更新，软件可以自由下载使用，运作团队靠提供收费的技术支持赢利<br>  zabbix是一个基于Web界面的，提供分布式系统监控以及网络监视功能的企业级的开源解决方案。<br>  zabbix能监视各种网络参数，保证服务器系统的安全运营，并提供灵活的通知机制以让系统管理员快速定位/解决存在的各种问题<br>  zabbix主要由2部分构成zabbix server和zabbix agent，可选组建zabbix proxy<br>  zabbix server可以通过SNMP，zabbix agent，fping端口监视等方法对远程服务器或网络状态完成监视，数据收集等功能。同时支持Linux以及Unix平台，Windows平台只能安装客户端</p>\n<h3 id=\"Zabbix-功能\"><a href=\"#Zabbix-功能\" class=\"headerlink\" title=\"Zabbix 功能\"></a>Zabbix 功能</h3><ul>\n<li>①具备常见的商业监控软件所具备的功能（主机的性能监控、网络设备性能监控、数据库、性能监控、FTP 等通用协议监控、多种告警方式、详细的报表图表绘制） </li>\n<li>②支持自动发现网络设备和服务器（可以通过配置自动发现服务器规则来实现） </li>\n<li>③支持自动发现（low discovery）key 实现动态监控项的批量监控（需写脚本） </li>\n<li>④支持分布式，能集中展示、管理分布式的监控点 </li>\n<li>⑤扩展性强，server 提供通用接口（api 功能），可以自己开发完善各类监控（根据相关接口编写程序实现）编写插件容易，可以自定义监控项，报警级别的设置。 </li>\n<li><p>⑥数据收集 </p>\n<p>  1.可用和性能检测 ;支持snmp(包括trapping and polling)，IPMI，JMX，SSH，TELNET<br>  2.自定义的检测,自定义收集数据的频率<br>  3.服务器/代理和客户端模式<br>  4.灵活的触发器 ;可以定义非常灵活的问题阈值，称为触发器，从后端数据库的参考值<br>  5.高可定制的报警 ;发送通知，可定制的报警升级，收件人，媒体类型 ;通知可以使用宏变量有用的变量<br>  6.自动操作包括远程命令<br>  7.实时的绘图功能 ;监控项实时的将数据绘制在图形上面<br>  8.WEB 监控能力 ;ZABBIX 可以模拟鼠标点击了一个网站，并检查返回值和响应时间<br>  9.Api 功能 ;应用api功能，可以方便的和其他系统结合，包括手机客户端的使用。</p>\n</li>\n</ul>\n<p>更多功能请查看官网文档：<a href=\"http://www.zabbix.com/documentation.php\" target=\"_blank\" rel=\"external\">http://www.zabbix.com/documentation.php</a></p>\n<h3 id=\"Zabbix优缺点\"><a href=\"#Zabbix优缺点\" class=\"headerlink\" title=\"Zabbix优缺点\"></a>Zabbix优缺点</h3><h4 id=\"优点\"><a href=\"#优点\" class=\"headerlink\" title=\"优点\"></a>优点</h4><p>　1、开源，无软件成本投入<br>　2、Server 对设备性能要求低<br>　3、支持设备多，自带多种监控模板<br>　4、支持分布式集中管理，有自动发现功能，可以实现自动化监控<br>　5、开放式接口，扩展性强，插件编写容易<br>　6、当监控的item 比较多服务器队列比较大时可以采用被动状态，被监控客户端主动从<br>　7、server 端去下载需要监控的item 然后取数据上传到server 端。这种方式对服务器的负载比较小。<br>　8、Api 的支持，方便与其他系统结合 </p>\n<h4 id=\"缺点\"><a href=\"#缺点\" class=\"headerlink\" title=\"缺点\"></a>缺点</h4><p>　　需在被监控主机上安装<strong>agent</strong>，所有数据都存在数据库里，产生的数据很大,瓶颈主要在数据库。</p>\n<h3 id=\"Zabbix监控原理\"><a href=\"#Zabbix监控原理\" class=\"headerlink\" title=\"Zabbix监控原理:\"></a>Zabbix监控原理:</h3><p>Zabbix 通过C/S 模式采集数据，通过B/S模式在web 端展示和配置。 </p>\n<p><strong>被监控端</strong>：主机通过安装agent 方式采集数据，网络设备通过SNMP 方式采集数据<br><strong>Server 端</strong>：通过收集SNMP 和agent 发送的数据，写入数据库（MySQL，ORACLE 等），再通过php+apache 在web 前端展示。</p>\n<h3 id=\"Zabbix-运行条件\"><a href=\"#Zabbix-运行条件\" class=\"headerlink\" title=\"Zabbix 运行条件:\"></a>Zabbix 运行条件:</h3><p><strong>Server</strong>：Zabbix Server 需运行在LAMP（Linux+Apache+Mysql+PHP）环境下（或者LNMP），对硬件要求低<br><strong>Agent</strong>：目前已有的agent 基本支持市面常见的OS，包含Linux、HPUX、Solaris、Sun、<br>windows<br><strong>SNMP</strong>：支持各类常见的网络设备 ;SNMP(Simple Network Management Protocol,简单网络管理协议</p>\n<p><strong>Zabbix监控过程逻辑图 </strong><br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7001.png\" alt=\"\"></p>\n<h3 id=\"监控类型\"><a href=\"#监控类型\" class=\"headerlink\" title=\"监控类型\"></a>监控类型</h3><p><strong>硬件监控:</strong>适用于物理机、远程管理卡（iDRAC），IPMI（只能平台管理接口）<br><strong>ipmitools:</strong>，MegaCli（查看Raid磁盘）<br><strong>系统监控:</strong> 监控cpt：lscpu、uptime、top、vmstat 1 、mpstat 1、htop<br><strong>监控内存：</strong> free -m<br><strong>监控硬盘：</strong>df -h、iotop<br><strong>监控网络：</strong>iftop、netstat、ss<br><strong>应用服务监控：</strong>nfs、MySQL、nginx、apache、php、rsync<br>更详细的监控类型可以参考：<a href=\"http://www.abcdocker.com/abcdocker/1376\" target=\"_blank\" rel=\"external\">http://www.abcdocker.com/abcdocker/1376</a></p>\n<p>所有监控范畴，都可以整合到Zabbix中<br>　　　硬件监控：Zabbix、IPMI、lnterface<br>　　　系统监控：Zabbix、Agent、Interface<br>　　　Java监控：Zabbix、JMX、lnterface<br>　　　网络设备监控：Zabbix、SNMP、lnterface<br>　　　应用服务监控：Zabbix、Agent、UserParameter<br>　　　MySQL数据库监控：percona-monitoring-plulgins<br>　　　URL监控：Zabbix Web监控 </p>\n<hr>\n<h2 id=\"Zabbix-环境配置\"><a href=\"#Zabbix-环境配置\" class=\"headerlink\" title=\"Zabbix 环境配置\"></a>Zabbix 环境配置</h2><p>Centos 7 yum安装<br>1、环境信息<br><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@localhost ~]# cat /etc/redhat-release </div><div class=\"line\">CentOS Linux release <span class=\"number\">7.2</span><span class=\"number\">.1511</span> (Core) </div><div class=\"line\">[root@localhost ~]# uname -r</div><div class=\"line\"><span class=\"number\">3.10</span><span class=\"number\">.0</span><span class=\"number\">-327.28</span><span class=\"number\">.3</span>.el7.x86_64</div></pre></td></tr></table></figure></p>\n<p>2、yum安装<br>我们使用阿里云yum源,官方yum源下载会比较慢。<br><figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">rpm -ivh http:<span class=\"regexp\">//mi</span>rrors.aliyun.com<span class=\"regexp\">/zabbix/</span>zabbix<span class=\"regexp\">/3.0/</span>rhel<span class=\"regexp\">/7/</span>x86_64<span class=\"regexp\">/zabbix-release-3.0-1.el7.noarch.rpm</span></div></pre></td></tr></table></figure></p>\n<p>下载release版本，会在yum.repos.d下面生成一个zabbix.repo的文件</p>\n<p>3、服务端安装相关软件包<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">yum <span class=\"keyword\">install</span> zabbix-<span class=\"keyword\">server</span> zabbix-web zabbix-<span class=\"keyword\">server</span>-mysql zabbix-web-mysql mariadb-<span class=\"keyword\">server</span> mariadb -y</div></pre></td></tr></table></figure></p>\n<p>注：如果Server端也需要监控则需要安装<strong>zabbix-agent</strong>;在Centos7中，mysql改名为<strong>mariadb</strong></p>\n<p>4、修改PHP时区设置<br><figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attribute\">sed</span> -i <span class=\"string\">'s@# php_value date.timezone Europe/Riga<span class=\"variable\">@php_value</span> date.timezone Asia/Shanghai<span class=\"variable\">@g</span>'</span> /etc/httpd/conf.d/zabbix.conf</div></pre></td></tr></table></figure></p>\n<p>注：要注意需要改的配置文件是<strong>/etc/httpd/conf.d/zabbix.conf</strong>而不是<strong>/etc/php.ini</strong></p>\n<hr>\n<h2 id=\"数据库设置\"><a href=\"#数据库设置\" class=\"headerlink\" title=\"数据库设置\"></a>数据库设置</h2><p>1.启动数据库<br><code>systemctl start mariadb</code></p>\n<p>2.创建zabbix数据库及用户<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">mysql</div><div class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">database</span> zabbix <span class=\"built_in\">character</span> <span class=\"keyword\">set</span> utf8 <span class=\"keyword\">collate</span> utf8_bin;</div><div class=\"line\"><span class=\"keyword\">grant</span> all <span class=\"keyword\">on</span> zabbix.* <span class=\"keyword\">to</span> zabbix@<span class=\"string\">'localhost'</span> <span class=\"keyword\">identified</span> <span class=\"keyword\">by</span> <span class=\"string\">'123456'</span>;</div><div class=\"line\">exit</div></pre></td></tr></table></figure></p>\n<p>3.导入数据<br><figure class=\"highlight dts\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd <span class=\"meta-keyword\">/usr/</span>share<span class=\"meta-keyword\">/doc/</span>zabbix-server-mysql<span class=\"number\">-3.0</span><span class=\"number\">.4</span>/</div><div class=\"line\">ll          <span class=\"meta\">#可看到有create.sql.gz文件</span></div><div class=\"line\">zcat create.sql.gz |mysql -uzabbix -p123456 zabbix</div></pre></td></tr></table></figure></p>\n<p>注：我们使用zcat，可以查看压缩包包，和cat基本相似；类似的还有：zgrep、zless、zdiff 等</p>\n<p>4.修改zabbix配置文件<br><figure class=\"highlight nix\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">vim /etc/zabbix/zabbix_server.conf </div><div class=\"line\"><span class=\"attr\">DBHost=localhost</span>    <span class=\"comment\">#数据库所在主机</span></div><div class=\"line\"><span class=\"attr\">DBName=zabbix</span>       <span class=\"comment\">#数据库名</span></div><div class=\"line\"><span class=\"attr\">DBUser=zabbix</span>       <span class=\"comment\">#数据库用户</span></div><div class=\"line\"><span class=\"attr\">DBPassword=123456</span>   <span class=\"comment\">#数据库密码</span></div></pre></td></tr></table></figure></p>\n<p>5.启动zabbix及apache<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">systemctl <span class=\"keyword\">start</span> zabbix-<span class=\"keyword\">server</span></div><div class=\"line\">systemctl <span class=\"keyword\">start</span> httpd</div></pre></td></tr></table></figure></p>\n<p>注：如果没有启动成功，要看一下是不是80端口被占用</p>\n<p>6.Web界面安装master<br>访问地址：<a href=\"http://IP/zabbix/setup.php\" target=\"_blank\" rel=\"external\">http://IP/zabbix/setup.php</a><br>点击Next step进行安装<br>首先要确保没有no，如果时区没有改好会提示我们进行修改<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7002.png\" alt=\"\"></p>\n<p>账号密码都是我们刚刚在配置文件中设置的，端口默认就是3306<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7003.png\" alt=\"\"></p>\n<p>为我们的zabbix起个名字，一会在右上角会显示<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7004.png\" alt=\"\"><br>最后是展示我们的配置信息，可以查看到哪里有错误<br>点击Finish<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7005.png\" alt=\"\"><br>提示：登录之后请立即修改密码</p>\n<p>7.配置zabbix-agent端<br><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">vim /etc/zabbix/zabbix_agentd.conf </div><div class=\"line\">Server=<span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>           #修改Server端的IP地址（被动模式IP地址）</div><div class=\"line\">ServerActive=<span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>     #主动模式，主动向server端报告</div><div class=\"line\">systemctl start zabbix-agent</div></pre></td></tr></table></figure></p>\n<p>查看端口号:<code>netstat -lntp</code><br>10051为server端口，10050为agent端口</p>\n<hr>\n<h2 id=\"Web界面配置\"><a href=\"#Web界面配置\" class=\"headerlink\" title=\"Web界面配置\"></a>Web界面配置</h2><p>找到Configuration—-&gt;Hosts 添加一台监控主机<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7006.png\" alt=\"\"><br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7007.png\" alt=\"\"></p>\n<p>开启后，如果出现错误我们可以看一下zabbix的日志:<code>ls /var/log/zabbix/zabbix_</code><br>看这两个文件：<strong>zabbix_agentd.log</strong>  <strong>zabbix_server.log </strong><br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7008.png\" alt=\"\"><br>当ZBX变成绿色的时候，说明监控成功。因为我们没有配置SNMP、JMX、IPMI等。所以我发监控<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7009.png\" alt=\"\"></p>\n<p>因为我们现在只安装了一台服务器，所以只有一个主机。我们可以查看现在这台主机的CPU等及基本的信息<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7010.png\" alt=\"\"></p>\n<p>点击Monitoring—–Graphs，选择我们要监控的内容<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7011.png\" alt=\"\"></p>\n<p>我们选择可以随便选择一个进行查看信息<br>例如：我们查看CPU的负载<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7012.png\" alt=\"\"></p>\n<p>某一段时间内，CPU正在处理以及等待CPU处理的进程数的之和。Load Average是从另一个角度来体现CPU的使用状态的。 </p>\n<p>这些监控其实就是zabbix在数据库查找数据，然后使用jd进行画图，所以Zabbix性能依赖于mysql数据库</p>\n<hr>\n<h2 id=\"Zabbix页面安全设置\"><a href=\"#Zabbix页面安全设置\" class=\"headerlink\" title=\"Zabbix页面安全设置\"></a>Zabbix页面安全设置</h2><p>1、设置默认账号密码<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7013.png\" alt=\"\"><br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7014.png\" alt=\"\"></p>\n<p>设置完中文<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7015.png\" alt=\"\"></p>\n<hr>\n<h2 id=\"Zabbix-菜单说明\"><a href=\"#Zabbix-菜单说明\" class=\"headerlink\" title=\"Zabbix 菜单说明\"></a>Zabbix 菜单说明</h2><p>Zabbix 上方的菜单简单介绍说明<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7016.png\" alt=\"\"></p>\n<p>Doshboard下面可以设置你想设置的图形，添加方法如下：<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7017.png\" alt=\"\"><br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7018.png\" alt=\"\"></p>\n<p>这时，就可以找到你喜爱的了，直接打开<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7019.png\" alt=\"\"></p>\n<p>screens其实就是一个聚合图形，可以把多个图片合在一起。然后放在大屏幕上，供别人查看<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7020.png\" alt=\"\"></p>\n<p>maps就是一个架构图<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7021.png\" alt=\"\"></p>\n<p>Status of Zabbix就是一个状态栏<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7022.png\" alt=\"\"></p>\n<p>　第一行：Server是否运行[yes]和后面的运行地址<br>　第二行：监控的机器 （启用的/关闭的/模板）<br>　第三行：监控项 （启用的/关闭的/不支持的）<br>　第四行：触发器的状态 （启用的/关闭的/【故障/正常】）<br>　第五行：当前用户数量 （在线数量）<br>　第六行：zabbix每秒可以收到的一个新值</p>\n<p>告警的级别<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7023.png\" alt=\"\"></p>\n<p>我们可以设置报警响铃，让他在前端响<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7024.png\" alt=\"\"><br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7025.png\" alt=\"\"></p>\n<p>我们首页的监控列表是可以随意拖动的<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7026.png\" alt=\"\"></p>\n<p>我们还可以将它关闭，并且设置刷新时间<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7027.png\" alt=\"\"><br>Zabbix 基础完!</p>\n<p>本文参考了：<a href=\"http://www.abcdocker.com/abcdocker/1402\" target=\"_blank\" rel=\"external\">http://www.abcdocker.com/abcdocker/1402</a></p>\n<hr>\n<h1 id=\"Zabbix-进阶\"><a href=\"#Zabbix-进阶\" class=\"headerlink\" title=\"Zabbix 进阶\"></a>Zabbix 进阶</h1><p>-未完-</p>\n<hr>\n","excerpt":"","more":"<h1 id=\"Zabbix-基础部分\"><a href=\"#Zabbix-基础部分\" class=\"headerlink\" title=\"Zabbix 基础部分\"></a>Zabbix 基础部分</h1><h2 id=\"Zabbix-简介\"><a href=\"#Zabbix-简介\" class=\"headerlink\" title=\"Zabbix 简介\"></a>Zabbix 简介</h2><p>  Zabbix 是一个高度集成的网络监控解决方案，可以提供企业级的开源分布式监控解决方案，由一个国外的团队持续维护更新，软件可以自由下载使用，运作团队靠提供收费的技术支持赢利<br>  zabbix是一个基于Web界面的，提供分布式系统监控以及网络监视功能的企业级的开源解决方案。<br>  zabbix能监视各种网络参数，保证服务器系统的安全运营，并提供灵活的通知机制以让系统管理员快速定位/解决存在的各种问题<br>  zabbix主要由2部分构成zabbix server和zabbix agent，可选组建zabbix proxy<br>  zabbix server可以通过SNMP，zabbix agent，fping端口监视等方法对远程服务器或网络状态完成监视，数据收集等功能。同时支持Linux以及Unix平台，Windows平台只能安装客户端</p>\n<h3 id=\"Zabbix-功能\"><a href=\"#Zabbix-功能\" class=\"headerlink\" title=\"Zabbix 功能\"></a>Zabbix 功能</h3><ul>\n<li>①具备常见的商业监控软件所具备的功能（主机的性能监控、网络设备性能监控、数据库、性能监控、FTP 等通用协议监控、多种告警方式、详细的报表图表绘制） </li>\n<li>②支持自动发现网络设备和服务器（可以通过配置自动发现服务器规则来实现） </li>\n<li>③支持自动发现（low discovery）key 实现动态监控项的批量监控（需写脚本） </li>\n<li>④支持分布式，能集中展示、管理分布式的监控点 </li>\n<li>⑤扩展性强，server 提供通用接口（api 功能），可以自己开发完善各类监控（根据相关接口编写程序实现）编写插件容易，可以自定义监控项，报警级别的设置。 </li>\n<li><p>⑥数据收集 </p>\n<p>  1.可用和性能检测 ;支持snmp(包括trapping and polling)，IPMI，JMX，SSH，TELNET<br>  2.自定义的检测,自定义收集数据的频率<br>  3.服务器/代理和客户端模式<br>  4.灵活的触发器 ;可以定义非常灵活的问题阈值，称为触发器，从后端数据库的参考值<br>  5.高可定制的报警 ;发送通知，可定制的报警升级，收件人，媒体类型 ;通知可以使用宏变量有用的变量<br>  6.自动操作包括远程命令<br>  7.实时的绘图功能 ;监控项实时的将数据绘制在图形上面<br>  8.WEB 监控能力 ;ZABBIX 可以模拟鼠标点击了一个网站，并检查返回值和响应时间<br>  9.Api 功能 ;应用api功能，可以方便的和其他系统结合，包括手机客户端的使用。</p>\n</li>\n</ul>\n<p>更多功能请查看官网文档：<a href=\"http://www.zabbix.com/documentation.php\">http://www.zabbix.com/documentation.php</a></p>\n<h3 id=\"Zabbix优缺点\"><a href=\"#Zabbix优缺点\" class=\"headerlink\" title=\"Zabbix优缺点\"></a>Zabbix优缺点</h3><h4 id=\"优点\"><a href=\"#优点\" class=\"headerlink\" title=\"优点\"></a>优点</h4><p>　1、开源，无软件成本投入<br>　2、Server 对设备性能要求低<br>　3、支持设备多，自带多种监控模板<br>　4、支持分布式集中管理，有自动发现功能，可以实现自动化监控<br>　5、开放式接口，扩展性强，插件编写容易<br>　6、当监控的item 比较多服务器队列比较大时可以采用被动状态，被监控客户端主动从<br>　7、server 端去下载需要监控的item 然后取数据上传到server 端。这种方式对服务器的负载比较小。<br>　8、Api 的支持，方便与其他系统结合 </p>\n<h4 id=\"缺点\"><a href=\"#缺点\" class=\"headerlink\" title=\"缺点\"></a>缺点</h4><p>　　需在被监控主机上安装<strong>agent</strong>，所有数据都存在数据库里，产生的数据很大,瓶颈主要在数据库。</p>\n<h3 id=\"Zabbix监控原理\"><a href=\"#Zabbix监控原理\" class=\"headerlink\" title=\"Zabbix监控原理:\"></a>Zabbix监控原理:</h3><p>Zabbix 通过C/S 模式采集数据，通过B/S模式在web 端展示和配置。 </p>\n<p><strong>被监控端</strong>：主机通过安装agent 方式采集数据，网络设备通过SNMP 方式采集数据<br><strong>Server 端</strong>：通过收集SNMP 和agent 发送的数据，写入数据库（MySQL，ORACLE 等），再通过php+apache 在web 前端展示。</p>\n<h3 id=\"Zabbix-运行条件\"><a href=\"#Zabbix-运行条件\" class=\"headerlink\" title=\"Zabbix 运行条件:\"></a>Zabbix 运行条件:</h3><p><strong>Server</strong>：Zabbix Server 需运行在LAMP（Linux+Apache+Mysql+PHP）环境下（或者LNMP），对硬件要求低<br><strong>Agent</strong>：目前已有的agent 基本支持市面常见的OS，包含Linux、HPUX、Solaris、Sun、<br>windows<br><strong>SNMP</strong>：支持各类常见的网络设备 ;SNMP(Simple Network Management Protocol,简单网络管理协议</p>\n<p><strong>Zabbix监控过程逻辑图 </strong><br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7001.png\" alt=\"\"></p>\n<h3 id=\"监控类型\"><a href=\"#监控类型\" class=\"headerlink\" title=\"监控类型\"></a>监控类型</h3><p><strong>硬件监控:</strong>适用于物理机、远程管理卡（iDRAC），IPMI（只能平台管理接口）<br><strong>ipmitools:</strong>，MegaCli（查看Raid磁盘）<br><strong>系统监控:</strong> 监控cpt：lscpu、uptime、top、vmstat 1 、mpstat 1、htop<br><strong>监控内存：</strong> free -m<br><strong>监控硬盘：</strong>df -h、iotop<br><strong>监控网络：</strong>iftop、netstat、ss<br><strong>应用服务监控：</strong>nfs、MySQL、nginx、apache、php、rsync<br>更详细的监控类型可以参考：<a href=\"http://www.abcdocker.com/abcdocker/1376\">http://www.abcdocker.com/abcdocker/1376</a></p>\n<p>所有监控范畴，都可以整合到Zabbix中<br>　　　硬件监控：Zabbix、IPMI、lnterface<br>　　　系统监控：Zabbix、Agent、Interface<br>　　　Java监控：Zabbix、JMX、lnterface<br>　　　网络设备监控：Zabbix、SNMP、lnterface<br>　　　应用服务监控：Zabbix、Agent、UserParameter<br>　　　MySQL数据库监控：percona-monitoring-plulgins<br>　　　URL监控：Zabbix Web监控 </p>\n<hr>\n<h2 id=\"Zabbix-环境配置\"><a href=\"#Zabbix-环境配置\" class=\"headerlink\" title=\"Zabbix 环境配置\"></a>Zabbix 环境配置</h2><p>Centos 7 yum安装<br>1、环境信息<br><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@localhost ~]# cat /etc/redhat-release </div><div class=\"line\">CentOS Linux release <span class=\"number\">7.2</span><span class=\"number\">.1511</span> (Core) </div><div class=\"line\">[root@localhost ~]# uname -r</div><div class=\"line\"><span class=\"number\">3.10</span><span class=\"number\">.0</span><span class=\"number\">-327.28</span><span class=\"number\">.3</span>.el7.x86_64</div></pre></td></tr></table></figure></p>\n<p>2、yum安装<br>我们使用阿里云yum源,官方yum源下载会比较慢。<br><figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">rpm -ivh http:<span class=\"regexp\">//mi</span>rrors.aliyun.com<span class=\"regexp\">/zabbix/</span>zabbix<span class=\"regexp\">/3.0/</span>rhel<span class=\"regexp\">/7/</span>x86_64<span class=\"regexp\">/zabbix-release-3.0-1.el7.noarch.rpm</span></div></pre></td></tr></table></figure></p>\n<p>下载release版本，会在yum.repos.d下面生成一个zabbix.repo的文件</p>\n<p>3、服务端安装相关软件包<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">yum <span class=\"keyword\">install</span> zabbix-<span class=\"keyword\">server</span> zabbix-web zabbix-<span class=\"keyword\">server</span>-mysql zabbix-web-mysql mariadb-<span class=\"keyword\">server</span> mariadb -y</div></pre></td></tr></table></figure></p>\n<p>注：如果Server端也需要监控则需要安装<strong>zabbix-agent</strong>;在Centos7中，mysql改名为<strong>mariadb</strong></p>\n<p>4、修改PHP时区设置<br><figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attribute\">sed</span> -i <span class=\"string\">'s@# php_value date.timezone Europe/Riga<span class=\"variable\">@php_value</span> date.timezone Asia/Shanghai<span class=\"variable\">@g</span>'</span> /etc/httpd/conf.d/zabbix.conf</div></pre></td></tr></table></figure></p>\n<p>注：要注意需要改的配置文件是<strong>/etc/httpd/conf.d/zabbix.conf</strong>而不是<strong>/etc/php.ini</strong></p>\n<hr>\n<h2 id=\"数据库设置\"><a href=\"#数据库设置\" class=\"headerlink\" title=\"数据库设置\"></a>数据库设置</h2><p>1.启动数据库<br><code>systemctl start mariadb</code></p>\n<p>2.创建zabbix数据库及用户<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">mysql</div><div class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">database</span> zabbix <span class=\"built_in\">character</span> <span class=\"keyword\">set</span> utf8 <span class=\"keyword\">collate</span> utf8_bin;</div><div class=\"line\"><span class=\"keyword\">grant</span> all <span class=\"keyword\">on</span> zabbix.* <span class=\"keyword\">to</span> zabbix@<span class=\"string\">'localhost'</span> <span class=\"keyword\">identified</span> <span class=\"keyword\">by</span> <span class=\"string\">'123456'</span>;</div><div class=\"line\">exit</div></pre></td></tr></table></figure></p>\n<p>3.导入数据<br><figure class=\"highlight dts\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd <span class=\"meta-keyword\">/usr/</span>share<span class=\"meta-keyword\">/doc/</span>zabbix-server-mysql<span class=\"number\">-3.0</span><span class=\"number\">.4</span>/</div><div class=\"line\">ll          <span class=\"meta\">#可看到有create.sql.gz文件</span></div><div class=\"line\">zcat create.sql.gz |mysql -uzabbix -p123456 zabbix</div></pre></td></tr></table></figure></p>\n<p>注：我们使用zcat，可以查看压缩包包，和cat基本相似；类似的还有：zgrep、zless、zdiff 等</p>\n<p>4.修改zabbix配置文件<br><figure class=\"highlight nix\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">vim /etc/zabbix/zabbix_server.conf </div><div class=\"line\"><span class=\"attr\">DBHost=localhost</span>    <span class=\"comment\">#数据库所在主机</span></div><div class=\"line\"><span class=\"attr\">DBName=zabbix</span>       <span class=\"comment\">#数据库名</span></div><div class=\"line\"><span class=\"attr\">DBUser=zabbix</span>       <span class=\"comment\">#数据库用户</span></div><div class=\"line\"><span class=\"attr\">DBPassword=123456</span>   <span class=\"comment\">#数据库密码</span></div></pre></td></tr></table></figure></p>\n<p>5.启动zabbix及apache<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">systemctl <span class=\"keyword\">start</span> zabbix-<span class=\"keyword\">server</span></div><div class=\"line\">systemctl <span class=\"keyword\">start</span> httpd</div></pre></td></tr></table></figure></p>\n<p>注：如果没有启动成功，要看一下是不是80端口被占用</p>\n<p>6.Web界面安装master<br>访问地址：<a href=\"http://IP/zabbix/setup.php\">http://IP/zabbix/setup.php</a><br>点击Next step进行安装<br>首先要确保没有no，如果时区没有改好会提示我们进行修改<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7002.png\" alt=\"\"></p>\n<p>账号密码都是我们刚刚在配置文件中设置的，端口默认就是3306<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7003.png\" alt=\"\"></p>\n<p>为我们的zabbix起个名字，一会在右上角会显示<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7004.png\" alt=\"\"><br>最后是展示我们的配置信息，可以查看到哪里有错误<br>点击Finish<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7005.png\" alt=\"\"><br>提示：登录之后请立即修改密码</p>\n<p>7.配置zabbix-agent端<br><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">vim /etc/zabbix/zabbix_agentd.conf </div><div class=\"line\">Server=<span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>           #修改Server端的IP地址（被动模式IP地址）</div><div class=\"line\">ServerActive=<span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>     #主动模式，主动向server端报告</div><div class=\"line\">systemctl start zabbix-agent</div></pre></td></tr></table></figure></p>\n<p>查看端口号:<code>netstat -lntp</code><br>10051为server端口，10050为agent端口</p>\n<hr>\n<h2 id=\"Web界面配置\"><a href=\"#Web界面配置\" class=\"headerlink\" title=\"Web界面配置\"></a>Web界面配置</h2><p>找到Configuration—-&gt;Hosts 添加一台监控主机<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7006.png\" alt=\"\"><br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7007.png\" alt=\"\"></p>\n<p>开启后，如果出现错误我们可以看一下zabbix的日志:<code>ls /var/log/zabbix/zabbix_</code><br>看这两个文件：<strong>zabbix_agentd.log</strong>  <strong>zabbix_server.log </strong><br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7008.png\" alt=\"\"><br>当ZBX变成绿色的时候，说明监控成功。因为我们没有配置SNMP、JMX、IPMI等。所以我发监控<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7009.png\" alt=\"\"></p>\n<p>因为我们现在只安装了一台服务器，所以只有一个主机。我们可以查看现在这台主机的CPU等及基本的信息<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7010.png\" alt=\"\"></p>\n<p>点击Monitoring—–Graphs，选择我们要监控的内容<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7011.png\" alt=\"\"></p>\n<p>我们选择可以随便选择一个进行查看信息<br>例如：我们查看CPU的负载<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7012.png\" alt=\"\"></p>\n<p>某一段时间内，CPU正在处理以及等待CPU处理的进程数的之和。Load Average是从另一个角度来体现CPU的使用状态的。 </p>\n<p>这些监控其实就是zabbix在数据库查找数据，然后使用jd进行画图，所以Zabbix性能依赖于mysql数据库</p>\n<hr>\n<h2 id=\"Zabbix页面安全设置\"><a href=\"#Zabbix页面安全设置\" class=\"headerlink\" title=\"Zabbix页面安全设置\"></a>Zabbix页面安全设置</h2><p>1、设置默认账号密码<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7013.png\" alt=\"\"><br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7014.png\" alt=\"\"></p>\n<p>设置完中文<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7015.png\" alt=\"\"></p>\n<hr>\n<h2 id=\"Zabbix-菜单说明\"><a href=\"#Zabbix-菜单说明\" class=\"headerlink\" title=\"Zabbix 菜单说明\"></a>Zabbix 菜单说明</h2><p>Zabbix 上方的菜单简单介绍说明<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7016.png\" alt=\"\"></p>\n<p>Doshboard下面可以设置你想设置的图形，添加方法如下：<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7017.png\" alt=\"\"><br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7018.png\" alt=\"\"></p>\n<p>这时，就可以找到你喜爱的了，直接打开<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7019.png\" alt=\"\"></p>\n<p>screens其实就是一个聚合图形，可以把多个图片合在一起。然后放在大屏幕上，供别人查看<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7020.png\" alt=\"\"></p>\n<p>maps就是一个架构图<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7021.png\" alt=\"\"></p>\n<p>Status of Zabbix就是一个状态栏<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7022.png\" alt=\"\"></p>\n<p>　第一行：Server是否运行[yes]和后面的运行地址<br>　第二行：监控的机器 （启用的/关闭的/模板）<br>　第三行：监控项 （启用的/关闭的/不支持的）<br>　第四行：触发器的状态 （启用的/关闭的/【故障/正常】）<br>　第五行：当前用户数量 （在线数量）<br>　第六行：zabbix每秒可以收到的一个新值</p>\n<p>告警的级别<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7023.png\" alt=\"\"></p>\n<p>我们可以设置报警响铃，让他在前端响<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7024.png\" alt=\"\"><br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7025.png\" alt=\"\"></p>\n<p>我们首页的监控列表是可以随意拖动的<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7026.png\" alt=\"\"></p>\n<p>我们还可以将它关闭，并且设置刷新时间<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/Zabbix%E7%9B%91%E6%8E%A7027.png\" alt=\"\"><br>Zabbix 基础完!</p>\n<p>本文参考了：<a href=\"http://www.abcdocker.com/abcdocker/1402\">http://www.abcdocker.com/abcdocker/1402</a></p>\n<hr>\n<h1 id=\"Zabbix-进阶\"><a href=\"#Zabbix-进阶\" class=\"headerlink\" title=\"Zabbix 进阶\"></a>Zabbix 进阶</h1><p>-未完-</p>\n<hr>\n"},{"title":"检查Linux服务器性能","abbrlink":64139,"date":"2016-11-08T01:53:54.000Z","_content":"\n# 关于服务器负载\n\nload average值，参考：[理解Linux系统中的load average（图文版）](http://heipark.iteye.com/blog/1340384)\n\n>（1） uptime\n\n```\n23:51:26 up 21:31,  1 user,  load average: 30.02, 26.43, 19.02```\n\n这个命令可以快速查看机器的负载情况。在Linux系统中，这些数据表示等待CPU资源的进程和阻塞在不可中断IO进程（进程状态为D）的数量。这些数据可以让我们对系统资源使用有一个宏观的了解。\n\n命令的输出分别表示1分钟、5分钟、15分钟的平均负载情况。通过这三个数据，可以了解服务器负载是在趋于紧张还是区域缓解。如果1分钟平均负载很高，而15分钟平均负载很低，说明服务器正在命令高负载情况，需要进一步排查CPU资源都消耗在了哪里。反之，如果15分钟平均负载很高，1分钟平均负载较低，则有可能是CPU资源紧张时刻已经过去。\n\n上面例子中的输出，可以看见最近1分钟的平均负载非常高，且远高于最近15分钟负载，因此我们需要继续排查当前系统中有什么进程消耗了大量的资源。可以通过下文将会介绍的vmstat、mpstat等命令进一步排查。\n\n>（2） dmesg | tail\n\n```\n[1880957.563150] perl invoked oom-killer: gfp_mask=0x280da, order=0, oom_score_adj=0\n[...]\n[1880957.563400] Out of memory: Kill process 18694 (perl) score 246 or sacrifice child\n[1880957.563408] Killed process 18694 (perl) total-vm:1972392kB, anon-rss:1953348kB, file-rss:0kB\n[2320864.954447] TCP: Possible SYN flooding on port 7001. Dropping request.  Check SNMP counters.```\n该命令会输出系统日志的最后10行。示例中的输出，可以看见一次内核的oom kill和一次TCP丢包。这些日志可以帮助排查性能问题。千万不要忘了这一步。\n\n>（3） vmstat 1\n\n```\nprocs ---------memory---------- ---swap-- -----io---- -system-- ------cpu-----\n r  b swpd   free   buff  cache   si   so    bi    bo   in   cs us sy id wa st\n34  0    0 200889792  73708 591828    0    0     0     5    6   10 96  1  3  0  0\n32  0    0 200889920  73708 591860    0    0     0   592 13284 4282 98  1  1  0  0\n32  0    0 200890112  73708 591860    0    0     0     0 9501 2154 99  1  0  0  0\n32  0    0 200889568  73712 591856    0    0     0    48 11900 2459 99  0  0  0  0\n32  0    0 200890208  73712 591860    0    0     0     0 15898 4840 98  1  1  0  0```\nvmstat 命令，每行会输出一些系统核心指标，这些指标可以让我们更详细的了解系统状态。后面跟的参数1，表示每秒输出一次统计信息，表头提示了每一列的含义，这几介绍一些和性能调优相关的列：\n  ● **r**：等待在CPU资源的进程数。这个数据比平均负载更加能够体现CPU负载情况，数据中不包含等待IO的进程。如果这个数值大于机器CPU核数，那么机器的CPU资源已经饱和。\n  ● **free**：系统可用内存数（以千字节为单位），如果剩余内存不足，也会导致系统性能问题。下文介绍到的free命令，可以更详细的了解系统内存的使用情况。\n  ● **si, so**：交换区写入和读取的数量。如果这个数据不为0，说明系统已经在使用交换区（swap），机器物理内存已经不足。\n  ● **us, sy, id, wa, st**：这些都代表了CPU时间的消耗，它们分别表示**用户时间（user）、系统（内核）时间（sys）、空闲时间（idle）、IO等待时间（wait）和被偷走的时间（stolen）**，一般被其他虚拟机消耗）。\n上述这些CPU时间，可以让我们很快了解CPU是否出于繁忙状态。一般情况下，如果用户时间和系统时间相加非常大，CPU出于忙于执行指令。如果IO等待时间很长，那么系统的瓶颈可能在磁盘IO。\n示例命令的输出可以看见，大量CPU时间消耗在用户态，也就是用户应用程序消耗了CPU时间。这不一定是性能问题，需要结合r队列，一起分析。\n\n>（4） mpstat -P ALL 1\n\n```\nLinux 3.13.0-49-generic (titanclusters-xxxxx)  07/14/2015  _x86_64_ (32 CPU)\n07:38:49 PM  CPU   %usr  %nice   %sys %iowait   %irq  %soft  %steal  %guest  %gnice  %idle\n07:38:50 PM  all  98.47   0.00   0.75    0.00   0.00   0.00    0.00    0.00    0.00   0.78\n07:38:50 PM    0  96.04   0.00   2.97    0.00   0.00   0.00    0.00    0.00    0.00   0.99\n07:38:50 PM    1  97.00   0.00   1.00    0.00   0.00   0.00    0.00    0.00    0.00   2.00\n07:38:50 PM    2  98.00   0.00   1.00    0.00   0.00   0.00    0.00    0.00    0.00   1.00\n07:38:50 PM    3  96.97   0.00   0.00    0.00   0.00   0.00    0.00    0.00    0.00   3.03```\n\n该命令可以显示每个CPU的占用情况，如果有一个CPU占用率特别高，那么有可能是一个单线程应用程序引起的。\n\n>（5） pidstat 1\n\n```\nLinux 3.13.0-49-generic (titanclusters-xxxxx)  07/14/2015    _x86_64_    (32 CPU)\n07:41:02 PM   UID       PID    %usr %system  %guest    %CPU   CPU  Command\n07:41:03 PM     0         9    0.00    0.94    0.00    0.94     1  rcuos/0\n07:41:03 PM     0      4214    5.66    5.66    0.00   11.32    15  mesos-slave\n07:41:03 PM     0      4354    0.94    0.94    0.00    1.89     8  java\n07:41:03 PM     0      6521 1596.23    1.89    0.00 1598.11    27  java\n07:41:03 PM     0      6564 1571.70    7.55    0.00 1579.25    28  java\n07:41:03 PM 60004     60154    0.94    4.72    0.00    5.66     9  pidstat\n07:41:03 PM   UID       PID    %usr %system  %guest    %CPU   CPU  Command\n07:41:04 PM     0      4214    6.00    2.00    0.00    8.00    15  mesos-slave\n07:41:04 PM     0      6521 1590.00    1.00    0.00 1591.00    27  java\n07:41:04 PM     0      6564 1573.00   10.00    0.00 1583.00    28  java\n07:41:04 PM   108      6718    1.00    0.00    0.00    1.00     0  snmp-pass\n07:41:04 PM 60004     60154    1.00    4.00    0.00    5.00     9  pidstat```\npidstat命令输出进程的CPU占用率，该命令会持续输出，并且不会覆盖之前的数据，可以方便观察系统动态。如上的输出，可以看见两个JAVA进程占用了将近1600%的CPU时间，既消耗了大约16个CPU核心的运算资源。\n\n>（6） iostat -xz 1\n\n```\nLinux 3.13.0-49-generic (titanclusters-xxxxx)  07/14/2015  _x86_64_ (32 CPU)\navg-cpu:  %user   %nice %system %iowait  %steal   %idle\n          73.96    0.00    3.73    0.03    0.06   22.21\nDevice:   rrqm/s   wrqm/s     r/s     w/s    rkB/s    wkB/s avgrq-sz avgqu-sz   await r_await w_await  svctm  %util\nxvda        0.00     0.23    0.21    0.18     4.52     2.08    34.37     0.00    9.98   13.80    5.42   2.44   0.09\nxvdb        0.01     0.00    1.02    8.94   127.97   598.53   145.79     0.00    0.43    1.78    0.28   0.25   0.25\nxvdc        0.01     0.00    1.02    8.86   127.79   595.94   146.50     0.00    0.45    1.82    0.30   0.27   0.26\ndm-0        0.00     0.00    0.69    2.32    10.47    31.69    28.01     0.01    3.23    0.71    3.98   0.13   0.04\ndm-1        0.00     0.00    0.00    0.94     0.01     3.78     8.00     0.33  345.84    0.04  346.81   0.01   0.00\ndm-2        0.00     0.00    0.09    0.07     1.35     0.36    22.50     0.00    2.55    0.23    5.62   1.78   0.03\n```\niostat命令主要用于查看机器磁盘IO情况。该命令输出的列，主要含义是：\n  ● **r/s, w/s, rkB/s, wkB/s**：分别表示每秒读写次数和每秒读写数据量（千字节）。读写量过大，可能会引起性能问题。\n  ● **await**：IO操作的平均等待时间，单位是毫秒。这是应用程序在和磁盘交互时，需要消耗的时间，包括IO等待和实际操作的耗时。如果这个数值过大，可能是硬件设备遇到了瓶颈或者出现故障。\n  ● **avgqu-sz**：向设备发出的请求平均数量。如果这个数值大于1，可能是硬件设备已经饱和（部分前端硬件设备支持并行写入）。\n  ●** %util**：设备利用率。这个数值表示设备的繁忙程度，经验值是如果超过60，可能会影响IO性能（可以参照IO操作平均等待时间）。如果到达100%，说明硬件设备已经饱和。\n如果显示的是逻辑设备的数据，那么设备利用率不代表后端实际的硬件设备已经饱和。值得注意的是，即使IO性能不理想，也不一定意味这应用程序性能会不好，可以利用诸如预读取、写缓存等策略提升应用性能。\n\n>（7） free –m\n\n```\n             total       used       free     shared    buffers     cached\nMem:        245998      24545     221453         83         59        541\n-/+ buffers/cache:      23944     222053\nSwap:            0          0          0```\nfree命令可以查看系统内存的使用情况，-m参数表示按照兆字节展示。最后两列分别表示用于IO缓存的内存数，和用于文件系统页缓存的内存数。需要注意的是，第二行-/+ buffers/cache，看上去缓存占用了大量内存空间。这是Linux系统的内存使用策略，尽可能的利用内存，如果应用程序需要内存，这部分内存会立即被回收并分配给应用程序。因此，这部分内存一般也被当成是可用内存。\n如果可用内存非常少，系统可能会动用交换区（如果配置了的话），这样会增加IO开销（可以在iostat命令中提现），降低系统性能。\n\n>（8） sar -n DEV 1\n\n```\nLinux 3.13.0-49-generic (titanclusters-xxxxx)  07/14/2015     _x86_64_    (32 CPU)\n12:16:48 AM     IFACE   rxpck/s   txpck/s    rxkB/s    txkB/s   rxcmp/s   txcmp/s  rxmcst/s   %ifutil\n12:16:49 AM      eth0  18763.00   5032.00  20686.42    478.30      0.00      0.00      0.00      0.00\n12:16:49 AM        lo     14.00     14.00      1.36      1.36      0.00      0.00      0.00      0.00\n12:16:49 AM   docker0      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00\n12:16:49 AM     IFACE   rxpck/s   txpck/s    rxkB/s    txkB/s   rxcmp/s   txcmp/s  rxmcst/s   %ifutil\n12:16:50 AM      eth0  19763.00   5101.00  21999.10    482.56      0.00      0.00      0.00      0.00\n12:16:50 AM        lo     20.00     20.00      3.25      3.25      0.00      0.00      0.00      0.00\n12:16:50 AM   docker0      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00```\nsar命令在这里可以查看网络设备的吞吐率。在排查性能问题时，可以通过网络设备的吞吐量，判断网络设备是否已经饱和。如示例输出中，eth0网卡设备，吞吐率大概在22 Mbytes/s，既176 Mbits/sec，没有达到1Gbit/sec的硬件上限。\n\n>（9） sar -n TCP,ETCP 1\n\n```\nLinux 3.13.0-49-generic (titanclusters-xxxxx)  07/14/2015    _x86_64_    (32 CPU)\n12:17:19 AM  active/s passive/s    iseg/s    oseg/s\n12:17:20 AM      1.00      0.00  10233.00  18846.00\n12:17:19 AM  atmptf/s  estres/s retrans/s isegerr/s   orsts/s\n12:17:20 AM      0.00      0.00      0.00      0.00      0.00\n12:17:20 AM  active/s passive/s    iseg/s    oseg/s\n12:17:21 AM      1.00      0.00   8359.00   6039.00\n12:17:20 AM  atmptf/s  estres/s retrans/s isegerr/s   orsts/s\n12:17:21 AM      0.00      0.00      0.00      0.00      0.00```\n\nsar命令在这里用于查看TCP连接状态，其中包括：\n  ● **active/s**：每秒本地发起的TCP连接数，既通过connect调用创建的TCP连接；\n  ● **passive/s**：每秒远程发起的TCP连接数，即通过accept调用创建的TCP连接；\n  ●** retrans/s**：每秒TCP重传数量；\nTCP连接数可以用来判断性能问题是否由于建立了过多的连接，进一步可以判断是主动发起的连接，还是被动接受的连接。TCP重传可能是因为网络环境恶劣，或者服务器压力过大导致丢包。\n\n>（10）top\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%A3%80%E6%9F%A5Linux%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%80%A7%E8%83%BD1.png)\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%A3%80%E6%9F%A5Linux%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%80%A7%E8%83%BD2.png)\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%A3%80%E6%9F%A5Linux%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%80%A7%E8%83%BD3.png)\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%A3%80%E6%9F%A5Linux%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%80%A7%E8%83%BD4.png)\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%A3%80%E6%9F%A5Linux%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%80%A7%E8%83%BD5.png)\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%A3%80%E6%9F%A5Linux%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%80%A7%E8%83%BD6.png)\n\ntop命令包含了前面好几个命令的检查的内容。比如：\n\n* 系统负载情况（uptime）\n* 系统内存使用情况（free）\n* 系统CPU使用情况（vmstat）等。\n\n因此通过这个命令，可以相对全面的查看系统负载的来源。同时，top命令支持排序，可以按照不同的列排序，方便查找出诸如内存占用最多的进程、CPU占用率最高的进程等。\n但是，top命令相对于前面一些命令，输出是一个瞬间值，如果不持续盯着，可能会错过一些线索。这时可能需要暂停top命令刷新，来记录和比对数据。\n\n\n---","source":"_posts/环境搭建/2016-11-08-检查Linux服务器性能.md","raw":"---\ntitle: 检查Linux服务器性能\ncategories:\n  - 环境搭建\ntags:\n  - 检查Linux服务器性能\nabbrlink: 64139\ndate: 2016-11-08 09:53:54\n---\n\n# 关于服务器负载\n\nload average值，参考：[理解Linux系统中的load average（图文版）](http://heipark.iteye.com/blog/1340384)\n\n>（1） uptime\n\n```\n23:51:26 up 21:31,  1 user,  load average: 30.02, 26.43, 19.02```\n\n这个命令可以快速查看机器的负载情况。在Linux系统中，这些数据表示等待CPU资源的进程和阻塞在不可中断IO进程（进程状态为D）的数量。这些数据可以让我们对系统资源使用有一个宏观的了解。\n\n命令的输出分别表示1分钟、5分钟、15分钟的平均负载情况。通过这三个数据，可以了解服务器负载是在趋于紧张还是区域缓解。如果1分钟平均负载很高，而15分钟平均负载很低，说明服务器正在命令高负载情况，需要进一步排查CPU资源都消耗在了哪里。反之，如果15分钟平均负载很高，1分钟平均负载较低，则有可能是CPU资源紧张时刻已经过去。\n\n上面例子中的输出，可以看见最近1分钟的平均负载非常高，且远高于最近15分钟负载，因此我们需要继续排查当前系统中有什么进程消耗了大量的资源。可以通过下文将会介绍的vmstat、mpstat等命令进一步排查。\n\n>（2） dmesg | tail\n\n```\n[1880957.563150] perl invoked oom-killer: gfp_mask=0x280da, order=0, oom_score_adj=0\n[...]\n[1880957.563400] Out of memory: Kill process 18694 (perl) score 246 or sacrifice child\n[1880957.563408] Killed process 18694 (perl) total-vm:1972392kB, anon-rss:1953348kB, file-rss:0kB\n[2320864.954447] TCP: Possible SYN flooding on port 7001. Dropping request.  Check SNMP counters.```\n该命令会输出系统日志的最后10行。示例中的输出，可以看见一次内核的oom kill和一次TCP丢包。这些日志可以帮助排查性能问题。千万不要忘了这一步。\n\n>（3） vmstat 1\n\n```\nprocs ---------memory---------- ---swap-- -----io---- -system-- ------cpu-----\n r  b swpd   free   buff  cache   si   so    bi    bo   in   cs us sy id wa st\n34  0    0 200889792  73708 591828    0    0     0     5    6   10 96  1  3  0  0\n32  0    0 200889920  73708 591860    0    0     0   592 13284 4282 98  1  1  0  0\n32  0    0 200890112  73708 591860    0    0     0     0 9501 2154 99  1  0  0  0\n32  0    0 200889568  73712 591856    0    0     0    48 11900 2459 99  0  0  0  0\n32  0    0 200890208  73712 591860    0    0     0     0 15898 4840 98  1  1  0  0```\nvmstat 命令，每行会输出一些系统核心指标，这些指标可以让我们更详细的了解系统状态。后面跟的参数1，表示每秒输出一次统计信息，表头提示了每一列的含义，这几介绍一些和性能调优相关的列：\n  ● **r**：等待在CPU资源的进程数。这个数据比平均负载更加能够体现CPU负载情况，数据中不包含等待IO的进程。如果这个数值大于机器CPU核数，那么机器的CPU资源已经饱和。\n  ● **free**：系统可用内存数（以千字节为单位），如果剩余内存不足，也会导致系统性能问题。下文介绍到的free命令，可以更详细的了解系统内存的使用情况。\n  ● **si, so**：交换区写入和读取的数量。如果这个数据不为0，说明系统已经在使用交换区（swap），机器物理内存已经不足。\n  ● **us, sy, id, wa, st**：这些都代表了CPU时间的消耗，它们分别表示**用户时间（user）、系统（内核）时间（sys）、空闲时间（idle）、IO等待时间（wait）和被偷走的时间（stolen）**，一般被其他虚拟机消耗）。\n上述这些CPU时间，可以让我们很快了解CPU是否出于繁忙状态。一般情况下，如果用户时间和系统时间相加非常大，CPU出于忙于执行指令。如果IO等待时间很长，那么系统的瓶颈可能在磁盘IO。\n示例命令的输出可以看见，大量CPU时间消耗在用户态，也就是用户应用程序消耗了CPU时间。这不一定是性能问题，需要结合r队列，一起分析。\n\n>（4） mpstat -P ALL 1\n\n```\nLinux 3.13.0-49-generic (titanclusters-xxxxx)  07/14/2015  _x86_64_ (32 CPU)\n07:38:49 PM  CPU   %usr  %nice   %sys %iowait   %irq  %soft  %steal  %guest  %gnice  %idle\n07:38:50 PM  all  98.47   0.00   0.75    0.00   0.00   0.00    0.00    0.00    0.00   0.78\n07:38:50 PM    0  96.04   0.00   2.97    0.00   0.00   0.00    0.00    0.00    0.00   0.99\n07:38:50 PM    1  97.00   0.00   1.00    0.00   0.00   0.00    0.00    0.00    0.00   2.00\n07:38:50 PM    2  98.00   0.00   1.00    0.00   0.00   0.00    0.00    0.00    0.00   1.00\n07:38:50 PM    3  96.97   0.00   0.00    0.00   0.00   0.00    0.00    0.00    0.00   3.03```\n\n该命令可以显示每个CPU的占用情况，如果有一个CPU占用率特别高，那么有可能是一个单线程应用程序引起的。\n\n>（5） pidstat 1\n\n```\nLinux 3.13.0-49-generic (titanclusters-xxxxx)  07/14/2015    _x86_64_    (32 CPU)\n07:41:02 PM   UID       PID    %usr %system  %guest    %CPU   CPU  Command\n07:41:03 PM     0         9    0.00    0.94    0.00    0.94     1  rcuos/0\n07:41:03 PM     0      4214    5.66    5.66    0.00   11.32    15  mesos-slave\n07:41:03 PM     0      4354    0.94    0.94    0.00    1.89     8  java\n07:41:03 PM     0      6521 1596.23    1.89    0.00 1598.11    27  java\n07:41:03 PM     0      6564 1571.70    7.55    0.00 1579.25    28  java\n07:41:03 PM 60004     60154    0.94    4.72    0.00    5.66     9  pidstat\n07:41:03 PM   UID       PID    %usr %system  %guest    %CPU   CPU  Command\n07:41:04 PM     0      4214    6.00    2.00    0.00    8.00    15  mesos-slave\n07:41:04 PM     0      6521 1590.00    1.00    0.00 1591.00    27  java\n07:41:04 PM     0      6564 1573.00   10.00    0.00 1583.00    28  java\n07:41:04 PM   108      6718    1.00    0.00    0.00    1.00     0  snmp-pass\n07:41:04 PM 60004     60154    1.00    4.00    0.00    5.00     9  pidstat```\npidstat命令输出进程的CPU占用率，该命令会持续输出，并且不会覆盖之前的数据，可以方便观察系统动态。如上的输出，可以看见两个JAVA进程占用了将近1600%的CPU时间，既消耗了大约16个CPU核心的运算资源。\n\n>（6） iostat -xz 1\n\n```\nLinux 3.13.0-49-generic (titanclusters-xxxxx)  07/14/2015  _x86_64_ (32 CPU)\navg-cpu:  %user   %nice %system %iowait  %steal   %idle\n          73.96    0.00    3.73    0.03    0.06   22.21\nDevice:   rrqm/s   wrqm/s     r/s     w/s    rkB/s    wkB/s avgrq-sz avgqu-sz   await r_await w_await  svctm  %util\nxvda        0.00     0.23    0.21    0.18     4.52     2.08    34.37     0.00    9.98   13.80    5.42   2.44   0.09\nxvdb        0.01     0.00    1.02    8.94   127.97   598.53   145.79     0.00    0.43    1.78    0.28   0.25   0.25\nxvdc        0.01     0.00    1.02    8.86   127.79   595.94   146.50     0.00    0.45    1.82    0.30   0.27   0.26\ndm-0        0.00     0.00    0.69    2.32    10.47    31.69    28.01     0.01    3.23    0.71    3.98   0.13   0.04\ndm-1        0.00     0.00    0.00    0.94     0.01     3.78     8.00     0.33  345.84    0.04  346.81   0.01   0.00\ndm-2        0.00     0.00    0.09    0.07     1.35     0.36    22.50     0.00    2.55    0.23    5.62   1.78   0.03\n```\niostat命令主要用于查看机器磁盘IO情况。该命令输出的列，主要含义是：\n  ● **r/s, w/s, rkB/s, wkB/s**：分别表示每秒读写次数和每秒读写数据量（千字节）。读写量过大，可能会引起性能问题。\n  ● **await**：IO操作的平均等待时间，单位是毫秒。这是应用程序在和磁盘交互时，需要消耗的时间，包括IO等待和实际操作的耗时。如果这个数值过大，可能是硬件设备遇到了瓶颈或者出现故障。\n  ● **avgqu-sz**：向设备发出的请求平均数量。如果这个数值大于1，可能是硬件设备已经饱和（部分前端硬件设备支持并行写入）。\n  ●** %util**：设备利用率。这个数值表示设备的繁忙程度，经验值是如果超过60，可能会影响IO性能（可以参照IO操作平均等待时间）。如果到达100%，说明硬件设备已经饱和。\n如果显示的是逻辑设备的数据，那么设备利用率不代表后端实际的硬件设备已经饱和。值得注意的是，即使IO性能不理想，也不一定意味这应用程序性能会不好，可以利用诸如预读取、写缓存等策略提升应用性能。\n\n>（7） free –m\n\n```\n             total       used       free     shared    buffers     cached\nMem:        245998      24545     221453         83         59        541\n-/+ buffers/cache:      23944     222053\nSwap:            0          0          0```\nfree命令可以查看系统内存的使用情况，-m参数表示按照兆字节展示。最后两列分别表示用于IO缓存的内存数，和用于文件系统页缓存的内存数。需要注意的是，第二行-/+ buffers/cache，看上去缓存占用了大量内存空间。这是Linux系统的内存使用策略，尽可能的利用内存，如果应用程序需要内存，这部分内存会立即被回收并分配给应用程序。因此，这部分内存一般也被当成是可用内存。\n如果可用内存非常少，系统可能会动用交换区（如果配置了的话），这样会增加IO开销（可以在iostat命令中提现），降低系统性能。\n\n>（8） sar -n DEV 1\n\n```\nLinux 3.13.0-49-generic (titanclusters-xxxxx)  07/14/2015     _x86_64_    (32 CPU)\n12:16:48 AM     IFACE   rxpck/s   txpck/s    rxkB/s    txkB/s   rxcmp/s   txcmp/s  rxmcst/s   %ifutil\n12:16:49 AM      eth0  18763.00   5032.00  20686.42    478.30      0.00      0.00      0.00      0.00\n12:16:49 AM        lo     14.00     14.00      1.36      1.36      0.00      0.00      0.00      0.00\n12:16:49 AM   docker0      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00\n12:16:49 AM     IFACE   rxpck/s   txpck/s    rxkB/s    txkB/s   rxcmp/s   txcmp/s  rxmcst/s   %ifutil\n12:16:50 AM      eth0  19763.00   5101.00  21999.10    482.56      0.00      0.00      0.00      0.00\n12:16:50 AM        lo     20.00     20.00      3.25      3.25      0.00      0.00      0.00      0.00\n12:16:50 AM   docker0      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00```\nsar命令在这里可以查看网络设备的吞吐率。在排查性能问题时，可以通过网络设备的吞吐量，判断网络设备是否已经饱和。如示例输出中，eth0网卡设备，吞吐率大概在22 Mbytes/s，既176 Mbits/sec，没有达到1Gbit/sec的硬件上限。\n\n>（9） sar -n TCP,ETCP 1\n\n```\nLinux 3.13.0-49-generic (titanclusters-xxxxx)  07/14/2015    _x86_64_    (32 CPU)\n12:17:19 AM  active/s passive/s    iseg/s    oseg/s\n12:17:20 AM      1.00      0.00  10233.00  18846.00\n12:17:19 AM  atmptf/s  estres/s retrans/s isegerr/s   orsts/s\n12:17:20 AM      0.00      0.00      0.00      0.00      0.00\n12:17:20 AM  active/s passive/s    iseg/s    oseg/s\n12:17:21 AM      1.00      0.00   8359.00   6039.00\n12:17:20 AM  atmptf/s  estres/s retrans/s isegerr/s   orsts/s\n12:17:21 AM      0.00      0.00      0.00      0.00      0.00```\n\nsar命令在这里用于查看TCP连接状态，其中包括：\n  ● **active/s**：每秒本地发起的TCP连接数，既通过connect调用创建的TCP连接；\n  ● **passive/s**：每秒远程发起的TCP连接数，即通过accept调用创建的TCP连接；\n  ●** retrans/s**：每秒TCP重传数量；\nTCP连接数可以用来判断性能问题是否由于建立了过多的连接，进一步可以判断是主动发起的连接，还是被动接受的连接。TCP重传可能是因为网络环境恶劣，或者服务器压力过大导致丢包。\n\n>（10）top\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%A3%80%E6%9F%A5Linux%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%80%A7%E8%83%BD1.png)\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%A3%80%E6%9F%A5Linux%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%80%A7%E8%83%BD2.png)\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%A3%80%E6%9F%A5Linux%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%80%A7%E8%83%BD3.png)\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%A3%80%E6%9F%A5Linux%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%80%A7%E8%83%BD4.png)\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%A3%80%E6%9F%A5Linux%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%80%A7%E8%83%BD5.png)\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E6%A3%80%E6%9F%A5Linux%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%80%A7%E8%83%BD6.png)\n\ntop命令包含了前面好几个命令的检查的内容。比如：\n\n* 系统负载情况（uptime）\n* 系统内存使用情况（free）\n* 系统CPU使用情况（vmstat）等。\n\n因此通过这个命令，可以相对全面的查看系统负载的来源。同时，top命令支持排序，可以按照不同的列排序，方便查找出诸如内存占用最多的进程、CPU占用率最高的进程等。\n但是，top命令相对于前面一些命令，输出是一个瞬间值，如果不持续盯着，可能会错过一些线索。这时可能需要暂停top命令刷新，来记录和比对数据。\n\n\n---","slug":"环境搭建-2016-11-08-检查Linux服务器性能","published":1,"updated":"2016-11-13T03:36:30.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civi8oujo002o2c6n41ok4uru","content":"<h1 id=\"关于服务器负载\"><a href=\"#关于服务器负载\" class=\"headerlink\" title=\"关于服务器负载\"></a>关于服务器负载</h1><p>load average值，参考：<a href=\"http://heipark.iteye.com/blog/1340384\" target=\"_blank\" rel=\"external\">理解Linux系统中的load average（图文版）</a></p>\n<blockquote>\n<p>（1） uptime</p>\n</blockquote>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">23<span class=\"selector-pseudo\">:51</span><span class=\"selector-pseudo\">:26</span> <span class=\"selector-tag\">up</span> 21<span class=\"selector-pseudo\">:31</span>,  1 <span class=\"selector-tag\">user</span>,  <span class=\"selector-tag\">load</span> <span class=\"selector-tag\">average</span>: 30<span class=\"selector-class\">.02</span>, 26<span class=\"selector-class\">.43</span>, 19<span class=\"selector-class\">.02</span></div></pre></td></tr></table></figure>\n<p>这个命令可以快速查看机器的负载情况。在Linux系统中，这些数据表示等待CPU资源的进程和阻塞在不可中断IO进程（进程状态为D）的数量。这些数据可以让我们对系统资源使用有一个宏观的了解。</p>\n<p>命令的输出分别表示1分钟、5分钟、15分钟的平均负载情况。通过这三个数据，可以了解服务器负载是在趋于紧张还是区域缓解。如果1分钟平均负载很高，而15分钟平均负载很低，说明服务器正在命令高负载情况，需要进一步排查CPU资源都消耗在了哪里。反之，如果15分钟平均负载很高，1分钟平均负载较低，则有可能是CPU资源紧张时刻已经过去。</p>\n<p>上面例子中的输出，可以看见最近1分钟的平均负载非常高，且远高于最近15分钟负载，因此我们需要继续排查当前系统中有什么进程消耗了大量的资源。可以通过下文将会介绍的vmstat、mpstat等命令进一步排查。</p>\n<blockquote>\n<p>（2） dmesg | tail</p>\n</blockquote>\n<figure class=\"highlight scheme\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">[<span class=\"name\">1880957.563150</span>] perl invoked oom-killer: gfp_mask=0x280da, order=0, oom_score_adj=0</div><div class=\"line\">[<span class=\"name\"><span class=\"builtin-name\">...</span></span>]</div><div class=\"line\">[<span class=\"name\">1880957.563400</span>] Out of memory: Kill process <span class=\"number\">18694</span> (<span class=\"name\">perl</span>) score <span class=\"number\">246</span> or sacrifice child</div><div class=\"line\">[<span class=\"name\">1880957.563408</span>] Killed process <span class=\"number\">18694</span> (<span class=\"name\">perl</span>) total-vm:1972392kB, anon-rss:1953348kB, file-rss:0kB</div><div class=\"line\">[<span class=\"name\">2320864.954447</span>] TCP: Possible SYN flooding on port <span class=\"number\">7001</span>. Dropping request.  Check SNMP counters.</div></pre></td></tr></table></figure>\n<p>该命令会输出系统日志的最后10行。示例中的输出，可以看见一次内核的oom kill和一次TCP丢包。这些日志可以帮助排查性能问题。千万不要忘了这一步。</p>\n<blockquote>\n<p>（3） vmstat 1</p>\n</blockquote>\n<figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">procs ---------memory---------- ---swap-- -----io---- -system-- ------cpu-----</div><div class=\"line\"> r  b swpd   free   buff  cache   si   so    bi    bo   in   cs us sy id wa st</div><div class=\"line\"><span class=\"number\">34</span>  <span class=\"number\">0</span>    <span class=\"number\">0</span> <span class=\"number\">200889792</span>  <span class=\"number\">73708</span> <span class=\"number\">591828</span>    <span class=\"number\">0</span>    <span class=\"number\">0</span>     <span class=\"number\">0</span>     <span class=\"number\">5</span>    <span class=\"number\">6</span>   <span class=\"number\">10</span> <span class=\"number\">96</span>  <span class=\"number\">1</span>  <span class=\"number\">3</span>  <span class=\"number\">0</span>  <span class=\"number\">0</span></div><div class=\"line\"><span class=\"number\">32</span>  <span class=\"number\">0</span>    <span class=\"number\">0</span> <span class=\"number\">200889920</span>  <span class=\"number\">73708</span> <span class=\"number\">591860</span>    <span class=\"number\">0</span>    <span class=\"number\">0</span>     <span class=\"number\">0</span>   <span class=\"number\">592</span> <span class=\"number\">13284</span> <span class=\"number\">4282</span> <span class=\"number\">98</span>  <span class=\"number\">1</span>  <span class=\"number\">1</span>  <span class=\"number\">0</span>  <span class=\"number\">0</span></div><div class=\"line\"><span class=\"number\">32</span>  <span class=\"number\">0</span>    <span class=\"number\">0</span> <span class=\"number\">200890112</span>  <span class=\"number\">73708</span> <span class=\"number\">591860</span>    <span class=\"number\">0</span>    <span class=\"number\">0</span>     <span class=\"number\">0</span>     <span class=\"number\">0</span> <span class=\"number\">9501</span> <span class=\"number\">2154</span> <span class=\"number\">99</span>  <span class=\"number\">1</span>  <span class=\"number\">0</span>  <span class=\"number\">0</span>  <span class=\"number\">0</span></div><div class=\"line\"><span class=\"number\">32</span>  <span class=\"number\">0</span>    <span class=\"number\">0</span> <span class=\"number\">200889568</span>  <span class=\"number\">73712</span> <span class=\"number\">591856</span>    <span class=\"number\">0</span>    <span class=\"number\">0</span>     <span class=\"number\">0</span>    <span class=\"number\">48</span> <span class=\"number\">11900</span> <span class=\"number\">2459</span> <span class=\"number\">99</span>  <span class=\"number\">0</span>  <span class=\"number\">0</span>  <span class=\"number\">0</span>  <span class=\"number\">0</span></div><div class=\"line\"><span class=\"number\">32</span>  <span class=\"number\">0</span>    <span class=\"number\">0</span> <span class=\"number\">200890208</span>  <span class=\"number\">73712</span> <span class=\"number\">591860</span>    <span class=\"number\">0</span>    <span class=\"number\">0</span>     <span class=\"number\">0</span>     <span class=\"number\">0</span> <span class=\"number\">15898</span> <span class=\"number\">4840</span> <span class=\"number\">98</span>  <span class=\"number\">1</span>  <span class=\"number\">1</span>  <span class=\"number\">0</span>  <span class=\"number\">0</span></div></pre></td></tr></table></figure>\n<p>vmstat 命令，每行会输出一些系统核心指标，这些指标可以让我们更详细的了解系统状态。后面跟的参数1，表示每秒输出一次统计信息，表头提示了每一列的含义，这几介绍一些和性能调优相关的列：<br>  ● <strong>r</strong>：等待在CPU资源的进程数。这个数据比平均负载更加能够体现CPU负载情况，数据中不包含等待IO的进程。如果这个数值大于机器CPU核数，那么机器的CPU资源已经饱和。<br>  ● <strong>free</strong>：系统可用内存数（以千字节为单位），如果剩余内存不足，也会导致系统性能问题。下文介绍到的free命令，可以更详细的了解系统内存的使用情况。<br>  ● <strong>si, so</strong>：交换区写入和读取的数量。如果这个数据不为0，说明系统已经在使用交换区（swap），机器物理内存已经不足。<br>  ● <strong>us, sy, id, wa, st</strong>：这些都代表了CPU时间的消耗，它们分别表示<strong>用户时间（user）、系统（内核）时间（sys）、空闲时间（idle）、IO等待时间（wait）和被偷走的时间（stolen）</strong>，一般被其他虚拟机消耗）。<br>上述这些CPU时间，可以让我们很快了解CPU是否出于繁忙状态。一般情况下，如果用户时间和系统时间相加非常大，CPU出于忙于执行指令。如果IO等待时间很长，那么系统的瓶颈可能在磁盘IO。<br>示例命令的输出可以看见，大量CPU时间消耗在用户态，也就是用户应用程序消耗了CPU时间。这不一定是性能问题，需要结合r队列，一起分析。</p>\n<blockquote>\n<p>（4） mpstat -P ALL 1</p>\n</blockquote>\n<figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">Linux</span> <span class=\"selector-tag\">3</span><span class=\"selector-class\">.13</span><span class=\"selector-class\">.0-49-generic</span> (titanclusters-xxxxx)  <span class=\"selector-tag\">07</span>/<span class=\"selector-tag\">14</span>/<span class=\"selector-tag\">2015</span>  <span class=\"selector-tag\">_x86_64_</span> (<span class=\"number\">32</span> CPU)</div><div class=\"line\"><span class=\"selector-tag\">07</span><span class=\"selector-pseudo\">:38</span><span class=\"selector-pseudo\">:49</span> <span class=\"selector-tag\">PM</span>  <span class=\"selector-tag\">CPU</span>   %<span class=\"selector-tag\">usr</span>  %<span class=\"selector-tag\">nice</span>   %<span class=\"selector-tag\">sys</span> %<span class=\"selector-tag\">iowait</span>   %<span class=\"selector-tag\">irq</span>  %<span class=\"selector-tag\">soft</span>  %<span class=\"selector-tag\">steal</span>  %<span class=\"selector-tag\">guest</span>  %<span class=\"selector-tag\">gnice</span>  %<span class=\"selector-tag\">idle</span></div><div class=\"line\"><span class=\"selector-tag\">07</span><span class=\"selector-pseudo\">:38</span><span class=\"selector-pseudo\">:50</span> <span class=\"selector-tag\">PM</span>  <span class=\"keyword\">all</span>  <span class=\"selector-tag\">98</span><span class=\"selector-class\">.47</span>   <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>   <span class=\"selector-tag\">0</span><span class=\"selector-class\">.75</span>    <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>   <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>   <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>    <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>    <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>    <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>   <span class=\"selector-tag\">0</span><span class=\"selector-class\">.78</span></div><div class=\"line\"><span class=\"selector-tag\">07</span><span class=\"selector-pseudo\">:38</span><span class=\"selector-pseudo\">:50</span> <span class=\"selector-tag\">PM</span>    <span class=\"selector-tag\">0</span>  <span class=\"selector-tag\">96</span><span class=\"selector-class\">.04</span>   <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>   <span class=\"selector-tag\">2</span><span class=\"selector-class\">.97</span>    <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>   <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>   <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>    <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>    <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>    <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>   <span class=\"selector-tag\">0</span><span class=\"selector-class\">.99</span></div><div class=\"line\"><span class=\"selector-tag\">07</span><span class=\"selector-pseudo\">:38</span><span class=\"selector-pseudo\">:50</span> <span class=\"selector-tag\">PM</span>    <span class=\"selector-tag\">1</span>  <span class=\"selector-tag\">97</span><span class=\"selector-class\">.00</span>   <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>   <span class=\"selector-tag\">1</span><span class=\"selector-class\">.00</span>    <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>   <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>   <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>    <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>    <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>    <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>   <span class=\"selector-tag\">2</span><span class=\"selector-class\">.00</span></div><div class=\"line\"><span class=\"selector-tag\">07</span><span class=\"selector-pseudo\">:38</span><span class=\"selector-pseudo\">:50</span> <span class=\"selector-tag\">PM</span>    <span class=\"selector-tag\">2</span>  <span class=\"selector-tag\">98</span><span class=\"selector-class\">.00</span>   <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>   <span class=\"selector-tag\">1</span><span class=\"selector-class\">.00</span>    <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>   <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>   <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>    <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>    <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>    <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>   <span class=\"selector-tag\">1</span><span class=\"selector-class\">.00</span></div><div class=\"line\"><span class=\"selector-tag\">07</span><span class=\"selector-pseudo\">:38</span><span class=\"selector-pseudo\">:50</span> <span class=\"selector-tag\">PM</span>    <span class=\"selector-tag\">3</span>  <span class=\"selector-tag\">96</span><span class=\"selector-class\">.97</span>   <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>   <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>    <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>   <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>   <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>    <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>    <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>    <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>   <span class=\"selector-tag\">3</span><span class=\"selector-class\">.03</span></div></pre></td></tr></table></figure>\n<p>该命令可以显示每个CPU的占用情况，如果有一个CPU占用率特别高，那么有可能是一个单线程应用程序引起的。</p>\n<blockquote>\n<p>（5） pidstat 1</p>\n</blockquote>\n<figure class=\"highlight tap\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">Linux 3.13.0-49-generic (titanclusters-xxxxx)  07/14/2015    _x86_64_    (32 CPU)</div><div class=\"line\">07:41:02 PM   UID       PID    %usr %system  %guest    %CPU   CPU  Command</div><div class=\"line\">07:41:03 PM    <span class=\"number\"> 0 </span>       <span class=\"number\"> 9 </span>   0.00    0.94    0.00    0.94    <span class=\"number\"> 1 </span> rcuos/0</div><div class=\"line\">07:41:03 PM    <span class=\"number\"> 0 </span>    <span class=\"number\"> 4214 </span>   5.66    5.66    0.00   11.32   <span class=\"number\"> 15 </span> mesos-slave</div><div class=\"line\">07:41:03 PM    <span class=\"number\"> 0 </span>    <span class=\"number\"> 4354 </span>   0.94    0.94    0.00    1.89    <span class=\"number\"> 8 </span> java</div><div class=\"line\">07:41:03 PM    <span class=\"number\"> 0 </span>    <span class=\"number\"> 6521 </span>1596.23    1.89    0.00 1598.11   <span class=\"number\"> 27 </span> java</div><div class=\"line\">07:41:03 PM    <span class=\"number\"> 0 </span>    <span class=\"number\"> 6564 </span>1571.70    7.55    0.00 1579.25   <span class=\"number\"> 28 </span> java</div><div class=\"line\">07:41:03 PM<span class=\"number\"> 60004 </span>   <span class=\"number\"> 60154 </span>   0.94    4.72    0.00    5.66    <span class=\"number\"> 9 </span> pidstat</div><div class=\"line\">07:41:03 PM   UID       PID    %usr %system  %guest    %CPU   CPU  Command</div><div class=\"line\">07:41:04 PM    <span class=\"number\"> 0 </span>    <span class=\"number\"> 4214 </span>   6.00    2.00    0.00    8.00   <span class=\"number\"> 15 </span> mesos-slave</div><div class=\"line\">07:41:04 PM    <span class=\"number\"> 0 </span>    <span class=\"number\"> 6521 </span>1590.00    1.00    0.00 1591.00   <span class=\"number\"> 27 </span> java</div><div class=\"line\">07:41:04 PM    <span class=\"number\"> 0 </span>    <span class=\"number\"> 6564 </span>1573.00   10.00    0.00 1583.00   <span class=\"number\"> 28 </span> java</div><div class=\"line\">07:41:04 PM  <span class=\"number\"> 108 </span>    <span class=\"number\"> 6718 </span>   1.00    0.00    0.00    1.00    <span class=\"number\"> 0 </span> snmp-pass</div><div class=\"line\">07:41:04 PM<span class=\"number\"> 60004 </span>   <span class=\"number\"> 60154 </span>   1.00    4.00    0.00    5.00    <span class=\"number\"> 9 </span> pidstat</div></pre></td></tr></table></figure>\n<p>pidstat命令输出进程的CPU占用率，该命令会持续输出，并且不会覆盖之前的数据，可以方便观察系统动态。如上的输出，可以看见两个JAVA进程占用了将近1600%的CPU时间，既消耗了大约16个CPU核心的运算资源。</p>\n<blockquote>\n<p>（6） iostat -xz 1</p>\n</blockquote>\n<figure class=\"highlight cos\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">Linux <span class=\"number\">3.13</span>.0-<span class=\"number\">49</span>-generic (titanclusters-xxxxx)  <span class=\"number\">07</span>/<span class=\"number\">14</span>/<span class=\"number\">2015</span>  _x86_64_ (<span class=\"number\">32</span> CPU)</div><div class=\"line\">avg-cpu:  <span class=\"built_in\">%user</span>   <span class=\"built_in\">%nice</span> <span class=\"built_in\">%system</span> <span class=\"built_in\">%iowait</span>  <span class=\"built_in\">%steal</span>   <span class=\"built_in\">%idle</span></div><div class=\"line\">          <span class=\"number\">73.96</span>    <span class=\"number\">0.00</span>    <span class=\"number\">3.73</span>    <span class=\"number\">0.03</span>    <span class=\"number\">0.06</span>   <span class=\"number\">22.21</span></div><div class=\"line\">Device:   rrqm/<span class=\"keyword\">s</span>   wrqm/<span class=\"keyword\">s</span>     <span class=\"keyword\">r</span>/<span class=\"keyword\">s</span>     <span class=\"keyword\">w</span>/<span class=\"keyword\">s</span>    rkB/<span class=\"keyword\">s</span>    wkB/<span class=\"keyword\">s</span> avgrq-sz avgqu-sz   await r_await w_await  svctm  <span class=\"built_in\">%util</span></div><div class=\"line\">xvda        <span class=\"number\">0.00</span>     <span class=\"number\">0.23</span>    <span class=\"number\">0.21</span>    <span class=\"number\">0.18</span>     <span class=\"number\">4.52</span>     <span class=\"number\">2.08</span>    <span class=\"number\">34.37</span>     <span class=\"number\">0.00</span>    <span class=\"number\">9.98</span>   <span class=\"number\">13.80</span>    <span class=\"number\">5.42</span>   <span class=\"number\">2.44</span>   <span class=\"number\">0.09</span></div><div class=\"line\">xvdb        <span class=\"number\">0.01</span>     <span class=\"number\">0.00</span>    <span class=\"number\">1.02</span>    <span class=\"number\">8.94</span>   <span class=\"number\">127.97</span>   <span class=\"number\">598.53</span>   <span class=\"number\">145.79</span>     <span class=\"number\">0.00</span>    <span class=\"number\">0.43</span>    <span class=\"number\">1.78</span>    <span class=\"number\">0.28</span>   <span class=\"number\">0.25</span>   <span class=\"number\">0.25</span></div><div class=\"line\">xvdc        <span class=\"number\">0.01</span>     <span class=\"number\">0.00</span>    <span class=\"number\">1.02</span>    <span class=\"number\">8.86</span>   <span class=\"number\">127.79</span>   <span class=\"number\">595.94</span>   <span class=\"number\">146.50</span>     <span class=\"number\">0.00</span>    <span class=\"number\">0.45</span>    <span class=\"number\">1.82</span>    <span class=\"number\">0.30</span>   <span class=\"number\">0.27</span>   <span class=\"number\">0.26</span></div><div class=\"line\">dm-<span class=\"number\">0</span>        <span class=\"number\">0.00</span>     <span class=\"number\">0.00</span>    <span class=\"number\">0.69</span>    <span class=\"number\">2.32</span>    <span class=\"number\">10.47</span>    <span class=\"number\">31.69</span>    <span class=\"number\">28.01</span>     <span class=\"number\">0.01</span>    <span class=\"number\">3.23</span>    <span class=\"number\">0.71</span>    <span class=\"number\">3.98</span>   <span class=\"number\">0.13</span>   <span class=\"number\">0.04</span></div><div class=\"line\">dm-<span class=\"number\">1</span>        <span class=\"number\">0.00</span>     <span class=\"number\">0.00</span>    <span class=\"number\">0.00</span>    <span class=\"number\">0.94</span>     <span class=\"number\">0.01</span>     <span class=\"number\">3.78</span>     <span class=\"number\">8.00</span>     <span class=\"number\">0.33</span>  <span class=\"number\">345.84</span>    <span class=\"number\">0.04</span>  <span class=\"number\">346.81</span>   <span class=\"number\">0.01</span>   <span class=\"number\">0.00</span></div><div class=\"line\">dm-<span class=\"number\">2</span>        <span class=\"number\">0.00</span>     <span class=\"number\">0.00</span>    <span class=\"number\">0.09</span>    <span class=\"number\">0.07</span>     <span class=\"number\">1.35</span>     <span class=\"number\">0.36</span>    <span class=\"number\">22.50</span>     <span class=\"number\">0.00</span>    <span class=\"number\">2.55</span>    <span class=\"number\">0.23</span>    <span class=\"number\">5.62</span>   <span class=\"number\">1.78</span>   <span class=\"number\">0.03</span></div></pre></td></tr></table></figure>\n<p>iostat命令主要用于查看机器磁盘IO情况。该命令输出的列，主要含义是：<br>  ● <strong>r/s, w/s, rkB/s, wkB/s</strong>：分别表示每秒读写次数和每秒读写数据量（千字节）。读写量过大，可能会引起性能问题。<br>  ● <strong>await</strong>：IO操作的平均等待时间，单位是毫秒。这是应用程序在和磁盘交互时，需要消耗的时间，包括IO等待和实际操作的耗时。如果这个数值过大，可能是硬件设备遇到了瓶颈或者出现故障。<br>  ● <strong>avgqu-sz</strong>：向设备发出的请求平均数量。如果这个数值大于1，可能是硬件设备已经饱和（部分前端硬件设备支持并行写入）。<br>  ●<strong> %util</strong>：设备利用率。这个数值表示设备的繁忙程度，经验值是如果超过60，可能会影响IO性能（可以参照IO操作平均等待时间）。如果到达100%，说明硬件设备已经饱和。<br>如果显示的是逻辑设备的数据，那么设备利用率不代表后端实际的硬件设备已经饱和。值得注意的是，即使IO性能不理想，也不一定意味这应用程序性能会不好，可以利用诸如预读取、写缓存等策略提升应用性能。</p>\n<blockquote>\n<p>（7） free –m</p>\n</blockquote>\n<figure class=\"highlight tap\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">             total       used       free     shared    buffers     cached</div><div class=\"line\">Mem:       <span class=\"number\"> 245998 </span>    <span class=\"number\"> 24545 </span>   <span class=\"number\"> 221453 </span>       <span class=\"number\"> 83 </span>       <span class=\"number\"> 59 </span>       541</div><div class=\"line\">-/+ buffers/cache:     <span class=\"number\"> 23944 </span>    222053</div><div class=\"line\">Swap:           <span class=\"number\"> 0 </span>        <span class=\"number\"> 0 </span>         0</div></pre></td></tr></table></figure>\n<p>free命令可以查看系统内存的使用情况，-m参数表示按照兆字节展示。最后两列分别表示用于IO缓存的内存数，和用于文件系统页缓存的内存数。需要注意的是，第二行-/+ buffers/cache，看上去缓存占用了大量内存空间。这是Linux系统的内存使用策略，尽可能的利用内存，如果应用程序需要内存，这部分内存会立即被回收并分配给应用程序。因此，这部分内存一般也被当成是可用内存。<br>如果可用内存非常少，系统可能会动用交换区（如果配置了的话），这样会增加IO开销（可以在iostat命令中提现），降低系统性能。</p>\n<blockquote>\n<p>（8） sar -n DEV 1</p>\n</blockquote>\n<figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">Linux</span> <span class=\"selector-tag\">3</span><span class=\"selector-class\">.13</span><span class=\"selector-class\">.0-49-generic</span> (titanclusters-xxxxx)  <span class=\"selector-tag\">07</span>/<span class=\"selector-tag\">14</span>/<span class=\"selector-tag\">2015</span>     <span class=\"selector-tag\">_x86_64_</span>    (<span class=\"number\">32</span> CPU)</div><div class=\"line\"><span class=\"selector-tag\">12</span><span class=\"selector-pseudo\">:16</span><span class=\"selector-pseudo\">:48</span> <span class=\"selector-tag\">AM</span>     <span class=\"selector-tag\">IFACE</span>   <span class=\"selector-tag\">rxpck</span>/<span class=\"selector-tag\">s</span>   <span class=\"selector-tag\">txpck</span>/<span class=\"selector-tag\">s</span>    <span class=\"selector-tag\">rxkB</span>/<span class=\"selector-tag\">s</span>    <span class=\"selector-tag\">txkB</span>/<span class=\"selector-tag\">s</span>   <span class=\"selector-tag\">rxcmp</span>/<span class=\"selector-tag\">s</span>   <span class=\"selector-tag\">txcmp</span>/<span class=\"selector-tag\">s</span>  <span class=\"selector-tag\">rxmcst</span>/<span class=\"selector-tag\">s</span>   %<span class=\"selector-tag\">ifutil</span></div><div class=\"line\"><span class=\"selector-tag\">12</span><span class=\"selector-pseudo\">:16</span><span class=\"selector-pseudo\">:49</span> <span class=\"selector-tag\">AM</span>      <span class=\"selector-tag\">eth0</span>  <span class=\"selector-tag\">18763</span><span class=\"selector-class\">.00</span>   <span class=\"selector-tag\">5032</span><span class=\"selector-class\">.00</span>  <span class=\"selector-tag\">20686</span><span class=\"selector-class\">.42</span>    <span class=\"selector-tag\">478</span><span class=\"selector-class\">.30</span>      <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>      <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>      <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>      <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span></div><div class=\"line\"><span class=\"selector-tag\">12</span><span class=\"selector-pseudo\">:16</span><span class=\"selector-pseudo\">:49</span> <span class=\"selector-tag\">AM</span>        <span class=\"selector-tag\">lo</span>     <span class=\"selector-tag\">14</span><span class=\"selector-class\">.00</span>     <span class=\"selector-tag\">14</span><span class=\"selector-class\">.00</span>      <span class=\"selector-tag\">1</span><span class=\"selector-class\">.36</span>      <span class=\"selector-tag\">1</span><span class=\"selector-class\">.36</span>      <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>      <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>      <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>      <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span></div><div class=\"line\"><span class=\"selector-tag\">12</span><span class=\"selector-pseudo\">:16</span><span class=\"selector-pseudo\">:49</span> <span class=\"selector-tag\">AM</span>   <span class=\"selector-tag\">docker0</span>      <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>      <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>      <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>      <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>      <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>      <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>      <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>      <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span></div><div class=\"line\"><span class=\"selector-tag\">12</span><span class=\"selector-pseudo\">:16</span><span class=\"selector-pseudo\">:49</span> <span class=\"selector-tag\">AM</span>     <span class=\"selector-tag\">IFACE</span>   <span class=\"selector-tag\">rxpck</span>/<span class=\"selector-tag\">s</span>   <span class=\"selector-tag\">txpck</span>/<span class=\"selector-tag\">s</span>    <span class=\"selector-tag\">rxkB</span>/<span class=\"selector-tag\">s</span>    <span class=\"selector-tag\">txkB</span>/<span class=\"selector-tag\">s</span>   <span class=\"selector-tag\">rxcmp</span>/<span class=\"selector-tag\">s</span>   <span class=\"selector-tag\">txcmp</span>/<span class=\"selector-tag\">s</span>  <span class=\"selector-tag\">rxmcst</span>/<span class=\"selector-tag\">s</span>   %<span class=\"selector-tag\">ifutil</span></div><div class=\"line\"><span class=\"selector-tag\">12</span><span class=\"selector-pseudo\">:16</span><span class=\"selector-pseudo\">:50</span> <span class=\"selector-tag\">AM</span>      <span class=\"selector-tag\">eth0</span>  <span class=\"selector-tag\">19763</span><span class=\"selector-class\">.00</span>   <span class=\"selector-tag\">5101</span><span class=\"selector-class\">.00</span>  <span class=\"selector-tag\">21999</span><span class=\"selector-class\">.10</span>    <span class=\"selector-tag\">482</span><span class=\"selector-class\">.56</span>      <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>      <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>      <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>      <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span></div><div class=\"line\"><span class=\"selector-tag\">12</span><span class=\"selector-pseudo\">:16</span><span class=\"selector-pseudo\">:50</span> <span class=\"selector-tag\">AM</span>        <span class=\"selector-tag\">lo</span>     <span class=\"selector-tag\">20</span><span class=\"selector-class\">.00</span>     <span class=\"selector-tag\">20</span><span class=\"selector-class\">.00</span>      <span class=\"selector-tag\">3</span><span class=\"selector-class\">.25</span>      <span class=\"selector-tag\">3</span><span class=\"selector-class\">.25</span>      <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>      <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>      <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>      <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span></div><div class=\"line\"><span class=\"selector-tag\">12</span><span class=\"selector-pseudo\">:16</span><span class=\"selector-pseudo\">:50</span> <span class=\"selector-tag\">AM</span>   <span class=\"selector-tag\">docker0</span>      <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>      <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>      <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>      <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>      <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>      <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>      <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>      <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span></div></pre></td></tr></table></figure>\n<p>sar命令在这里可以查看网络设备的吞吐率。在排查性能问题时，可以通过网络设备的吞吐量，判断网络设备是否已经饱和。如示例输出中，eth0网卡设备，吞吐率大概在22 Mbytes/s，既176 Mbits/sec，没有达到1Gbit/sec的硬件上限。</p>\n<blockquote>\n<p>（9） sar -n TCP,ETCP 1</p>\n</blockquote>\n<figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">Linux</span> <span class=\"selector-tag\">3</span><span class=\"selector-class\">.13</span><span class=\"selector-class\">.0-49-generic</span> (titanclusters-xxxxx)  <span class=\"selector-tag\">07</span>/<span class=\"selector-tag\">14</span>/<span class=\"selector-tag\">2015</span>    <span class=\"selector-tag\">_x86_64_</span>    (<span class=\"number\">32</span> CPU)</div><div class=\"line\"><span class=\"selector-tag\">12</span><span class=\"selector-pseudo\">:17</span><span class=\"selector-pseudo\">:19</span> <span class=\"selector-tag\">AM</span>  <span class=\"selector-tag\">active</span>/<span class=\"selector-tag\">s</span> <span class=\"selector-tag\">passive</span>/<span class=\"selector-tag\">s</span>    <span class=\"selector-tag\">iseg</span>/<span class=\"selector-tag\">s</span>    <span class=\"selector-tag\">oseg</span>/<span class=\"selector-tag\">s</span></div><div class=\"line\"><span class=\"selector-tag\">12</span><span class=\"selector-pseudo\">:17</span><span class=\"selector-pseudo\">:20</span> <span class=\"selector-tag\">AM</span>      <span class=\"selector-tag\">1</span><span class=\"selector-class\">.00</span>      <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>  <span class=\"selector-tag\">10233</span><span class=\"selector-class\">.00</span>  <span class=\"selector-tag\">18846</span><span class=\"selector-class\">.00</span></div><div class=\"line\"><span class=\"selector-tag\">12</span><span class=\"selector-pseudo\">:17</span><span class=\"selector-pseudo\">:19</span> <span class=\"selector-tag\">AM</span>  <span class=\"selector-tag\">atmptf</span>/<span class=\"selector-tag\">s</span>  <span class=\"selector-tag\">estres</span>/<span class=\"selector-tag\">s</span> <span class=\"selector-tag\">retrans</span>/<span class=\"selector-tag\">s</span> <span class=\"selector-tag\">isegerr</span>/<span class=\"selector-tag\">s</span>   <span class=\"selector-tag\">orsts</span>/<span class=\"selector-tag\">s</span></div><div class=\"line\"><span class=\"selector-tag\">12</span><span class=\"selector-pseudo\">:17</span><span class=\"selector-pseudo\">:20</span> <span class=\"selector-tag\">AM</span>      <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>      <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>      <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>      <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>      <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span></div><div class=\"line\"><span class=\"selector-tag\">12</span><span class=\"selector-pseudo\">:17</span><span class=\"selector-pseudo\">:20</span> <span class=\"selector-tag\">AM</span>  <span class=\"selector-tag\">active</span>/<span class=\"selector-tag\">s</span> <span class=\"selector-tag\">passive</span>/<span class=\"selector-tag\">s</span>    <span class=\"selector-tag\">iseg</span>/<span class=\"selector-tag\">s</span>    <span class=\"selector-tag\">oseg</span>/<span class=\"selector-tag\">s</span></div><div class=\"line\"><span class=\"selector-tag\">12</span><span class=\"selector-pseudo\">:17</span><span class=\"selector-pseudo\">:21</span> <span class=\"selector-tag\">AM</span>      <span class=\"selector-tag\">1</span><span class=\"selector-class\">.00</span>      <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>   <span class=\"selector-tag\">8359</span><span class=\"selector-class\">.00</span>   <span class=\"selector-tag\">6039</span><span class=\"selector-class\">.00</span></div><div class=\"line\"><span class=\"selector-tag\">12</span><span class=\"selector-pseudo\">:17</span><span class=\"selector-pseudo\">:20</span> <span class=\"selector-tag\">AM</span>  <span class=\"selector-tag\">atmptf</span>/<span class=\"selector-tag\">s</span>  <span class=\"selector-tag\">estres</span>/<span class=\"selector-tag\">s</span> <span class=\"selector-tag\">retrans</span>/<span class=\"selector-tag\">s</span> <span class=\"selector-tag\">isegerr</span>/<span class=\"selector-tag\">s</span>   <span class=\"selector-tag\">orsts</span>/<span class=\"selector-tag\">s</span></div><div class=\"line\"><span class=\"selector-tag\">12</span><span class=\"selector-pseudo\">:17</span><span class=\"selector-pseudo\">:21</span> <span class=\"selector-tag\">AM</span>      <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>      <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>      <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>      <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>      <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span></div></pre></td></tr></table></figure>\n<p>sar命令在这里用于查看TCP连接状态，其中包括：<br>  ● <strong>active/s</strong>：每秒本地发起的TCP连接数，既通过connect调用创建的TCP连接；<br>  ● <strong>passive/s</strong>：每秒远程发起的TCP连接数，即通过accept调用创建的TCP连接；<br>  ●<strong> retrans/s</strong>：每秒TCP重传数量；<br>TCP连接数可以用来判断性能问题是否由于建立了过多的连接，进一步可以判断是主动发起的连接，还是被动接受的连接。TCP重传可能是因为网络环境恶劣，或者服务器压力过大导致丢包。</p>\n<blockquote>\n<p>（10）top<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%A3%80%E6%9F%A5Linux%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%80%A7%E8%83%BD1.png\" alt=\"\"><br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%A3%80%E6%9F%A5Linux%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%80%A7%E8%83%BD2.png\" alt=\"\"><br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%A3%80%E6%9F%A5Linux%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%80%A7%E8%83%BD3.png\" alt=\"\"><br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%A3%80%E6%9F%A5Linux%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%80%A7%E8%83%BD4.png\" alt=\"\"><br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%A3%80%E6%9F%A5Linux%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%80%A7%E8%83%BD5.png\" alt=\"\"><br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%A3%80%E6%9F%A5Linux%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%80%A7%E8%83%BD6.png\" alt=\"\"></p>\n</blockquote>\n<p>top命令包含了前面好几个命令的检查的内容。比如：</p>\n<ul>\n<li>系统负载情况（uptime）</li>\n<li>系统内存使用情况（free）</li>\n<li>系统CPU使用情况（vmstat）等。</li>\n</ul>\n<p>因此通过这个命令，可以相对全面的查看系统负载的来源。同时，top命令支持排序，可以按照不同的列排序，方便查找出诸如内存占用最多的进程、CPU占用率最高的进程等。<br>但是，top命令相对于前面一些命令，输出是一个瞬间值，如果不持续盯着，可能会错过一些线索。这时可能需要暂停top命令刷新，来记录和比对数据。</p>\n<hr>\n","excerpt":"","more":"<h1 id=\"关于服务器负载\"><a href=\"#关于服务器负载\" class=\"headerlink\" title=\"关于服务器负载\"></a>关于服务器负载</h1><p>load average值，参考：<a href=\"http://heipark.iteye.com/blog/1340384\">理解Linux系统中的load average（图文版）</a></p>\n<blockquote>\n<p>（1） uptime</p>\n</blockquote>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">23<span class=\"selector-pseudo\">:51</span><span class=\"selector-pseudo\">:26</span> <span class=\"selector-tag\">up</span> 21<span class=\"selector-pseudo\">:31</span>,  1 <span class=\"selector-tag\">user</span>,  <span class=\"selector-tag\">load</span> <span class=\"selector-tag\">average</span>: 30<span class=\"selector-class\">.02</span>, 26<span class=\"selector-class\">.43</span>, 19<span class=\"selector-class\">.02</span></div></pre></td></tr></table></figure>\n<p>这个命令可以快速查看机器的负载情况。在Linux系统中，这些数据表示等待CPU资源的进程和阻塞在不可中断IO进程（进程状态为D）的数量。这些数据可以让我们对系统资源使用有一个宏观的了解。</p>\n<p>命令的输出分别表示1分钟、5分钟、15分钟的平均负载情况。通过这三个数据，可以了解服务器负载是在趋于紧张还是区域缓解。如果1分钟平均负载很高，而15分钟平均负载很低，说明服务器正在命令高负载情况，需要进一步排查CPU资源都消耗在了哪里。反之，如果15分钟平均负载很高，1分钟平均负载较低，则有可能是CPU资源紧张时刻已经过去。</p>\n<p>上面例子中的输出，可以看见最近1分钟的平均负载非常高，且远高于最近15分钟负载，因此我们需要继续排查当前系统中有什么进程消耗了大量的资源。可以通过下文将会介绍的vmstat、mpstat等命令进一步排查。</p>\n<blockquote>\n<p>（2） dmesg | tail</p>\n</blockquote>\n<figure class=\"highlight scheme\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">[<span class=\"name\">1880957.563150</span>] perl invoked oom-killer: gfp_mask=0x280da, order=0, oom_score_adj=0</div><div class=\"line\">[<span class=\"name\"><span class=\"builtin-name\">...</span></span>]</div><div class=\"line\">[<span class=\"name\">1880957.563400</span>] Out of memory: Kill process <span class=\"number\">18694</span> (<span class=\"name\">perl</span>) score <span class=\"number\">246</span> or sacrifice child</div><div class=\"line\">[<span class=\"name\">1880957.563408</span>] Killed process <span class=\"number\">18694</span> (<span class=\"name\">perl</span>) total-vm:1972392kB, anon-rss:1953348kB, file-rss:0kB</div><div class=\"line\">[<span class=\"name\">2320864.954447</span>] TCP: Possible SYN flooding on port <span class=\"number\">7001</span>. Dropping request.  Check SNMP counters.</div></pre></td></tr></table></figure>\n<p>该命令会输出系统日志的最后10行。示例中的输出，可以看见一次内核的oom kill和一次TCP丢包。这些日志可以帮助排查性能问题。千万不要忘了这一步。</p>\n<blockquote>\n<p>（3） vmstat 1</p>\n</blockquote>\n<figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">procs ---------memory---------- ---swap-- -----io---- -system-- ------cpu-----</div><div class=\"line\"> r  b swpd   free   buff  cache   si   so    bi    bo   in   cs us sy id wa st</div><div class=\"line\"><span class=\"number\">34</span>  <span class=\"number\">0</span>    <span class=\"number\">0</span> <span class=\"number\">200889792</span>  <span class=\"number\">73708</span> <span class=\"number\">591828</span>    <span class=\"number\">0</span>    <span class=\"number\">0</span>     <span class=\"number\">0</span>     <span class=\"number\">5</span>    <span class=\"number\">6</span>   <span class=\"number\">10</span> <span class=\"number\">96</span>  <span class=\"number\">1</span>  <span class=\"number\">3</span>  <span class=\"number\">0</span>  <span class=\"number\">0</span></div><div class=\"line\"><span class=\"number\">32</span>  <span class=\"number\">0</span>    <span class=\"number\">0</span> <span class=\"number\">200889920</span>  <span class=\"number\">73708</span> <span class=\"number\">591860</span>    <span class=\"number\">0</span>    <span class=\"number\">0</span>     <span class=\"number\">0</span>   <span class=\"number\">592</span> <span class=\"number\">13284</span> <span class=\"number\">4282</span> <span class=\"number\">98</span>  <span class=\"number\">1</span>  <span class=\"number\">1</span>  <span class=\"number\">0</span>  <span class=\"number\">0</span></div><div class=\"line\"><span class=\"number\">32</span>  <span class=\"number\">0</span>    <span class=\"number\">0</span> <span class=\"number\">200890112</span>  <span class=\"number\">73708</span> <span class=\"number\">591860</span>    <span class=\"number\">0</span>    <span class=\"number\">0</span>     <span class=\"number\">0</span>     <span class=\"number\">0</span> <span class=\"number\">9501</span> <span class=\"number\">2154</span> <span class=\"number\">99</span>  <span class=\"number\">1</span>  <span class=\"number\">0</span>  <span class=\"number\">0</span>  <span class=\"number\">0</span></div><div class=\"line\"><span class=\"number\">32</span>  <span class=\"number\">0</span>    <span class=\"number\">0</span> <span class=\"number\">200889568</span>  <span class=\"number\">73712</span> <span class=\"number\">591856</span>    <span class=\"number\">0</span>    <span class=\"number\">0</span>     <span class=\"number\">0</span>    <span class=\"number\">48</span> <span class=\"number\">11900</span> <span class=\"number\">2459</span> <span class=\"number\">99</span>  <span class=\"number\">0</span>  <span class=\"number\">0</span>  <span class=\"number\">0</span>  <span class=\"number\">0</span></div><div class=\"line\"><span class=\"number\">32</span>  <span class=\"number\">0</span>    <span class=\"number\">0</span> <span class=\"number\">200890208</span>  <span class=\"number\">73712</span> <span class=\"number\">591860</span>    <span class=\"number\">0</span>    <span class=\"number\">0</span>     <span class=\"number\">0</span>     <span class=\"number\">0</span> <span class=\"number\">15898</span> <span class=\"number\">4840</span> <span class=\"number\">98</span>  <span class=\"number\">1</span>  <span class=\"number\">1</span>  <span class=\"number\">0</span>  <span class=\"number\">0</span></div></pre></td></tr></table></figure>\n<p>vmstat 命令，每行会输出一些系统核心指标，这些指标可以让我们更详细的了解系统状态。后面跟的参数1，表示每秒输出一次统计信息，表头提示了每一列的含义，这几介绍一些和性能调优相关的列：<br>  ● <strong>r</strong>：等待在CPU资源的进程数。这个数据比平均负载更加能够体现CPU负载情况，数据中不包含等待IO的进程。如果这个数值大于机器CPU核数，那么机器的CPU资源已经饱和。<br>  ● <strong>free</strong>：系统可用内存数（以千字节为单位），如果剩余内存不足，也会导致系统性能问题。下文介绍到的free命令，可以更详细的了解系统内存的使用情况。<br>  ● <strong>si, so</strong>：交换区写入和读取的数量。如果这个数据不为0，说明系统已经在使用交换区（swap），机器物理内存已经不足。<br>  ● <strong>us, sy, id, wa, st</strong>：这些都代表了CPU时间的消耗，它们分别表示<strong>用户时间（user）、系统（内核）时间（sys）、空闲时间（idle）、IO等待时间（wait）和被偷走的时间（stolen）</strong>，一般被其他虚拟机消耗）。<br>上述这些CPU时间，可以让我们很快了解CPU是否出于繁忙状态。一般情况下，如果用户时间和系统时间相加非常大，CPU出于忙于执行指令。如果IO等待时间很长，那么系统的瓶颈可能在磁盘IO。<br>示例命令的输出可以看见，大量CPU时间消耗在用户态，也就是用户应用程序消耗了CPU时间。这不一定是性能问题，需要结合r队列，一起分析。</p>\n<blockquote>\n<p>（4） mpstat -P ALL 1</p>\n</blockquote>\n<figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">Linux</span> <span class=\"selector-tag\">3</span><span class=\"selector-class\">.13</span><span class=\"selector-class\">.0-49-generic</span> (titanclusters-xxxxx)  <span class=\"selector-tag\">07</span>/<span class=\"selector-tag\">14</span>/<span class=\"selector-tag\">2015</span>  <span class=\"selector-tag\">_x86_64_</span> (<span class=\"number\">32</span> CPU)</div><div class=\"line\"><span class=\"selector-tag\">07</span><span class=\"selector-pseudo\">:38</span><span class=\"selector-pseudo\">:49</span> <span class=\"selector-tag\">PM</span>  <span class=\"selector-tag\">CPU</span>   %<span class=\"selector-tag\">usr</span>  %<span class=\"selector-tag\">nice</span>   %<span class=\"selector-tag\">sys</span> %<span class=\"selector-tag\">iowait</span>   %<span class=\"selector-tag\">irq</span>  %<span class=\"selector-tag\">soft</span>  %<span class=\"selector-tag\">steal</span>  %<span class=\"selector-tag\">guest</span>  %<span class=\"selector-tag\">gnice</span>  %<span class=\"selector-tag\">idle</span></div><div class=\"line\"><span class=\"selector-tag\">07</span><span class=\"selector-pseudo\">:38</span><span class=\"selector-pseudo\">:50</span> <span class=\"selector-tag\">PM</span>  <span class=\"keyword\">all</span>  <span class=\"selector-tag\">98</span><span class=\"selector-class\">.47</span>   <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>   <span class=\"selector-tag\">0</span><span class=\"selector-class\">.75</span>    <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>   <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>   <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>    <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>    <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>    <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>   <span class=\"selector-tag\">0</span><span class=\"selector-class\">.78</span></div><div class=\"line\"><span class=\"selector-tag\">07</span><span class=\"selector-pseudo\">:38</span><span class=\"selector-pseudo\">:50</span> <span class=\"selector-tag\">PM</span>    <span class=\"selector-tag\">0</span>  <span class=\"selector-tag\">96</span><span class=\"selector-class\">.04</span>   <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>   <span class=\"selector-tag\">2</span><span class=\"selector-class\">.97</span>    <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>   <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>   <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>    <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>    <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>    <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>   <span class=\"selector-tag\">0</span><span class=\"selector-class\">.99</span></div><div class=\"line\"><span class=\"selector-tag\">07</span><span class=\"selector-pseudo\">:38</span><span class=\"selector-pseudo\">:50</span> <span class=\"selector-tag\">PM</span>    <span class=\"selector-tag\">1</span>  <span class=\"selector-tag\">97</span><span class=\"selector-class\">.00</span>   <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>   <span class=\"selector-tag\">1</span><span class=\"selector-class\">.00</span>    <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>   <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>   <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>    <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>    <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>    <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>   <span class=\"selector-tag\">2</span><span class=\"selector-class\">.00</span></div><div class=\"line\"><span class=\"selector-tag\">07</span><span class=\"selector-pseudo\">:38</span><span class=\"selector-pseudo\">:50</span> <span class=\"selector-tag\">PM</span>    <span class=\"selector-tag\">2</span>  <span class=\"selector-tag\">98</span><span class=\"selector-class\">.00</span>   <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>   <span class=\"selector-tag\">1</span><span class=\"selector-class\">.00</span>    <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>   <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>   <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>    <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>    <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>    <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>   <span class=\"selector-tag\">1</span><span class=\"selector-class\">.00</span></div><div class=\"line\"><span class=\"selector-tag\">07</span><span class=\"selector-pseudo\">:38</span><span class=\"selector-pseudo\">:50</span> <span class=\"selector-tag\">PM</span>    <span class=\"selector-tag\">3</span>  <span class=\"selector-tag\">96</span><span class=\"selector-class\">.97</span>   <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>   <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>    <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>   <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>   <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>    <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>    <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>    <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>   <span class=\"selector-tag\">3</span><span class=\"selector-class\">.03</span></div></pre></td></tr></table></figure>\n<p>该命令可以显示每个CPU的占用情况，如果有一个CPU占用率特别高，那么有可能是一个单线程应用程序引起的。</p>\n<blockquote>\n<p>（5） pidstat 1</p>\n</blockquote>\n<figure class=\"highlight tap\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">Linux 3.13.0-49-generic (titanclusters-xxxxx)  07/14/2015    _x86_64_    (32 CPU)</div><div class=\"line\">07:41:02 PM   UID       PID    %usr %system  %guest    %CPU   CPU  Command</div><div class=\"line\">07:41:03 PM    <span class=\"number\"> 0 </span>       <span class=\"number\"> 9 </span>   0.00    0.94    0.00    0.94    <span class=\"number\"> 1 </span> rcuos/0</div><div class=\"line\">07:41:03 PM    <span class=\"number\"> 0 </span>    <span class=\"number\"> 4214 </span>   5.66    5.66    0.00   11.32   <span class=\"number\"> 15 </span> mesos-slave</div><div class=\"line\">07:41:03 PM    <span class=\"number\"> 0 </span>    <span class=\"number\"> 4354 </span>   0.94    0.94    0.00    1.89    <span class=\"number\"> 8 </span> java</div><div class=\"line\">07:41:03 PM    <span class=\"number\"> 0 </span>    <span class=\"number\"> 6521 </span>1596.23    1.89    0.00 1598.11   <span class=\"number\"> 27 </span> java</div><div class=\"line\">07:41:03 PM    <span class=\"number\"> 0 </span>    <span class=\"number\"> 6564 </span>1571.70    7.55    0.00 1579.25   <span class=\"number\"> 28 </span> java</div><div class=\"line\">07:41:03 PM<span class=\"number\"> 60004 </span>   <span class=\"number\"> 60154 </span>   0.94    4.72    0.00    5.66    <span class=\"number\"> 9 </span> pidstat</div><div class=\"line\">07:41:03 PM   UID       PID    %usr %system  %guest    %CPU   CPU  Command</div><div class=\"line\">07:41:04 PM    <span class=\"number\"> 0 </span>    <span class=\"number\"> 4214 </span>   6.00    2.00    0.00    8.00   <span class=\"number\"> 15 </span> mesos-slave</div><div class=\"line\">07:41:04 PM    <span class=\"number\"> 0 </span>    <span class=\"number\"> 6521 </span>1590.00    1.00    0.00 1591.00   <span class=\"number\"> 27 </span> java</div><div class=\"line\">07:41:04 PM    <span class=\"number\"> 0 </span>    <span class=\"number\"> 6564 </span>1573.00   10.00    0.00 1583.00   <span class=\"number\"> 28 </span> java</div><div class=\"line\">07:41:04 PM  <span class=\"number\"> 108 </span>    <span class=\"number\"> 6718 </span>   1.00    0.00    0.00    1.00    <span class=\"number\"> 0 </span> snmp-pass</div><div class=\"line\">07:41:04 PM<span class=\"number\"> 60004 </span>   <span class=\"number\"> 60154 </span>   1.00    4.00    0.00    5.00    <span class=\"number\"> 9 </span> pidstat</div></pre></td></tr></table></figure>\n<p>pidstat命令输出进程的CPU占用率，该命令会持续输出，并且不会覆盖之前的数据，可以方便观察系统动态。如上的输出，可以看见两个JAVA进程占用了将近1600%的CPU时间，既消耗了大约16个CPU核心的运算资源。</p>\n<blockquote>\n<p>（6） iostat -xz 1</p>\n</blockquote>\n<figure class=\"highlight cos\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">Linux <span class=\"number\">3.13</span>.0-<span class=\"number\">49</span>-generic (titanclusters-xxxxx)  <span class=\"number\">07</span>/<span class=\"number\">14</span>/<span class=\"number\">2015</span>  _x86_64_ (<span class=\"number\">32</span> CPU)</div><div class=\"line\">avg-cpu:  <span class=\"built_in\">%user</span>   <span class=\"built_in\">%nice</span> <span class=\"built_in\">%system</span> <span class=\"built_in\">%iowait</span>  <span class=\"built_in\">%steal</span>   <span class=\"built_in\">%idle</span></div><div class=\"line\">          <span class=\"number\">73.96</span>    <span class=\"number\">0.00</span>    <span class=\"number\">3.73</span>    <span class=\"number\">0.03</span>    <span class=\"number\">0.06</span>   <span class=\"number\">22.21</span></div><div class=\"line\">Device:   rrqm/<span class=\"keyword\">s</span>   wrqm/<span class=\"keyword\">s</span>     <span class=\"keyword\">r</span>/<span class=\"keyword\">s</span>     <span class=\"keyword\">w</span>/<span class=\"keyword\">s</span>    rkB/<span class=\"keyword\">s</span>    wkB/<span class=\"keyword\">s</span> avgrq-sz avgqu-sz   await r_await w_await  svctm  <span class=\"built_in\">%util</span></div><div class=\"line\">xvda        <span class=\"number\">0.00</span>     <span class=\"number\">0.23</span>    <span class=\"number\">0.21</span>    <span class=\"number\">0.18</span>     <span class=\"number\">4.52</span>     <span class=\"number\">2.08</span>    <span class=\"number\">34.37</span>     <span class=\"number\">0.00</span>    <span class=\"number\">9.98</span>   <span class=\"number\">13.80</span>    <span class=\"number\">5.42</span>   <span class=\"number\">2.44</span>   <span class=\"number\">0.09</span></div><div class=\"line\">xvdb        <span class=\"number\">0.01</span>     <span class=\"number\">0.00</span>    <span class=\"number\">1.02</span>    <span class=\"number\">8.94</span>   <span class=\"number\">127.97</span>   <span class=\"number\">598.53</span>   <span class=\"number\">145.79</span>     <span class=\"number\">0.00</span>    <span class=\"number\">0.43</span>    <span class=\"number\">1.78</span>    <span class=\"number\">0.28</span>   <span class=\"number\">0.25</span>   <span class=\"number\">0.25</span></div><div class=\"line\">xvdc        <span class=\"number\">0.01</span>     <span class=\"number\">0.00</span>    <span class=\"number\">1.02</span>    <span class=\"number\">8.86</span>   <span class=\"number\">127.79</span>   <span class=\"number\">595.94</span>   <span class=\"number\">146.50</span>     <span class=\"number\">0.00</span>    <span class=\"number\">0.45</span>    <span class=\"number\">1.82</span>    <span class=\"number\">0.30</span>   <span class=\"number\">0.27</span>   <span class=\"number\">0.26</span></div><div class=\"line\">dm-<span class=\"number\">0</span>        <span class=\"number\">0.00</span>     <span class=\"number\">0.00</span>    <span class=\"number\">0.69</span>    <span class=\"number\">2.32</span>    <span class=\"number\">10.47</span>    <span class=\"number\">31.69</span>    <span class=\"number\">28.01</span>     <span class=\"number\">0.01</span>    <span class=\"number\">3.23</span>    <span class=\"number\">0.71</span>    <span class=\"number\">3.98</span>   <span class=\"number\">0.13</span>   <span class=\"number\">0.04</span></div><div class=\"line\">dm-<span class=\"number\">1</span>        <span class=\"number\">0.00</span>     <span class=\"number\">0.00</span>    <span class=\"number\">0.00</span>    <span class=\"number\">0.94</span>     <span class=\"number\">0.01</span>     <span class=\"number\">3.78</span>     <span class=\"number\">8.00</span>     <span class=\"number\">0.33</span>  <span class=\"number\">345.84</span>    <span class=\"number\">0.04</span>  <span class=\"number\">346.81</span>   <span class=\"number\">0.01</span>   <span class=\"number\">0.00</span></div><div class=\"line\">dm-<span class=\"number\">2</span>        <span class=\"number\">0.00</span>     <span class=\"number\">0.00</span>    <span class=\"number\">0.09</span>    <span class=\"number\">0.07</span>     <span class=\"number\">1.35</span>     <span class=\"number\">0.36</span>    <span class=\"number\">22.50</span>     <span class=\"number\">0.00</span>    <span class=\"number\">2.55</span>    <span class=\"number\">0.23</span>    <span class=\"number\">5.62</span>   <span class=\"number\">1.78</span>   <span class=\"number\">0.03</span></div></pre></td></tr></table></figure>\n<p>iostat命令主要用于查看机器磁盘IO情况。该命令输出的列，主要含义是：<br>  ● <strong>r/s, w/s, rkB/s, wkB/s</strong>：分别表示每秒读写次数和每秒读写数据量（千字节）。读写量过大，可能会引起性能问题。<br>  ● <strong>await</strong>：IO操作的平均等待时间，单位是毫秒。这是应用程序在和磁盘交互时，需要消耗的时间，包括IO等待和实际操作的耗时。如果这个数值过大，可能是硬件设备遇到了瓶颈或者出现故障。<br>  ● <strong>avgqu-sz</strong>：向设备发出的请求平均数量。如果这个数值大于1，可能是硬件设备已经饱和（部分前端硬件设备支持并行写入）。<br>  ●<strong> %util</strong>：设备利用率。这个数值表示设备的繁忙程度，经验值是如果超过60，可能会影响IO性能（可以参照IO操作平均等待时间）。如果到达100%，说明硬件设备已经饱和。<br>如果显示的是逻辑设备的数据，那么设备利用率不代表后端实际的硬件设备已经饱和。值得注意的是，即使IO性能不理想，也不一定意味这应用程序性能会不好，可以利用诸如预读取、写缓存等策略提升应用性能。</p>\n<blockquote>\n<p>（7） free –m</p>\n</blockquote>\n<figure class=\"highlight tap\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">             total       used       free     shared    buffers     cached</div><div class=\"line\">Mem:       <span class=\"number\"> 245998 </span>    <span class=\"number\"> 24545 </span>   <span class=\"number\"> 221453 </span>       <span class=\"number\"> 83 </span>       <span class=\"number\"> 59 </span>       541</div><div class=\"line\">-/+ buffers/cache:     <span class=\"number\"> 23944 </span>    222053</div><div class=\"line\">Swap:           <span class=\"number\"> 0 </span>        <span class=\"number\"> 0 </span>         0</div></pre></td></tr></table></figure>\n<p>free命令可以查看系统内存的使用情况，-m参数表示按照兆字节展示。最后两列分别表示用于IO缓存的内存数，和用于文件系统页缓存的内存数。需要注意的是，第二行-/+ buffers/cache，看上去缓存占用了大量内存空间。这是Linux系统的内存使用策略，尽可能的利用内存，如果应用程序需要内存，这部分内存会立即被回收并分配给应用程序。因此，这部分内存一般也被当成是可用内存。<br>如果可用内存非常少，系统可能会动用交换区（如果配置了的话），这样会增加IO开销（可以在iostat命令中提现），降低系统性能。</p>\n<blockquote>\n<p>（8） sar -n DEV 1</p>\n</blockquote>\n<figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">Linux</span> <span class=\"selector-tag\">3</span><span class=\"selector-class\">.13</span><span class=\"selector-class\">.0-49-generic</span> (titanclusters-xxxxx)  <span class=\"selector-tag\">07</span>/<span class=\"selector-tag\">14</span>/<span class=\"selector-tag\">2015</span>     <span class=\"selector-tag\">_x86_64_</span>    (<span class=\"number\">32</span> CPU)</div><div class=\"line\"><span class=\"selector-tag\">12</span><span class=\"selector-pseudo\">:16</span><span class=\"selector-pseudo\">:48</span> <span class=\"selector-tag\">AM</span>     <span class=\"selector-tag\">IFACE</span>   <span class=\"selector-tag\">rxpck</span>/<span class=\"selector-tag\">s</span>   <span class=\"selector-tag\">txpck</span>/<span class=\"selector-tag\">s</span>    <span class=\"selector-tag\">rxkB</span>/<span class=\"selector-tag\">s</span>    <span class=\"selector-tag\">txkB</span>/<span class=\"selector-tag\">s</span>   <span class=\"selector-tag\">rxcmp</span>/<span class=\"selector-tag\">s</span>   <span class=\"selector-tag\">txcmp</span>/<span class=\"selector-tag\">s</span>  <span class=\"selector-tag\">rxmcst</span>/<span class=\"selector-tag\">s</span>   %<span class=\"selector-tag\">ifutil</span></div><div class=\"line\"><span class=\"selector-tag\">12</span><span class=\"selector-pseudo\">:16</span><span class=\"selector-pseudo\">:49</span> <span class=\"selector-tag\">AM</span>      <span class=\"selector-tag\">eth0</span>  <span class=\"selector-tag\">18763</span><span class=\"selector-class\">.00</span>   <span class=\"selector-tag\">5032</span><span class=\"selector-class\">.00</span>  <span class=\"selector-tag\">20686</span><span class=\"selector-class\">.42</span>    <span class=\"selector-tag\">478</span><span class=\"selector-class\">.30</span>      <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>      <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>      <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>      <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span></div><div class=\"line\"><span class=\"selector-tag\">12</span><span class=\"selector-pseudo\">:16</span><span class=\"selector-pseudo\">:49</span> <span class=\"selector-tag\">AM</span>        <span class=\"selector-tag\">lo</span>     <span class=\"selector-tag\">14</span><span class=\"selector-class\">.00</span>     <span class=\"selector-tag\">14</span><span class=\"selector-class\">.00</span>      <span class=\"selector-tag\">1</span><span class=\"selector-class\">.36</span>      <span class=\"selector-tag\">1</span><span class=\"selector-class\">.36</span>      <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>      <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>      <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>      <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span></div><div class=\"line\"><span class=\"selector-tag\">12</span><span class=\"selector-pseudo\">:16</span><span class=\"selector-pseudo\">:49</span> <span class=\"selector-tag\">AM</span>   <span class=\"selector-tag\">docker0</span>      <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>      <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>      <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>      <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>      <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>      <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>      <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>      <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span></div><div class=\"line\"><span class=\"selector-tag\">12</span><span class=\"selector-pseudo\">:16</span><span class=\"selector-pseudo\">:49</span> <span class=\"selector-tag\">AM</span>     <span class=\"selector-tag\">IFACE</span>   <span class=\"selector-tag\">rxpck</span>/<span class=\"selector-tag\">s</span>   <span class=\"selector-tag\">txpck</span>/<span class=\"selector-tag\">s</span>    <span class=\"selector-tag\">rxkB</span>/<span class=\"selector-tag\">s</span>    <span class=\"selector-tag\">txkB</span>/<span class=\"selector-tag\">s</span>   <span class=\"selector-tag\">rxcmp</span>/<span class=\"selector-tag\">s</span>   <span class=\"selector-tag\">txcmp</span>/<span class=\"selector-tag\">s</span>  <span class=\"selector-tag\">rxmcst</span>/<span class=\"selector-tag\">s</span>   %<span class=\"selector-tag\">ifutil</span></div><div class=\"line\"><span class=\"selector-tag\">12</span><span class=\"selector-pseudo\">:16</span><span class=\"selector-pseudo\">:50</span> <span class=\"selector-tag\">AM</span>      <span class=\"selector-tag\">eth0</span>  <span class=\"selector-tag\">19763</span><span class=\"selector-class\">.00</span>   <span class=\"selector-tag\">5101</span><span class=\"selector-class\">.00</span>  <span class=\"selector-tag\">21999</span><span class=\"selector-class\">.10</span>    <span class=\"selector-tag\">482</span><span class=\"selector-class\">.56</span>      <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>      <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>      <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>      <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span></div><div class=\"line\"><span class=\"selector-tag\">12</span><span class=\"selector-pseudo\">:16</span><span class=\"selector-pseudo\">:50</span> <span class=\"selector-tag\">AM</span>        <span class=\"selector-tag\">lo</span>     <span class=\"selector-tag\">20</span><span class=\"selector-class\">.00</span>     <span class=\"selector-tag\">20</span><span class=\"selector-class\">.00</span>      <span class=\"selector-tag\">3</span><span class=\"selector-class\">.25</span>      <span class=\"selector-tag\">3</span><span class=\"selector-class\">.25</span>      <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>      <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>      <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>      <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span></div><div class=\"line\"><span class=\"selector-tag\">12</span><span class=\"selector-pseudo\">:16</span><span class=\"selector-pseudo\">:50</span> <span class=\"selector-tag\">AM</span>   <span class=\"selector-tag\">docker0</span>      <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>      <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>      <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>      <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>      <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>      <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>      <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>      <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span></div></pre></td></tr></table></figure>\n<p>sar命令在这里可以查看网络设备的吞吐率。在排查性能问题时，可以通过网络设备的吞吐量，判断网络设备是否已经饱和。如示例输出中，eth0网卡设备，吞吐率大概在22 Mbytes/s，既176 Mbits/sec，没有达到1Gbit/sec的硬件上限。</p>\n<blockquote>\n<p>（9） sar -n TCP,ETCP 1</p>\n</blockquote>\n<figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">Linux</span> <span class=\"selector-tag\">3</span><span class=\"selector-class\">.13</span><span class=\"selector-class\">.0-49-generic</span> (titanclusters-xxxxx)  <span class=\"selector-tag\">07</span>/<span class=\"selector-tag\">14</span>/<span class=\"selector-tag\">2015</span>    <span class=\"selector-tag\">_x86_64_</span>    (<span class=\"number\">32</span> CPU)</div><div class=\"line\"><span class=\"selector-tag\">12</span><span class=\"selector-pseudo\">:17</span><span class=\"selector-pseudo\">:19</span> <span class=\"selector-tag\">AM</span>  <span class=\"selector-tag\">active</span>/<span class=\"selector-tag\">s</span> <span class=\"selector-tag\">passive</span>/<span class=\"selector-tag\">s</span>    <span class=\"selector-tag\">iseg</span>/<span class=\"selector-tag\">s</span>    <span class=\"selector-tag\">oseg</span>/<span class=\"selector-tag\">s</span></div><div class=\"line\"><span class=\"selector-tag\">12</span><span class=\"selector-pseudo\">:17</span><span class=\"selector-pseudo\">:20</span> <span class=\"selector-tag\">AM</span>      <span class=\"selector-tag\">1</span><span class=\"selector-class\">.00</span>      <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>  <span class=\"selector-tag\">10233</span><span class=\"selector-class\">.00</span>  <span class=\"selector-tag\">18846</span><span class=\"selector-class\">.00</span></div><div class=\"line\"><span class=\"selector-tag\">12</span><span class=\"selector-pseudo\">:17</span><span class=\"selector-pseudo\">:19</span> <span class=\"selector-tag\">AM</span>  <span class=\"selector-tag\">atmptf</span>/<span class=\"selector-tag\">s</span>  <span class=\"selector-tag\">estres</span>/<span class=\"selector-tag\">s</span> <span class=\"selector-tag\">retrans</span>/<span class=\"selector-tag\">s</span> <span class=\"selector-tag\">isegerr</span>/<span class=\"selector-tag\">s</span>   <span class=\"selector-tag\">orsts</span>/<span class=\"selector-tag\">s</span></div><div class=\"line\"><span class=\"selector-tag\">12</span><span class=\"selector-pseudo\">:17</span><span class=\"selector-pseudo\">:20</span> <span class=\"selector-tag\">AM</span>      <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>      <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>      <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>      <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>      <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span></div><div class=\"line\"><span class=\"selector-tag\">12</span><span class=\"selector-pseudo\">:17</span><span class=\"selector-pseudo\">:20</span> <span class=\"selector-tag\">AM</span>  <span class=\"selector-tag\">active</span>/<span class=\"selector-tag\">s</span> <span class=\"selector-tag\">passive</span>/<span class=\"selector-tag\">s</span>    <span class=\"selector-tag\">iseg</span>/<span class=\"selector-tag\">s</span>    <span class=\"selector-tag\">oseg</span>/<span class=\"selector-tag\">s</span></div><div class=\"line\"><span class=\"selector-tag\">12</span><span class=\"selector-pseudo\">:17</span><span class=\"selector-pseudo\">:21</span> <span class=\"selector-tag\">AM</span>      <span class=\"selector-tag\">1</span><span class=\"selector-class\">.00</span>      <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>   <span class=\"selector-tag\">8359</span><span class=\"selector-class\">.00</span>   <span class=\"selector-tag\">6039</span><span class=\"selector-class\">.00</span></div><div class=\"line\"><span class=\"selector-tag\">12</span><span class=\"selector-pseudo\">:17</span><span class=\"selector-pseudo\">:20</span> <span class=\"selector-tag\">AM</span>  <span class=\"selector-tag\">atmptf</span>/<span class=\"selector-tag\">s</span>  <span class=\"selector-tag\">estres</span>/<span class=\"selector-tag\">s</span> <span class=\"selector-tag\">retrans</span>/<span class=\"selector-tag\">s</span> <span class=\"selector-tag\">isegerr</span>/<span class=\"selector-tag\">s</span>   <span class=\"selector-tag\">orsts</span>/<span class=\"selector-tag\">s</span></div><div class=\"line\"><span class=\"selector-tag\">12</span><span class=\"selector-pseudo\">:17</span><span class=\"selector-pseudo\">:21</span> <span class=\"selector-tag\">AM</span>      <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>      <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>      <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>      <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span>      <span class=\"selector-tag\">0</span><span class=\"selector-class\">.00</span></div></pre></td></tr></table></figure>\n<p>sar命令在这里用于查看TCP连接状态，其中包括：<br>  ● <strong>active/s</strong>：每秒本地发起的TCP连接数，既通过connect调用创建的TCP连接；<br>  ● <strong>passive/s</strong>：每秒远程发起的TCP连接数，即通过accept调用创建的TCP连接；<br>  ●<strong> retrans/s</strong>：每秒TCP重传数量；<br>TCP连接数可以用来判断性能问题是否由于建立了过多的连接，进一步可以判断是主动发起的连接，还是被动接受的连接。TCP重传可能是因为网络环境恶劣，或者服务器压力过大导致丢包。</p>\n<blockquote>\n<p>（10）top<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%A3%80%E6%9F%A5Linux%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%80%A7%E8%83%BD1.png\" alt=\"\"><br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%A3%80%E6%9F%A5Linux%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%80%A7%E8%83%BD2.png\" alt=\"\"><br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%A3%80%E6%9F%A5Linux%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%80%A7%E8%83%BD3.png\" alt=\"\"><br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%A3%80%E6%9F%A5Linux%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%80%A7%E8%83%BD4.png\" alt=\"\"><br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%A3%80%E6%9F%A5Linux%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%80%A7%E8%83%BD5.png\" alt=\"\"><br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E6%A3%80%E6%9F%A5Linux%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%80%A7%E8%83%BD6.png\" alt=\"\"></p>\n</blockquote>\n<p>top命令包含了前面好几个命令的检查的内容。比如：</p>\n<ul>\n<li>系统负载情况（uptime）</li>\n<li>系统内存使用情况（free）</li>\n<li>系统CPU使用情况（vmstat）等。</li>\n</ul>\n<p>因此通过这个命令，可以相对全面的查看系统负载的来源。同时，top命令支持排序，可以按照不同的列排序，方便查找出诸如内存占用最多的进程、CPU占用率最高的进程等。<br>但是，top命令相对于前面一些命令，输出是一个瞬间值，如果不持续盯着，可能会错过一些线索。这时可能需要暂停top命令刷新，来记录和比对数据。</p>\n<hr>\n"},{"title":"用Hexo搭建博客","abbrlink":23632,"date":"2016-11-08T07:20:01.000Z","_content":"\n# 安装Hexo\nHexo是用node-js写的，hexo生成静态页面的速度要比较快，hexo是本地生成html再上传。\n\n## 安装Node.js\n官网下载对应平台安装包安装：https://nodejs.org  \n详见：[Node.js开发环境搭建](http://leolan.top/2016/11/02/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA-2016-11-02-Node-js%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/)\n\n## 安装Hexo\n\n```\nnpm install -g hexo-cli  #Mac下西安**sudo -i**切换到root权限。\nhexo init blog           #blog文件夹要先建好，这一步自动生成网站。\ncd blog\nnpm install              #安装依赖的插件。\nhexo server              #运行服务\n```\n\n这时可以在浏览器打开网页。`hexo server`的简化命令为`hexo s`；指定端口：`-p xxxx`\n和jekyll一样是通过修改**_config.yml**文件来配置站点信息的。（在Hexo中，根目录下的**_config.yml**文件是用来配置网站信息的；主题目录下的**_config.yml**文件是用来配置文章主题，页面等等的）\n\n默认的目录结构如下：\n\n```\n├── .deploy       #执行hexo deploy命令部署到GitHub上的内容目录\n├── public        #执行hexo generate命令，输出的静态网页内容目录\n├── scaffolds     #layout模板文件目录，其中的md文件可以添加编辑\n├── scripts       #扩展脚本目录，这里可以自定义一些javascript脚本\n├── source        #文章源码目录，该目录下的markdown和html文件均会被hexo处理。404文件，CNAME文件等都应该放这里。\n| ├── _drafts     #草稿文章\n| └── _posts      #发布的文章\n├── themes        #主题文件目录\n├── _config.yml   #全局配置文件，大多数的设置都在这里\n└── package.json  #应用程序数据，指明hexo的版本等信息。在push到github时提示*.json错误，删掉这个文件或删掉db.json就行。\n```\n---\n\n# 配置优化、美化站点\nNext官方设置说明：http://theme-next.iissnan.com/getting-started.html\n\n## 主题部分\n推荐Next主题，简单简洁，官网：http://theme-next.iissnan.com/\n安装最新版：\n```\ncd your-hexo-site\ngit clone https://github.com/iissnan/hexo-theme-next themes/next```\n在主题目录下可以看到next文件夹，修改**站点配置文件_config.yml**中的`theme: next`\n`hexo clean && hexo s`就可以看到新主题生效啦！\n接下来修改**主题配置文件_config.yml**，以下是我的配置。\n```\n# ---------------------------------------------------------------\n# Site Information Settings\n# ---------------------------------------------------------------\n\n# Put your favicon.ico into `hexo-site/source/` directory.\nfavicon: /200.png    #头像\n\n# Set default keywords (Use a comma to separate)\nkeywords: \"Hexo, NexT\"\n\n# Set rss to false to disable feed link.\n# Leave rss as empty to use site's feed link.\n# Set rss to specific value if you have burned your feed already.\nrss:\n\n# Specify the date when the site was setup\n#since: 2015\n\n# Canonical, set a canonical link tag in your hexo, you could use it for your SEO of blog.\n# See: https://support.google.com/webmasters/answer/139066\n# Tips: Before you open this tag, remeber set up your URL in hexo _config.yml ( ex. url: http://yourdomain.com )\ncanonical: true\n\n# ---------------------------------------------------------------\n# Menu Settings\n# ---------------------------------------------------------------\n\n# When running the site in a subdirectory (e.g. domain.tld/blog), remove the leading slash (/archives -> archives)\nmenu:       #侧边栏显示的菜单，**：**后面对应相应的目录，里面**自建index.md**文件\n  home: /\n  categories: /categories\n  tags: /tags\n  archives: /archives\n  about: /about\n # schedule: /schedule\n  #commonweal: /404.html\n\n# Enable/Disable menu icons.\n# Icon Mapping:\n#   Map a menu item to a specific FontAwesome icon name.\n#   Key is the name of menu item and value is the name of FontAwsome icon. Key is case-senstive.\n#   When an question mask icon presenting up means that the item has no mapping icon.\nmenu_icons:     #侧边栏菜单的图标\n  enable: true\n  #KeyMapsToMenuItemKey: NameOfTheIconFromFontAwesome\n  home: home\n  about: user\n  categories: th\n  schedule: calendar\n  tags: tags\n  archives: archive\n  commonweal: heartbeat\n\n# ---------------------------------------------------------------\n# Scheme Settings\n# ---------------------------------------------------------------\n\n# Schemes 主题有3总样式，Muse，Mist，Pisces选择一种，其他注释掉\n#scheme: Muse\n#scheme: Mist\nscheme: Pisces\n\n# ---------------------------------------------------------------\n# Font Settings\n# - Find fonts on Google Fonts (https://www.google.com/fonts)\n# - All fonts set here will have the following styles:\n#     light, light italic, normal, normal intalic, bold, bold italic\n# - Be aware that setting too much fonts will cause site running slowly\n# - Introduce in 5.0.1\n# ---------------------------------------------------------------\nfont:\n  enable: true\n\n  # Uri of fonts host. E.g. //fonts.googleapis.com (Default) 慢的话搜索fonts.googleapis.com即可找到替换地址\n  host: fonts.css.network   #css字体加速\n\n  # Global font settings used on <body> element.\n  global:\n    # external: true will load this font family from host.\n    external: true\n    family: Lato\n\n  # Font settings for Headlines (h1, h2, h3, h4, h5, h6)\n  # Fallback to `global` font settings.\n  headings:\n    external: true\n    family:\n\n  # Font settings for posts\n  # Fallback to `global` font settings.\n  posts:\n    external: true\n    family:\n\n  # Font settings for Logo\n  # Fallback to `global` font settings.\n  # The `size` option use `px` as unit\n  logo:\n    external: true\n    family:\n    size:\n\n  # Font settings for <code> and code blocks.\n  codes:\n    external: true\n    family:\n    size:\n\n# ---------------------------------------------------------------\n# Sidebar Settings\n# ---------------------------------------------------------------\n\n# Social Links\n# Key is the link label showing to end users.\n# Value is the target link (E.g. GitHub: https://github.com/iissnan)\n#social:\n#LinkLabel: Link\n\n# Social Links Icons\n# Icon Mapping:\n#   Map a menu item to a specific FontAwesome icon name.\n#   Key is the name of the item and value is the name of FontAwsome icon. Key is case-senstive.\n#   When an globe mask icon presenting up means that the item has no mapping icon.\nsocial_icons:\n  enable: true\n  # Icon Mappings.\n  # KeyMapsToSocalItemKey: NameOfTheIconFromFontAwesome\n  GitHub: github\n  Twitter: twitter\n  Weibo: weibo\n\n# Sidebar Avatar\n# in theme directory(source/images): /images/avatar.jpg\n# in site  directory(source/uploads): /uploads/avatar.jpg\navatar: /images/avatar.jpg\n\n\n# Table Of Contents in the Sidebar\ntoc:\n  enable: true\n\n  # Automatically add list number to toc.\n  number: true\n\n# Creative Commons 4.0 International License.\n# http://creativecommons.org/\n# Available: by | by-nc | by-nc-nd | by-nc-sa | by-nd | by-sa | zero\n#creative_commons: by-nc-sa\n#creative_commons:\n\nsidebar:\n  # Sidebar Position, available value: left | right\n  position: left\n  #position: right\n\n  # Sidebar Display, available value:\n  #  - post    expand on posts automatically. Default.\n  #  - always  expand for all pages automatically\n  #  - hide    expand only when click on the sidebar toggle icon.\n  #  - remove  Totally remove sidebar including sidebar toggler.\n  #display: post\n  display: always\n  #display: hide\n  #display: remove\n\n# Blogrolls\n#links_title: Links\n#links_layout: block\n#links_layout: inline\n#links:\n  #Title: http://example.com/\n\n# ---------------------------------------------------------------\n# Misc Theme Settings\n# ---------------------------------------------------------------\n\n# Custom Logo.\n# !!Only available for Default Scheme currently.\n# Options:\n#   enabled: [true/false] - Replace with specific image\n#   image: url-of-image   - Images's url\ncustom_logo:\n  enabled: false\n  image:\n\n\n# Code Highlight theme  代码高亮主题\n# Available value:\n#    normal | night | night eighties | night blue | night bright\n# https://github.com/chriskempson/tomorrow-theme\nhighlight_theme: night eighties\n\n\n# Automatically scroll page to section which is under <!-- more --> mark.\nscroll_to_more: true\n\n\n# Automatically Excerpt. Not recommand.\n# Please use <!-- more --> in the post to control excerpt accurately.\nauto_excerpt:\n  enable: true\n  length: 150\n\n# Wechat Subscriber\n#wechat_subscriber:\n  #enabled: true\n  #qcode: /path/to/your/wechatqcode ex. /uploads/wechat-qcode.jpg\n  #description: ex. subscribe to my blog by scanning my public wechat account\n\n# ---------------------------------------------------------------\n# Third Party Services Settings\n# ---------------------------------------------------------------\n\n# MathJax Support   数学公式\nmathjax:\n  enable: false\n  cdn: //cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML\n\n\n# Swiftype Search API Key\n#swiftype_key:\n\n# Baidu Analytics ID\n#baidu_analytics:\n\n# Duoshuo ShortName\n#duoshuo_shortname:\n\n# Disqus\n#disqus_shortname:\n\n# Baidu Share\n# Available value:\n#    button | slide\n# Warning: Baidu Share does not support https.\n#baidushare:\n##  type: button\n\n# Share\n#jiathis:\n# Warning: JiaThis does not support https.\n#add_this_id:\n\n# Share\n#duoshuo_share: true\n\n# Google Webmaster tools verification setting\n# See: https://www.google.com/webmasters/\n#google_site_verification:\n\n\n# Google Analytics\n#google_analytics:\n\n# CNZZ count\n#cnzz_siteid:\n\n\n# Make duoshuo show UA\n# user_id must NOT be null when admin_enable is true!\n# you can visit http://dev.duoshuo.com get duoshuo user id.\nduoshuo_info:\n  ua_enable: true\n  admin_enable: false\n  user_id: 0\n  #admin_nickname: Author\n\n\n# Facebook SDK Support.\n# https://github.com/iissnan/hexo-theme-next/pull/410\nfacebook_sdk:\n  enable: false\n  app_id:       #<app_id>\n  fb_admin:     #<user_id>\n  like_button:  #true\n  webmaster:    #true\n\n# Facebook comments plugin\n# This plugin depends on Facebook SDK.\n# If facebook_sdk.enable is false, Facebook comments plugin is unavailable.\nfacebook_comments_plugin:\n  enable: false\n  num_of_posts: 10  # min posts num is 1\n  width: 100%       # default width is 550px\n  scheme: light     # default scheme is light (light or dark)\n\n#网站访问量统计http://busuanzi.ibruce.info/   http://ibruce.info/2015/04/04/busuanzi/  其中id=\"busuanzi_container_site_*v\">这句可以不要。 \n# Show number of visitors to each article.   用leancloud做接口开启阅读计数功能\n#文章阅读量统计：http://www.joryhe.com/2016-05-29-how_to_create_leancloud_read_Counter.html\n# You can visit https://leancloud.cn get AppID and AppKey.\nleancloud_visitors:\n  enable: true\n  app_id: zieuxKa4IjAP6VgxxvBe4vkj-gzGzoHsz\n  app_key: MHGN54IEuofFNV1AROiRkEoG\n\n# Show PV/UV of the website/page with busuanzi.\n# Get more information on http://ibruce.info/2015/04/04/busuanzi/\nbusuanzi_count:     #不蒜子网站访问量统计\n  # count values only if the other configs are false\n  enable: false\n  # custom uv span for the whole site\n  site_uv: true\n  site_uv_header: <i class=\"fa fa-user\"></i>\n  site_uv_footer:\n  # custom pv span for the whole site\n  site_pv: true\n  site_pv_header: <i class=\"fa fa-eye\"></i>\n  site_pv_footer:\n  # custom pv span for one page only\n  page_pv: true\n  page_pv_header: <i class=\"fa fa-file-o\"></i>\n  page_pv_footer:\n\n# Tencent analytics ID\n# tencent_analytics:\n\n# Enable baidu push so that the blog will push the url to baidu automatically which is very helpful for SEO\nbaidu_push: true   #百度链接提交，提高搜索排名\n\n# Google Calendar\n# Share your recent schedule to others via calendar page\n#\n# API Documentation:\n# https://developers.google.com/google-apps/calendar/v3/reference/events/list\ncalendar:\n  enable: false\n  calendar_id: <required>\n  api_key: <required>\n  orderBy: startTime\n  offsetMax: 24\n  offsetMin: 4\n  timeZone:\n  showDeleted: false\n  singleEvents: true\n  maxResults: 250\n\n#! ---------------------------------------------------------------\n#! DO NOT EDIT THE FOLLOWING SETTINGS\n#! UNLESS YOU KNOW WHAT YOU ARE DOING\n#! ---------------------------------------------------------------\n\n# Motion\nuse_motion: true\n\n# Fancybox\nfancybox: true\n\n\n# Script Vendors.\n# Set a CDN address for the vendor you want to customize.\n# For example\n#    jquery: https://ajax.googleapis.com/ajax/libs/jquery/2.2.0/jquery.min.js\n# Be aware that you should use the same version as internal ones to avoid potential problems.\n# Please use the https protocol of CDN files when you enable https on your site.\nvendors:\n  # Internal path prefix. Please do not edit it.\n  _internal: vendors\n\n  # Internal version: 2.1.3\n  jquery:\n\n  # Internal version: 2.1.5\n  # See: http://fancyapps.com/fancybox/\n  fancybox:\n  fancybox_css:\n\n  # Internal version: 1.0.6\n  # See: https://github.com/ftlabs/fastclick\n  fastclick:\n\n  # Internal version: 1.9.7\n  # See: https://github.com/tuupola/jquery_lazyload\n  lazyload:\n\n  # Internal version: 1.2.1\n  # See: http://VelocityJS.org\n  velocity:\n\n  # Internal version: 1.2.1\n  # See: http://VelocityJS.org\n  velocity_ui:\n\n  # Internal version: 0.7.9\n  # See: https://faisalman.github.io/ua-parser-js/\n  ua_parser:\n\n  # Internal version: 4.4.0\n  # See: http://fontawesome.io/\n  fontawesome:\n\n# 多说热评文章功能\nduoshuo_hotartical: true\n\n# Assets\ncss: css\njs: js\nimages: images\n\n# Theme version\nversion: 5.0.2\n```\n\n## 配置文件设置\n以下是我的配置文件：\n\n```\n# Hexo Configuration\n## Docs: https://hexo.io/docs/configuration.html\n## Source: https://github.com/hexojs/hexo/\n\n# Site\ntitle: Leo Lan的博客\nsubtitle:  有时候正是不报期望的人做出了人们不敢期望的事！\ndescription: Better late than never\nauthor: Leo Lan\nlanguage: zh-Hans\ntimezone: Asia/Shanghai\n\n# URL\n## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'\nurl: http://leolan.top\ncoding_url: http://leolan.top\nroot: /\npermalink: :year/:month/:day/:title/\npermalink_defaults:\n\n# Directory\nsource_dir: source\npublic_dir: public\ntag_dir: tags\narchive_dir: archives\ncategory_dir: categories\ncode_dir: downloads/code\ni18n_dir: :lang\nskip_render:\n\n# Writing  官网：https://hexo.io/zh-cn/docs/writing.html\nnew_post_name: :year-:month-:day-:title.md # File name of new posts\ndefault_layout: post\ntitlecase: false # Transform title into titlecase\nexternal_link: true # Open external links in new tab\nfilename_case: 0\nrender_drafts: false\npost_asset_folder: false\nrelative_link: false\nfuture: true\nhighlight:\n  enable: true\n  line_number: true\n  auto_detect: true\n  tab_replace:\n\n# Category & Tag\ndefault_category: uncategorized\ncategory_map:\ntag_map:\n\n# Date / Time format\n## Hexo uses Moment.js to parse and display date\n## You can customize the date format as defined in\n## http://momentjs.com/docs/#/displaying/format/\ndate_format: YYYY-MM-DD\ntime_format: HH:mm:ss\n\n# Pagination\n## Set per_page to 0 to disable pagination\nper_page: 15\npagination_dir: page\n\n# Extensions\n## Plugins: https://hexo.io/plugins/\n## Themes: https://hexo.io/themes/\ntheme: next\n\n# Deployment部署\n## 官方文档Docs: https://hexo.io/docs/deployment.html   有部署到各种服务器的方法\n## 参考：http://www.lxway.com/240950852.htm\n#不管是github还是coding，type都填写git\n#这里同事部署到Github和Coding上，在域名解析中设置国内IP访问Coding，国外IP访问Github。\n#自动部署需要安装deployer-git插件：npm install hexo-deployer-git --save\ndeploy:\n- type: git\n  repo: git@git.coding.net:leolan/leolan.git,master  #注意你的分支是什么\n- type: git\n  repo: git@github.com:MyLeoLan/blog.git,master\n#deploy:\n#- type: git\n#  repo:\n#- type: heroku（另一种云平台）\n#  repo:\n\n\n# Disqus #Disqus评论系统\ndisqus_shortname: leolan\n\n\n#plugins: #插件，例如生成 RSS 和站点地图的\n#hexo-generator-sitemap\n#- hexo-generator-baidu-sitemap\nplugins:\n  hexo-generator-feed\n  hexo-generator-baidu-sitemap\n\nsitemap:\n  path: sitemap.xml    \nbaidusitemap:\n  baidupath: baidusitemap.xml\n\n# Social links  社交链接\nsocial:\n  GitHub: https://github.com/myleolan\n  Coding: https://coding.net/u/leolan\n  CSDN: http://blog.csdn.net/lan842632\n  OSchina: https://my.oschina.net/leolan/blog\n  #Twitter: https://twitter.com/lmintlcx\n  #Zhihu: http://www.zhihu.com/people/lmintlcx\n  #Douban: http://www.douban.com/people/lmintlcx\n  #Weibo: http://weibo.com/u/3233729080\n\nduoshuo_shortname: leolan\n# 多说热评文章 true 或者 false\nduoshuo_hotartical: true\n# 多说分享服务\nduoshuo_share: true\n# 百度分享服务\nbaidushare: true\n\n\n#打赏功能\nreward_comment: 您的支持将鼓励我继续创作,非常感谢！\nwechatpay: http://ofyfogrgx.bkt.clouddn.com/%E5%BE%AE%E4%BF%A1%E6%94%B6%E6%AC%BE1.png\nalipay: http://ofyfogrgx.bkt.clouddn.com/%E6%94%AF%E4%BB%98%E5%AE%9D%E6%94%B6%E6%AC%BE01.jpg\n\n#站点建立时间\nsince: 2016\n\n#百度分析\nbaidu_analytics: dc0e85252eeff3a87aa87f35d92a8d33\n\n#本地搜索\nsearch:\n  path: search.xml\n  field: post\n  format: html\n  limit: 10000\n```\n\n## 安装插件\nhexo支持插件，可以直接通过命令行安装即可：`npm install **plugin-name** --save`\n更新插件\n`npm update`\n卸载插件\n`npm uninstall **plugin-name**`\n下面推荐几个常用的插件：\nfeed插件:`npm install hexo-generator-feed --save`\n站点地图:`npm install hexo-generator-sitemap --save`\n百度站点地图:`npm install hexo-generator-baidu-sitemap --save`\n文章字数统计：http://www.joryhe.com/2016-06-06-hexo_wordcount_setting_your_post.html\n\n---\n\n# 部署\n\n```\ncd your_site/\ntouch Staticfile  #创建静态文件标识，用于Github识别，名字必须是Staticfile\nhexo clean   #清除以前生成的旧文件\nhexo g       #生成新的站点文件\nhexo d       #部署到Github上```\n可参考：http://shomy.top/2016/03/03/hexo-in-coding-github/\n部署完成打开网址就能看到效果了。\n\nHexo的部署只会把生成的文件上传到仓库中，本地的**设置，主题，*.md文件**等等都不会上传，换一台电脑就没法干活了，一旦删除，那基本上所有的努力都白费了，这里介绍2种备份方法：\n* 1.新建一个仓库专门用来存放这些文件（最安全最方便的办法）\n* 2.和发布的网站使用同一个仓库，master用来存放这些文件，新建分支来发布网站（注意pages服务绑定该分支，不要合并分支，一旦合并就全部混乱了）\n两种方法都要在网站根目录设定好远程端仓库：`git add remote XXXX`\n每次发布完网页，就顺手执行以下代码，把文档也同步到仓库中。\n```\ngit add .\ngit commit -m \"xxx\"\ngit push\n```\n\n---\n\n# 绑定域名\n原理和博客绑定域名是一样的\n\n* 1· 在你的项目下新建一个**CNAME**文件，注意没有后缀名。在里面添加你的域名，如我的就是** leolan.top**，然后推送**CNAME文件**到远程仓库。（方法二是直接在pages页上找到域名绑定设置，最好同时绑定如：**leolan.top**和**www.leolan.top**,少绑一个，没绑的那个打不开）\n* 2· 到域名服务商那里增加你的CNAME记录。添加两条记录，@和www的主机记录，记录类型为CNAME，记录值为 `username.github.io. `，重要的是 io 后面还有一个原点（看官方帮助文档Coding的就不用加点），切记。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E5%9F%9F%E5%90%8D%E7%BB%91%E5%AE%9A.png)\n过几分钟，刷新网页，就能直接用域名访问了，因为是在项目内建的**CNAME**文件，所以域名直接指向此项目文件夹，其他项目可以用其他域名设定。\n\n---\n\n# 参考资料\n[Hexo](http://www.joryhe.com/tags/hexo/) 　　　 [Jekyll迁移到Hexo](http://www.ezlippi.com/blog/2016/02/jekyll-to-hexo.html)\n\n---","source":"_posts/环境搭建/2016-11-08-用Hexo搭建博客.md","raw":"---\ntitle: 用Hexo搭建博客\ncategories:\n  - 环境搭建\ntags:\n  - 用Hexo搭建博客\n  - Hexo github\n  - Hexo Coding\nabbrlink: 23632\ndate: 2016-11-08 15:20:01\n---\n\n# 安装Hexo\nHexo是用node-js写的，hexo生成静态页面的速度要比较快，hexo是本地生成html再上传。\n\n## 安装Node.js\n官网下载对应平台安装包安装：https://nodejs.org  \n详见：[Node.js开发环境搭建](http://leolan.top/2016/11/02/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA-2016-11-02-Node-js%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/)\n\n## 安装Hexo\n\n```\nnpm install -g hexo-cli  #Mac下西安**sudo -i**切换到root权限。\nhexo init blog           #blog文件夹要先建好，这一步自动生成网站。\ncd blog\nnpm install              #安装依赖的插件。\nhexo server              #运行服务\n```\n\n这时可以在浏览器打开网页。`hexo server`的简化命令为`hexo s`；指定端口：`-p xxxx`\n和jekyll一样是通过修改**_config.yml**文件来配置站点信息的。（在Hexo中，根目录下的**_config.yml**文件是用来配置网站信息的；主题目录下的**_config.yml**文件是用来配置文章主题，页面等等的）\n\n默认的目录结构如下：\n\n```\n├── .deploy       #执行hexo deploy命令部署到GitHub上的内容目录\n├── public        #执行hexo generate命令，输出的静态网页内容目录\n├── scaffolds     #layout模板文件目录，其中的md文件可以添加编辑\n├── scripts       #扩展脚本目录，这里可以自定义一些javascript脚本\n├── source        #文章源码目录，该目录下的markdown和html文件均会被hexo处理。404文件，CNAME文件等都应该放这里。\n| ├── _drafts     #草稿文章\n| └── _posts      #发布的文章\n├── themes        #主题文件目录\n├── _config.yml   #全局配置文件，大多数的设置都在这里\n└── package.json  #应用程序数据，指明hexo的版本等信息。在push到github时提示*.json错误，删掉这个文件或删掉db.json就行。\n```\n---\n\n# 配置优化、美化站点\nNext官方设置说明：http://theme-next.iissnan.com/getting-started.html\n\n## 主题部分\n推荐Next主题，简单简洁，官网：http://theme-next.iissnan.com/\n安装最新版：\n```\ncd your-hexo-site\ngit clone https://github.com/iissnan/hexo-theme-next themes/next```\n在主题目录下可以看到next文件夹，修改**站点配置文件_config.yml**中的`theme: next`\n`hexo clean && hexo s`就可以看到新主题生效啦！\n接下来修改**主题配置文件_config.yml**，以下是我的配置。\n```\n# ---------------------------------------------------------------\n# Site Information Settings\n# ---------------------------------------------------------------\n\n# Put your favicon.ico into `hexo-site/source/` directory.\nfavicon: /200.png    #头像\n\n# Set default keywords (Use a comma to separate)\nkeywords: \"Hexo, NexT\"\n\n# Set rss to false to disable feed link.\n# Leave rss as empty to use site's feed link.\n# Set rss to specific value if you have burned your feed already.\nrss:\n\n# Specify the date when the site was setup\n#since: 2015\n\n# Canonical, set a canonical link tag in your hexo, you could use it for your SEO of blog.\n# See: https://support.google.com/webmasters/answer/139066\n# Tips: Before you open this tag, remeber set up your URL in hexo _config.yml ( ex. url: http://yourdomain.com )\ncanonical: true\n\n# ---------------------------------------------------------------\n# Menu Settings\n# ---------------------------------------------------------------\n\n# When running the site in a subdirectory (e.g. domain.tld/blog), remove the leading slash (/archives -> archives)\nmenu:       #侧边栏显示的菜单，**：**后面对应相应的目录，里面**自建index.md**文件\n  home: /\n  categories: /categories\n  tags: /tags\n  archives: /archives\n  about: /about\n # schedule: /schedule\n  #commonweal: /404.html\n\n# Enable/Disable menu icons.\n# Icon Mapping:\n#   Map a menu item to a specific FontAwesome icon name.\n#   Key is the name of menu item and value is the name of FontAwsome icon. Key is case-senstive.\n#   When an question mask icon presenting up means that the item has no mapping icon.\nmenu_icons:     #侧边栏菜单的图标\n  enable: true\n  #KeyMapsToMenuItemKey: NameOfTheIconFromFontAwesome\n  home: home\n  about: user\n  categories: th\n  schedule: calendar\n  tags: tags\n  archives: archive\n  commonweal: heartbeat\n\n# ---------------------------------------------------------------\n# Scheme Settings\n# ---------------------------------------------------------------\n\n# Schemes 主题有3总样式，Muse，Mist，Pisces选择一种，其他注释掉\n#scheme: Muse\n#scheme: Mist\nscheme: Pisces\n\n# ---------------------------------------------------------------\n# Font Settings\n# - Find fonts on Google Fonts (https://www.google.com/fonts)\n# - All fonts set here will have the following styles:\n#     light, light italic, normal, normal intalic, bold, bold italic\n# - Be aware that setting too much fonts will cause site running slowly\n# - Introduce in 5.0.1\n# ---------------------------------------------------------------\nfont:\n  enable: true\n\n  # Uri of fonts host. E.g. //fonts.googleapis.com (Default) 慢的话搜索fonts.googleapis.com即可找到替换地址\n  host: fonts.css.network   #css字体加速\n\n  # Global font settings used on <body> element.\n  global:\n    # external: true will load this font family from host.\n    external: true\n    family: Lato\n\n  # Font settings for Headlines (h1, h2, h3, h4, h5, h6)\n  # Fallback to `global` font settings.\n  headings:\n    external: true\n    family:\n\n  # Font settings for posts\n  # Fallback to `global` font settings.\n  posts:\n    external: true\n    family:\n\n  # Font settings for Logo\n  # Fallback to `global` font settings.\n  # The `size` option use `px` as unit\n  logo:\n    external: true\n    family:\n    size:\n\n  # Font settings for <code> and code blocks.\n  codes:\n    external: true\n    family:\n    size:\n\n# ---------------------------------------------------------------\n# Sidebar Settings\n# ---------------------------------------------------------------\n\n# Social Links\n# Key is the link label showing to end users.\n# Value is the target link (E.g. GitHub: https://github.com/iissnan)\n#social:\n#LinkLabel: Link\n\n# Social Links Icons\n# Icon Mapping:\n#   Map a menu item to a specific FontAwesome icon name.\n#   Key is the name of the item and value is the name of FontAwsome icon. Key is case-senstive.\n#   When an globe mask icon presenting up means that the item has no mapping icon.\nsocial_icons:\n  enable: true\n  # Icon Mappings.\n  # KeyMapsToSocalItemKey: NameOfTheIconFromFontAwesome\n  GitHub: github\n  Twitter: twitter\n  Weibo: weibo\n\n# Sidebar Avatar\n# in theme directory(source/images): /images/avatar.jpg\n# in site  directory(source/uploads): /uploads/avatar.jpg\navatar: /images/avatar.jpg\n\n\n# Table Of Contents in the Sidebar\ntoc:\n  enable: true\n\n  # Automatically add list number to toc.\n  number: true\n\n# Creative Commons 4.0 International License.\n# http://creativecommons.org/\n# Available: by | by-nc | by-nc-nd | by-nc-sa | by-nd | by-sa | zero\n#creative_commons: by-nc-sa\n#creative_commons:\n\nsidebar:\n  # Sidebar Position, available value: left | right\n  position: left\n  #position: right\n\n  # Sidebar Display, available value:\n  #  - post    expand on posts automatically. Default.\n  #  - always  expand for all pages automatically\n  #  - hide    expand only when click on the sidebar toggle icon.\n  #  - remove  Totally remove sidebar including sidebar toggler.\n  #display: post\n  display: always\n  #display: hide\n  #display: remove\n\n# Blogrolls\n#links_title: Links\n#links_layout: block\n#links_layout: inline\n#links:\n  #Title: http://example.com/\n\n# ---------------------------------------------------------------\n# Misc Theme Settings\n# ---------------------------------------------------------------\n\n# Custom Logo.\n# !!Only available for Default Scheme currently.\n# Options:\n#   enabled: [true/false] - Replace with specific image\n#   image: url-of-image   - Images's url\ncustom_logo:\n  enabled: false\n  image:\n\n\n# Code Highlight theme  代码高亮主题\n# Available value:\n#    normal | night | night eighties | night blue | night bright\n# https://github.com/chriskempson/tomorrow-theme\nhighlight_theme: night eighties\n\n\n# Automatically scroll page to section which is under <!-- more --> mark.\nscroll_to_more: true\n\n\n# Automatically Excerpt. Not recommand.\n# Please use <!-- more --> in the post to control excerpt accurately.\nauto_excerpt:\n  enable: true\n  length: 150\n\n# Wechat Subscriber\n#wechat_subscriber:\n  #enabled: true\n  #qcode: /path/to/your/wechatqcode ex. /uploads/wechat-qcode.jpg\n  #description: ex. subscribe to my blog by scanning my public wechat account\n\n# ---------------------------------------------------------------\n# Third Party Services Settings\n# ---------------------------------------------------------------\n\n# MathJax Support   数学公式\nmathjax:\n  enable: false\n  cdn: //cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML\n\n\n# Swiftype Search API Key\n#swiftype_key:\n\n# Baidu Analytics ID\n#baidu_analytics:\n\n# Duoshuo ShortName\n#duoshuo_shortname:\n\n# Disqus\n#disqus_shortname:\n\n# Baidu Share\n# Available value:\n#    button | slide\n# Warning: Baidu Share does not support https.\n#baidushare:\n##  type: button\n\n# Share\n#jiathis:\n# Warning: JiaThis does not support https.\n#add_this_id:\n\n# Share\n#duoshuo_share: true\n\n# Google Webmaster tools verification setting\n# See: https://www.google.com/webmasters/\n#google_site_verification:\n\n\n# Google Analytics\n#google_analytics:\n\n# CNZZ count\n#cnzz_siteid:\n\n\n# Make duoshuo show UA\n# user_id must NOT be null when admin_enable is true!\n# you can visit http://dev.duoshuo.com get duoshuo user id.\nduoshuo_info:\n  ua_enable: true\n  admin_enable: false\n  user_id: 0\n  #admin_nickname: Author\n\n\n# Facebook SDK Support.\n# https://github.com/iissnan/hexo-theme-next/pull/410\nfacebook_sdk:\n  enable: false\n  app_id:       #<app_id>\n  fb_admin:     #<user_id>\n  like_button:  #true\n  webmaster:    #true\n\n# Facebook comments plugin\n# This plugin depends on Facebook SDK.\n# If facebook_sdk.enable is false, Facebook comments plugin is unavailable.\nfacebook_comments_plugin:\n  enable: false\n  num_of_posts: 10  # min posts num is 1\n  width: 100%       # default width is 550px\n  scheme: light     # default scheme is light (light or dark)\n\n#网站访问量统计http://busuanzi.ibruce.info/   http://ibruce.info/2015/04/04/busuanzi/  其中id=\"busuanzi_container_site_*v\">这句可以不要。 \n# Show number of visitors to each article.   用leancloud做接口开启阅读计数功能\n#文章阅读量统计：http://www.joryhe.com/2016-05-29-how_to_create_leancloud_read_Counter.html\n# You can visit https://leancloud.cn get AppID and AppKey.\nleancloud_visitors:\n  enable: true\n  app_id: zieuxKa4IjAP6VgxxvBe4vkj-gzGzoHsz\n  app_key: MHGN54IEuofFNV1AROiRkEoG\n\n# Show PV/UV of the website/page with busuanzi.\n# Get more information on http://ibruce.info/2015/04/04/busuanzi/\nbusuanzi_count:     #不蒜子网站访问量统计\n  # count values only if the other configs are false\n  enable: false\n  # custom uv span for the whole site\n  site_uv: true\n  site_uv_header: <i class=\"fa fa-user\"></i>\n  site_uv_footer:\n  # custom pv span for the whole site\n  site_pv: true\n  site_pv_header: <i class=\"fa fa-eye\"></i>\n  site_pv_footer:\n  # custom pv span for one page only\n  page_pv: true\n  page_pv_header: <i class=\"fa fa-file-o\"></i>\n  page_pv_footer:\n\n# Tencent analytics ID\n# tencent_analytics:\n\n# Enable baidu push so that the blog will push the url to baidu automatically which is very helpful for SEO\nbaidu_push: true   #百度链接提交，提高搜索排名\n\n# Google Calendar\n# Share your recent schedule to others via calendar page\n#\n# API Documentation:\n# https://developers.google.com/google-apps/calendar/v3/reference/events/list\ncalendar:\n  enable: false\n  calendar_id: <required>\n  api_key: <required>\n  orderBy: startTime\n  offsetMax: 24\n  offsetMin: 4\n  timeZone:\n  showDeleted: false\n  singleEvents: true\n  maxResults: 250\n\n#! ---------------------------------------------------------------\n#! DO NOT EDIT THE FOLLOWING SETTINGS\n#! UNLESS YOU KNOW WHAT YOU ARE DOING\n#! ---------------------------------------------------------------\n\n# Motion\nuse_motion: true\n\n# Fancybox\nfancybox: true\n\n\n# Script Vendors.\n# Set a CDN address for the vendor you want to customize.\n# For example\n#    jquery: https://ajax.googleapis.com/ajax/libs/jquery/2.2.0/jquery.min.js\n# Be aware that you should use the same version as internal ones to avoid potential problems.\n# Please use the https protocol of CDN files when you enable https on your site.\nvendors:\n  # Internal path prefix. Please do not edit it.\n  _internal: vendors\n\n  # Internal version: 2.1.3\n  jquery:\n\n  # Internal version: 2.1.5\n  # See: http://fancyapps.com/fancybox/\n  fancybox:\n  fancybox_css:\n\n  # Internal version: 1.0.6\n  # See: https://github.com/ftlabs/fastclick\n  fastclick:\n\n  # Internal version: 1.9.7\n  # See: https://github.com/tuupola/jquery_lazyload\n  lazyload:\n\n  # Internal version: 1.2.1\n  # See: http://VelocityJS.org\n  velocity:\n\n  # Internal version: 1.2.1\n  # See: http://VelocityJS.org\n  velocity_ui:\n\n  # Internal version: 0.7.9\n  # See: https://faisalman.github.io/ua-parser-js/\n  ua_parser:\n\n  # Internal version: 4.4.0\n  # See: http://fontawesome.io/\n  fontawesome:\n\n# 多说热评文章功能\nduoshuo_hotartical: true\n\n# Assets\ncss: css\njs: js\nimages: images\n\n# Theme version\nversion: 5.0.2\n```\n\n## 配置文件设置\n以下是我的配置文件：\n\n```\n# Hexo Configuration\n## Docs: https://hexo.io/docs/configuration.html\n## Source: https://github.com/hexojs/hexo/\n\n# Site\ntitle: Leo Lan的博客\nsubtitle:  有时候正是不报期望的人做出了人们不敢期望的事！\ndescription: Better late than never\nauthor: Leo Lan\nlanguage: zh-Hans\ntimezone: Asia/Shanghai\n\n# URL\n## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'\nurl: http://leolan.top\ncoding_url: http://leolan.top\nroot: /\npermalink: :year/:month/:day/:title/\npermalink_defaults:\n\n# Directory\nsource_dir: source\npublic_dir: public\ntag_dir: tags\narchive_dir: archives\ncategory_dir: categories\ncode_dir: downloads/code\ni18n_dir: :lang\nskip_render:\n\n# Writing  官网：https://hexo.io/zh-cn/docs/writing.html\nnew_post_name: :year-:month-:day-:title.md # File name of new posts\ndefault_layout: post\ntitlecase: false # Transform title into titlecase\nexternal_link: true # Open external links in new tab\nfilename_case: 0\nrender_drafts: false\npost_asset_folder: false\nrelative_link: false\nfuture: true\nhighlight:\n  enable: true\n  line_number: true\n  auto_detect: true\n  tab_replace:\n\n# Category & Tag\ndefault_category: uncategorized\ncategory_map:\ntag_map:\n\n# Date / Time format\n## Hexo uses Moment.js to parse and display date\n## You can customize the date format as defined in\n## http://momentjs.com/docs/#/displaying/format/\ndate_format: YYYY-MM-DD\ntime_format: HH:mm:ss\n\n# Pagination\n## Set per_page to 0 to disable pagination\nper_page: 15\npagination_dir: page\n\n# Extensions\n## Plugins: https://hexo.io/plugins/\n## Themes: https://hexo.io/themes/\ntheme: next\n\n# Deployment部署\n## 官方文档Docs: https://hexo.io/docs/deployment.html   有部署到各种服务器的方法\n## 参考：http://www.lxway.com/240950852.htm\n#不管是github还是coding，type都填写git\n#这里同事部署到Github和Coding上，在域名解析中设置国内IP访问Coding，国外IP访问Github。\n#自动部署需要安装deployer-git插件：npm install hexo-deployer-git --save\ndeploy:\n- type: git\n  repo: git@git.coding.net:leolan/leolan.git,master  #注意你的分支是什么\n- type: git\n  repo: git@github.com:MyLeoLan/blog.git,master\n#deploy:\n#- type: git\n#  repo:\n#- type: heroku（另一种云平台）\n#  repo:\n\n\n# Disqus #Disqus评论系统\ndisqus_shortname: leolan\n\n\n#plugins: #插件，例如生成 RSS 和站点地图的\n#hexo-generator-sitemap\n#- hexo-generator-baidu-sitemap\nplugins:\n  hexo-generator-feed\n  hexo-generator-baidu-sitemap\n\nsitemap:\n  path: sitemap.xml    \nbaidusitemap:\n  baidupath: baidusitemap.xml\n\n# Social links  社交链接\nsocial:\n  GitHub: https://github.com/myleolan\n  Coding: https://coding.net/u/leolan\n  CSDN: http://blog.csdn.net/lan842632\n  OSchina: https://my.oschina.net/leolan/blog\n  #Twitter: https://twitter.com/lmintlcx\n  #Zhihu: http://www.zhihu.com/people/lmintlcx\n  #Douban: http://www.douban.com/people/lmintlcx\n  #Weibo: http://weibo.com/u/3233729080\n\nduoshuo_shortname: leolan\n# 多说热评文章 true 或者 false\nduoshuo_hotartical: true\n# 多说分享服务\nduoshuo_share: true\n# 百度分享服务\nbaidushare: true\n\n\n#打赏功能\nreward_comment: 您的支持将鼓励我继续创作,非常感谢！\nwechatpay: http://ofyfogrgx.bkt.clouddn.com/%E5%BE%AE%E4%BF%A1%E6%94%B6%E6%AC%BE1.png\nalipay: http://ofyfogrgx.bkt.clouddn.com/%E6%94%AF%E4%BB%98%E5%AE%9D%E6%94%B6%E6%AC%BE01.jpg\n\n#站点建立时间\nsince: 2016\n\n#百度分析\nbaidu_analytics: dc0e85252eeff3a87aa87f35d92a8d33\n\n#本地搜索\nsearch:\n  path: search.xml\n  field: post\n  format: html\n  limit: 10000\n```\n\n## 安装插件\nhexo支持插件，可以直接通过命令行安装即可：`npm install **plugin-name** --save`\n更新插件\n`npm update`\n卸载插件\n`npm uninstall **plugin-name**`\n下面推荐几个常用的插件：\nfeed插件:`npm install hexo-generator-feed --save`\n站点地图:`npm install hexo-generator-sitemap --save`\n百度站点地图:`npm install hexo-generator-baidu-sitemap --save`\n文章字数统计：http://www.joryhe.com/2016-06-06-hexo_wordcount_setting_your_post.html\n\n---\n\n# 部署\n\n```\ncd your_site/\ntouch Staticfile  #创建静态文件标识，用于Github识别，名字必须是Staticfile\nhexo clean   #清除以前生成的旧文件\nhexo g       #生成新的站点文件\nhexo d       #部署到Github上```\n可参考：http://shomy.top/2016/03/03/hexo-in-coding-github/\n部署完成打开网址就能看到效果了。\n\nHexo的部署只会把生成的文件上传到仓库中，本地的**设置，主题，*.md文件**等等都不会上传，换一台电脑就没法干活了，一旦删除，那基本上所有的努力都白费了，这里介绍2种备份方法：\n* 1.新建一个仓库专门用来存放这些文件（最安全最方便的办法）\n* 2.和发布的网站使用同一个仓库，master用来存放这些文件，新建分支来发布网站（注意pages服务绑定该分支，不要合并分支，一旦合并就全部混乱了）\n两种方法都要在网站根目录设定好远程端仓库：`git add remote XXXX`\n每次发布完网页，就顺手执行以下代码，把文档也同步到仓库中。\n```\ngit add .\ngit commit -m \"xxx\"\ngit push\n```\n\n---\n\n# 绑定域名\n原理和博客绑定域名是一样的\n\n* 1· 在你的项目下新建一个**CNAME**文件，注意没有后缀名。在里面添加你的域名，如我的就是** leolan.top**，然后推送**CNAME文件**到远程仓库。（方法二是直接在pages页上找到域名绑定设置，最好同时绑定如：**leolan.top**和**www.leolan.top**,少绑一个，没绑的那个打不开）\n* 2· 到域名服务商那里增加你的CNAME记录。添加两条记录，@和www的主机记录，记录类型为CNAME，记录值为 `username.github.io. `，重要的是 io 后面还有一个原点（看官方帮助文档Coding的就不用加点），切记。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E5%9F%9F%E5%90%8D%E7%BB%91%E5%AE%9A.png)\n过几分钟，刷新网页，就能直接用域名访问了，因为是在项目内建的**CNAME**文件，所以域名直接指向此项目文件夹，其他项目可以用其他域名设定。\n\n---\n\n# 参考资料\n[Hexo](http://www.joryhe.com/tags/hexo/) 　　　 [Jekyll迁移到Hexo](http://www.ezlippi.com/blog/2016/02/jekyll-to-hexo.html)\n\n---","slug":"环境搭建-2016-11-08-用Hexo搭建博客","published":1,"updated":"2016-11-13T03:36:30.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civi8oujp002q2c6nw6aajgir","content":"<h1 id=\"安装Hexo\"><a href=\"#安装Hexo\" class=\"headerlink\" title=\"安装Hexo\"></a>安装Hexo</h1><p>Hexo是用node-js写的，hexo生成静态页面的速度要比较快，hexo是本地生成html再上传。</p>\n<h2 id=\"安装Node-js\"><a href=\"#安装Node-js\" class=\"headerlink\" title=\"安装Node.js\"></a>安装Node.js</h2><p>官网下载对应平台安装包安装：<a href=\"https://nodejs.org\" target=\"_blank\" rel=\"external\">https://nodejs.org</a><br>详见：<a href=\"http://leolan.top/2016/11/02/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA-2016-11-02-Node-js%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/\" target=\"_blank\" rel=\"external\">Node.js开发环境搭建</a></p>\n<h2 id=\"安装Hexo-1\"><a href=\"#安装Hexo-1\" class=\"headerlink\" title=\"安装Hexo\"></a>安装Hexo</h2><figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm <span class=\"keyword\">install </span>-g hexo-cli  <span class=\"comment\">#Mac下西安**sudo -i**切换到root权限。</span></div><div class=\"line\">hexo init <span class=\"keyword\">blog </span>          <span class=\"comment\">#blog文件夹要先建好，这一步自动生成网站。</span></div><div class=\"line\">cd <span class=\"keyword\">blog</span></div><div class=\"line\">npm <span class=\"keyword\">install </span>             <span class=\"comment\">#安装依赖的插件。</span></div><div class=\"line\">hexo server              <span class=\"comment\">#运行服务</span></div></pre></td></tr></table></figure>\n<p>这时可以在浏览器打开网页。<code>hexo server</code>的简化命令为<code>hexo s</code>；指定端口：<code>-p xxxx</code><br>和jekyll一样是通过修改<strong>_config.yml</strong>文件来配置站点信息的。（在Hexo中，根目录下的<strong>_config.yml</strong>文件是用来配置网站信息的；主题目录下的<strong>_config.yml</strong>文件是用来配置文章主题，页面等等的）</p>\n<p>默认的目录结构如下：</p>\n<figure class=\"highlight haxe\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">├── .deploy       <span class=\"meta\">#执行hexo deploy命令部署到GitHub上的内容目录</span></div><div class=\"line\">├── <span class=\"keyword\">public</span>        <span class=\"meta\">#执行hexo generate命令，输出的静态网页内容目录</span></div><div class=\"line\">├── scaffolds     <span class=\"meta\">#layout模板文件目录，其中的md文件可以添加编辑</span></div><div class=\"line\">├── scripts       <span class=\"meta\">#扩展脚本目录，这里可以自定义一些javascript脚本</span></div><div class=\"line\">├── source        <span class=\"meta\">#文章源码目录，该目录下的markdown和html文件均会被hexo处理。404文件，CNAME文件等都应该放这里。</span></div><div class=\"line\">| ├── _drafts     <span class=\"meta\">#草稿文章</span></div><div class=\"line\">| └── _posts      <span class=\"meta\">#发布的文章</span></div><div class=\"line\">├── themes        <span class=\"meta\">#主题文件目录</span></div><div class=\"line\">├── _config.yml   <span class=\"meta\">#全局配置文件，大多数的设置都在这里</span></div><div class=\"line\">└── <span class=\"keyword\">package</span>.json  <span class=\"meta\">#应用程序数据，指明hexo的版本等信息。在push到github时提示*.json错误，删掉这个文件或删掉db.json就行。</span></div></pre></td></tr></table></figure>\n<hr>\n<h1 id=\"配置优化、美化站点\"><a href=\"#配置优化、美化站点\" class=\"headerlink\" title=\"配置优化、美化站点\"></a>配置优化、美化站点</h1><p>Next官方设置说明：<a href=\"http://theme-next.iissnan.com/getting-started.html\" target=\"_blank\" rel=\"external\">http://theme-next.iissnan.com/getting-started.html</a></p>\n<h2 id=\"主题部分\"><a href=\"#主题部分\" class=\"headerlink\" title=\"主题部分\"></a>主题部分</h2><p>推荐Next主题，简单简洁，官网：<a href=\"http://theme-next.iissnan.com/\" target=\"_blank\" rel=\"external\">http://theme-next.iissnan.com/</a><br>安装最新版：<br><figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">cd</span> your-hexo-site</div><div class=\"line\">git clone http<span class=\"variable\">s:</span>//github.<span class=\"keyword\">com</span>/iissnan/hexo-theme-<span class=\"keyword\">next</span> themes/<span class=\"keyword\">next</span></div></pre></td></tr></table></figure></p>\n<p>在主题目录下可以看到next文件夹，修改<strong>站点配置文件_config.yml</strong>中的<code>theme: next</code><br><code>hexo clean &amp;&amp; hexo s</code>就可以看到新主题生效啦！<br>接下来修改<strong>主题配置文件_config.yml</strong>，以下是我的配置。<br><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div><div class=\"line\">151</div><div class=\"line\">152</div><div class=\"line\">153</div><div class=\"line\">154</div><div class=\"line\">155</div><div class=\"line\">156</div><div class=\"line\">157</div><div class=\"line\">158</div><div class=\"line\">159</div><div class=\"line\">160</div><div class=\"line\">161</div><div class=\"line\">162</div><div class=\"line\">163</div><div class=\"line\">164</div><div class=\"line\">165</div><div class=\"line\">166</div><div class=\"line\">167</div><div class=\"line\">168</div><div class=\"line\">169</div><div class=\"line\">170</div><div class=\"line\">171</div><div class=\"line\">172</div><div class=\"line\">173</div><div class=\"line\">174</div><div class=\"line\">175</div><div class=\"line\">176</div><div class=\"line\">177</div><div class=\"line\">178</div><div class=\"line\">179</div><div class=\"line\">180</div><div class=\"line\">181</div><div class=\"line\">182</div><div class=\"line\">183</div><div class=\"line\">184</div><div class=\"line\">185</div><div class=\"line\">186</div><div class=\"line\">187</div><div class=\"line\">188</div><div class=\"line\">189</div><div class=\"line\">190</div><div class=\"line\">191</div><div class=\"line\">192</div><div class=\"line\">193</div><div class=\"line\">194</div><div class=\"line\">195</div><div class=\"line\">196</div><div class=\"line\">197</div><div class=\"line\">198</div><div class=\"line\">199</div><div class=\"line\">200</div><div class=\"line\">201</div><div class=\"line\">202</div><div class=\"line\">203</div><div class=\"line\">204</div><div class=\"line\">205</div><div class=\"line\">206</div><div class=\"line\">207</div><div class=\"line\">208</div><div class=\"line\">209</div><div class=\"line\">210</div><div class=\"line\">211</div><div class=\"line\">212</div><div class=\"line\">213</div><div class=\"line\">214</div><div class=\"line\">215</div><div class=\"line\">216</div><div class=\"line\">217</div><div class=\"line\">218</div><div class=\"line\">219</div><div class=\"line\">220</div><div class=\"line\">221</div><div class=\"line\">222</div><div class=\"line\">223</div><div class=\"line\">224</div><div class=\"line\">225</div><div class=\"line\">226</div><div class=\"line\">227</div><div class=\"line\">228</div><div class=\"line\">229</div><div class=\"line\">230</div><div class=\"line\">231</div><div class=\"line\">232</div><div class=\"line\">233</div><div class=\"line\">234</div><div class=\"line\">235</div><div class=\"line\">236</div><div class=\"line\">237</div><div class=\"line\">238</div><div class=\"line\">239</div><div class=\"line\">240</div><div class=\"line\">241</div><div class=\"line\">242</div><div class=\"line\">243</div><div class=\"line\">244</div><div class=\"line\">245</div><div class=\"line\">246</div><div class=\"line\">247</div><div class=\"line\">248</div><div class=\"line\">249</div><div class=\"line\">250</div><div class=\"line\">251</div><div class=\"line\">252</div><div class=\"line\">253</div><div class=\"line\">254</div><div class=\"line\">255</div><div class=\"line\">256</div><div class=\"line\">257</div><div class=\"line\">258</div><div class=\"line\">259</div><div class=\"line\">260</div><div class=\"line\">261</div><div class=\"line\">262</div><div class=\"line\">263</div><div class=\"line\">264</div><div class=\"line\">265</div><div class=\"line\">266</div><div class=\"line\">267</div><div class=\"line\">268</div><div class=\"line\">269</div><div class=\"line\">270</div><div class=\"line\">271</div><div class=\"line\">272</div><div class=\"line\">273</div><div class=\"line\">274</div><div class=\"line\">275</div><div class=\"line\">276</div><div class=\"line\">277</div><div class=\"line\">278</div><div class=\"line\">279</div><div class=\"line\">280</div><div class=\"line\">281</div><div class=\"line\">282</div><div class=\"line\">283</div><div class=\"line\">284</div><div class=\"line\">285</div><div class=\"line\">286</div><div class=\"line\">287</div><div class=\"line\">288</div><div class=\"line\">289</div><div class=\"line\">290</div><div class=\"line\">291</div><div class=\"line\">292</div><div class=\"line\">293</div><div class=\"line\">294</div><div class=\"line\">295</div><div class=\"line\">296</div><div class=\"line\">297</div><div class=\"line\">298</div><div class=\"line\">299</div><div class=\"line\">300</div><div class=\"line\">301</div><div class=\"line\">302</div><div class=\"line\">303</div><div class=\"line\">304</div><div class=\"line\">305</div><div class=\"line\">306</div><div class=\"line\">307</div><div class=\"line\">308</div><div class=\"line\">309</div><div class=\"line\">310</div><div class=\"line\">311</div><div class=\"line\">312</div><div class=\"line\">313</div><div class=\"line\">314</div><div class=\"line\">315</div><div class=\"line\">316</div><div class=\"line\">317</div><div class=\"line\">318</div><div class=\"line\">319</div><div class=\"line\">320</div><div class=\"line\">321</div><div class=\"line\">322</div><div class=\"line\">323</div><div class=\"line\">324</div><div class=\"line\">325</div><div class=\"line\">326</div><div class=\"line\">327</div><div class=\"line\">328</div><div class=\"line\">329</div><div class=\"line\">330</div><div class=\"line\">331</div><div class=\"line\">332</div><div class=\"line\">333</div><div class=\"line\">334</div><div class=\"line\">335</div><div class=\"line\">336</div><div class=\"line\">337</div><div class=\"line\">338</div><div class=\"line\">339</div><div class=\"line\">340</div><div class=\"line\">341</div><div class=\"line\">342</div><div class=\"line\">343</div><div class=\"line\">344</div><div class=\"line\">345</div><div class=\"line\">346</div><div class=\"line\">347</div><div class=\"line\">348</div><div class=\"line\">349</div><div class=\"line\">350</div><div class=\"line\">351</div><div class=\"line\">352</div><div class=\"line\">353</div><div class=\"line\">354</div><div class=\"line\">355</div><div class=\"line\">356</div><div class=\"line\">357</div><div class=\"line\">358</div><div class=\"line\">359</div><div class=\"line\">360</div><div class=\"line\">361</div><div class=\"line\">362</div><div class=\"line\">363</div><div class=\"line\">364</div><div class=\"line\">365</div><div class=\"line\">366</div><div class=\"line\">367</div><div class=\"line\">368</div><div class=\"line\">369</div><div class=\"line\">370</div><div class=\"line\">371</div><div class=\"line\">372</div><div class=\"line\">373</div><div class=\"line\">374</div><div class=\"line\">375</div><div class=\"line\">376</div><div class=\"line\">377</div><div class=\"line\">378</div><div class=\"line\">379</div><div class=\"line\">380</div><div class=\"line\">381</div><div class=\"line\">382</div><div class=\"line\">383</div><div class=\"line\">384</div><div class=\"line\">385</div><div class=\"line\">386</div><div class=\"line\">387</div><div class=\"line\">388</div><div class=\"line\">389</div><div class=\"line\">390</div><div class=\"line\">391</div><div class=\"line\">392</div><div class=\"line\">393</div><div class=\"line\">394</div><div class=\"line\">395</div><div class=\"line\">396</div><div class=\"line\">397</div><div class=\"line\">398</div><div class=\"line\">399</div><div class=\"line\">400</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># ---------------------------------------------------------------</span></div><div class=\"line\"><span class=\"comment\"># Site Information Settings</span></div><div class=\"line\"><span class=\"comment\"># ---------------------------------------------------------------</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Put your favicon.ico into `hexo-site/source/` directory.</span></div><div class=\"line\"><span class=\"attr\">favicon:</span> /<span class=\"number\">200.</span>png    <span class=\"comment\">#头像</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Set default keywords (Use a comma to separate)</span></div><div class=\"line\"><span class=\"attr\">keywords:</span> <span class=\"string\">\"Hexo, NexT\"</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Set rss to false to disable feed link.</span></div><div class=\"line\"><span class=\"comment\"># Leave rss as empty to use site's feed link.</span></div><div class=\"line\"><span class=\"comment\"># Set rss to specific value if you have burned your feed already.</span></div><div class=\"line\"><span class=\"attr\">rss:</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Specify the date when the site was setup</span></div><div class=\"line\"><span class=\"comment\">#since: 2015</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Canonical, set a canonical link tag in your hexo, you could use it for your SEO of blog.</span></div><div class=\"line\"><span class=\"comment\"># See: https://support.google.com/webmasters/answer/139066</span></div><div class=\"line\"><span class=\"comment\"># Tips: Before you open this tag, remeber set up your URL in hexo _config.yml ( ex. url: http://yourdomain.com )</span></div><div class=\"line\"><span class=\"attr\">canonical:</span> <span class=\"literal\">true</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># ---------------------------------------------------------------</span></div><div class=\"line\"><span class=\"comment\"># Menu Settings</span></div><div class=\"line\"><span class=\"comment\"># ---------------------------------------------------------------</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># When running the site in a subdirectory (e.g. domain.tld/blog), remove the leading slash (/archives -&gt; archives)</span></div><div class=\"line\"><span class=\"attr\">menu:</span>       <span class=\"comment\">#侧边栏显示的菜单，**：**后面对应相应的目录，里面**自建index.md**文件</span></div><div class=\"line\"><span class=\"attr\">  home:</span> /</div><div class=\"line\"><span class=\"attr\">  categories:</span> /categories</div><div class=\"line\"><span class=\"attr\">  tags:</span> /tags</div><div class=\"line\"><span class=\"attr\">  archives:</span> /archives</div><div class=\"line\"><span class=\"attr\">  about:</span> /about</div><div class=\"line\"> <span class=\"comment\"># schedule: /schedule</span></div><div class=\"line\">  <span class=\"comment\">#commonweal: /404.html</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Enable/Disable menu icons.</span></div><div class=\"line\"><span class=\"comment\"># Icon Mapping:</span></div><div class=\"line\"><span class=\"comment\">#   Map a menu item to a specific FontAwesome icon name.</span></div><div class=\"line\"><span class=\"comment\">#   Key is the name of menu item and value is the name of FontAwsome icon. Key is case-senstive.</span></div><div class=\"line\"><span class=\"comment\">#   When an question mask icon presenting up means that the item has no mapping icon.</span></div><div class=\"line\"><span class=\"attr\">menu_icons:</span>     <span class=\"comment\">#侧边栏菜单的图标</span></div><div class=\"line\"><span class=\"attr\">  enable:</span> <span class=\"literal\">true</span></div><div class=\"line\">  <span class=\"comment\">#KeyMapsToMenuItemKey: NameOfTheIconFromFontAwesome</span></div><div class=\"line\"><span class=\"attr\">  home:</span> home</div><div class=\"line\"><span class=\"attr\">  about:</span> user</div><div class=\"line\"><span class=\"attr\">  categories:</span> th</div><div class=\"line\"><span class=\"attr\">  schedule:</span> calendar</div><div class=\"line\"><span class=\"attr\">  tags:</span> tags</div><div class=\"line\"><span class=\"attr\">  archives:</span> archive</div><div class=\"line\"><span class=\"attr\">  commonweal:</span> heartbeat</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># ---------------------------------------------------------------</span></div><div class=\"line\"><span class=\"comment\"># Scheme Settings</span></div><div class=\"line\"><span class=\"comment\"># ---------------------------------------------------------------</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Schemes 主题有3总样式，Muse，Mist，Pisces选择一种，其他注释掉</span></div><div class=\"line\"><span class=\"comment\">#scheme: Muse</span></div><div class=\"line\"><span class=\"comment\">#scheme: Mist</span></div><div class=\"line\"><span class=\"attr\">scheme:</span> Pisces</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># ---------------------------------------------------------------</span></div><div class=\"line\"><span class=\"comment\"># Font Settings</span></div><div class=\"line\"><span class=\"comment\"># - Find fonts on Google Fonts (https://www.google.com/fonts)</span></div><div class=\"line\"><span class=\"comment\"># - All fonts set here will have the following styles:</span></div><div class=\"line\"><span class=\"comment\">#     light, light italic, normal, normal intalic, bold, bold italic</span></div><div class=\"line\"><span class=\"comment\"># - Be aware that setting too much fonts will cause site running slowly</span></div><div class=\"line\"><span class=\"comment\"># - Introduce in 5.0.1</span></div><div class=\"line\"><span class=\"comment\"># ---------------------------------------------------------------</span></div><div class=\"line\"><span class=\"attr\">font:</span></div><div class=\"line\"><span class=\"attr\">  enable:</span> <span class=\"literal\">true</span></div><div class=\"line\"></div><div class=\"line\">  <span class=\"comment\"># Uri of fonts host. E.g. //fonts.googleapis.com (Default) 慢的话搜索fonts.googleapis.com即可找到替换地址</span></div><div class=\"line\"><span class=\"attr\">  host:</span> fonts.css.network   <span class=\"comment\">#css字体加速</span></div><div class=\"line\"></div><div class=\"line\">  <span class=\"comment\"># Global font settings used on &lt;body&gt; element.</span></div><div class=\"line\"><span class=\"attr\">  global:</span></div><div class=\"line\">    <span class=\"comment\"># external: true will load this font family from host.</span></div><div class=\"line\"><span class=\"attr\">    external:</span> <span class=\"literal\">true</span></div><div class=\"line\"><span class=\"attr\">    family:</span> Lato</div><div class=\"line\"></div><div class=\"line\">  <span class=\"comment\"># Font settings for Headlines (h1, h2, h3, h4, h5, h6)</span></div><div class=\"line\">  <span class=\"comment\"># Fallback to `global` font settings.</span></div><div class=\"line\"><span class=\"attr\">  headings:</span></div><div class=\"line\"><span class=\"attr\">    external:</span> <span class=\"literal\">true</span></div><div class=\"line\"><span class=\"attr\">    family:</span></div><div class=\"line\"></div><div class=\"line\">  <span class=\"comment\"># Font settings for posts</span></div><div class=\"line\">  <span class=\"comment\"># Fallback to `global` font settings.</span></div><div class=\"line\"><span class=\"attr\">  posts:</span></div><div class=\"line\"><span class=\"attr\">    external:</span> <span class=\"literal\">true</span></div><div class=\"line\"><span class=\"attr\">    family:</span></div><div class=\"line\"></div><div class=\"line\">  <span class=\"comment\"># Font settings for Logo</span></div><div class=\"line\">  <span class=\"comment\"># Fallback to `global` font settings.</span></div><div class=\"line\">  <span class=\"comment\"># The `size` option use `px` as unit</span></div><div class=\"line\"><span class=\"attr\">  logo:</span></div><div class=\"line\"><span class=\"attr\">    external:</span> <span class=\"literal\">true</span></div><div class=\"line\"><span class=\"attr\">    family:</span></div><div class=\"line\"><span class=\"attr\">    size:</span></div><div class=\"line\"></div><div class=\"line\">  <span class=\"comment\"># Font settings for &lt;code&gt; and code blocks.</span></div><div class=\"line\"><span class=\"attr\">  codes:</span></div><div class=\"line\"><span class=\"attr\">    external:</span> <span class=\"literal\">true</span></div><div class=\"line\"><span class=\"attr\">    family:</span></div><div class=\"line\"><span class=\"attr\">    size:</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># ---------------------------------------------------------------</span></div><div class=\"line\"><span class=\"comment\"># Sidebar Settings</span></div><div class=\"line\"><span class=\"comment\"># ---------------------------------------------------------------</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Social Links</span></div><div class=\"line\"><span class=\"comment\"># Key is the link label showing to end users.</span></div><div class=\"line\"><span class=\"comment\"># Value is the target link (E.g. GitHub: https://github.com/iissnan)</span></div><div class=\"line\"><span class=\"comment\">#social:</span></div><div class=\"line\"><span class=\"comment\">#LinkLabel: Link</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Social Links Icons</span></div><div class=\"line\"><span class=\"comment\"># Icon Mapping:</span></div><div class=\"line\"><span class=\"comment\">#   Map a menu item to a specific FontAwesome icon name.</span></div><div class=\"line\"><span class=\"comment\">#   Key is the name of the item and value is the name of FontAwsome icon. Key is case-senstive.</span></div><div class=\"line\"><span class=\"comment\">#   When an globe mask icon presenting up means that the item has no mapping icon.</span></div><div class=\"line\"><span class=\"attr\">social_icons:</span></div><div class=\"line\"><span class=\"attr\">  enable:</span> <span class=\"literal\">true</span></div><div class=\"line\">  <span class=\"comment\"># Icon Mappings.</span></div><div class=\"line\">  <span class=\"comment\"># KeyMapsToSocalItemKey: NameOfTheIconFromFontAwesome</span></div><div class=\"line\"><span class=\"attr\">  GitHub:</span> github</div><div class=\"line\"><span class=\"attr\">  Twitter:</span> twitter</div><div class=\"line\"><span class=\"attr\">  Weibo:</span> weibo</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Sidebar Avatar</span></div><div class=\"line\"><span class=\"comment\"># in theme directory(source/images): /images/avatar.jpg</span></div><div class=\"line\"><span class=\"comment\"># in site  directory(source/uploads): /uploads/avatar.jpg</span></div><div class=\"line\"><span class=\"attr\">avatar:</span> /images/avatar.jpg</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Table Of Contents in the Sidebar</span></div><div class=\"line\"><span class=\"attr\">toc:</span></div><div class=\"line\"><span class=\"attr\">  enable:</span> <span class=\"literal\">true</span></div><div class=\"line\"></div><div class=\"line\">  <span class=\"comment\"># Automatically add list number to toc.</span></div><div class=\"line\"><span class=\"attr\">  number:</span> <span class=\"literal\">true</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Creative Commons 4.0 International License.</span></div><div class=\"line\"><span class=\"comment\"># http://creativecommons.org/</span></div><div class=\"line\"><span class=\"comment\"># Available: by | by-nc | by-nc-nd | by-nc-sa | by-nd | by-sa | zero</span></div><div class=\"line\"><span class=\"comment\">#creative_commons: by-nc-sa</span></div><div class=\"line\"><span class=\"comment\">#creative_commons:</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"attr\">sidebar:</span></div><div class=\"line\">  <span class=\"comment\"># Sidebar Position, available value: left | right</span></div><div class=\"line\"><span class=\"attr\">  position:</span> left</div><div class=\"line\">  <span class=\"comment\">#position: right</span></div><div class=\"line\"></div><div class=\"line\">  <span class=\"comment\"># Sidebar Display, available value:</span></div><div class=\"line\">  <span class=\"comment\">#  - post    expand on posts automatically. Default.</span></div><div class=\"line\">  <span class=\"comment\">#  - always  expand for all pages automatically</span></div><div class=\"line\">  <span class=\"comment\">#  - hide    expand only when click on the sidebar toggle icon.</span></div><div class=\"line\">  <span class=\"comment\">#  - remove  Totally remove sidebar including sidebar toggler.</span></div><div class=\"line\">  <span class=\"comment\">#display: post</span></div><div class=\"line\"><span class=\"attr\">  display:</span> always</div><div class=\"line\">  <span class=\"comment\">#display: hide</span></div><div class=\"line\">  <span class=\"comment\">#display: remove</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Blogrolls</span></div><div class=\"line\"><span class=\"comment\">#links_title: Links</span></div><div class=\"line\"><span class=\"comment\">#links_layout: block</span></div><div class=\"line\"><span class=\"comment\">#links_layout: inline</span></div><div class=\"line\"><span class=\"comment\">#links:</span></div><div class=\"line\">  <span class=\"comment\">#Title: http://example.com/</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># ---------------------------------------------------------------</span></div><div class=\"line\"><span class=\"comment\"># Misc Theme Settings</span></div><div class=\"line\"><span class=\"comment\"># ---------------------------------------------------------------</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Custom Logo.</span></div><div class=\"line\"><span class=\"comment\"># !!Only available for Default Scheme currently.</span></div><div class=\"line\"><span class=\"comment\"># Options:</span></div><div class=\"line\"><span class=\"comment\">#   enabled: [true/false] - Replace with specific image</span></div><div class=\"line\"><span class=\"comment\">#   image: url-of-image   - Images's url</span></div><div class=\"line\"><span class=\"attr\">custom_logo:</span></div><div class=\"line\"><span class=\"attr\">  enabled:</span> <span class=\"literal\">false</span></div><div class=\"line\"><span class=\"attr\">  image:</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Code Highlight theme  代码高亮主题</span></div><div class=\"line\"><span class=\"comment\"># Available value:</span></div><div class=\"line\"><span class=\"comment\">#    normal | night | night eighties | night blue | night bright</span></div><div class=\"line\"><span class=\"comment\"># https://github.com/chriskempson/tomorrow-theme</span></div><div class=\"line\"><span class=\"attr\">highlight_theme:</span> night eighties</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Automatically scroll page to section which is under &lt;!-- more --&gt; mark.</span></div><div class=\"line\"><span class=\"attr\">scroll_to_more:</span> <span class=\"literal\">true</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Automatically Excerpt. Not recommand.</span></div><div class=\"line\"><span class=\"comment\"># Please use &lt;!-- more --&gt; in the post to control excerpt accurately.</span></div><div class=\"line\"><span class=\"attr\">auto_excerpt:</span></div><div class=\"line\"><span class=\"attr\">  enable:</span> <span class=\"literal\">true</span></div><div class=\"line\"><span class=\"attr\">  length:</span> <span class=\"number\">150</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Wechat Subscriber</span></div><div class=\"line\"><span class=\"comment\">#wechat_subscriber:</span></div><div class=\"line\">  <span class=\"comment\">#enabled: true</span></div><div class=\"line\">  <span class=\"comment\">#qcode: /path/to/your/wechatqcode ex. /uploads/wechat-qcode.jpg</span></div><div class=\"line\">  <span class=\"comment\">#description: ex. subscribe to my blog by scanning my public wechat account</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># ---------------------------------------------------------------</span></div><div class=\"line\"><span class=\"comment\"># Third Party Services Settings</span></div><div class=\"line\"><span class=\"comment\"># ---------------------------------------------------------------</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># MathJax Support   数学公式</span></div><div class=\"line\"><span class=\"attr\">mathjax:</span></div><div class=\"line\"><span class=\"attr\">  enable:</span> <span class=\"literal\">false</span></div><div class=\"line\"><span class=\"attr\">  cdn:</span> //cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Swiftype Search API Key</span></div><div class=\"line\"><span class=\"comment\">#swiftype_key:</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Baidu Analytics ID</span></div><div class=\"line\"><span class=\"comment\">#baidu_analytics:</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Duoshuo ShortName</span></div><div class=\"line\"><span class=\"comment\">#duoshuo_shortname:</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Disqus</span></div><div class=\"line\"><span class=\"comment\">#disqus_shortname:</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Baidu Share</span></div><div class=\"line\"><span class=\"comment\"># Available value:</span></div><div class=\"line\"><span class=\"comment\">#    button | slide</span></div><div class=\"line\"><span class=\"comment\"># Warning: Baidu Share does not support https.</span></div><div class=\"line\"><span class=\"comment\">#baidushare:</span></div><div class=\"line\"><span class=\"comment\">##  type: button</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Share</span></div><div class=\"line\"><span class=\"comment\">#jiathis:</span></div><div class=\"line\"><span class=\"comment\"># Warning: JiaThis does not support https.</span></div><div class=\"line\"><span class=\"comment\">#add_this_id:</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Share</span></div><div class=\"line\"><span class=\"comment\">#duoshuo_share: true</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Google Webmaster tools verification setting</span></div><div class=\"line\"><span class=\"comment\"># See: https://www.google.com/webmasters/</span></div><div class=\"line\"><span class=\"comment\">#google_site_verification:</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Google Analytics</span></div><div class=\"line\"><span class=\"comment\">#google_analytics:</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># CNZZ count</span></div><div class=\"line\"><span class=\"comment\">#cnzz_siteid:</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Make duoshuo show UA</span></div><div class=\"line\"><span class=\"comment\"># user_id must NOT be null when admin_enable is true!</span></div><div class=\"line\"><span class=\"comment\"># you can visit http://dev.duoshuo.com get duoshuo user id.</span></div><div class=\"line\"><span class=\"attr\">duoshuo_info:</span></div><div class=\"line\"><span class=\"attr\">  ua_enable:</span> <span class=\"literal\">true</span></div><div class=\"line\"><span class=\"attr\">  admin_enable:</span> <span class=\"literal\">false</span></div><div class=\"line\"><span class=\"attr\">  user_id:</span> <span class=\"number\">0</span></div><div class=\"line\">  <span class=\"comment\">#admin_nickname: Author</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Facebook SDK Support.</span></div><div class=\"line\"><span class=\"comment\"># https://github.com/iissnan/hexo-theme-next/pull/410</span></div><div class=\"line\"><span class=\"attr\">facebook_sdk:</span></div><div class=\"line\"><span class=\"attr\">  enable:</span> <span class=\"literal\">false</span></div><div class=\"line\"><span class=\"attr\">  app_id:</span>       <span class=\"comment\">#&lt;app_id&gt;</span></div><div class=\"line\"><span class=\"attr\">  fb_admin:</span>     <span class=\"comment\">#&lt;user_id&gt;</span></div><div class=\"line\"><span class=\"attr\">  like_button:</span>  <span class=\"comment\">#true</span></div><div class=\"line\"><span class=\"attr\">  webmaster:</span>    <span class=\"comment\">#true</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Facebook comments plugin</span></div><div class=\"line\"><span class=\"comment\"># This plugin depends on Facebook SDK.</span></div><div class=\"line\"><span class=\"comment\"># If facebook_sdk.enable is false, Facebook comments plugin is unavailable.</span></div><div class=\"line\"><span class=\"attr\">facebook_comments_plugin:</span></div><div class=\"line\"><span class=\"attr\">  enable:</span> <span class=\"literal\">false</span></div><div class=\"line\"><span class=\"attr\">  num_of_posts:</span> <span class=\"number\">10</span>  <span class=\"comment\"># min posts num is 1</span></div><div class=\"line\"><span class=\"attr\">  width:</span> <span class=\"number\">100</span>%       <span class=\"comment\"># default width is 550px</span></div><div class=\"line\"><span class=\"attr\">  scheme:</span> light     <span class=\"comment\"># default scheme is light (light or dark)</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#网站访问量统计http://busuanzi.ibruce.info/   http://ibruce.info/2015/04/04/busuanzi/  其中id=\"busuanzi_container_site_*v\"&gt;这句可以不要。 </span></div><div class=\"line\"><span class=\"comment\"># Show number of visitors to each article.   用leancloud做接口开启阅读计数功能</span></div><div class=\"line\"><span class=\"comment\">#文章阅读量统计：http://www.joryhe.com/2016-05-29-how_to_create_leancloud_read_Counter.html</span></div><div class=\"line\"><span class=\"comment\"># You can visit https://leancloud.cn get AppID and AppKey.</span></div><div class=\"line\"><span class=\"attr\">leancloud_visitors:</span></div><div class=\"line\"><span class=\"attr\">  enable:</span> <span class=\"literal\">true</span></div><div class=\"line\"><span class=\"attr\">  app_id:</span> zieuxKa4IjAP6VgxxvBe4vkj-gzGzoHsz</div><div class=\"line\"><span class=\"attr\">  app_key:</span> MHGN54IEuofFNV1AROiRkEoG</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Show PV/UV of the website/page with busuanzi.</span></div><div class=\"line\"><span class=\"comment\"># Get more information on http://ibruce.info/2015/04/04/busuanzi/</span></div><div class=\"line\"><span class=\"attr\">busuanzi_count:</span>     <span class=\"comment\">#不蒜子网站访问量统计</span></div><div class=\"line\">  <span class=\"comment\"># count values only if the other configs are false</span></div><div class=\"line\"><span class=\"attr\">  enable:</span> <span class=\"literal\">false</span></div><div class=\"line\">  <span class=\"comment\"># custom uv span for the whole site</span></div><div class=\"line\"><span class=\"attr\">  site_uv:</span> <span class=\"literal\">true</span></div><div class=\"line\"><span class=\"attr\">  site_uv_header:</span> &lt;i class=<span class=\"string\">\"fa fa-user\"</span>&gt;&lt;/i<span class=\"string\">&gt;</span></div><div class=\"line\"><span class=\"attr\">  site_uv_footer:</span></div><div class=\"line\">  <span class=\"comment\"># custom pv span for the whole site</span></div><div class=\"line\"><span class=\"attr\">  site_pv:</span> <span class=\"literal\">true</span></div><div class=\"line\"><span class=\"attr\">  site_pv_header:</span> &lt;i class=<span class=\"string\">\"fa fa-eye\"</span>&gt;&lt;/i<span class=\"string\">&gt;</span></div><div class=\"line\"><span class=\"attr\">  site_pv_footer:</span></div><div class=\"line\">  <span class=\"comment\"># custom pv span for one page only</span></div><div class=\"line\"><span class=\"attr\">  page_pv:</span> <span class=\"literal\">true</span></div><div class=\"line\"><span class=\"attr\">  page_pv_header:</span> &lt;i class=<span class=\"string\">\"fa fa-file-o\"</span>&gt;&lt;/i<span class=\"string\">&gt;</span></div><div class=\"line\"><span class=\"attr\">  page_pv_footer:</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Tencent analytics ID</span></div><div class=\"line\"><span class=\"comment\"># tencent_analytics:</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Enable baidu push so that the blog will push the url to baidu automatically which is very helpful for SEO</span></div><div class=\"line\"><span class=\"attr\">baidu_push:</span> <span class=\"literal\">true</span>   <span class=\"comment\">#百度链接提交，提高搜索排名</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Google Calendar</span></div><div class=\"line\"><span class=\"comment\"># Share your recent schedule to others via calendar page</span></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\"><span class=\"comment\"># API Documentation:</span></div><div class=\"line\"><span class=\"comment\"># https://developers.google.com/google-apps/calendar/v3/reference/events/list</span></div><div class=\"line\"><span class=\"attr\">calendar:</span></div><div class=\"line\"><span class=\"attr\">  enable:</span> <span class=\"literal\">false</span></div><div class=\"line\"><span class=\"attr\">  calendar_id:</span> &lt;required<span class=\"string\">&gt;</span></div><div class=\"line\"><span class=\"attr\">  api_key:</span> &lt;required<span class=\"string\">&gt;</span></div><div class=\"line\"><span class=\"attr\">  orderBy:</span> startTime</div><div class=\"line\"><span class=\"attr\">  offsetMax:</span> <span class=\"number\">24</span></div><div class=\"line\"><span class=\"attr\">  offsetMin:</span> <span class=\"number\">4</span></div><div class=\"line\"><span class=\"attr\">  timeZone:</span></div><div class=\"line\"><span class=\"attr\">  showDeleted:</span> <span class=\"literal\">false</span></div><div class=\"line\"><span class=\"attr\">  singleEvents:</span> <span class=\"literal\">true</span></div><div class=\"line\"><span class=\"attr\">  maxResults:</span> <span class=\"number\">250</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#! ---------------------------------------------------------------</span></div><div class=\"line\"><span class=\"comment\">#! DO NOT EDIT THE FOLLOWING SETTINGS</span></div><div class=\"line\"><span class=\"comment\">#! UNLESS YOU KNOW WHAT YOU ARE DOING</span></div><div class=\"line\"><span class=\"comment\">#! ---------------------------------------------------------------</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Motion</span></div><div class=\"line\"><span class=\"attr\">use_motion:</span> <span class=\"literal\">true</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Fancybox</span></div><div class=\"line\"><span class=\"attr\">fancybox:</span> <span class=\"literal\">true</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Script Vendors.</span></div><div class=\"line\"><span class=\"comment\"># Set a CDN address for the vendor you want to customize.</span></div><div class=\"line\"><span class=\"comment\"># For example</span></div><div class=\"line\"><span class=\"comment\">#    jquery: https://ajax.googleapis.com/ajax/libs/jquery/2.2.0/jquery.min.js</span></div><div class=\"line\"><span class=\"comment\"># Be aware that you should use the same version as internal ones to avoid potential problems.</span></div><div class=\"line\"><span class=\"comment\"># Please use the https protocol of CDN files when you enable https on your site.</span></div><div class=\"line\"><span class=\"attr\">vendors:</span></div><div class=\"line\">  <span class=\"comment\"># Internal path prefix. Please do not edit it.</span></div><div class=\"line\"><span class=\"attr\">  _internal:</span> vendors</div><div class=\"line\"></div><div class=\"line\">  <span class=\"comment\"># Internal version: 2.1.3</span></div><div class=\"line\"><span class=\"attr\">  jquery:</span></div><div class=\"line\"></div><div class=\"line\">  <span class=\"comment\"># Internal version: 2.1.5</span></div><div class=\"line\">  <span class=\"comment\"># See: http://fancyapps.com/fancybox/</span></div><div class=\"line\"><span class=\"attr\">  fancybox:</span></div><div class=\"line\"><span class=\"attr\">  fancybox_css:</span></div><div class=\"line\"></div><div class=\"line\">  <span class=\"comment\"># Internal version: 1.0.6</span></div><div class=\"line\">  <span class=\"comment\"># See: https://github.com/ftlabs/fastclick</span></div><div class=\"line\"><span class=\"attr\">  fastclick:</span></div><div class=\"line\"></div><div class=\"line\">  <span class=\"comment\"># Internal version: 1.9.7</span></div><div class=\"line\">  <span class=\"comment\"># See: https://github.com/tuupola/jquery_lazyload</span></div><div class=\"line\"><span class=\"attr\">  lazyload:</span></div><div class=\"line\"></div><div class=\"line\">  <span class=\"comment\"># Internal version: 1.2.1</span></div><div class=\"line\">  <span class=\"comment\"># See: http://VelocityJS.org</span></div><div class=\"line\"><span class=\"attr\">  velocity:</span></div><div class=\"line\"></div><div class=\"line\">  <span class=\"comment\"># Internal version: 1.2.1</span></div><div class=\"line\">  <span class=\"comment\"># See: http://VelocityJS.org</span></div><div class=\"line\"><span class=\"attr\">  velocity_ui:</span></div><div class=\"line\"></div><div class=\"line\">  <span class=\"comment\"># Internal version: 0.7.9</span></div><div class=\"line\">  <span class=\"comment\"># See: https://faisalman.github.io/ua-parser-js/</span></div><div class=\"line\"><span class=\"attr\">  ua_parser:</span></div><div class=\"line\"></div><div class=\"line\">  <span class=\"comment\"># Internal version: 4.4.0</span></div><div class=\"line\">  <span class=\"comment\"># See: http://fontawesome.io/</span></div><div class=\"line\"><span class=\"attr\">  fontawesome:</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># 多说热评文章功能</span></div><div class=\"line\"><span class=\"attr\">duoshuo_hotartical:</span> <span class=\"literal\">true</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Assets</span></div><div class=\"line\"><span class=\"attr\">css:</span> css</div><div class=\"line\"><span class=\"attr\">js:</span> js</div><div class=\"line\"><span class=\"attr\">images:</span> images</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Theme version</span></div><div class=\"line\"><span class=\"attr\">version:</span> <span class=\"number\">5.0</span><span class=\"number\">.2</span></div></pre></td></tr></table></figure></p>\n<h2 id=\"配置文件设置\"><a href=\"#配置文件设置\" class=\"headerlink\" title=\"配置文件设置\"></a>配置文件设置</h2><p>以下是我的配置文件：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># Hexo Configuration</span></div><div class=\"line\"><span class=\"comment\">## Docs: https://hexo.io/docs/configuration.html</span></div><div class=\"line\"><span class=\"comment\">## Source: https://github.com/hexojs/hexo/</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Site</span></div><div class=\"line\"><span class=\"attr\">title:</span> Leo Lan的博客</div><div class=\"line\"><span class=\"attr\">subtitle:</span>  有时候正是不报期望的人做出了人们不敢期望的事！</div><div class=\"line\"><span class=\"attr\">description:</span> Better late than never</div><div class=\"line\"><span class=\"attr\">author:</span> Leo Lan</div><div class=\"line\"><span class=\"attr\">language:</span> zh-Hans</div><div class=\"line\"><span class=\"attr\">timezone:</span> Asia/Shanghai</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># URL</span></div><div class=\"line\"><span class=\"comment\">## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'</span></div><div class=\"line\"><span class=\"attr\">url:</span> http://leolan.top</div><div class=\"line\"><span class=\"attr\">coding_url:</span> http://leolan.top</div><div class=\"line\"><span class=\"attr\">root:</span> /</div><div class=\"line\"><span class=\"attr\">permalink:</span> :year/:month/:day/:title/</div><div class=\"line\"><span class=\"attr\">permalink_defaults:</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Directory</span></div><div class=\"line\"><span class=\"attr\">source_dir:</span> source</div><div class=\"line\"><span class=\"attr\">public_dir:</span> public</div><div class=\"line\"><span class=\"attr\">tag_dir:</span> tags</div><div class=\"line\"><span class=\"attr\">archive_dir:</span> archives</div><div class=\"line\"><span class=\"attr\">category_dir:</span> categories</div><div class=\"line\"><span class=\"attr\">code_dir:</span> downloads/code</div><div class=\"line\"><span class=\"attr\">i18n_dir:</span> :lang</div><div class=\"line\"><span class=\"attr\">skip_render:</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Writing  官网：https://hexo.io/zh-cn/docs/writing.html</span></div><div class=\"line\"><span class=\"attr\">new_post_name:</span> :year-:month-:day-:title.md <span class=\"comment\"># File name of new posts</span></div><div class=\"line\"><span class=\"attr\">default_layout:</span> post</div><div class=\"line\"><span class=\"attr\">titlecase:</span> <span class=\"literal\">false</span> <span class=\"comment\"># Transform title into titlecase</span></div><div class=\"line\"><span class=\"attr\">external_link:</span> <span class=\"literal\">true</span> <span class=\"comment\"># Open external links in new tab</span></div><div class=\"line\"><span class=\"attr\">filename_case:</span> <span class=\"number\">0</span></div><div class=\"line\"><span class=\"attr\">render_drafts:</span> <span class=\"literal\">false</span></div><div class=\"line\"><span class=\"attr\">post_asset_folder:</span> <span class=\"literal\">false</span></div><div class=\"line\"><span class=\"attr\">relative_link:</span> <span class=\"literal\">false</span></div><div class=\"line\"><span class=\"attr\">future:</span> <span class=\"literal\">true</span></div><div class=\"line\"><span class=\"attr\">highlight:</span></div><div class=\"line\"><span class=\"attr\">  enable:</span> <span class=\"literal\">true</span></div><div class=\"line\"><span class=\"attr\">  line_number:</span> <span class=\"literal\">true</span></div><div class=\"line\"><span class=\"attr\">  auto_detect:</span> <span class=\"literal\">true</span></div><div class=\"line\"><span class=\"attr\">  tab_replace:</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Category &amp; Tag</span></div><div class=\"line\"><span class=\"attr\">default_category:</span> uncategorized</div><div class=\"line\"><span class=\"attr\">category_map:</span></div><div class=\"line\"><span class=\"attr\">tag_map:</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Date / Time format</span></div><div class=\"line\"><span class=\"comment\">## Hexo uses Moment.js to parse and display date</span></div><div class=\"line\"><span class=\"comment\">## You can customize the date format as defined in</span></div><div class=\"line\"><span class=\"comment\">## http://momentjs.com/docs/#/displaying/format/</span></div><div class=\"line\"><span class=\"attr\">date_format:</span> YYYY-MM-DD</div><div class=\"line\"><span class=\"attr\">time_format:</span> HH:mm:ss</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Pagination</span></div><div class=\"line\"><span class=\"comment\">## Set per_page to 0 to disable pagination</span></div><div class=\"line\"><span class=\"attr\">per_page:</span> <span class=\"number\">15</span></div><div class=\"line\"><span class=\"attr\">pagination_dir:</span> page</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Extensions</span></div><div class=\"line\"><span class=\"comment\">## Plugins: https://hexo.io/plugins/</span></div><div class=\"line\"><span class=\"comment\">## Themes: https://hexo.io/themes/</span></div><div class=\"line\"><span class=\"attr\">theme:</span> next</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Deployment部署</span></div><div class=\"line\"><span class=\"comment\">## 官方文档Docs: https://hexo.io/docs/deployment.html   有部署到各种服务器的方法</span></div><div class=\"line\"><span class=\"comment\">## 参考：http://www.lxway.com/240950852.htm</span></div><div class=\"line\"><span class=\"comment\">#不管是github还是coding，type都填写git</span></div><div class=\"line\"><span class=\"comment\">#这里同事部署到Github和Coding上，在域名解析中设置国内IP访问Coding，国外IP访问Github。</span></div><div class=\"line\"><span class=\"comment\">#自动部署需要安装deployer-git插件：npm install hexo-deployer-git --save</span></div><div class=\"line\"><span class=\"attr\">deploy:</span></div><div class=\"line\"><span class=\"attr\">- type:</span> git</div><div class=\"line\"><span class=\"attr\">  repo:</span> git@git.coding.net:leolan/leolan.git,master  <span class=\"comment\">#注意你的分支是什么</span></div><div class=\"line\"><span class=\"attr\">- type:</span> git</div><div class=\"line\"><span class=\"attr\">  repo:</span> git@github.com:MyLeoLan/blog.git,master</div><div class=\"line\"><span class=\"comment\">#deploy:</span></div><div class=\"line\"><span class=\"comment\">#- type: git</span></div><div class=\"line\"><span class=\"comment\">#  repo:</span></div><div class=\"line\"><span class=\"comment\">#- type: heroku（另一种云平台）</span></div><div class=\"line\"><span class=\"comment\">#  repo:</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Disqus #Disqus评论系统</span></div><div class=\"line\"><span class=\"attr\">disqus_shortname:</span> leolan</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#plugins: #插件，例如生成 RSS 和站点地图的</span></div><div class=\"line\"><span class=\"comment\">#hexo-generator-sitemap</span></div><div class=\"line\"><span class=\"comment\">#- hexo-generator-baidu-sitemap</span></div><div class=\"line\"><span class=\"attr\">plugins:</span></div><div class=\"line\">  hexo-generator-feed</div><div class=\"line\">  hexo-generator-baidu-sitemap</div><div class=\"line\"></div><div class=\"line\"><span class=\"attr\">sitemap:</span></div><div class=\"line\"><span class=\"attr\">  path:</span> sitemap.xml    </div><div class=\"line\"><span class=\"attr\">baidusitemap:</span></div><div class=\"line\"><span class=\"attr\">  baidupath:</span> baidusitemap.xml</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Social links  社交链接</span></div><div class=\"line\"><span class=\"attr\">social:</span></div><div class=\"line\"><span class=\"attr\">  GitHub:</span> https://github.com/myleolan</div><div class=\"line\"><span class=\"attr\">  Coding:</span> https://coding.net/u/leolan</div><div class=\"line\"><span class=\"attr\">  CSDN:</span> http://blog.csdn.net/lan842632</div><div class=\"line\"><span class=\"attr\">  OSchina:</span> https://my.oschina.net/leolan/blog</div><div class=\"line\">  <span class=\"comment\">#Twitter: https://twitter.com/lmintlcx</span></div><div class=\"line\">  <span class=\"comment\">#Zhihu: http://www.zhihu.com/people/lmintlcx</span></div><div class=\"line\">  <span class=\"comment\">#Douban: http://www.douban.com/people/lmintlcx</span></div><div class=\"line\">  <span class=\"comment\">#Weibo: http://weibo.com/u/3233729080</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"attr\">duoshuo_shortname:</span> leolan</div><div class=\"line\"><span class=\"comment\"># 多说热评文章 true 或者 false</span></div><div class=\"line\"><span class=\"attr\">duoshuo_hotartical:</span> <span class=\"literal\">true</span></div><div class=\"line\"><span class=\"comment\"># 多说分享服务</span></div><div class=\"line\"><span class=\"attr\">duoshuo_share:</span> <span class=\"literal\">true</span></div><div class=\"line\"><span class=\"comment\"># 百度分享服务</span></div><div class=\"line\"><span class=\"attr\">baidushare:</span> <span class=\"literal\">true</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#打赏功能</span></div><div class=\"line\"><span class=\"attr\">reward_comment:</span> 您的支持将鼓励我继续创作,非常感谢！</div><div class=\"line\"><span class=\"attr\">wechatpay:</span> http://ofyfogrgx.bkt.clouddn.com/%E5%BE%AE%E4%BF%A1%E6%<span class=\"number\">94</span>%B6%E6%AC%BE1.png</div><div class=\"line\"><span class=\"attr\">alipay:</span> http://ofyfogrgx.bkt.clouddn.com/%E6%<span class=\"number\">94</span>%AF%E4%BB%<span class=\"number\">98</span>%E5%AE%<span class=\"number\">9</span>D%E6%<span class=\"number\">94</span>%B6%E6%AC%BE01.jpg</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#站点建立时间</span></div><div class=\"line\"><span class=\"attr\">since:</span> <span class=\"number\">2016</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#百度分析</span></div><div class=\"line\"><span class=\"attr\">baidu_analytics:</span> dc0e85252eeff3a87aa87f35d92a8d33</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#本地搜索</span></div><div class=\"line\"><span class=\"attr\">search:</span></div><div class=\"line\"><span class=\"attr\">  path:</span> search.xml</div><div class=\"line\"><span class=\"attr\">  field:</span> post</div><div class=\"line\"><span class=\"attr\">  format:</span> html</div><div class=\"line\"><span class=\"attr\">  limit:</span> <span class=\"number\">10000</span></div></pre></td></tr></table></figure>\n<h2 id=\"安装插件\"><a href=\"#安装插件\" class=\"headerlink\" title=\"安装插件\"></a>安装插件</h2><p>hexo支持插件，可以直接通过命令行安装即可：<code>npm install **plugin-name** --save</code><br>更新插件<br><code>npm update</code><br>卸载插件<br><code>npm uninstall **plugin-name**</code><br>下面推荐几个常用的插件：<br>feed插件:<code>npm install hexo-generator-feed --save</code><br>站点地图:<code>npm install hexo-generator-sitemap --save</code><br>百度站点地图:<code>npm install hexo-generator-baidu-sitemap --save</code><br>文章字数统计：<a href=\"http://www.joryhe.com/2016-06-06-hexo_wordcount_setting_your_post.html\" target=\"_blank\" rel=\"external\">http://www.joryhe.com/2016-06-06-hexo_wordcount_setting_your_post.html</a></p>\n<hr>\n<h1 id=\"部署\"><a href=\"#部署\" class=\"headerlink\" title=\"部署\"></a>部署</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">cd</span> your_site/</div><div class=\"line\">touch Staticfile  <span class=\"comment\">#创建静态文件标识，用于Github识别，名字必须是Staticfile</span></div><div class=\"line\">hexo clean   <span class=\"comment\">#清除以前生成的旧文件</span></div><div class=\"line\">hexo g       <span class=\"comment\">#生成新的站点文件</span></div><div class=\"line\">hexo d       <span class=\"comment\">#部署到Github上</span></div></pre></td></tr></table></figure>\n<p>可参考：<a href=\"http://shomy.top/2016/03/03/hexo-in-coding-github/\" target=\"_blank\" rel=\"external\">http://shomy.top/2016/03/03/hexo-in-coding-github/</a><br>部署完成打开网址就能看到效果了。</p>\n<p>Hexo的部署只会把生成的文件上传到仓库中，本地的<strong>设置，主题，*.md文件</strong>等等都不会上传，换一台电脑就没法干活了，一旦删除，那基本上所有的努力都白费了，这里介绍2种备份方法：</p>\n<ul>\n<li>1.新建一个仓库专门用来存放这些文件（最安全最方便的办法）</li>\n<li>2.和发布的网站使用同一个仓库，master用来存放这些文件，新建分支来发布网站（注意pages服务绑定该分支，不要合并分支，一旦合并就全部混乱了）<br>两种方法都要在网站根目录设定好远程端仓库：<code>git add remote XXXX</code><br>每次发布完网页，就顺手执行以下代码，把文档也同步到仓库中。<figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">git <span class=\"keyword\">add</span><span class=\"bash\"> .</span></div><div class=\"line\">git commit -m <span class=\"string\">\"xxx\"</span></div><div class=\"line\">git push</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n<h1 id=\"绑定域名\"><a href=\"#绑定域名\" class=\"headerlink\" title=\"绑定域名\"></a>绑定域名</h1><p>原理和博客绑定域名是一样的</p>\n<ul>\n<li>1· 在你的项目下新建一个<strong>CNAME</strong>文件，注意没有后缀名。在里面添加你的域名，如我的就是<strong> leolan.top</strong>，然后推送<strong>CNAME文件</strong>到远程仓库。（方法二是直接在pages页上找到域名绑定设置，最好同时绑定如：<strong>leolan.top</strong>和<strong>www.leolan.top</strong>,少绑一个，没绑的那个打不开）</li>\n<li>2· 到域名服务商那里增加你的CNAME记录。添加两条记录，@和www的主机记录，记录类型为CNAME，记录值为 <code>username.github.io.</code>，重要的是 io 后面还有一个原点（看官方帮助文档Coding的就不用加点），切记。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E5%9F%9F%E5%90%8D%E7%BB%91%E5%AE%9A.png\" alt=\"\"><br>过几分钟，刷新网页，就能直接用域名访问了，因为是在项目内建的<strong>CNAME</strong>文件，所以域名直接指向此项目文件夹，其他项目可以用其他域名设定。</li>\n</ul>\n<hr>\n<h1 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h1><p><a href=\"http://www.joryhe.com/tags/hexo/\" target=\"_blank\" rel=\"external\">Hexo</a> 　　　 <a href=\"http://www.ezlippi.com/blog/2016/02/jekyll-to-hexo.html\" target=\"_blank\" rel=\"external\">Jekyll迁移到Hexo</a></p>\n<hr>\n","excerpt":"","more":"<h1 id=\"安装Hexo\"><a href=\"#安装Hexo\" class=\"headerlink\" title=\"安装Hexo\"></a>安装Hexo</h1><p>Hexo是用node-js写的，hexo生成静态页面的速度要比较快，hexo是本地生成html再上传。</p>\n<h2 id=\"安装Node-js\"><a href=\"#安装Node-js\" class=\"headerlink\" title=\"安装Node.js\"></a>安装Node.js</h2><p>官网下载对应平台安装包安装：<a href=\"https://nodejs.org\">https://nodejs.org</a><br>详见：<a href=\"http://leolan.top/2016/11/02/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA-2016-11-02-Node-js%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/\">Node.js开发环境搭建</a></p>\n<h2 id=\"安装Hexo-1\"><a href=\"#安装Hexo-1\" class=\"headerlink\" title=\"安装Hexo\"></a>安装Hexo</h2><figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm <span class=\"keyword\">install </span>-g hexo-cli  <span class=\"comment\">#Mac下西安**sudo -i**切换到root权限。</span></div><div class=\"line\">hexo init <span class=\"keyword\">blog </span>          <span class=\"comment\">#blog文件夹要先建好，这一步自动生成网站。</span></div><div class=\"line\">cd <span class=\"keyword\">blog</div><div class=\"line\"></span>npm <span class=\"keyword\">install </span>             <span class=\"comment\">#安装依赖的插件。</span></div><div class=\"line\">hexo server              <span class=\"comment\">#运行服务</span></div></pre></td></tr></table></figure>\n<p>这时可以在浏览器打开网页。<code>hexo server</code>的简化命令为<code>hexo s</code>；指定端口：<code>-p xxxx</code><br>和jekyll一样是通过修改<strong>_config.yml</strong>文件来配置站点信息的。（在Hexo中，根目录下的<strong>_config.yml</strong>文件是用来配置网站信息的；主题目录下的<strong>_config.yml</strong>文件是用来配置文章主题，页面等等的）</p>\n<p>默认的目录结构如下：</p>\n<figure class=\"highlight haxe\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">├── .deploy       <span class=\"meta\">#执行hexo deploy命令部署到GitHub上的内容目录</span></div><div class=\"line\">├── <span class=\"keyword\">public</span>        <span class=\"meta\">#执行hexo generate命令，输出的静态网页内容目录</span></div><div class=\"line\">├── scaffolds     <span class=\"meta\">#layout模板文件目录，其中的md文件可以添加编辑</span></div><div class=\"line\">├── scripts       <span class=\"meta\">#扩展脚本目录，这里可以自定义一些javascript脚本</span></div><div class=\"line\">├── source        <span class=\"meta\">#文章源码目录，该目录下的markdown和html文件均会被hexo处理。404文件，CNAME文件等都应该放这里。</span></div><div class=\"line\">| ├── _drafts     <span class=\"meta\">#草稿文章</span></div><div class=\"line\">| └── _posts      <span class=\"meta\">#发布的文章</span></div><div class=\"line\">├── themes        <span class=\"meta\">#主题文件目录</span></div><div class=\"line\">├── _config.yml   <span class=\"meta\">#全局配置文件，大多数的设置都在这里</span></div><div class=\"line\">└── <span class=\"keyword\">package</span>.json  <span class=\"meta\">#应用程序数据，指明hexo的版本等信息。在push到github时提示*.json错误，删掉这个文件或删掉db.json就行。</span></div></pre></td></tr></table></figure>\n<hr>\n<h1 id=\"配置优化、美化站点\"><a href=\"#配置优化、美化站点\" class=\"headerlink\" title=\"配置优化、美化站点\"></a>配置优化、美化站点</h1><p>Next官方设置说明：<a href=\"http://theme-next.iissnan.com/getting-started.html\">http://theme-next.iissnan.com/getting-started.html</a></p>\n<h2 id=\"主题部分\"><a href=\"#主题部分\" class=\"headerlink\" title=\"主题部分\"></a>主题部分</h2><p>推荐Next主题，简单简洁，官网：<a href=\"http://theme-next.iissnan.com/\">http://theme-next.iissnan.com/</a><br>安装最新版：<br><figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">cd</span> your-hexo-site</div><div class=\"line\">git clone http<span class=\"variable\">s:</span>//github.<span class=\"keyword\">com</span>/iissnan/hexo-theme-<span class=\"keyword\">next</span> themes/<span class=\"keyword\">next</span></div></pre></td></tr></table></figure></p>\n<p>在主题目录下可以看到next文件夹，修改<strong>站点配置文件_config.yml</strong>中的<code>theme: next</code><br><code>hexo clean &amp;&amp; hexo s</code>就可以看到新主题生效啦！<br>接下来修改<strong>主题配置文件_config.yml</strong>，以下是我的配置。<br><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div><div class=\"line\">151</div><div class=\"line\">152</div><div class=\"line\">153</div><div class=\"line\">154</div><div class=\"line\">155</div><div class=\"line\">156</div><div class=\"line\">157</div><div class=\"line\">158</div><div class=\"line\">159</div><div class=\"line\">160</div><div class=\"line\">161</div><div class=\"line\">162</div><div class=\"line\">163</div><div class=\"line\">164</div><div class=\"line\">165</div><div class=\"line\">166</div><div class=\"line\">167</div><div class=\"line\">168</div><div class=\"line\">169</div><div class=\"line\">170</div><div class=\"line\">171</div><div class=\"line\">172</div><div class=\"line\">173</div><div class=\"line\">174</div><div class=\"line\">175</div><div class=\"line\">176</div><div class=\"line\">177</div><div class=\"line\">178</div><div class=\"line\">179</div><div class=\"line\">180</div><div class=\"line\">181</div><div class=\"line\">182</div><div class=\"line\">183</div><div class=\"line\">184</div><div class=\"line\">185</div><div class=\"line\">186</div><div class=\"line\">187</div><div class=\"line\">188</div><div class=\"line\">189</div><div class=\"line\">190</div><div class=\"line\">191</div><div class=\"line\">192</div><div class=\"line\">193</div><div class=\"line\">194</div><div class=\"line\">195</div><div class=\"line\">196</div><div class=\"line\">197</div><div class=\"line\">198</div><div class=\"line\">199</div><div class=\"line\">200</div><div class=\"line\">201</div><div class=\"line\">202</div><div class=\"line\">203</div><div class=\"line\">204</div><div class=\"line\">205</div><div class=\"line\">206</div><div class=\"line\">207</div><div class=\"line\">208</div><div class=\"line\">209</div><div class=\"line\">210</div><div class=\"line\">211</div><div class=\"line\">212</div><div class=\"line\">213</div><div class=\"line\">214</div><div class=\"line\">215</div><div class=\"line\">216</div><div class=\"line\">217</div><div class=\"line\">218</div><div class=\"line\">219</div><div class=\"line\">220</div><div class=\"line\">221</div><div class=\"line\">222</div><div class=\"line\">223</div><div class=\"line\">224</div><div class=\"line\">225</div><div class=\"line\">226</div><div class=\"line\">227</div><div class=\"line\">228</div><div class=\"line\">229</div><div class=\"line\">230</div><div class=\"line\">231</div><div class=\"line\">232</div><div class=\"line\">233</div><div class=\"line\">234</div><div class=\"line\">235</div><div class=\"line\">236</div><div class=\"line\">237</div><div class=\"line\">238</div><div class=\"line\">239</div><div class=\"line\">240</div><div class=\"line\">241</div><div class=\"line\">242</div><div class=\"line\">243</div><div class=\"line\">244</div><div class=\"line\">245</div><div class=\"line\">246</div><div class=\"line\">247</div><div class=\"line\">248</div><div class=\"line\">249</div><div class=\"line\">250</div><div class=\"line\">251</div><div class=\"line\">252</div><div class=\"line\">253</div><div class=\"line\">254</div><div class=\"line\">255</div><div class=\"line\">256</div><div class=\"line\">257</div><div class=\"line\">258</div><div class=\"line\">259</div><div class=\"line\">260</div><div class=\"line\">261</div><div class=\"line\">262</div><div class=\"line\">263</div><div class=\"line\">264</div><div class=\"line\">265</div><div class=\"line\">266</div><div class=\"line\">267</div><div class=\"line\">268</div><div class=\"line\">269</div><div class=\"line\">270</div><div class=\"line\">271</div><div class=\"line\">272</div><div class=\"line\">273</div><div class=\"line\">274</div><div class=\"line\">275</div><div class=\"line\">276</div><div class=\"line\">277</div><div class=\"line\">278</div><div class=\"line\">279</div><div class=\"line\">280</div><div class=\"line\">281</div><div class=\"line\">282</div><div class=\"line\">283</div><div class=\"line\">284</div><div class=\"line\">285</div><div class=\"line\">286</div><div class=\"line\">287</div><div class=\"line\">288</div><div class=\"line\">289</div><div class=\"line\">290</div><div class=\"line\">291</div><div class=\"line\">292</div><div class=\"line\">293</div><div class=\"line\">294</div><div class=\"line\">295</div><div class=\"line\">296</div><div class=\"line\">297</div><div class=\"line\">298</div><div class=\"line\">299</div><div class=\"line\">300</div><div class=\"line\">301</div><div class=\"line\">302</div><div class=\"line\">303</div><div class=\"line\">304</div><div class=\"line\">305</div><div class=\"line\">306</div><div class=\"line\">307</div><div class=\"line\">308</div><div class=\"line\">309</div><div class=\"line\">310</div><div class=\"line\">311</div><div class=\"line\">312</div><div class=\"line\">313</div><div class=\"line\">314</div><div class=\"line\">315</div><div class=\"line\">316</div><div class=\"line\">317</div><div class=\"line\">318</div><div class=\"line\">319</div><div class=\"line\">320</div><div class=\"line\">321</div><div class=\"line\">322</div><div class=\"line\">323</div><div class=\"line\">324</div><div class=\"line\">325</div><div class=\"line\">326</div><div class=\"line\">327</div><div class=\"line\">328</div><div class=\"line\">329</div><div class=\"line\">330</div><div class=\"line\">331</div><div class=\"line\">332</div><div class=\"line\">333</div><div class=\"line\">334</div><div class=\"line\">335</div><div class=\"line\">336</div><div class=\"line\">337</div><div class=\"line\">338</div><div class=\"line\">339</div><div class=\"line\">340</div><div class=\"line\">341</div><div class=\"line\">342</div><div class=\"line\">343</div><div class=\"line\">344</div><div class=\"line\">345</div><div class=\"line\">346</div><div class=\"line\">347</div><div class=\"line\">348</div><div class=\"line\">349</div><div class=\"line\">350</div><div class=\"line\">351</div><div class=\"line\">352</div><div class=\"line\">353</div><div class=\"line\">354</div><div class=\"line\">355</div><div class=\"line\">356</div><div class=\"line\">357</div><div class=\"line\">358</div><div class=\"line\">359</div><div class=\"line\">360</div><div class=\"line\">361</div><div class=\"line\">362</div><div class=\"line\">363</div><div class=\"line\">364</div><div class=\"line\">365</div><div class=\"line\">366</div><div class=\"line\">367</div><div class=\"line\">368</div><div class=\"line\">369</div><div class=\"line\">370</div><div class=\"line\">371</div><div class=\"line\">372</div><div class=\"line\">373</div><div class=\"line\">374</div><div class=\"line\">375</div><div class=\"line\">376</div><div class=\"line\">377</div><div class=\"line\">378</div><div class=\"line\">379</div><div class=\"line\">380</div><div class=\"line\">381</div><div class=\"line\">382</div><div class=\"line\">383</div><div class=\"line\">384</div><div class=\"line\">385</div><div class=\"line\">386</div><div class=\"line\">387</div><div class=\"line\">388</div><div class=\"line\">389</div><div class=\"line\">390</div><div class=\"line\">391</div><div class=\"line\">392</div><div class=\"line\">393</div><div class=\"line\">394</div><div class=\"line\">395</div><div class=\"line\">396</div><div class=\"line\">397</div><div class=\"line\">398</div><div class=\"line\">399</div><div class=\"line\">400</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># ---------------------------------------------------------------</span></div><div class=\"line\"><span class=\"comment\"># Site Information Settings</span></div><div class=\"line\"><span class=\"comment\"># ---------------------------------------------------------------</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Put your favicon.ico into `hexo-site/source/` directory.</span></div><div class=\"line\"><span class=\"attr\">favicon:</span> /<span class=\"number\">200.</span>png    <span class=\"comment\">#头像</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Set default keywords (Use a comma to separate)</span></div><div class=\"line\"><span class=\"attr\">keywords:</span> <span class=\"string\">\"Hexo, NexT\"</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Set rss to false to disable feed link.</span></div><div class=\"line\"><span class=\"comment\"># Leave rss as empty to use site's feed link.</span></div><div class=\"line\"><span class=\"comment\"># Set rss to specific value if you have burned your feed already.</span></div><div class=\"line\"><span class=\"attr\">rss:</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Specify the date when the site was setup</span></div><div class=\"line\"><span class=\"comment\">#since: 2015</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Canonical, set a canonical link tag in your hexo, you could use it for your SEO of blog.</span></div><div class=\"line\"><span class=\"comment\"># See: https://support.google.com/webmasters/answer/139066</span></div><div class=\"line\"><span class=\"comment\"># Tips: Before you open this tag, remeber set up your URL in hexo _config.yml ( ex. url: http://yourdomain.com )</span></div><div class=\"line\"><span class=\"attr\">canonical:</span> <span class=\"literal\">true</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># ---------------------------------------------------------------</span></div><div class=\"line\"><span class=\"comment\"># Menu Settings</span></div><div class=\"line\"><span class=\"comment\"># ---------------------------------------------------------------</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># When running the site in a subdirectory (e.g. domain.tld/blog), remove the leading slash (/archives -&gt; archives)</span></div><div class=\"line\"><span class=\"attr\">menu:</span>       <span class=\"comment\">#侧边栏显示的菜单，**：**后面对应相应的目录，里面**自建index.md**文件</span></div><div class=\"line\"><span class=\"attr\">  home:</span> /</div><div class=\"line\"><span class=\"attr\">  categories:</span> /categories</div><div class=\"line\"><span class=\"attr\">  tags:</span> /tags</div><div class=\"line\"><span class=\"attr\">  archives:</span> /archives</div><div class=\"line\"><span class=\"attr\">  about:</span> /about</div><div class=\"line\"> <span class=\"comment\"># schedule: /schedule</span></div><div class=\"line\">  <span class=\"comment\">#commonweal: /404.html</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Enable/Disable menu icons.</span></div><div class=\"line\"><span class=\"comment\"># Icon Mapping:</span></div><div class=\"line\"><span class=\"comment\">#   Map a menu item to a specific FontAwesome icon name.</span></div><div class=\"line\"><span class=\"comment\">#   Key is the name of menu item and value is the name of FontAwsome icon. Key is case-senstive.</span></div><div class=\"line\"><span class=\"comment\">#   When an question mask icon presenting up means that the item has no mapping icon.</span></div><div class=\"line\"><span class=\"attr\">menu_icons:</span>     <span class=\"comment\">#侧边栏菜单的图标</span></div><div class=\"line\"><span class=\"attr\">  enable:</span> <span class=\"literal\">true</span></div><div class=\"line\">  <span class=\"comment\">#KeyMapsToMenuItemKey: NameOfTheIconFromFontAwesome</span></div><div class=\"line\"><span class=\"attr\">  home:</span> home</div><div class=\"line\"><span class=\"attr\">  about:</span> user</div><div class=\"line\"><span class=\"attr\">  categories:</span> th</div><div class=\"line\"><span class=\"attr\">  schedule:</span> calendar</div><div class=\"line\"><span class=\"attr\">  tags:</span> tags</div><div class=\"line\"><span class=\"attr\">  archives:</span> archive</div><div class=\"line\"><span class=\"attr\">  commonweal:</span> heartbeat</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># ---------------------------------------------------------------</span></div><div class=\"line\"><span class=\"comment\"># Scheme Settings</span></div><div class=\"line\"><span class=\"comment\"># ---------------------------------------------------------------</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Schemes 主题有3总样式，Muse，Mist，Pisces选择一种，其他注释掉</span></div><div class=\"line\"><span class=\"comment\">#scheme: Muse</span></div><div class=\"line\"><span class=\"comment\">#scheme: Mist</span></div><div class=\"line\"><span class=\"attr\">scheme:</span> Pisces</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># ---------------------------------------------------------------</span></div><div class=\"line\"><span class=\"comment\"># Font Settings</span></div><div class=\"line\"><span class=\"comment\"># - Find fonts on Google Fonts (https://www.google.com/fonts)</span></div><div class=\"line\"><span class=\"comment\"># - All fonts set here will have the following styles:</span></div><div class=\"line\"><span class=\"comment\">#     light, light italic, normal, normal intalic, bold, bold italic</span></div><div class=\"line\"><span class=\"comment\"># - Be aware that setting too much fonts will cause site running slowly</span></div><div class=\"line\"><span class=\"comment\"># - Introduce in 5.0.1</span></div><div class=\"line\"><span class=\"comment\"># ---------------------------------------------------------------</span></div><div class=\"line\"><span class=\"attr\">font:</span></div><div class=\"line\"><span class=\"attr\">  enable:</span> <span class=\"literal\">true</span></div><div class=\"line\"></div><div class=\"line\">  <span class=\"comment\"># Uri of fonts host. E.g. //fonts.googleapis.com (Default) 慢的话搜索fonts.googleapis.com即可找到替换地址</span></div><div class=\"line\"><span class=\"attr\">  host:</span> fonts.css.network   <span class=\"comment\">#css字体加速</span></div><div class=\"line\"></div><div class=\"line\">  <span class=\"comment\"># Global font settings used on &lt;body&gt; element.</span></div><div class=\"line\"><span class=\"attr\">  global:</span></div><div class=\"line\">    <span class=\"comment\"># external: true will load this font family from host.</span></div><div class=\"line\"><span class=\"attr\">    external:</span> <span class=\"literal\">true</span></div><div class=\"line\"><span class=\"attr\">    family:</span> Lato</div><div class=\"line\"></div><div class=\"line\">  <span class=\"comment\"># Font settings for Headlines (h1, h2, h3, h4, h5, h6)</span></div><div class=\"line\">  <span class=\"comment\"># Fallback to `global` font settings.</span></div><div class=\"line\"><span class=\"attr\">  headings:</span></div><div class=\"line\"><span class=\"attr\">    external:</span> <span class=\"literal\">true</span></div><div class=\"line\"><span class=\"attr\">    family:</span></div><div class=\"line\"></div><div class=\"line\">  <span class=\"comment\"># Font settings for posts</span></div><div class=\"line\">  <span class=\"comment\"># Fallback to `global` font settings.</span></div><div class=\"line\"><span class=\"attr\">  posts:</span></div><div class=\"line\"><span class=\"attr\">    external:</span> <span class=\"literal\">true</span></div><div class=\"line\"><span class=\"attr\">    family:</span></div><div class=\"line\"></div><div class=\"line\">  <span class=\"comment\"># Font settings for Logo</span></div><div class=\"line\">  <span class=\"comment\"># Fallback to `global` font settings.</span></div><div class=\"line\">  <span class=\"comment\"># The `size` option use `px` as unit</span></div><div class=\"line\"><span class=\"attr\">  logo:</span></div><div class=\"line\"><span class=\"attr\">    external:</span> <span class=\"literal\">true</span></div><div class=\"line\"><span class=\"attr\">    family:</span></div><div class=\"line\"><span class=\"attr\">    size:</span></div><div class=\"line\"></div><div class=\"line\">  <span class=\"comment\"># Font settings for &lt;code&gt; and code blocks.</span></div><div class=\"line\"><span class=\"attr\">  codes:</span></div><div class=\"line\"><span class=\"attr\">    external:</span> <span class=\"literal\">true</span></div><div class=\"line\"><span class=\"attr\">    family:</span></div><div class=\"line\"><span class=\"attr\">    size:</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># ---------------------------------------------------------------</span></div><div class=\"line\"><span class=\"comment\"># Sidebar Settings</span></div><div class=\"line\"><span class=\"comment\"># ---------------------------------------------------------------</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Social Links</span></div><div class=\"line\"><span class=\"comment\"># Key is the link label showing to end users.</span></div><div class=\"line\"><span class=\"comment\"># Value is the target link (E.g. GitHub: https://github.com/iissnan)</span></div><div class=\"line\"><span class=\"comment\">#social:</span></div><div class=\"line\"><span class=\"comment\">#LinkLabel: Link</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Social Links Icons</span></div><div class=\"line\"><span class=\"comment\"># Icon Mapping:</span></div><div class=\"line\"><span class=\"comment\">#   Map a menu item to a specific FontAwesome icon name.</span></div><div class=\"line\"><span class=\"comment\">#   Key is the name of the item and value is the name of FontAwsome icon. Key is case-senstive.</span></div><div class=\"line\"><span class=\"comment\">#   When an globe mask icon presenting up means that the item has no mapping icon.</span></div><div class=\"line\"><span class=\"attr\">social_icons:</span></div><div class=\"line\"><span class=\"attr\">  enable:</span> <span class=\"literal\">true</span></div><div class=\"line\">  <span class=\"comment\"># Icon Mappings.</span></div><div class=\"line\">  <span class=\"comment\"># KeyMapsToSocalItemKey: NameOfTheIconFromFontAwesome</span></div><div class=\"line\"><span class=\"attr\">  GitHub:</span> github</div><div class=\"line\"><span class=\"attr\">  Twitter:</span> twitter</div><div class=\"line\"><span class=\"attr\">  Weibo:</span> weibo</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Sidebar Avatar</span></div><div class=\"line\"><span class=\"comment\"># in theme directory(source/images): /images/avatar.jpg</span></div><div class=\"line\"><span class=\"comment\"># in site  directory(source/uploads): /uploads/avatar.jpg</span></div><div class=\"line\"><span class=\"attr\">avatar:</span> /images/avatar.jpg</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Table Of Contents in the Sidebar</span></div><div class=\"line\"><span class=\"attr\">toc:</span></div><div class=\"line\"><span class=\"attr\">  enable:</span> <span class=\"literal\">true</span></div><div class=\"line\"></div><div class=\"line\">  <span class=\"comment\"># Automatically add list number to toc.</span></div><div class=\"line\"><span class=\"attr\">  number:</span> <span class=\"literal\">true</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Creative Commons 4.0 International License.</span></div><div class=\"line\"><span class=\"comment\"># http://creativecommons.org/</span></div><div class=\"line\"><span class=\"comment\"># Available: by | by-nc | by-nc-nd | by-nc-sa | by-nd | by-sa | zero</span></div><div class=\"line\"><span class=\"comment\">#creative_commons: by-nc-sa</span></div><div class=\"line\"><span class=\"comment\">#creative_commons:</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"attr\">sidebar:</span></div><div class=\"line\">  <span class=\"comment\"># Sidebar Position, available value: left | right</span></div><div class=\"line\"><span class=\"attr\">  position:</span> left</div><div class=\"line\">  <span class=\"comment\">#position: right</span></div><div class=\"line\"></div><div class=\"line\">  <span class=\"comment\"># Sidebar Display, available value:</span></div><div class=\"line\">  <span class=\"comment\">#  - post    expand on posts automatically. Default.</span></div><div class=\"line\">  <span class=\"comment\">#  - always  expand for all pages automatically</span></div><div class=\"line\">  <span class=\"comment\">#  - hide    expand only when click on the sidebar toggle icon.</span></div><div class=\"line\">  <span class=\"comment\">#  - remove  Totally remove sidebar including sidebar toggler.</span></div><div class=\"line\">  <span class=\"comment\">#display: post</span></div><div class=\"line\"><span class=\"attr\">  display:</span> always</div><div class=\"line\">  <span class=\"comment\">#display: hide</span></div><div class=\"line\">  <span class=\"comment\">#display: remove</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Blogrolls</span></div><div class=\"line\"><span class=\"comment\">#links_title: Links</span></div><div class=\"line\"><span class=\"comment\">#links_layout: block</span></div><div class=\"line\"><span class=\"comment\">#links_layout: inline</span></div><div class=\"line\"><span class=\"comment\">#links:</span></div><div class=\"line\">  <span class=\"comment\">#Title: http://example.com/</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># ---------------------------------------------------------------</span></div><div class=\"line\"><span class=\"comment\"># Misc Theme Settings</span></div><div class=\"line\"><span class=\"comment\"># ---------------------------------------------------------------</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Custom Logo.</span></div><div class=\"line\"><span class=\"comment\"># !!Only available for Default Scheme currently.</span></div><div class=\"line\"><span class=\"comment\"># Options:</span></div><div class=\"line\"><span class=\"comment\">#   enabled: [true/false] - Replace with specific image</span></div><div class=\"line\"><span class=\"comment\">#   image: url-of-image   - Images's url</span></div><div class=\"line\"><span class=\"attr\">custom_logo:</span></div><div class=\"line\"><span class=\"attr\">  enabled:</span> <span class=\"literal\">false</span></div><div class=\"line\"><span class=\"attr\">  image:</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Code Highlight theme  代码高亮主题</span></div><div class=\"line\"><span class=\"comment\"># Available value:</span></div><div class=\"line\"><span class=\"comment\">#    normal | night | night eighties | night blue | night bright</span></div><div class=\"line\"><span class=\"comment\"># https://github.com/chriskempson/tomorrow-theme</span></div><div class=\"line\"><span class=\"attr\">highlight_theme:</span> night eighties</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Automatically scroll page to section which is under &lt;!-- more --&gt; mark.</span></div><div class=\"line\"><span class=\"attr\">scroll_to_more:</span> <span class=\"literal\">true</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Automatically Excerpt. Not recommand.</span></div><div class=\"line\"><span class=\"comment\"># Please use &lt;!-- more --&gt; in the post to control excerpt accurately.</span></div><div class=\"line\"><span class=\"attr\">auto_excerpt:</span></div><div class=\"line\"><span class=\"attr\">  enable:</span> <span class=\"literal\">true</span></div><div class=\"line\"><span class=\"attr\">  length:</span> <span class=\"number\">150</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Wechat Subscriber</span></div><div class=\"line\"><span class=\"comment\">#wechat_subscriber:</span></div><div class=\"line\">  <span class=\"comment\">#enabled: true</span></div><div class=\"line\">  <span class=\"comment\">#qcode: /path/to/your/wechatqcode ex. /uploads/wechat-qcode.jpg</span></div><div class=\"line\">  <span class=\"comment\">#description: ex. subscribe to my blog by scanning my public wechat account</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># ---------------------------------------------------------------</span></div><div class=\"line\"><span class=\"comment\"># Third Party Services Settings</span></div><div class=\"line\"><span class=\"comment\"># ---------------------------------------------------------------</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># MathJax Support   数学公式</span></div><div class=\"line\"><span class=\"attr\">mathjax:</span></div><div class=\"line\"><span class=\"attr\">  enable:</span> <span class=\"literal\">false</span></div><div class=\"line\"><span class=\"attr\">  cdn:</span> //cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Swiftype Search API Key</span></div><div class=\"line\"><span class=\"comment\">#swiftype_key:</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Baidu Analytics ID</span></div><div class=\"line\"><span class=\"comment\">#baidu_analytics:</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Duoshuo ShortName</span></div><div class=\"line\"><span class=\"comment\">#duoshuo_shortname:</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Disqus</span></div><div class=\"line\"><span class=\"comment\">#disqus_shortname:</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Baidu Share</span></div><div class=\"line\"><span class=\"comment\"># Available value:</span></div><div class=\"line\"><span class=\"comment\">#    button | slide</span></div><div class=\"line\"><span class=\"comment\"># Warning: Baidu Share does not support https.</span></div><div class=\"line\"><span class=\"comment\">#baidushare:</span></div><div class=\"line\"><span class=\"comment\">##  type: button</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Share</span></div><div class=\"line\"><span class=\"comment\">#jiathis:</span></div><div class=\"line\"><span class=\"comment\"># Warning: JiaThis does not support https.</span></div><div class=\"line\"><span class=\"comment\">#add_this_id:</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Share</span></div><div class=\"line\"><span class=\"comment\">#duoshuo_share: true</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Google Webmaster tools verification setting</span></div><div class=\"line\"><span class=\"comment\"># See: https://www.google.com/webmasters/</span></div><div class=\"line\"><span class=\"comment\">#google_site_verification:</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Google Analytics</span></div><div class=\"line\"><span class=\"comment\">#google_analytics:</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># CNZZ count</span></div><div class=\"line\"><span class=\"comment\">#cnzz_siteid:</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Make duoshuo show UA</span></div><div class=\"line\"><span class=\"comment\"># user_id must NOT be null when admin_enable is true!</span></div><div class=\"line\"><span class=\"comment\"># you can visit http://dev.duoshuo.com get duoshuo user id.</span></div><div class=\"line\"><span class=\"attr\">duoshuo_info:</span></div><div class=\"line\"><span class=\"attr\">  ua_enable:</span> <span class=\"literal\">true</span></div><div class=\"line\"><span class=\"attr\">  admin_enable:</span> <span class=\"literal\">false</span></div><div class=\"line\"><span class=\"attr\">  user_id:</span> <span class=\"number\">0</span></div><div class=\"line\">  <span class=\"comment\">#admin_nickname: Author</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Facebook SDK Support.</span></div><div class=\"line\"><span class=\"comment\"># https://github.com/iissnan/hexo-theme-next/pull/410</span></div><div class=\"line\"><span class=\"attr\">facebook_sdk:</span></div><div class=\"line\"><span class=\"attr\">  enable:</span> <span class=\"literal\">false</span></div><div class=\"line\"><span class=\"attr\">  app_id:</span>       <span class=\"comment\">#&lt;app_id&gt;</span></div><div class=\"line\"><span class=\"attr\">  fb_admin:</span>     <span class=\"comment\">#&lt;user_id&gt;</span></div><div class=\"line\"><span class=\"attr\">  like_button:</span>  <span class=\"comment\">#true</span></div><div class=\"line\"><span class=\"attr\">  webmaster:</span>    <span class=\"comment\">#true</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Facebook comments plugin</span></div><div class=\"line\"><span class=\"comment\"># This plugin depends on Facebook SDK.</span></div><div class=\"line\"><span class=\"comment\"># If facebook_sdk.enable is false, Facebook comments plugin is unavailable.</span></div><div class=\"line\"><span class=\"attr\">facebook_comments_plugin:</span></div><div class=\"line\"><span class=\"attr\">  enable:</span> <span class=\"literal\">false</span></div><div class=\"line\"><span class=\"attr\">  num_of_posts:</span> <span class=\"number\">10</span>  <span class=\"comment\"># min posts num is 1</span></div><div class=\"line\"><span class=\"attr\">  width:</span> <span class=\"number\">100</span>%       <span class=\"comment\"># default width is 550px</span></div><div class=\"line\"><span class=\"attr\">  scheme:</span> light     <span class=\"comment\"># default scheme is light (light or dark)</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#网站访问量统计http://busuanzi.ibruce.info/   http://ibruce.info/2015/04/04/busuanzi/  其中id=\"busuanzi_container_site_*v\"&gt;这句可以不要。 </span></div><div class=\"line\"><span class=\"comment\"># Show number of visitors to each article.   用leancloud做接口开启阅读计数功能</span></div><div class=\"line\"><span class=\"comment\">#文章阅读量统计：http://www.joryhe.com/2016-05-29-how_to_create_leancloud_read_Counter.html</span></div><div class=\"line\"><span class=\"comment\"># You can visit https://leancloud.cn get AppID and AppKey.</span></div><div class=\"line\"><span class=\"attr\">leancloud_visitors:</span></div><div class=\"line\"><span class=\"attr\">  enable:</span> <span class=\"literal\">true</span></div><div class=\"line\"><span class=\"attr\">  app_id:</span> zieuxKa4IjAP6VgxxvBe4vkj-gzGzoHsz</div><div class=\"line\"><span class=\"attr\">  app_key:</span> MHGN54IEuofFNV1AROiRkEoG</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Show PV/UV of the website/page with busuanzi.</span></div><div class=\"line\"><span class=\"comment\"># Get more information on http://ibruce.info/2015/04/04/busuanzi/</span></div><div class=\"line\"><span class=\"attr\">busuanzi_count:</span>     <span class=\"comment\">#不蒜子网站访问量统计</span></div><div class=\"line\">  <span class=\"comment\"># count values only if the other configs are false</span></div><div class=\"line\"><span class=\"attr\">  enable:</span> <span class=\"literal\">false</span></div><div class=\"line\">  <span class=\"comment\"># custom uv span for the whole site</span></div><div class=\"line\"><span class=\"attr\">  site_uv:</span> <span class=\"literal\">true</span></div><div class=\"line\"><span class=\"attr\">  site_uv_header:</span> &lt;i class=<span class=\"string\">\"fa fa-user\"</span>&gt;&lt;/i<span class=\"string\">&gt;</div><div class=\"line\"></span><span class=\"attr\">  site_uv_footer:</span></div><div class=\"line\">  <span class=\"comment\"># custom pv span for the whole site</span></div><div class=\"line\"><span class=\"attr\">  site_pv:</span> <span class=\"literal\">true</span></div><div class=\"line\"><span class=\"attr\">  site_pv_header:</span> &lt;i class=<span class=\"string\">\"fa fa-eye\"</span>&gt;&lt;/i<span class=\"string\">&gt;</div><div class=\"line\"></span><span class=\"attr\">  site_pv_footer:</span></div><div class=\"line\">  <span class=\"comment\"># custom pv span for one page only</span></div><div class=\"line\"><span class=\"attr\">  page_pv:</span> <span class=\"literal\">true</span></div><div class=\"line\"><span class=\"attr\">  page_pv_header:</span> &lt;i class=<span class=\"string\">\"fa fa-file-o\"</span>&gt;&lt;/i<span class=\"string\">&gt;</div><div class=\"line\"></span><span class=\"attr\">  page_pv_footer:</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Tencent analytics ID</span></div><div class=\"line\"><span class=\"comment\"># tencent_analytics:</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Enable baidu push so that the blog will push the url to baidu automatically which is very helpful for SEO</span></div><div class=\"line\"><span class=\"attr\">baidu_push:</span> <span class=\"literal\">true</span>   <span class=\"comment\">#百度链接提交，提高搜索排名</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Google Calendar</span></div><div class=\"line\"><span class=\"comment\"># Share your recent schedule to others via calendar page</span></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\"><span class=\"comment\"># API Documentation:</span></div><div class=\"line\"><span class=\"comment\"># https://developers.google.com/google-apps/calendar/v3/reference/events/list</span></div><div class=\"line\"><span class=\"attr\">calendar:</span></div><div class=\"line\"><span class=\"attr\">  enable:</span> <span class=\"literal\">false</span></div><div class=\"line\"><span class=\"attr\">  calendar_id:</span> &lt;required<span class=\"string\">&gt;</div><div class=\"line\"></span><span class=\"attr\">  api_key:</span> &lt;required<span class=\"string\">&gt;</div><div class=\"line\"></span><span class=\"attr\">  orderBy:</span> startTime</div><div class=\"line\"><span class=\"attr\">  offsetMax:</span> <span class=\"number\">24</span></div><div class=\"line\"><span class=\"attr\">  offsetMin:</span> <span class=\"number\">4</span></div><div class=\"line\"><span class=\"attr\">  timeZone:</span></div><div class=\"line\"><span class=\"attr\">  showDeleted:</span> <span class=\"literal\">false</span></div><div class=\"line\"><span class=\"attr\">  singleEvents:</span> <span class=\"literal\">true</span></div><div class=\"line\"><span class=\"attr\">  maxResults:</span> <span class=\"number\">250</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#! ---------------------------------------------------------------</span></div><div class=\"line\"><span class=\"comment\">#! DO NOT EDIT THE FOLLOWING SETTINGS</span></div><div class=\"line\"><span class=\"comment\">#! UNLESS YOU KNOW WHAT YOU ARE DOING</span></div><div class=\"line\"><span class=\"comment\">#! ---------------------------------------------------------------</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Motion</span></div><div class=\"line\"><span class=\"attr\">use_motion:</span> <span class=\"literal\">true</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Fancybox</span></div><div class=\"line\"><span class=\"attr\">fancybox:</span> <span class=\"literal\">true</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Script Vendors.</span></div><div class=\"line\"><span class=\"comment\"># Set a CDN address for the vendor you want to customize.</span></div><div class=\"line\"><span class=\"comment\"># For example</span></div><div class=\"line\"><span class=\"comment\">#    jquery: https://ajax.googleapis.com/ajax/libs/jquery/2.2.0/jquery.min.js</span></div><div class=\"line\"><span class=\"comment\"># Be aware that you should use the same version as internal ones to avoid potential problems.</span></div><div class=\"line\"><span class=\"comment\"># Please use the https protocol of CDN files when you enable https on your site.</span></div><div class=\"line\"><span class=\"attr\">vendors:</span></div><div class=\"line\">  <span class=\"comment\"># Internal path prefix. Please do not edit it.</span></div><div class=\"line\"><span class=\"attr\">  _internal:</span> vendors</div><div class=\"line\"></div><div class=\"line\">  <span class=\"comment\"># Internal version: 2.1.3</span></div><div class=\"line\"><span class=\"attr\">  jquery:</span></div><div class=\"line\"></div><div class=\"line\">  <span class=\"comment\"># Internal version: 2.1.5</span></div><div class=\"line\">  <span class=\"comment\"># See: http://fancyapps.com/fancybox/</span></div><div class=\"line\"><span class=\"attr\">  fancybox:</span></div><div class=\"line\"><span class=\"attr\">  fancybox_css:</span></div><div class=\"line\"></div><div class=\"line\">  <span class=\"comment\"># Internal version: 1.0.6</span></div><div class=\"line\">  <span class=\"comment\"># See: https://github.com/ftlabs/fastclick</span></div><div class=\"line\"><span class=\"attr\">  fastclick:</span></div><div class=\"line\"></div><div class=\"line\">  <span class=\"comment\"># Internal version: 1.9.7</span></div><div class=\"line\">  <span class=\"comment\"># See: https://github.com/tuupola/jquery_lazyload</span></div><div class=\"line\"><span class=\"attr\">  lazyload:</span></div><div class=\"line\"></div><div class=\"line\">  <span class=\"comment\"># Internal version: 1.2.1</span></div><div class=\"line\">  <span class=\"comment\"># See: http://VelocityJS.org</span></div><div class=\"line\"><span class=\"attr\">  velocity:</span></div><div class=\"line\"></div><div class=\"line\">  <span class=\"comment\"># Internal version: 1.2.1</span></div><div class=\"line\">  <span class=\"comment\"># See: http://VelocityJS.org</span></div><div class=\"line\"><span class=\"attr\">  velocity_ui:</span></div><div class=\"line\"></div><div class=\"line\">  <span class=\"comment\"># Internal version: 0.7.9</span></div><div class=\"line\">  <span class=\"comment\"># See: https://faisalman.github.io/ua-parser-js/</span></div><div class=\"line\"><span class=\"attr\">  ua_parser:</span></div><div class=\"line\"></div><div class=\"line\">  <span class=\"comment\"># Internal version: 4.4.0</span></div><div class=\"line\">  <span class=\"comment\"># See: http://fontawesome.io/</span></div><div class=\"line\"><span class=\"attr\">  fontawesome:</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># 多说热评文章功能</span></div><div class=\"line\"><span class=\"attr\">duoshuo_hotartical:</span> <span class=\"literal\">true</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Assets</span></div><div class=\"line\"><span class=\"attr\">css:</span> css</div><div class=\"line\"><span class=\"attr\">js:</span> js</div><div class=\"line\"><span class=\"attr\">images:</span> images</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Theme version</span></div><div class=\"line\"><span class=\"attr\">version:</span> <span class=\"number\">5.0</span><span class=\"number\">.2</span></div></pre></td></tr></table></figure></p>\n<h2 id=\"配置文件设置\"><a href=\"#配置文件设置\" class=\"headerlink\" title=\"配置文件设置\"></a>配置文件设置</h2><p>以下是我的配置文件：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># Hexo Configuration</span></div><div class=\"line\"><span class=\"comment\">## Docs: https://hexo.io/docs/configuration.html</span></div><div class=\"line\"><span class=\"comment\">## Source: https://github.com/hexojs/hexo/</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Site</span></div><div class=\"line\"><span class=\"attr\">title:</span> Leo Lan的博客</div><div class=\"line\"><span class=\"attr\">subtitle:</span>  有时候正是不报期望的人做出了人们不敢期望的事！</div><div class=\"line\"><span class=\"attr\">description:</span> Better late than never</div><div class=\"line\"><span class=\"attr\">author:</span> Leo Lan</div><div class=\"line\"><span class=\"attr\">language:</span> zh-Hans</div><div class=\"line\"><span class=\"attr\">timezone:</span> Asia/Shanghai</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># URL</span></div><div class=\"line\"><span class=\"comment\">## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'</span></div><div class=\"line\"><span class=\"attr\">url:</span> http://leolan.top</div><div class=\"line\"><span class=\"attr\">coding_url:</span> http://leolan.top</div><div class=\"line\"><span class=\"attr\">root:</span> /</div><div class=\"line\"><span class=\"attr\">permalink:</span> :year/:month/:day/:title/</div><div class=\"line\"><span class=\"attr\">permalink_defaults:</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Directory</span></div><div class=\"line\"><span class=\"attr\">source_dir:</span> source</div><div class=\"line\"><span class=\"attr\">public_dir:</span> public</div><div class=\"line\"><span class=\"attr\">tag_dir:</span> tags</div><div class=\"line\"><span class=\"attr\">archive_dir:</span> archives</div><div class=\"line\"><span class=\"attr\">category_dir:</span> categories</div><div class=\"line\"><span class=\"attr\">code_dir:</span> downloads/code</div><div class=\"line\"><span class=\"attr\">i18n_dir:</span> :lang</div><div class=\"line\"><span class=\"attr\">skip_render:</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Writing  官网：https://hexo.io/zh-cn/docs/writing.html</span></div><div class=\"line\"><span class=\"attr\">new_post_name:</span> :year-:month-:day-:title.md <span class=\"comment\"># File name of new posts</span></div><div class=\"line\"><span class=\"attr\">default_layout:</span> post</div><div class=\"line\"><span class=\"attr\">titlecase:</span> <span class=\"literal\">false</span> <span class=\"comment\"># Transform title into titlecase</span></div><div class=\"line\"><span class=\"attr\">external_link:</span> <span class=\"literal\">true</span> <span class=\"comment\"># Open external links in new tab</span></div><div class=\"line\"><span class=\"attr\">filename_case:</span> <span class=\"number\">0</span></div><div class=\"line\"><span class=\"attr\">render_drafts:</span> <span class=\"literal\">false</span></div><div class=\"line\"><span class=\"attr\">post_asset_folder:</span> <span class=\"literal\">false</span></div><div class=\"line\"><span class=\"attr\">relative_link:</span> <span class=\"literal\">false</span></div><div class=\"line\"><span class=\"attr\">future:</span> <span class=\"literal\">true</span></div><div class=\"line\"><span class=\"attr\">highlight:</span></div><div class=\"line\"><span class=\"attr\">  enable:</span> <span class=\"literal\">true</span></div><div class=\"line\"><span class=\"attr\">  line_number:</span> <span class=\"literal\">true</span></div><div class=\"line\"><span class=\"attr\">  auto_detect:</span> <span class=\"literal\">true</span></div><div class=\"line\"><span class=\"attr\">  tab_replace:</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Category &amp; Tag</span></div><div class=\"line\"><span class=\"attr\">default_category:</span> uncategorized</div><div class=\"line\"><span class=\"attr\">category_map:</span></div><div class=\"line\"><span class=\"attr\">tag_map:</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Date / Time format</span></div><div class=\"line\"><span class=\"comment\">## Hexo uses Moment.js to parse and display date</span></div><div class=\"line\"><span class=\"comment\">## You can customize the date format as defined in</span></div><div class=\"line\"><span class=\"comment\">## http://momentjs.com/docs/#/displaying/format/</span></div><div class=\"line\"><span class=\"attr\">date_format:</span> YYYY-MM-DD</div><div class=\"line\"><span class=\"attr\">time_format:</span> HH:mm:ss</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Pagination</span></div><div class=\"line\"><span class=\"comment\">## Set per_page to 0 to disable pagination</span></div><div class=\"line\"><span class=\"attr\">per_page:</span> <span class=\"number\">15</span></div><div class=\"line\"><span class=\"attr\">pagination_dir:</span> page</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Extensions</span></div><div class=\"line\"><span class=\"comment\">## Plugins: https://hexo.io/plugins/</span></div><div class=\"line\"><span class=\"comment\">## Themes: https://hexo.io/themes/</span></div><div class=\"line\"><span class=\"attr\">theme:</span> next</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Deployment部署</span></div><div class=\"line\"><span class=\"comment\">## 官方文档Docs: https://hexo.io/docs/deployment.html   有部署到各种服务器的方法</span></div><div class=\"line\"><span class=\"comment\">## 参考：http://www.lxway.com/240950852.htm</span></div><div class=\"line\"><span class=\"comment\">#不管是github还是coding，type都填写git</span></div><div class=\"line\"><span class=\"comment\">#这里同事部署到Github和Coding上，在域名解析中设置国内IP访问Coding，国外IP访问Github。</span></div><div class=\"line\"><span class=\"comment\">#自动部署需要安装deployer-git插件：npm install hexo-deployer-git --save</span></div><div class=\"line\"><span class=\"attr\">deploy:</span></div><div class=\"line\"><span class=\"attr\">- type:</span> git</div><div class=\"line\"><span class=\"attr\">  repo:</span> git@git.coding.net:leolan/leolan.git,master  <span class=\"comment\">#注意你的分支是什么</span></div><div class=\"line\"><span class=\"attr\">- type:</span> git</div><div class=\"line\"><span class=\"attr\">  repo:</span> git@github.com:MyLeoLan/blog.git,master</div><div class=\"line\"><span class=\"comment\">#deploy:</span></div><div class=\"line\"><span class=\"comment\">#- type: git</span></div><div class=\"line\"><span class=\"comment\">#  repo:</span></div><div class=\"line\"><span class=\"comment\">#- type: heroku（另一种云平台）</span></div><div class=\"line\"><span class=\"comment\">#  repo:</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Disqus #Disqus评论系统</span></div><div class=\"line\"><span class=\"attr\">disqus_shortname:</span> leolan</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#plugins: #插件，例如生成 RSS 和站点地图的</span></div><div class=\"line\"><span class=\"comment\">#hexo-generator-sitemap</span></div><div class=\"line\"><span class=\"comment\">#- hexo-generator-baidu-sitemap</span></div><div class=\"line\"><span class=\"attr\">plugins:</span></div><div class=\"line\">  hexo-generator-feed</div><div class=\"line\">  hexo-generator-baidu-sitemap</div><div class=\"line\"></div><div class=\"line\"><span class=\"attr\">sitemap:</span></div><div class=\"line\"><span class=\"attr\">  path:</span> sitemap.xml    </div><div class=\"line\"><span class=\"attr\">baidusitemap:</span></div><div class=\"line\"><span class=\"attr\">  baidupath:</span> baidusitemap.xml</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Social links  社交链接</span></div><div class=\"line\"><span class=\"attr\">social:</span></div><div class=\"line\"><span class=\"attr\">  GitHub:</span> https://github.com/myleolan</div><div class=\"line\"><span class=\"attr\">  Coding:</span> https://coding.net/u/leolan</div><div class=\"line\"><span class=\"attr\">  CSDN:</span> http://blog.csdn.net/lan842632</div><div class=\"line\"><span class=\"attr\">  OSchina:</span> https://my.oschina.net/leolan/blog</div><div class=\"line\">  <span class=\"comment\">#Twitter: https://twitter.com/lmintlcx</span></div><div class=\"line\">  <span class=\"comment\">#Zhihu: http://www.zhihu.com/people/lmintlcx</span></div><div class=\"line\">  <span class=\"comment\">#Douban: http://www.douban.com/people/lmintlcx</span></div><div class=\"line\">  <span class=\"comment\">#Weibo: http://weibo.com/u/3233729080</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"attr\">duoshuo_shortname:</span> leolan</div><div class=\"line\"><span class=\"comment\"># 多说热评文章 true 或者 false</span></div><div class=\"line\"><span class=\"attr\">duoshuo_hotartical:</span> <span class=\"literal\">true</span></div><div class=\"line\"><span class=\"comment\"># 多说分享服务</span></div><div class=\"line\"><span class=\"attr\">duoshuo_share:</span> <span class=\"literal\">true</span></div><div class=\"line\"><span class=\"comment\"># 百度分享服务</span></div><div class=\"line\"><span class=\"attr\">baidushare:</span> <span class=\"literal\">true</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#打赏功能</span></div><div class=\"line\"><span class=\"attr\">reward_comment:</span> 您的支持将鼓励我继续创作,非常感谢！</div><div class=\"line\"><span class=\"attr\">wechatpay:</span> http://ofyfogrgx.bkt.clouddn.com/%E5%BE%AE%E4%BF%A1%E6%<span class=\"number\">94</span>%B6%E6%AC%BE1.png</div><div class=\"line\"><span class=\"attr\">alipay:</span> http://ofyfogrgx.bkt.clouddn.com/%E6%<span class=\"number\">94</span>%AF%E4%BB%<span class=\"number\">98</span>%E5%AE%<span class=\"number\">9</span>D%E6%<span class=\"number\">94</span>%B6%E6%AC%BE01.jpg</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#站点建立时间</span></div><div class=\"line\"><span class=\"attr\">since:</span> <span class=\"number\">2016</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#百度分析</span></div><div class=\"line\"><span class=\"attr\">baidu_analytics:</span> dc0e85252eeff3a87aa87f35d92a8d33</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#本地搜索</span></div><div class=\"line\"><span class=\"attr\">search:</span></div><div class=\"line\"><span class=\"attr\">  path:</span> search.xml</div><div class=\"line\"><span class=\"attr\">  field:</span> post</div><div class=\"line\"><span class=\"attr\">  format:</span> html</div><div class=\"line\"><span class=\"attr\">  limit:</span> <span class=\"number\">10000</span></div></pre></td></tr></table></figure>\n<h2 id=\"安装插件\"><a href=\"#安装插件\" class=\"headerlink\" title=\"安装插件\"></a>安装插件</h2><p>hexo支持插件，可以直接通过命令行安装即可：<code>npm install **plugin-name** --save</code><br>更新插件<br><code>npm update</code><br>卸载插件<br><code>npm uninstall **plugin-name**</code><br>下面推荐几个常用的插件：<br>feed插件:<code>npm install hexo-generator-feed --save</code><br>站点地图:<code>npm install hexo-generator-sitemap --save</code><br>百度站点地图:<code>npm install hexo-generator-baidu-sitemap --save</code><br>文章字数统计：<a href=\"http://www.joryhe.com/2016-06-06-hexo_wordcount_setting_your_post.html\">http://www.joryhe.com/2016-06-06-hexo_wordcount_setting_your_post.html</a></p>\n<hr>\n<h1 id=\"部署\"><a href=\"#部署\" class=\"headerlink\" title=\"部署\"></a>部署</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">cd</span> your_site/</div><div class=\"line\">touch Staticfile  <span class=\"comment\">#创建静态文件标识，用于Github识别，名字必须是Staticfile</span></div><div class=\"line\">hexo clean   <span class=\"comment\">#清除以前生成的旧文件</span></div><div class=\"line\">hexo g       <span class=\"comment\">#生成新的站点文件</span></div><div class=\"line\">hexo d       <span class=\"comment\">#部署到Github上</span></div></pre></td></tr></table></figure>\n<p>可参考：<a href=\"http://shomy.top/2016/03/03/hexo-in-coding-github/\">http://shomy.top/2016/03/03/hexo-in-coding-github/</a><br>部署完成打开网址就能看到效果了。</p>\n<p>Hexo的部署只会把生成的文件上传到仓库中，本地的<strong>设置，主题，*.md文件</strong>等等都不会上传，换一台电脑就没法干活了，一旦删除，那基本上所有的努力都白费了，这里介绍2种备份方法：</p>\n<ul>\n<li>1.新建一个仓库专门用来存放这些文件（最安全最方便的办法）</li>\n<li>2.和发布的网站使用同一个仓库，master用来存放这些文件，新建分支来发布网站（注意pages服务绑定该分支，不要合并分支，一旦合并就全部混乱了）<br>两种方法都要在网站根目录设定好远程端仓库：<code>git add remote XXXX</code><br>每次发布完网页，就顺手执行以下代码，把文档也同步到仓库中。<figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">git <span class=\"keyword\">add</span><span class=\"bash\"> .</div><div class=\"line\"></span>git commit -m <span class=\"string\">\"xxx\"</span></div><div class=\"line\">git push</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n<h1 id=\"绑定域名\"><a href=\"#绑定域名\" class=\"headerlink\" title=\"绑定域名\"></a>绑定域名</h1><p>原理和博客绑定域名是一样的</p>\n<ul>\n<li>1· 在你的项目下新建一个<strong>CNAME</strong>文件，注意没有后缀名。在里面添加你的域名，如我的就是<strong> leolan.top</strong>，然后推送<strong>CNAME文件</strong>到远程仓库。（方法二是直接在pages页上找到域名绑定设置，最好同时绑定如：<strong>leolan.top</strong>和<strong>www.leolan.top</strong>,少绑一个，没绑的那个打不开）</li>\n<li>2· 到域名服务商那里增加你的CNAME记录。添加两条记录，@和www的主机记录，记录类型为CNAME，记录值为 <code>username.github.io.</code>，重要的是 io 后面还有一个原点（看官方帮助文档Coding的就不用加点），切记。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E5%9F%9F%E5%90%8D%E7%BB%91%E5%AE%9A.png\" alt=\"\"><br>过几分钟，刷新网页，就能直接用域名访问了，因为是在项目内建的<strong>CNAME</strong>文件，所以域名直接指向此项目文件夹，其他项目可以用其他域名设定。</li>\n</ul>\n<hr>\n<h1 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h1><p><a href=\"http://www.joryhe.com/tags/hexo/\">Hexo</a> 　　　 <a href=\"http://www.ezlippi.com/blog/2016/02/jekyll-to-hexo.html\">Jekyll迁移到Hexo</a></p>\n<hr>\n"},{"title":"用Jekyll搭建博客","abbrlink":56436,"date":"2016-11-08T07:13:11.000Z","_content":"\n# 安装Jekyll\nJekyll用Ruby写的，jekyll是把原文上传github，可以直接生成博客，也可以用在线编辑器处理。\n  1. 搭建ruby环境（ruby版本最好大于2.2.2），详见：[Ruby开发环境搭建](http://leolan.top/2016/10/31/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA-2016-10-21-Ruby%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/)  \n  2. 安装kramdown（Markdown文档处理器）\ngem install kramdown\n  3. 安装rouge（语法高亮）\ngem install rouge\n  4. 动态处理插件exec\ngem install execjs\n  5. 安装ruby工具集管理工具Bundler\ngem install bundler\n  6. 安装rails WEB框架（可选，不安装运行jekyll时可能报错）\ngem install rails\n  7.安装Jekyll（“Mac的安装见错误解决”）\ngem install jekyll\n\n之后需要添加功能，要安装其他gems插件时，进入该项目目录再安装，不然不会被包含，就不会生效。\n错误解决：\n**Mac**：\n\n```\nmkdir -p /usr/local/Cellar/ruby/bin\nsudo gem install jekyll -n /usr/local/Cellar/ruby/bin```\n\n关闭终端窗口再打开，输入**jekyll**看这个指令是否存在，如果提示不存在，那就再修改\n`/Users/用户名/.bash_profile`文件，把Jekyll的路径写进去。\n`export PATH=/usr/local/Cellar/ruby/bin:$PATH`再重新打开终端，这时候Jekyll指令应该ok了。\n注：`whereis gem`可以看到路径是**/usr/bin/gem**,当前的gem路径是**系统默认的gem版本**，这个版本用了是会报错的，用这个版本安装Jekyll默认安装Jekyll到相同目录下，所以同样会出现permission denied的报错信息。有人说可以用symlink，但即使用了sudo也会是permission denied的报错。所以直接安装Jekyll并同时指定安装路径了。\n\n**Windows**：\n如果安装jekyll或bundle报错，则需要安装编译工具。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8Jekyll%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A201.png)\n打开：http://rubyinstaller.org/downloads/  下载对应的**DevKit-mingw**，解压到没有中文、空格、特殊符号的文件夹，\n  1. cmd进入该目录\n  2. 命令行下运行`ruby dk.rb init`\n  3. 编辑目录下的**config.yml**文件 最尾加上`- C:\\Ruby23-x64  #即ruby安装目录`\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8Jekyll%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A202.png)\n  4. 运行`ruby dk.rb review   #（可选，一般不用运行）`\n  5. 运行`ruby dk.rb install`\n  6. 如果上述步骤**只有info输出**而**没有warning输出**，则应该安装成功了\n  7. 测试`gem install json --platform=ruby`如果安装成功，则表示devkit安装成功。\n  8. 如果失败，可以重装ruby和ruby-devkit，或者选择2.0.0以上版本的ruby版本，或https://rubygems.org/pages/download 按提示更新gem版本。\n\nok,安装完成啦！\n\n---\n\n# 建立站点\n```\njekyll new new-site   #创建新站点\ncd new-site           #进入站点目录下一步才能开启服务\njekyll serve --watch  #加--watch参数修改后会自动刷新页面，而不用手动重启jekyll\njekyll build          #写了新文章后，编译文档```\n然后访问localhost:4000就能看到blog的页面了。\n\n注：运行报**Could not find a JavaScript runtime.**错误\n答：在**gemfile**中加入\n```\ngem 'execjs'  \ngem 'therubyracer'  ```\n然后安装`gem install therubyracer ` 再运行就好了。\n\n一个基本的 Jekyll 网站的目录结构一般是像这样的：\n\n```\n├── _config.yml  #配置文件 \n├── _drafts      #草稿目录\n| ├── begin-with-the-crazy-ideas.textile\n| └── on-simplicity-in-technology.markdown\n├── _includes    #你可以加载这些包含部分到你的布局或者文章中以方便重用。可以用这个标签 {\\% include file.ext \\%} 来把文件 _includes/file.ext 包含进来。\n| ├── footer.html  #HTML尾\n| └── header.html  #HTML头\n├── _layouts\n| ├── default.html #默认模板\n| └── post.html    #文章模板\n├── _posts         #文章目录\n| ├── XXXX.md\n| └── XXXXXX.md\n├── _data\n| └── members.yml\n├── _site         #生成的站点文件存放目录\n└── index.html    #入口index文件\n└──Other Files/Folders   #其他一些未被提及的目录和文件如 css 还有 images 文件夹， favicon.ico 等文件都将被完全拷贝到生成的 site 中。\n```\n安装完成后，如果你要配置你自己的站点信息，那么你就要修改**_config.yml**这个文件。里面可以配置站点名称，描述，多说，统计，友链等等。\n参考：\nhttp://jekyll.com.cn/   中文官网\nhttp://pwnny.cn/original/2016/06/26/MakeBlog.html\n\n写文章在_posts里，文件名按**YEAR-MONTH-DAY-title.md**创建文件，\n在文章头部添加YAML头信息（YAML front- matter）：\n\n```\n---\nlayout: post\ntitle:  \"第一篇博客\"\ndate:   2016/10/26 13:03:42\ncategories: 文章阅读\ntag: 第一篇博客,jekyll搭建博客\n---\n\n这里开始用Markdown的语法编写文章。\n\n```\n每次都自己写yml文件头太麻烦，配置中会说到用Rakefile脚本自动生成文件。**注意：yml文件头不要有中文，.md文件名也不要有中文，**否则网页会显示404错误（原因未知）\n\n---\n\n# 配置优化、美化站点\n## 主题部分\n可以在http://jekyllthemes.org/这个上面找找，Hux这个主题还是不错的，喜欢的直接下载，重新修改里面配置就行了。可以fork或下载回来，整个替换，把文章拷过去就行。一个很好的Hux模板：https://github.com/huxpro/huxpro.github.io/\n\n## 配置文件设置\n我用到的参数：\n```\n#不要在配置文件中使用 tab 制表符,用空格代替。\n#配置请参考：http://jekyllcn.com/docs/configuration/#front-matter-defaults\n\n\n# Site settings\ntitle: LeoLan的博客\nauthor: Leo Lan\nemail: 842632422@qq.com\ndescription: > # this means to ignore newlines until \"baseurl:\"\n  Write an awesome description for your new site here. You can edit this\n  line in _config.yml. It will appear in your document head meta (for\n  Google search results) and in your feed.xml site description.\n\n#自定义站点标题\n#webrick:\n#  headers:\n#    My-Header: My-Value\n#    My-Other-Header: My-Other-Value\n\n\n# Site URL NOTE: if your site is base on subdir /blog you should change base to \"/blog\"\ndomain: \"http://myleolan.github.io\" #你的github网址  the domain URL for your site\nbase: \"\"  # the relative path that different with domain so you can test locally\n\n# Source URL NOTE: end with / cause it's [URL + FILE]\nw3c_url: \"/w3c/\"  # the base url of css js and images\npostImage_url: \"/w3c/images/\" # the base url of post images\npostfile: \"/db/Postfile\" # the Database\nsitefile: \"/db/Sitefile\" # the Database\n\n# 3rd URL\nduoshuo_short_name: \"leolan\" # 注册多说是填写的网址前缀 the user of user.domain.com \nduoshuo_user_uid: \"a61c3f290749b621688a3f42c7e8e31c\" #多说的uid   the admin user uid  \nduoshuo_user_name: \"leolan\" #多说的用户名 the admin user names   \nduoshuo_max_depth: \"2\"  # the max_depth setting in duoshuo comments\nduoshuo_url: \"/w3c/duoshuo/embed.min.js\" # the local duoshuo comment plugin, you can change it to remote \"http://static.duoshuo.com/\"\njquery_url: \"http://cdn.bootcss.com/jquery/3.1.0/jquery.min.js\" # use cdn\nbaiduTemplate_url: \"/w3c/js/baiduTemplate.js\" #use local\ngoogle_analytics_id: \"UA-86334360-1\"  #Google分析\n\n# Build Settings\nexcerpt_separator: \"\\n\\n\" # you can specify your own separator here, default is \"\\n\\n\" String\npermalink: /:year/:month/:day/:title.html   #生成html文件的命名方式\nhighlighter: rouge   #代码高亮\nmarkdown: kramdown   #markdown文档处理器\nkramdown:\n  input: GFM\n  hard_wrap: true # a newline in markdown text would be changed to <br>\n\n#插件（需要包含的插件）\ngems:\n  - jemoji\n\nlsi: BOOL   #建立文件索引\n\n####---------------------------------------------------------------------\n#以下为github的默认设置\n\n# Following is got in Github Help With Configuring Jekyll\n# Github Page Default Settings which you can override:\n\n# kramdown:\n#   input: GFM\n#   hard_wrap: false\n# gems:\n#   - jekyll-coffeescript\n#   - jekyll-paginate\n\n# Github Page override the following settings which you cannot change:\n# lsi: false\n# safe: true    #安全方式，禁用所有插件\n# source: [your repo's top level directory]\n# incremental: false\n# highlighter: rouge\n# gist:\n#  noscript: false\n# kramdown:\n#  math_engine: mathjax\n\n```\n\n## 自动生成文件模板\n前面说到的带yml信息的文件头\n```\n---\nlayout: post\ntitle:  \"第一篇博客\"\ndate:   2016/10/26 13:03:42\ncategories: 文章阅读\ntag: 第一篇博客,jekyll搭建博客\n---```\n文件头可以自动生成，而不用每次都手工码字，在网站根目录下创建Rakefile文件（ruby的一中脚本配置文件）\n里面填入代码：\n\n```\ntask :default => :new\n\nrequire 'fileutils'\n\ndesc \"创建新 post\"\ntask :new do\n  puts \"请输入要创建的.md文件名：\"\n  @url = STDIN.gets.chomp\n  puts \"请输入 文章 标题：\"\n  @name = STDIN.gets.chomp\n  puts \"请输入 文章 子标题：\"\n  @subtitle = STDIN.gets.chomp\n  puts \"请输入 文章 分类，以空格分隔：\"\n  @categories = STDIN.gets.chomp\n  puts \"请输入 博客分类 标签，以空格分隔：\"\n  @tag = STDIN.gets.chomp\n  @slug = \"#{@url}\"\n  @slug = @slug.downcase.strip.gsub(' ', '-')\n  @date = Time.now.strftime(\"%F\")\n  @post_name = \"_posts/#{@date}-#{@slug}.md\"\n  if File.exist?(@post_name)\n      abort(\"文件名已经存在！创建失败\")\n  end\n  FileUtils.touch(@post_name)\n  open(@post_name, 'a') do |file|\n      file.puts \"---\"\n      file.puts \"layout: post\"\n      file.puts \"title: #{@name}\"\n      file.puts \"subtitle: #{@subtitle}\"\n      file.puts \"author: Leo Lan\"\n      file.puts \"date: #{Time.now}\"\n      file.puts \"categories: #{@categories}\"\n      file.puts \"tag: #{@tag}\"\n      file.puts \"published: true\"\n      file.puts \"---\"\n  end\n  exec \"vim #{@post_name}\"\nend```\n**layout**表示使用的是post布局，title是文章标题，\n**date**是自动生成的日期，\n**subtitle**是副标题\n**categories**是该文章生成html文件后存放的目录（分类），可以去_site/jekyll/update下找到对应日期下面的html文档。当然你也可以只设置jekyll单一的目录，甚至是更多级别的目录，用空格分开即可。**tag**是文章的标签。\n**published**表示是否发布文章\n下次在命令行输入`rake new`按提示一步一步就能创建一个很好的文件啦，剩下的只需要专心写作就好了。\n\n\n参考：http://www.liubaicai.net/articles/733/\n\n\n---\n\n# 用Github Pages生成个人博客\nGithub Pages生成网站的两种方式的基本原理\n\n## 法一：\n在Github上有一个账号，名为 username （任意），有一个项目，名为 username.github.io （固定格式，username与账号名一致），项目分支名为 **master** （默认固定），这个分支有类似下面的目录结构：\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8Jekyll%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A203.png)\n当你访问 http://username.github.io/ 时，Github会使用Jekyll解析用户 username 名下的 username.github.io 项目中，分支为 master 的源代码，为你构建一个静态网站，并将生成的 index.html 展示给你。\n\n## 法二：\n在Github上有一个账号，名为 username （任意），有一个项目，名为 blog （任意），项目分支名为 **gh-pages **（固定），这个分支也有上面那种结构。\n那么当你访问 http://username.github.io/blog 时，Github会去解析 username 用户下，project 项目的 gh-pages 分支下的源代码，为你构建网站。\n\n所以要搭建自己的博客你有两种选择：\n* 建立名为 username.github.io 的项目，在 master 分支下存放网站源代码\n* 建立名为 blog 的项目，在 gh-pages 分支下存放网站源代码\n考虑到第一种项目名复杂不方便同步等，这里用第二种方法，方便管理。\n新建一个仓库，名称随意，ReadMe.md文件随意，不懂的查看教程第4节“创建远程仓库”：[git教程](http://leolan.top/2016/11/04/Dev-2016-11-04-Git%E6%95%99%E7%A8%8B/)\n\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8Jekyll%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A204.png)\n翻到下面，选择**Launch automatic page generator**\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8Jekyll%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A205.png)\n再接着编译一下内容，点**Continue to layouts**\n选好模板，点击**Publish page**，就生成了Github Pages，并且，分支自动设置为了gh-pages。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8Jekyll%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A206.png)\n\n打开网站看看效果：https://myleolan.github.io/blog/\n以后本地写好的文章，jekyll bundle之后就可以推送到gh-pages分支即可。推送博客到github推荐用命令行，Windows版的客户端不熟悉容易误操作。 博客源码和发布的博客网页在同一个仓库中，可以共同存放。（Hexo是生成的网站和博客原文分开存放的）\n\n# Github Pages环境本地化\n上面搭建的只是Jekyll的本地环境，当push到Github Pages后环境会有所变化，为了本地看到的效果和托管在Github Pages看到的效果一致，我们最好搭建本地的Github Pages环境。\nruby要2.0.0以上版本，如果`ruby --version`查看版本低于2.0.0，那么需要升级ruby。\n安装ruby工具集管理工具Bundler （前面安装过了就不用安装了）\n```\ngem install bundler\nbundler -v```\n\n进入jekyll创建的网站目录\n```\ngit init                      #把当前目录加入版本库中\ngit checkout -b gh-pages      #创建gh-pages分支，用于推送到github上的gh-pages分支上。```\n\n创建**Gemfile**文件 如果本生有Gemfile和Gemfile.lock那就删除掉，内容如下：\n```\nsource 'https://ruby.taobao.org'  #(淘宝源，国内比较快)\ngem 'github-pages', group: :jekyll_plugins\n或\nsource 'https://rubygems.org'   #(官方源)\ngem 'github-pages', group: :jekyll_plugins```\n\n执行下面的命令安装Github Pages的工具集**（在网站根目录，就是Gemfile文件的路径）**\n`bundle install`\n运行起来（一开始创建了网站就可以直接跑起来啦，如果没有创建网站，创建或fork别人的。）\n`bundle exec jekyll serve`\n\n如果出现**bundle exec jekyll serve**能启动，而**jekyll serve**不能启动，则删除Gemfile和Gemfile.lock重新运行jekyll serve即可。\n更多Github Pages本地化环境搭建，可参考官方文档:https://help.github.com/articles/setting-up-your-github-pages-site-locally-with-jekyll/\n\n注意：如果是是下载了别人的模板进行修改，只把文件拷到自己项目中进行添加就可以了，不要全选把**.git**文件夹也拷过了，别人的分支和自己的不同时会出现各种问题。\n\n调试好各种东西后就可以推送到Github了。\n  1. 用markdown写文章，并按规定名称格式保存在_posts里。\n  2. 用`jekyll serve –watch`或`bundle exec jekyll server`启动服务器，在浏览器里查看。(指定端口在**_config.yml**文件中增加`port: xxxx`)\n  1. 用git客户端推送到远程仓库里。\n  2. 通过域名访问。\n\n---\n\n# 绑定域名\n原理和博客绑定域名是一样的\n\n* 1· 在你的项目下新建一个**CNAME**文件，注意没有后缀名。在里面添加你的域名，如我的就是** leolan.top**，然后推送**CNAME文件**到远程仓库。（方法二是直接在pages页上找到域名绑定设置，最好同时绑定如：**leolan.top**和**www.leolan.top**,少绑一个，没绑的那个打不开）\n* 2· 到域名服务商那里增加你的CNAME记录。添加两条记录，@和www的主机记录，记录类型为CNAME，记录值为 `username.github.io. `，重要的是 io 后面还有一个原点（看官方帮助文档Coding的就不用加点），切记。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E5%9F%9F%E5%90%8D%E7%BB%91%E5%AE%9A.png)\n过几分钟，刷新网页，就能直接用域名访问了，因为是在项目内建的**CNAME**文件，所以域名直接指向此项目文件夹，其他项目可以用其他域名设定。\n\n---\n\n","source":"_posts/环境搭建/2016-11-08-用Jekyll搭建博客.md","raw":"---\ntitle: 用Jekyll搭建博客\ncategories:\n  - 环境搭建\ntags:\n  - 用Jekyll搭建博客\n  - jekyll github\n  - jekyll Coding\nabbrlink: 56436\ndate: 2016-11-08 15:13:11\n---\n\n# 安装Jekyll\nJekyll用Ruby写的，jekyll是把原文上传github，可以直接生成博客，也可以用在线编辑器处理。\n  1. 搭建ruby环境（ruby版本最好大于2.2.2），详见：[Ruby开发环境搭建](http://leolan.top/2016/10/31/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA-2016-10-21-Ruby%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/)  \n  2. 安装kramdown（Markdown文档处理器）\ngem install kramdown\n  3. 安装rouge（语法高亮）\ngem install rouge\n  4. 动态处理插件exec\ngem install execjs\n  5. 安装ruby工具集管理工具Bundler\ngem install bundler\n  6. 安装rails WEB框架（可选，不安装运行jekyll时可能报错）\ngem install rails\n  7.安装Jekyll（“Mac的安装见错误解决”）\ngem install jekyll\n\n之后需要添加功能，要安装其他gems插件时，进入该项目目录再安装，不然不会被包含，就不会生效。\n错误解决：\n**Mac**：\n\n```\nmkdir -p /usr/local/Cellar/ruby/bin\nsudo gem install jekyll -n /usr/local/Cellar/ruby/bin```\n\n关闭终端窗口再打开，输入**jekyll**看这个指令是否存在，如果提示不存在，那就再修改\n`/Users/用户名/.bash_profile`文件，把Jekyll的路径写进去。\n`export PATH=/usr/local/Cellar/ruby/bin:$PATH`再重新打开终端，这时候Jekyll指令应该ok了。\n注：`whereis gem`可以看到路径是**/usr/bin/gem**,当前的gem路径是**系统默认的gem版本**，这个版本用了是会报错的，用这个版本安装Jekyll默认安装Jekyll到相同目录下，所以同样会出现permission denied的报错信息。有人说可以用symlink，但即使用了sudo也会是permission denied的报错。所以直接安装Jekyll并同时指定安装路径了。\n\n**Windows**：\n如果安装jekyll或bundle报错，则需要安装编译工具。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8Jekyll%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A201.png)\n打开：http://rubyinstaller.org/downloads/  下载对应的**DevKit-mingw**，解压到没有中文、空格、特殊符号的文件夹，\n  1. cmd进入该目录\n  2. 命令行下运行`ruby dk.rb init`\n  3. 编辑目录下的**config.yml**文件 最尾加上`- C:\\Ruby23-x64  #即ruby安装目录`\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8Jekyll%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A202.png)\n  4. 运行`ruby dk.rb review   #（可选，一般不用运行）`\n  5. 运行`ruby dk.rb install`\n  6. 如果上述步骤**只有info输出**而**没有warning输出**，则应该安装成功了\n  7. 测试`gem install json --platform=ruby`如果安装成功，则表示devkit安装成功。\n  8. 如果失败，可以重装ruby和ruby-devkit，或者选择2.0.0以上版本的ruby版本，或https://rubygems.org/pages/download 按提示更新gem版本。\n\nok,安装完成啦！\n\n---\n\n# 建立站点\n```\njekyll new new-site   #创建新站点\ncd new-site           #进入站点目录下一步才能开启服务\njekyll serve --watch  #加--watch参数修改后会自动刷新页面，而不用手动重启jekyll\njekyll build          #写了新文章后，编译文档```\n然后访问localhost:4000就能看到blog的页面了。\n\n注：运行报**Could not find a JavaScript runtime.**错误\n答：在**gemfile**中加入\n```\ngem 'execjs'  \ngem 'therubyracer'  ```\n然后安装`gem install therubyracer ` 再运行就好了。\n\n一个基本的 Jekyll 网站的目录结构一般是像这样的：\n\n```\n├── _config.yml  #配置文件 \n├── _drafts      #草稿目录\n| ├── begin-with-the-crazy-ideas.textile\n| └── on-simplicity-in-technology.markdown\n├── _includes    #你可以加载这些包含部分到你的布局或者文章中以方便重用。可以用这个标签 {\\% include file.ext \\%} 来把文件 _includes/file.ext 包含进来。\n| ├── footer.html  #HTML尾\n| └── header.html  #HTML头\n├── _layouts\n| ├── default.html #默认模板\n| └── post.html    #文章模板\n├── _posts         #文章目录\n| ├── XXXX.md\n| └── XXXXXX.md\n├── _data\n| └── members.yml\n├── _site         #生成的站点文件存放目录\n└── index.html    #入口index文件\n└──Other Files/Folders   #其他一些未被提及的目录和文件如 css 还有 images 文件夹， favicon.ico 等文件都将被完全拷贝到生成的 site 中。\n```\n安装完成后，如果你要配置你自己的站点信息，那么你就要修改**_config.yml**这个文件。里面可以配置站点名称，描述，多说，统计，友链等等。\n参考：\nhttp://jekyll.com.cn/   中文官网\nhttp://pwnny.cn/original/2016/06/26/MakeBlog.html\n\n写文章在_posts里，文件名按**YEAR-MONTH-DAY-title.md**创建文件，\n在文章头部添加YAML头信息（YAML front- matter）：\n\n```\n---\nlayout: post\ntitle:  \"第一篇博客\"\ndate:   2016/10/26 13:03:42\ncategories: 文章阅读\ntag: 第一篇博客,jekyll搭建博客\n---\n\n这里开始用Markdown的语法编写文章。\n\n```\n每次都自己写yml文件头太麻烦，配置中会说到用Rakefile脚本自动生成文件。**注意：yml文件头不要有中文，.md文件名也不要有中文，**否则网页会显示404错误（原因未知）\n\n---\n\n# 配置优化、美化站点\n## 主题部分\n可以在http://jekyllthemes.org/这个上面找找，Hux这个主题还是不错的，喜欢的直接下载，重新修改里面配置就行了。可以fork或下载回来，整个替换，把文章拷过去就行。一个很好的Hux模板：https://github.com/huxpro/huxpro.github.io/\n\n## 配置文件设置\n我用到的参数：\n```\n#不要在配置文件中使用 tab 制表符,用空格代替。\n#配置请参考：http://jekyllcn.com/docs/configuration/#front-matter-defaults\n\n\n# Site settings\ntitle: LeoLan的博客\nauthor: Leo Lan\nemail: 842632422@qq.com\ndescription: > # this means to ignore newlines until \"baseurl:\"\n  Write an awesome description for your new site here. You can edit this\n  line in _config.yml. It will appear in your document head meta (for\n  Google search results) and in your feed.xml site description.\n\n#自定义站点标题\n#webrick:\n#  headers:\n#    My-Header: My-Value\n#    My-Other-Header: My-Other-Value\n\n\n# Site URL NOTE: if your site is base on subdir /blog you should change base to \"/blog\"\ndomain: \"http://myleolan.github.io\" #你的github网址  the domain URL for your site\nbase: \"\"  # the relative path that different with domain so you can test locally\n\n# Source URL NOTE: end with / cause it's [URL + FILE]\nw3c_url: \"/w3c/\"  # the base url of css js and images\npostImage_url: \"/w3c/images/\" # the base url of post images\npostfile: \"/db/Postfile\" # the Database\nsitefile: \"/db/Sitefile\" # the Database\n\n# 3rd URL\nduoshuo_short_name: \"leolan\" # 注册多说是填写的网址前缀 the user of user.domain.com \nduoshuo_user_uid: \"a61c3f290749b621688a3f42c7e8e31c\" #多说的uid   the admin user uid  \nduoshuo_user_name: \"leolan\" #多说的用户名 the admin user names   \nduoshuo_max_depth: \"2\"  # the max_depth setting in duoshuo comments\nduoshuo_url: \"/w3c/duoshuo/embed.min.js\" # the local duoshuo comment plugin, you can change it to remote \"http://static.duoshuo.com/\"\njquery_url: \"http://cdn.bootcss.com/jquery/3.1.0/jquery.min.js\" # use cdn\nbaiduTemplate_url: \"/w3c/js/baiduTemplate.js\" #use local\ngoogle_analytics_id: \"UA-86334360-1\"  #Google分析\n\n# Build Settings\nexcerpt_separator: \"\\n\\n\" # you can specify your own separator here, default is \"\\n\\n\" String\npermalink: /:year/:month/:day/:title.html   #生成html文件的命名方式\nhighlighter: rouge   #代码高亮\nmarkdown: kramdown   #markdown文档处理器\nkramdown:\n  input: GFM\n  hard_wrap: true # a newline in markdown text would be changed to <br>\n\n#插件（需要包含的插件）\ngems:\n  - jemoji\n\nlsi: BOOL   #建立文件索引\n\n####---------------------------------------------------------------------\n#以下为github的默认设置\n\n# Following is got in Github Help With Configuring Jekyll\n# Github Page Default Settings which you can override:\n\n# kramdown:\n#   input: GFM\n#   hard_wrap: false\n# gems:\n#   - jekyll-coffeescript\n#   - jekyll-paginate\n\n# Github Page override the following settings which you cannot change:\n# lsi: false\n# safe: true    #安全方式，禁用所有插件\n# source: [your repo's top level directory]\n# incremental: false\n# highlighter: rouge\n# gist:\n#  noscript: false\n# kramdown:\n#  math_engine: mathjax\n\n```\n\n## 自动生成文件模板\n前面说到的带yml信息的文件头\n```\n---\nlayout: post\ntitle:  \"第一篇博客\"\ndate:   2016/10/26 13:03:42\ncategories: 文章阅读\ntag: 第一篇博客,jekyll搭建博客\n---```\n文件头可以自动生成，而不用每次都手工码字，在网站根目录下创建Rakefile文件（ruby的一中脚本配置文件）\n里面填入代码：\n\n```\ntask :default => :new\n\nrequire 'fileutils'\n\ndesc \"创建新 post\"\ntask :new do\n  puts \"请输入要创建的.md文件名：\"\n  @url = STDIN.gets.chomp\n  puts \"请输入 文章 标题：\"\n  @name = STDIN.gets.chomp\n  puts \"请输入 文章 子标题：\"\n  @subtitle = STDIN.gets.chomp\n  puts \"请输入 文章 分类，以空格分隔：\"\n  @categories = STDIN.gets.chomp\n  puts \"请输入 博客分类 标签，以空格分隔：\"\n  @tag = STDIN.gets.chomp\n  @slug = \"#{@url}\"\n  @slug = @slug.downcase.strip.gsub(' ', '-')\n  @date = Time.now.strftime(\"%F\")\n  @post_name = \"_posts/#{@date}-#{@slug}.md\"\n  if File.exist?(@post_name)\n      abort(\"文件名已经存在！创建失败\")\n  end\n  FileUtils.touch(@post_name)\n  open(@post_name, 'a') do |file|\n      file.puts \"---\"\n      file.puts \"layout: post\"\n      file.puts \"title: #{@name}\"\n      file.puts \"subtitle: #{@subtitle}\"\n      file.puts \"author: Leo Lan\"\n      file.puts \"date: #{Time.now}\"\n      file.puts \"categories: #{@categories}\"\n      file.puts \"tag: #{@tag}\"\n      file.puts \"published: true\"\n      file.puts \"---\"\n  end\n  exec \"vim #{@post_name}\"\nend```\n**layout**表示使用的是post布局，title是文章标题，\n**date**是自动生成的日期，\n**subtitle**是副标题\n**categories**是该文章生成html文件后存放的目录（分类），可以去_site/jekyll/update下找到对应日期下面的html文档。当然你也可以只设置jekyll单一的目录，甚至是更多级别的目录，用空格分开即可。**tag**是文章的标签。\n**published**表示是否发布文章\n下次在命令行输入`rake new`按提示一步一步就能创建一个很好的文件啦，剩下的只需要专心写作就好了。\n\n\n参考：http://www.liubaicai.net/articles/733/\n\n\n---\n\n# 用Github Pages生成个人博客\nGithub Pages生成网站的两种方式的基本原理\n\n## 法一：\n在Github上有一个账号，名为 username （任意），有一个项目，名为 username.github.io （固定格式，username与账号名一致），项目分支名为 **master** （默认固定），这个分支有类似下面的目录结构：\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8Jekyll%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A203.png)\n当你访问 http://username.github.io/ 时，Github会使用Jekyll解析用户 username 名下的 username.github.io 项目中，分支为 master 的源代码，为你构建一个静态网站，并将生成的 index.html 展示给你。\n\n## 法二：\n在Github上有一个账号，名为 username （任意），有一个项目，名为 blog （任意），项目分支名为 **gh-pages **（固定），这个分支也有上面那种结构。\n那么当你访问 http://username.github.io/blog 时，Github会去解析 username 用户下，project 项目的 gh-pages 分支下的源代码，为你构建网站。\n\n所以要搭建自己的博客你有两种选择：\n* 建立名为 username.github.io 的项目，在 master 分支下存放网站源代码\n* 建立名为 blog 的项目，在 gh-pages 分支下存放网站源代码\n考虑到第一种项目名复杂不方便同步等，这里用第二种方法，方便管理。\n新建一个仓库，名称随意，ReadMe.md文件随意，不懂的查看教程第4节“创建远程仓库”：[git教程](http://leolan.top/2016/11/04/Dev-2016-11-04-Git%E6%95%99%E7%A8%8B/)\n\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8Jekyll%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A204.png)\n翻到下面，选择**Launch automatic page generator**\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8Jekyll%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A205.png)\n再接着编译一下内容，点**Continue to layouts**\n选好模板，点击**Publish page**，就生成了Github Pages，并且，分支自动设置为了gh-pages。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8Jekyll%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A206.png)\n\n打开网站看看效果：https://myleolan.github.io/blog/\n以后本地写好的文章，jekyll bundle之后就可以推送到gh-pages分支即可。推送博客到github推荐用命令行，Windows版的客户端不熟悉容易误操作。 博客源码和发布的博客网页在同一个仓库中，可以共同存放。（Hexo是生成的网站和博客原文分开存放的）\n\n# Github Pages环境本地化\n上面搭建的只是Jekyll的本地环境，当push到Github Pages后环境会有所变化，为了本地看到的效果和托管在Github Pages看到的效果一致，我们最好搭建本地的Github Pages环境。\nruby要2.0.0以上版本，如果`ruby --version`查看版本低于2.0.0，那么需要升级ruby。\n安装ruby工具集管理工具Bundler （前面安装过了就不用安装了）\n```\ngem install bundler\nbundler -v```\n\n进入jekyll创建的网站目录\n```\ngit init                      #把当前目录加入版本库中\ngit checkout -b gh-pages      #创建gh-pages分支，用于推送到github上的gh-pages分支上。```\n\n创建**Gemfile**文件 如果本生有Gemfile和Gemfile.lock那就删除掉，内容如下：\n```\nsource 'https://ruby.taobao.org'  #(淘宝源，国内比较快)\ngem 'github-pages', group: :jekyll_plugins\n或\nsource 'https://rubygems.org'   #(官方源)\ngem 'github-pages', group: :jekyll_plugins```\n\n执行下面的命令安装Github Pages的工具集**（在网站根目录，就是Gemfile文件的路径）**\n`bundle install`\n运行起来（一开始创建了网站就可以直接跑起来啦，如果没有创建网站，创建或fork别人的。）\n`bundle exec jekyll serve`\n\n如果出现**bundle exec jekyll serve**能启动，而**jekyll serve**不能启动，则删除Gemfile和Gemfile.lock重新运行jekyll serve即可。\n更多Github Pages本地化环境搭建，可参考官方文档:https://help.github.com/articles/setting-up-your-github-pages-site-locally-with-jekyll/\n\n注意：如果是是下载了别人的模板进行修改，只把文件拷到自己项目中进行添加就可以了，不要全选把**.git**文件夹也拷过了，别人的分支和自己的不同时会出现各种问题。\n\n调试好各种东西后就可以推送到Github了。\n  1. 用markdown写文章，并按规定名称格式保存在_posts里。\n  2. 用`jekyll serve –watch`或`bundle exec jekyll server`启动服务器，在浏览器里查看。(指定端口在**_config.yml**文件中增加`port: xxxx`)\n  1. 用git客户端推送到远程仓库里。\n  2. 通过域名访问。\n\n---\n\n# 绑定域名\n原理和博客绑定域名是一样的\n\n* 1· 在你的项目下新建一个**CNAME**文件，注意没有后缀名。在里面添加你的域名，如我的就是** leolan.top**，然后推送**CNAME文件**到远程仓库。（方法二是直接在pages页上找到域名绑定设置，最好同时绑定如：**leolan.top**和**www.leolan.top**,少绑一个，没绑的那个打不开）\n* 2· 到域名服务商那里增加你的CNAME记录。添加两条记录，@和www的主机记录，记录类型为CNAME，记录值为 `username.github.io. `，重要的是 io 后面还有一个原点（看官方帮助文档Coding的就不用加点），切记。\n![](http://ofyfogrgx.bkt.clouddn.com//blog/%E5%9F%9F%E5%90%8D%E7%BB%91%E5%AE%9A.png)\n过几分钟，刷新网页，就能直接用域名访问了，因为是在项目内建的**CNAME**文件，所以域名直接指向此项目文件夹，其他项目可以用其他域名设定。\n\n---\n\n","slug":"环境搭建-2016-11-08-用Jekyll搭建博客","published":1,"updated":"2016-11-13T03:36:30.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civi8oujr002u2c6n8a59xg9v","content":"<h1 id=\"安装Jekyll\"><a href=\"#安装Jekyll\" class=\"headerlink\" title=\"安装Jekyll\"></a>安装Jekyll</h1><p>Jekyll用Ruby写的，jekyll是把原文上传github，可以直接生成博客，也可以用在线编辑器处理。</p>\n<ol>\n<li>搭建ruby环境（ruby版本最好大于2.2.2），详见：<a href=\"http://leolan.top/2016/10/31/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA-2016-10-21-Ruby%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/\" target=\"_blank\" rel=\"external\">Ruby开发环境搭建</a>  </li>\n<li>安装kramdown（Markdown文档处理器）<br>gem install kramdown</li>\n<li>安装rouge（语法高亮）<br>gem install rouge</li>\n<li>动态处理插件exec<br>gem install execjs</li>\n<li>安装ruby工具集管理工具Bundler<br>gem install bundler</li>\n<li>安装rails WEB框架（可选，不安装运行jekyll时可能报错）<br>gem install rails<br>7.安装Jekyll（“Mac的安装见错误解决”）<br>gem install jekyll</li>\n</ol>\n<p>之后需要添加功能，要安装其他gems插件时，进入该项目目录再安装，不然不会被包含，就不会生效。<br>错误解决：<br><strong>Mac</strong>：</p>\n<figure class=\"highlight dts\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">mkdir -p <span class=\"meta-keyword\">/usr/</span>local/Cellar<span class=\"meta-keyword\">/ruby/</span>bin</div><div class=\"line\">sudo gem install jekyll -n <span class=\"meta-keyword\">/usr/</span>local/Cellar<span class=\"meta-keyword\">/ruby/</span>bin</div></pre></td></tr></table></figure>\n<p>关闭终端窗口再打开，输入<strong>jekyll</strong>看这个指令是否存在，如果提示不存在，那就再修改<br><code>/Users/用户名/.bash_profile</code>文件，把Jekyll的路径写进去。<br><code>export PATH=/usr/local/Cellar/ruby/bin:$PATH</code>再重新打开终端，这时候Jekyll指令应该ok了。<br>注：<code>whereis gem</code>可以看到路径是<strong>/usr/bin/gem</strong>,当前的gem路径是<strong>系统默认的gem版本</strong>，这个版本用了是会报错的，用这个版本安装Jekyll默认安装Jekyll到相同目录下，所以同样会出现permission denied的报错信息。有人说可以用symlink，但即使用了sudo也会是permission denied的报错。所以直接安装Jekyll并同时指定安装路径了。</p>\n<p><strong>Windows</strong>：<br>如果安装jekyll或bundle报错，则需要安装编译工具。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8Jekyll%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A201.png\" alt=\"\"><br>打开：<a href=\"http://rubyinstaller.org/downloads/\" target=\"_blank\" rel=\"external\">http://rubyinstaller.org/downloads/</a>  下载对应的<strong>DevKit-mingw</strong>，解压到没有中文、空格、特殊符号的文件夹，</p>\n<ol>\n<li>cmd进入该目录</li>\n<li>命令行下运行<code>ruby dk.rb init</code></li>\n<li>编辑目录下的<strong>config.yml</strong>文件 最尾加上<code>- C:\\Ruby23-x64  #即ruby安装目录</code><br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8Jekyll%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A202.png\" alt=\"\"></li>\n<li>运行<code>ruby dk.rb review   #（可选，一般不用运行）</code></li>\n<li>运行<code>ruby dk.rb install</code></li>\n<li>如果上述步骤<strong>只有info输出</strong>而<strong>没有warning输出</strong>，则应该安装成功了</li>\n<li>测试<code>gem install json --platform=ruby</code>如果安装成功，则表示devkit安装成功。</li>\n<li>如果失败，可以重装ruby和ruby-devkit，或者选择2.0.0以上版本的ruby版本，或<a href=\"https://rubygems.org/pages/download\" target=\"_blank\" rel=\"external\">https://rubygems.org/pages/download</a> 按提示更新gem版本。</li>\n</ol>\n<p>ok,安装完成啦！</p>\n<hr>\n<h1 id=\"建立站点\"><a href=\"#建立站点\" class=\"headerlink\" title=\"建立站点\"></a>建立站点</h1><figure class=\"highlight smali\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">jekyll<span class=\"built_in\"> new </span>new-site   <span class=\"comment\">#创建新站点</span></div><div class=\"line\">cd<span class=\"built_in\"> new-site </span>          <span class=\"comment\">#进入站点目录下一步才能开启服务</span></div><div class=\"line\">jekyll serve --watch  <span class=\"comment\">#加--watch参数修改后会自动刷新页面，而不用手动重启jekyll</span></div><div class=\"line\">jekyll build          <span class=\"comment\">#写了新文章后，编译文档</span></div></pre></td></tr></table></figure>\n<p>然后访问localhost:4000就能看到blog的页面了。</p>\n<p>注：运行报<strong>Could not find a JavaScript runtime.</strong>错误<br>答：在<strong>gemfile</strong>中加入<br><figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attribute\">gem</span> <span class=\"string\">'execjs'</span>  </div><div class=\"line\">gem <span class=\"string\">'therubyracer'</span></div></pre></td></tr></table></figure></p>\n<p>然后安装<code>gem install therubyracer</code> 再运行就好了。</p>\n<p>一个基本的 Jekyll 网站的目录结构一般是像这样的：</p>\n<figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\">├── _config.yml  <span class=\"meta\">#配置文件 </span></div><div class=\"line\">├── _drafts      <span class=\"meta\">#草稿目录</span></div><div class=\"line\"><span class=\"string\">| ├── begin-with-the-crazy-ideas.textile</span></div><div class=\"line\"><span class=\"string\">| └── on-simplicity-in-technology.markdown</span></div><div class=\"line\">├── _includes    <span class=\"meta\">#你可以加载这些包含部分到你的布局或者文章中以方便重用。可以用这个标签 &#123;\\% include file.ext \\%&#125; 来把文件 _includes/file.ext 包含进来。</span></div><div class=\"line\"><span class=\"string\">| ├── footer.html  #HTML尾</span></div><div class=\"line\"><span class=\"string\">| └── header.html  #HTML头</span></div><div class=\"line\">├── _layouts</div><div class=\"line\"><span class=\"string\">| ├── default.html #默认模板</span></div><div class=\"line\"><span class=\"string\">| └── post.html    #文章模板</span></div><div class=\"line\">├── _posts         <span class=\"meta\">#文章目录</span></div><div class=\"line\"><span class=\"string\">| ├── XXXX.md</span></div><div class=\"line\"><span class=\"string\">| └── XXXXXX.md</span></div><div class=\"line\">├── _data</div><div class=\"line\"><span class=\"string\">| └── members.yml</span></div><div class=\"line\">├── _site         <span class=\"meta\">#生成的站点文件存放目录</span></div><div class=\"line\">└── index.html    <span class=\"meta\">#入口index文件</span></div><div class=\"line\">└──Other Files/Folders   <span class=\"meta\">#其他一些未被提及的目录和文件如 css 还有 images 文件夹， favicon.ico 等文件都将被完全拷贝到生成的 site 中。</span></div></pre></td></tr></table></figure>\n<p>安装完成后，如果你要配置你自己的站点信息，那么你就要修改<strong>_config.yml</strong>这个文件。里面可以配置站点名称，描述，多说，统计，友链等等。<br>参考：<br><a href=\"http://jekyll.com.cn/\" target=\"_blank\" rel=\"external\">http://jekyll.com.cn/</a>   中文官网<br><a href=\"http://pwnny.cn/original/2016/06/26/MakeBlog.html\" target=\"_blank\" rel=\"external\">http://pwnny.cn/original/2016/06/26/MakeBlog.html</a></p>\n<p>写文章在_posts里，文件名按<strong>YEAR-MONTH-DAY-title.md</strong>创建文件，<br>在文章头部添加YAML头信息（YAML front- matter）：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">---</span></div><div class=\"line\"><span class=\"attr\">layout:</span> post</div><div class=\"line\"><span class=\"attr\">title:</span>  <span class=\"string\">\"第一篇博客\"</span></div><div class=\"line\"><span class=\"attr\">date:</span>   <span class=\"number\">2016</span>/<span class=\"number\">10</span>/<span class=\"number\">26</span> <span class=\"number\">13</span>:<span class=\"number\">03</span>:<span class=\"number\">42</span></div><div class=\"line\"><span class=\"attr\">categories:</span> 文章阅读</div><div class=\"line\"><span class=\"attr\">tag:</span> 第一篇博客,jekyll搭建博客</div><div class=\"line\"><span class=\"meta\">---</span></div><div class=\"line\"></div><div class=\"line\">这里开始用Markdown的语法编写文章。</div></pre></td></tr></table></figure>\n<p>每次都自己写yml文件头太麻烦，配置中会说到用Rakefile脚本自动生成文件。<strong>注意：yml文件头不要有中文，.md文件名也不要有中文，</strong>否则网页会显示404错误（原因未知）</p>\n<hr>\n<h1 id=\"配置优化、美化站点\"><a href=\"#配置优化、美化站点\" class=\"headerlink\" title=\"配置优化、美化站点\"></a>配置优化、美化站点</h1><h2 id=\"主题部分\"><a href=\"#主题部分\" class=\"headerlink\" title=\"主题部分\"></a>主题部分</h2><p>可以在<a href=\"http://jekyllthemes.org/这个上面找找，Hux这个主题还是不错的，喜欢的直接下载，重新修改里面配置就行了。可以fork或下载回来，整个替换，把文章拷过去就行。一个很好的Hux模板：https://github.com/huxpro/huxpro.github.io/\" target=\"_blank\" rel=\"external\">http://jekyllthemes.org/这个上面找找，Hux这个主题还是不错的，喜欢的直接下载，重新修改里面配置就行了。可以fork或下载回来，整个替换，把文章拷过去就行。一个很好的Hux模板：https://github.com/huxpro/huxpro.github.io/</a></p>\n<h2 id=\"配置文件设置\"><a href=\"#配置文件设置\" class=\"headerlink\" title=\"配置文件设置\"></a>配置文件设置</h2><p>我用到的参数：<br><figure class=\"highlight elixir\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#不要在配置文件中使用 tab 制表符,用空格代替。</span></div><div class=\"line\"><span class=\"comment\">#配置请参考：http://jekyllcn.com/docs/configuration/#front-matter-defaults</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Site settings</span></div><div class=\"line\"><span class=\"symbol\">title:</span> LeoLan的博客</div><div class=\"line\"><span class=\"symbol\">author:</span> Leo Lan</div><div class=\"line\"><span class=\"symbol\">email:</span> <span class=\"number\">842632422</span><span class=\"variable\">@qq</span>.com</div><div class=\"line\"><span class=\"symbol\">description:</span> &gt; <span class=\"comment\"># this means to ignore newlines until \"baseurl:\"</span></div><div class=\"line\">  Write an awesome description <span class=\"keyword\">for</span> your new site here. You can edit this</div><div class=\"line\">  line <span class=\"keyword\">in</span> _config.yml. It will appear <span class=\"keyword\">in</span> your document head meta (<span class=\"keyword\">for</span></div><div class=\"line\">  Google search results) <span class=\"keyword\">and</span> <span class=\"keyword\">in</span> your feed.xml site description.</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#自定义站点标题</span></div><div class=\"line\"><span class=\"comment\">#webrick:</span></div><div class=\"line\"><span class=\"comment\">#  headers:</span></div><div class=\"line\"><span class=\"comment\">#    My-Header: My-Value</span></div><div class=\"line\"><span class=\"comment\">#    My-Other-Header: My-Other-Value</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Site URL <span class=\"doctag\">NOTE:</span> if your site is base on subdir /blog you should change base to \"/blog\"</span></div><div class=\"line\"><span class=\"symbol\">domain:</span> <span class=\"string\">\"http://myleolan.github.io\"</span> <span class=\"comment\">#你的github网址  the domain URL for your site</span></div><div class=\"line\"><span class=\"symbol\">base:</span> <span class=\"string\">\"\"</span>  <span class=\"comment\"># the relative path that different with domain so you can test locally</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Source URL <span class=\"doctag\">NOTE:</span> end with / cause it's [URL + FILE]</span></div><div class=\"line\"><span class=\"symbol\">w3c_url:</span> <span class=\"string\">\"/w3c/\"</span>  <span class=\"comment\"># the base url of css js and images</span></div><div class=\"line\"><span class=\"symbol\">postImage_url:</span> <span class=\"string\">\"/w3c/images/\"</span> <span class=\"comment\"># the base url of post images</span></div><div class=\"line\"><span class=\"symbol\">postfile:</span> <span class=\"string\">\"/db/Postfile\"</span> <span class=\"comment\"># the Database</span></div><div class=\"line\"><span class=\"symbol\">sitefile:</span> <span class=\"string\">\"/db/Sitefile\"</span> <span class=\"comment\"># the Database</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># 3rd URL</span></div><div class=\"line\"><span class=\"symbol\">duoshuo_short_name:</span> <span class=\"string\">\"leolan\"</span> <span class=\"comment\"># 注册多说是填写的网址前缀 the user of user.domain.com </span></div><div class=\"line\"><span class=\"symbol\">duoshuo_user_uid:</span> <span class=\"string\">\"a61c3f290749b621688a3f42c7e8e31c\"</span> <span class=\"comment\">#多说的uid   the admin user uid  </span></div><div class=\"line\"><span class=\"symbol\">duoshuo_user_name:</span> <span class=\"string\">\"leolan\"</span> <span class=\"comment\">#多说的用户名 the admin user names   </span></div><div class=\"line\"><span class=\"symbol\">duoshuo_max_depth:</span> <span class=\"string\">\"2\"</span>  <span class=\"comment\"># the max_depth setting in duoshuo comments</span></div><div class=\"line\"><span class=\"symbol\">duoshuo_url:</span> <span class=\"string\">\"/w3c/duoshuo/embed.min.js\"</span> <span class=\"comment\"># the local duoshuo comment plugin, you can change it to remote \"http://static.duoshuo.com/\"</span></div><div class=\"line\"><span class=\"symbol\">jquery_url:</span> <span class=\"string\">\"http://cdn.bootcss.com/jquery/3.1.0/jquery.min.js\"</span> <span class=\"comment\"># use cdn</span></div><div class=\"line\"><span class=\"symbol\">baiduTemplate_url:</span> <span class=\"string\">\"/w3c/js/baiduTemplate.js\"</span> <span class=\"comment\">#use local</span></div><div class=\"line\"><span class=\"symbol\">google_analytics_id:</span> <span class=\"string\">\"UA-86334360-1\"</span>  <span class=\"comment\">#Google分析</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Build Settings</span></div><div class=\"line\"><span class=\"symbol\">excerpt_separator:</span> <span class=\"string\">\"\\n\\n\"</span> <span class=\"comment\"># you can specify your own separator here, default is \"\\n\\n\" String</span></div><div class=\"line\"><span class=\"symbol\">permalink:</span> /<span class=\"symbol\">:year/</span><span class=\"symbol\">:month/</span><span class=\"symbol\">:day/</span><span class=\"symbol\">:title</span>.html   <span class=\"comment\">#生成html文件的命名方式</span></div><div class=\"line\"><span class=\"symbol\">highlighter:</span> rouge   <span class=\"comment\">#代码高亮</span></div><div class=\"line\"><span class=\"symbol\">markdown:</span> kramdown   <span class=\"comment\">#markdown文档处理器</span></div><div class=\"line\"><span class=\"symbol\">kramdown:</span></div><div class=\"line\">  <span class=\"symbol\">input:</span> GFM</div><div class=\"line\">  <span class=\"symbol\">hard_wrap:</span> <span class=\"keyword\">true</span> <span class=\"comment\"># a newline in markdown text would be changed to &lt;br&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#插件（需要包含的插件）</span></div><div class=\"line\"><span class=\"symbol\">gems:</span></div><div class=\"line\">  - jemoji</div><div class=\"line\"></div><div class=\"line\"><span class=\"symbol\">lsi:</span> BOOL   <span class=\"comment\">#建立文件索引</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">####---------------------------------------------------------------------</span></div><div class=\"line\"><span class=\"comment\">#以下为github的默认设置</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Following is got in Github Help With Configuring Jekyll</span></div><div class=\"line\"><span class=\"comment\"># Github Page Default Settings which you can override:</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># kramdown:</span></div><div class=\"line\"><span class=\"comment\">#   input: GFM</span></div><div class=\"line\"><span class=\"comment\">#   hard_wrap: false</span></div><div class=\"line\"><span class=\"comment\"># gems:</span></div><div class=\"line\"><span class=\"comment\">#   - jekyll-coffeescript</span></div><div class=\"line\"><span class=\"comment\">#   - jekyll-paginate</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Github Page override the following settings which you cannot change:</span></div><div class=\"line\"><span class=\"comment\"># lsi: false</span></div><div class=\"line\"><span class=\"comment\"># safe: true    #安全方式，禁用所有插件</span></div><div class=\"line\"><span class=\"comment\"># source: [your repo's top level directory]</span></div><div class=\"line\"><span class=\"comment\"># incremental: false</span></div><div class=\"line\"><span class=\"comment\"># highlighter: rouge</span></div><div class=\"line\"><span class=\"comment\"># gist:</span></div><div class=\"line\"><span class=\"comment\">#  noscript: false</span></div><div class=\"line\"><span class=\"comment\"># kramdown:</span></div><div class=\"line\"><span class=\"comment\">#  math_engine: mathjax</span></div></pre></td></tr></table></figure></p>\n<h2 id=\"自动生成文件模板\"><a href=\"#自动生成文件模板\" class=\"headerlink\" title=\"自动生成文件模板\"></a>自动生成文件模板</h2><p>前面说到的带yml信息的文件头<br><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">---</span></div><div class=\"line\"><span class=\"attr\">layout:</span> post</div><div class=\"line\"><span class=\"attr\">title:</span>  <span class=\"string\">\"第一篇博客\"</span></div><div class=\"line\"><span class=\"attr\">date:</span>   <span class=\"number\">2016</span>/<span class=\"number\">10</span>/<span class=\"number\">26</span> <span class=\"number\">13</span>:<span class=\"number\">03</span>:<span class=\"number\">42</span></div><div class=\"line\"><span class=\"attr\">categories:</span> 文章阅读</div><div class=\"line\"><span class=\"attr\">tag:</span> 第一篇博客,jekyll搭建博客</div><div class=\"line\"><span class=\"meta\">---</span></div></pre></td></tr></table></figure></p>\n<p>文件头可以自动生成，而不用每次都手工码字，在网站根目录下创建Rakefile文件（ruby的一中脚本配置文件）<br>里面填入代码：</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div></pre></td><td class=\"code\"><pre><div class=\"line\">task <span class=\"symbol\">:default</span> =&gt; <span class=\"symbol\">:new</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">require</span> <span class=\"string\">'fileutils'</span></div><div class=\"line\"></div><div class=\"line\">desc <span class=\"string\">\"创建新 post\"</span></div><div class=\"line\">task <span class=\"symbol\">:new</span> <span class=\"keyword\">do</span></div><div class=\"line\">  puts <span class=\"string\">\"请输入要创建的.md文件名：\"</span></div><div class=\"line\">  @url = STDIN.gets.chomp</div><div class=\"line\">  puts <span class=\"string\">\"请输入 文章 标题：\"</span></div><div class=\"line\">  @name = STDIN.gets.chomp</div><div class=\"line\">  puts <span class=\"string\">\"请输入 文章 子标题：\"</span></div><div class=\"line\">  @subtitle = STDIN.gets.chomp</div><div class=\"line\">  puts <span class=\"string\">\"请输入 文章 分类，以空格分隔：\"</span></div><div class=\"line\">  @categories = STDIN.gets.chomp</div><div class=\"line\">  puts <span class=\"string\">\"请输入 博客分类 标签，以空格分隔：\"</span></div><div class=\"line\">  @tag = STDIN.gets.chomp</div><div class=\"line\">  @slug = <span class=\"string\">\"<span class=\"subst\">#&#123;@url&#125;</span>\"</span></div><div class=\"line\">  @slug = @slug.downcase.strip.gsub(<span class=\"string\">' '</span>, <span class=\"string\">'-'</span>)</div><div class=\"line\">  @date = Time.now.strftime(<span class=\"string\">\"%F\"</span>)</div><div class=\"line\">  @post_name = <span class=\"string\">\"_posts/<span class=\"subst\">#&#123;@date&#125;</span>-<span class=\"subst\">#&#123;@slug&#125;</span>.md\"</span></div><div class=\"line\">  <span class=\"keyword\">if</span> File.exist?(@post_name)</div><div class=\"line\">      abort(<span class=\"string\">\"文件名已经存在！创建失败\"</span>)</div><div class=\"line\">  <span class=\"keyword\">end</span></div><div class=\"line\">  FileUtils.touch(@post_name)</div><div class=\"line\">  open(@post_name, <span class=\"string\">'a'</span>) <span class=\"keyword\">do</span> <span class=\"params\">|file|</span></div><div class=\"line\">      file.puts <span class=\"string\">\"---\"</span></div><div class=\"line\">      file.puts <span class=\"string\">\"layout: post\"</span></div><div class=\"line\">      file.puts <span class=\"string\">\"title: <span class=\"subst\">#&#123;@name&#125;</span>\"</span></div><div class=\"line\">      file.puts <span class=\"string\">\"subtitle: <span class=\"subst\">#&#123;@subtitle&#125;</span>\"</span></div><div class=\"line\">      file.puts <span class=\"string\">\"author: Leo Lan\"</span></div><div class=\"line\">      file.puts <span class=\"string\">\"date: <span class=\"subst\">#&#123;Time.now&#125;</span>\"</span></div><div class=\"line\">      file.puts <span class=\"string\">\"categories: <span class=\"subst\">#&#123;@categories&#125;</span>\"</span></div><div class=\"line\">      file.puts <span class=\"string\">\"tag: <span class=\"subst\">#&#123;@tag&#125;</span>\"</span></div><div class=\"line\">      file.puts <span class=\"string\">\"published: true\"</span></div><div class=\"line\">      file.puts <span class=\"string\">\"---\"</span></div><div class=\"line\">  <span class=\"keyword\">end</span></div><div class=\"line\">  exec <span class=\"string\">\"vim <span class=\"subst\">#&#123;@post_name&#125;</span>\"</span></div><div class=\"line\"><span class=\"keyword\">end</span></div></pre></td></tr></table></figure>\n<p><strong>layout</strong>表示使用的是post布局，title是文章标题，<br><strong>date</strong>是自动生成的日期，<br><strong>subtitle</strong>是副标题<br><strong>categories</strong>是该文章生成html文件后存放的目录（分类），可以去_site/jekyll/update下找到对应日期下面的html文档。当然你也可以只设置jekyll单一的目录，甚至是更多级别的目录，用空格分开即可。<strong>tag</strong>是文章的标签。<br><strong>published</strong>表示是否发布文章<br>下次在命令行输入<code>rake new</code>按提示一步一步就能创建一个很好的文件啦，剩下的只需要专心写作就好了。</p>\n<p>参考：<a href=\"http://www.liubaicai.net/articles/733/\" target=\"_blank\" rel=\"external\">http://www.liubaicai.net/articles/733/</a></p>\n<hr>\n<h1 id=\"用Github-Pages生成个人博客\"><a href=\"#用Github-Pages生成个人博客\" class=\"headerlink\" title=\"用Github Pages生成个人博客\"></a>用Github Pages生成个人博客</h1><p>Github Pages生成网站的两种方式的基本原理</p>\n<h2 id=\"法一：\"><a href=\"#法一：\" class=\"headerlink\" title=\"法一：\"></a>法一：</h2><p>在Github上有一个账号，名为 username （任意），有一个项目，名为 username.github.io （固定格式，username与账号名一致），项目分支名为 <strong>master</strong> （默认固定），这个分支有类似下面的目录结构：<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8Jekyll%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A203.png\" alt=\"\"><br>当你访问 <a href=\"http://username.github.io/\" target=\"_blank\" rel=\"external\">http://username.github.io/</a> 时，Github会使用Jekyll解析用户 username 名下的 username.github.io 项目中，分支为 master 的源代码，为你构建一个静态网站，并将生成的 index.html 展示给你。</p>\n<h2 id=\"法二：\"><a href=\"#法二：\" class=\"headerlink\" title=\"法二：\"></a>法二：</h2><p>在Github上有一个账号，名为 username （任意），有一个项目，名为 blog （任意），项目分支名为 <strong>gh-pages </strong>（固定），这个分支也有上面那种结构。<br>那么当你访问 <a href=\"http://username.github.io/blog\" target=\"_blank\" rel=\"external\">http://username.github.io/blog</a> 时，Github会去解析 username 用户下，project 项目的 gh-pages 分支下的源代码，为你构建网站。</p>\n<p>所以要搭建自己的博客你有两种选择：</p>\n<ul>\n<li>建立名为 username.github.io 的项目，在 master 分支下存放网站源代码</li>\n<li>建立名为 blog 的项目，在 gh-pages 分支下存放网站源代码<br>考虑到第一种项目名复杂不方便同步等，这里用第二种方法，方便管理。<br>新建一个仓库，名称随意，ReadMe.md文件随意，不懂的查看教程第4节“创建远程仓库”：<a href=\"http://leolan.top/2016/11/04/Dev-2016-11-04-Git%E6%95%99%E7%A8%8B/\" target=\"_blank\" rel=\"external\">git教程</a></li>\n</ul>\n<p><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8Jekyll%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A204.png\" alt=\"\"><br>翻到下面，选择<strong>Launch automatic page generator</strong><br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8Jekyll%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A205.png\" alt=\"\"><br>再接着编译一下内容，点<strong>Continue to layouts</strong><br>选好模板，点击<strong>Publish page</strong>，就生成了Github Pages，并且，分支自动设置为了gh-pages。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8Jekyll%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A206.png\" alt=\"\"></p>\n<p>打开网站看看效果：<a href=\"https://myleolan.github.io/blog/\" target=\"_blank\" rel=\"external\">https://myleolan.github.io/blog/</a><br>以后本地写好的文章，jekyll bundle之后就可以推送到gh-pages分支即可。推送博客到github推荐用命令行，Windows版的客户端不熟悉容易误操作。 博客源码和发布的博客网页在同一个仓库中，可以共同存放。（Hexo是生成的网站和博客原文分开存放的）</p>\n<h1 id=\"Github-Pages环境本地化\"><a href=\"#Github-Pages环境本地化\" class=\"headerlink\" title=\"Github Pages环境本地化\"></a>Github Pages环境本地化</h1><p>上面搭建的只是Jekyll的本地环境，当push到Github Pages后环境会有所变化，为了本地看到的效果和托管在Github Pages看到的效果一致，我们最好搭建本地的Github Pages环境。<br>ruby要2.0.0以上版本，如果<code>ruby --version</code>查看版本低于2.0.0，那么需要升级ruby。<br>安装ruby工具集管理工具Bundler （前面安装过了就不用安装了）<br><figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">gem <span class=\"keyword\">install </span><span class=\"keyword\">bundler</span></div><div class=\"line\"><span class=\"keyword\">bundler </span>-v</div></pre></td></tr></table></figure></p>\n<p>进入jekyll创建的网站目录<br><figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">git init                      <span class=\"comment\">#把当前目录加入版本库中</span></div><div class=\"line\">git checkout -<span class=\"keyword\">b </span>gh-pages      <span class=\"comment\">#创建gh-pages分支，用于推送到github上的gh-pages分支上。</span></div></pre></td></tr></table></figure></p>\n<p>创建<strong>Gemfile</strong>文件 如果本生有Gemfile和Gemfile.lock那就删除掉，内容如下：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">source</span> <span class=\"string\">'https://ruby.taobao.org'</span>  <span class=\"comment\">#(淘宝源，国内比较快)</span></div><div class=\"line\">gem <span class=\"string\">'github-pages'</span>, group: :jekyll_plugins</div><div class=\"line\">或</div><div class=\"line\"><span class=\"built_in\">source</span> <span class=\"string\">'https://rubygems.org'</span>   <span class=\"comment\">#(官方源)</span></div><div class=\"line\">gem <span class=\"string\">'github-pages'</span>, group: :jekyll_plugins</div></pre></td></tr></table></figure></p>\n<p>执行下面的命令安装Github Pages的工具集<strong>（在网站根目录，就是Gemfile文件的路径）</strong><br><code>bundle install</code><br>运行起来（一开始创建了网站就可以直接跑起来啦，如果没有创建网站，创建或fork别人的。）<br><code>bundle exec jekyll serve</code></p>\n<p>如果出现<strong>bundle exec jekyll serve</strong>能启动，而<strong>jekyll serve</strong>不能启动，则删除Gemfile和Gemfile.lock重新运行jekyll serve即可。<br>更多Github Pages本地化环境搭建，可参考官方文档:<a href=\"https://help.github.com/articles/setting-up-your-github-pages-site-locally-with-jekyll/\" target=\"_blank\" rel=\"external\">https://help.github.com/articles/setting-up-your-github-pages-site-locally-with-jekyll/</a></p>\n<p>注意：如果是是下载了别人的模板进行修改，只把文件拷到自己项目中进行添加就可以了，不要全选把<strong>.git</strong>文件夹也拷过了，别人的分支和自己的不同时会出现各种问题。</p>\n<p>调试好各种东西后就可以推送到Github了。</p>\n<ol>\n<li>用markdown写文章，并按规定名称格式保存在_posts里。</li>\n<li>用<code>jekyll serve –watch</code>或<code>bundle exec jekyll server</code>启动服务器，在浏览器里查看。(指定端口在<strong>_config.yml</strong>文件中增加<code>port: xxxx</code>)</li>\n<li>用git客户端推送到远程仓库里。</li>\n<li>通过域名访问。</li>\n</ol>\n<hr>\n<h1 id=\"绑定域名\"><a href=\"#绑定域名\" class=\"headerlink\" title=\"绑定域名\"></a>绑定域名</h1><p>原理和博客绑定域名是一样的</p>\n<ul>\n<li>1· 在你的项目下新建一个<strong>CNAME</strong>文件，注意没有后缀名。在里面添加你的域名，如我的就是<strong> leolan.top</strong>，然后推送<strong>CNAME文件</strong>到远程仓库。（方法二是直接在pages页上找到域名绑定设置，最好同时绑定如：<strong>leolan.top</strong>和<strong>www.leolan.top</strong>,少绑一个，没绑的那个打不开）</li>\n<li>2· 到域名服务商那里增加你的CNAME记录。添加两条记录，@和www的主机记录，记录类型为CNAME，记录值为 <code>username.github.io.</code>，重要的是 io 后面还有一个原点（看官方帮助文档Coding的就不用加点），切记。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E5%9F%9F%E5%90%8D%E7%BB%91%E5%AE%9A.png\" alt=\"\"><br>过几分钟，刷新网页，就能直接用域名访问了，因为是在项目内建的<strong>CNAME</strong>文件，所以域名直接指向此项目文件夹，其他项目可以用其他域名设定。</li>\n</ul>\n<hr>\n","excerpt":"","more":"<h1 id=\"安装Jekyll\"><a href=\"#安装Jekyll\" class=\"headerlink\" title=\"安装Jekyll\"></a>安装Jekyll</h1><p>Jekyll用Ruby写的，jekyll是把原文上传github，可以直接生成博客，也可以用在线编辑器处理。</p>\n<ol>\n<li>搭建ruby环境（ruby版本最好大于2.2.2），详见：<a href=\"http://leolan.top/2016/10/31/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA-2016-10-21-Ruby%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/\">Ruby开发环境搭建</a>  </li>\n<li>安装kramdown（Markdown文档处理器）<br>gem install kramdown</li>\n<li>安装rouge（语法高亮）<br>gem install rouge</li>\n<li>动态处理插件exec<br>gem install execjs</li>\n<li>安装ruby工具集管理工具Bundler<br>gem install bundler</li>\n<li>安装rails WEB框架（可选，不安装运行jekyll时可能报错）<br>gem install rails<br>7.安装Jekyll（“Mac的安装见错误解决”）<br>gem install jekyll</li>\n</ol>\n<p>之后需要添加功能，要安装其他gems插件时，进入该项目目录再安装，不然不会被包含，就不会生效。<br>错误解决：<br><strong>Mac</strong>：</p>\n<figure class=\"highlight dts\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">mkdir -p <span class=\"meta-keyword\">/usr/</span>local/Cellar<span class=\"meta-keyword\">/ruby/</span>bin</div><div class=\"line\">sudo gem install jekyll -n <span class=\"meta-keyword\">/usr/</span>local/Cellar<span class=\"meta-keyword\">/ruby/</span>bin</div></pre></td></tr></table></figure>\n<p>关闭终端窗口再打开，输入<strong>jekyll</strong>看这个指令是否存在，如果提示不存在，那就再修改<br><code>/Users/用户名/.bash_profile</code>文件，把Jekyll的路径写进去。<br><code>export PATH=/usr/local/Cellar/ruby/bin:$PATH</code>再重新打开终端，这时候Jekyll指令应该ok了。<br>注：<code>whereis gem</code>可以看到路径是<strong>/usr/bin/gem</strong>,当前的gem路径是<strong>系统默认的gem版本</strong>，这个版本用了是会报错的，用这个版本安装Jekyll默认安装Jekyll到相同目录下，所以同样会出现permission denied的报错信息。有人说可以用symlink，但即使用了sudo也会是permission denied的报错。所以直接安装Jekyll并同时指定安装路径了。</p>\n<p><strong>Windows</strong>：<br>如果安装jekyll或bundle报错，则需要安装编译工具。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8Jekyll%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A201.png\" alt=\"\"><br>打开：<a href=\"http://rubyinstaller.org/downloads/\">http://rubyinstaller.org/downloads/</a>  下载对应的<strong>DevKit-mingw</strong>，解压到没有中文、空格、特殊符号的文件夹，</p>\n<ol>\n<li>cmd进入该目录</li>\n<li>命令行下运行<code>ruby dk.rb init</code></li>\n<li>编辑目录下的<strong>config.yml</strong>文件 最尾加上<code>- C:\\Ruby23-x64  #即ruby安装目录</code><br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8Jekyll%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A202.png\" alt=\"\"></li>\n<li>运行<code>ruby dk.rb review   #（可选，一般不用运行）</code></li>\n<li>运行<code>ruby dk.rb install</code></li>\n<li>如果上述步骤<strong>只有info输出</strong>而<strong>没有warning输出</strong>，则应该安装成功了</li>\n<li>测试<code>gem install json --platform=ruby</code>如果安装成功，则表示devkit安装成功。</li>\n<li>如果失败，可以重装ruby和ruby-devkit，或者选择2.0.0以上版本的ruby版本，或<a href=\"https://rubygems.org/pages/download\">https://rubygems.org/pages/download</a> 按提示更新gem版本。</li>\n</ol>\n<p>ok,安装完成啦！</p>\n<hr>\n<h1 id=\"建立站点\"><a href=\"#建立站点\" class=\"headerlink\" title=\"建立站点\"></a>建立站点</h1><figure class=\"highlight smali\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">jekyll<span class=\"built_in\"> new </span>new-site   <span class=\"comment\">#创建新站点</span></div><div class=\"line\">cd<span class=\"built_in\"> new-site </span>          <span class=\"comment\">#进入站点目录下一步才能开启服务</span></div><div class=\"line\">jekyll serve --watch  <span class=\"comment\">#加--watch参数修改后会自动刷新页面，而不用手动重启jekyll</span></div><div class=\"line\">jekyll build          <span class=\"comment\">#写了新文章后，编译文档</span></div></pre></td></tr></table></figure>\n<p>然后访问localhost:4000就能看到blog的页面了。</p>\n<p>注：运行报<strong>Could not find a JavaScript runtime.</strong>错误<br>答：在<strong>gemfile</strong>中加入<br><figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attribute\">gem</span> <span class=\"string\">'execjs'</span>  </div><div class=\"line\">gem <span class=\"string\">'therubyracer'</span></div></pre></td></tr></table></figure></p>\n<p>然后安装<code>gem install therubyracer</code> 再运行就好了。</p>\n<p>一个基本的 Jekyll 网站的目录结构一般是像这样的：</p>\n<figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\">├── _config.yml  <span class=\"meta\">#配置文件 </span></div><div class=\"line\">├── _drafts      <span class=\"meta\">#草稿目录</span></div><div class=\"line\"><span class=\"string\">| ├── begin-with-the-crazy-ideas.textile</span></div><div class=\"line\"><span class=\"string\">| └── on-simplicity-in-technology.markdown</span></div><div class=\"line\">├── _includes    <span class=\"meta\">#你可以加载这些包含部分到你的布局或者文章中以方便重用。可以用这个标签 &#123;\\% include file.ext \\%&#125; 来把文件 _includes/file.ext 包含进来。</span></div><div class=\"line\"><span class=\"string\">| ├── footer.html  #HTML尾</span></div><div class=\"line\"><span class=\"string\">| └── header.html  #HTML头</span></div><div class=\"line\">├── _layouts</div><div class=\"line\"><span class=\"string\">| ├── default.html #默认模板</span></div><div class=\"line\"><span class=\"string\">| └── post.html    #文章模板</span></div><div class=\"line\">├── _posts         <span class=\"meta\">#文章目录</span></div><div class=\"line\"><span class=\"string\">| ├── XXXX.md</span></div><div class=\"line\"><span class=\"string\">| └── XXXXXX.md</span></div><div class=\"line\">├── _data</div><div class=\"line\"><span class=\"string\">| └── members.yml</span></div><div class=\"line\">├── _site         <span class=\"meta\">#生成的站点文件存放目录</span></div><div class=\"line\">└── index.html    <span class=\"meta\">#入口index文件</span></div><div class=\"line\">└──Other Files/Folders   <span class=\"meta\">#其他一些未被提及的目录和文件如 css 还有 images 文件夹， favicon.ico 等文件都将被完全拷贝到生成的 site 中。</span></div></pre></td></tr></table></figure>\n<p>安装完成后，如果你要配置你自己的站点信息，那么你就要修改<strong>_config.yml</strong>这个文件。里面可以配置站点名称，描述，多说，统计，友链等等。<br>参考：<br><a href=\"http://jekyll.com.cn/\">http://jekyll.com.cn/</a>   中文官网<br><a href=\"http://pwnny.cn/original/2016/06/26/MakeBlog.html\">http://pwnny.cn/original/2016/06/26/MakeBlog.html</a></p>\n<p>写文章在_posts里，文件名按<strong>YEAR-MONTH-DAY-title.md</strong>创建文件，<br>在文章头部添加YAML头信息（YAML front- matter）：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">---</span></div><div class=\"line\"><span class=\"attr\">layout:</span> post</div><div class=\"line\"><span class=\"attr\">title:</span>  <span class=\"string\">\"第一篇博客\"</span></div><div class=\"line\"><span class=\"attr\">date:</span>   <span class=\"number\">2016</span>/<span class=\"number\">10</span>/<span class=\"number\">26</span> <span class=\"number\">13</span>:<span class=\"number\">03</span>:<span class=\"number\">42</span></div><div class=\"line\"><span class=\"attr\">categories:</span> 文章阅读</div><div class=\"line\"><span class=\"attr\">tag:</span> 第一篇博客,jekyll搭建博客</div><div class=\"line\"><span class=\"meta\">---</span></div><div class=\"line\"></div><div class=\"line\">这里开始用Markdown的语法编写文章。</div></pre></td></tr></table></figure>\n<p>每次都自己写yml文件头太麻烦，配置中会说到用Rakefile脚本自动生成文件。<strong>注意：yml文件头不要有中文，.md文件名也不要有中文，</strong>否则网页会显示404错误（原因未知）</p>\n<hr>\n<h1 id=\"配置优化、美化站点\"><a href=\"#配置优化、美化站点\" class=\"headerlink\" title=\"配置优化、美化站点\"></a>配置优化、美化站点</h1><h2 id=\"主题部分\"><a href=\"#主题部分\" class=\"headerlink\" title=\"主题部分\"></a>主题部分</h2><p>可以在<a href=\"http://jekyllthemes.org/这个上面找找，Hux这个主题还是不错的，喜欢的直接下载，重新修改里面配置就行了。可以fork或下载回来，整个替换，把文章拷过去就行。一个很好的Hux模板：https://github.com/huxpro/huxpro.github.io/\">http://jekyllthemes.org/这个上面找找，Hux这个主题还是不错的，喜欢的直接下载，重新修改里面配置就行了。可以fork或下载回来，整个替换，把文章拷过去就行。一个很好的Hux模板：https://github.com/huxpro/huxpro.github.io/</a></p>\n<h2 id=\"配置文件设置\"><a href=\"#配置文件设置\" class=\"headerlink\" title=\"配置文件设置\"></a>配置文件设置</h2><p>我用到的参数：<br><figure class=\"highlight elixir\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#不要在配置文件中使用 tab 制表符,用空格代替。</span></div><div class=\"line\"><span class=\"comment\">#配置请参考：http://jekyllcn.com/docs/configuration/#front-matter-defaults</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Site settings</span></div><div class=\"line\"><span class=\"symbol\">title:</span> LeoLan的博客</div><div class=\"line\"><span class=\"symbol\">author:</span> Leo Lan</div><div class=\"line\"><span class=\"symbol\">email:</span> <span class=\"number\">842632422</span><span class=\"variable\">@qq</span>.com</div><div class=\"line\"><span class=\"symbol\">description:</span> &gt; <span class=\"comment\"># this means to ignore newlines until \"baseurl:\"</span></div><div class=\"line\">  Write an awesome description <span class=\"keyword\">for</span> your new site here. You can edit this</div><div class=\"line\">  line <span class=\"keyword\">in</span> _config.yml. It will appear <span class=\"keyword\">in</span> your document head meta (<span class=\"keyword\">for</span></div><div class=\"line\">  Google search results) <span class=\"keyword\">and</span> <span class=\"keyword\">in</span> your feed.xml site description.</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#自定义站点标题</span></div><div class=\"line\"><span class=\"comment\">#webrick:</span></div><div class=\"line\"><span class=\"comment\">#  headers:</span></div><div class=\"line\"><span class=\"comment\">#    My-Header: My-Value</span></div><div class=\"line\"><span class=\"comment\">#    My-Other-Header: My-Other-Value</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Site URL <span class=\"doctag\">NOTE:</span> if your site is base on subdir /blog you should change base to \"/blog\"</span></div><div class=\"line\"><span class=\"symbol\">domain:</span> <span class=\"string\">\"http://myleolan.github.io\"</span> <span class=\"comment\">#你的github网址  the domain URL for your site</span></div><div class=\"line\"><span class=\"symbol\">base:</span> <span class=\"string\">\"\"</span>  <span class=\"comment\"># the relative path that different with domain so you can test locally</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Source URL <span class=\"doctag\">NOTE:</span> end with / cause it's [URL + FILE]</span></div><div class=\"line\"><span class=\"symbol\">w3c_url:</span> <span class=\"string\">\"/w3c/\"</span>  <span class=\"comment\"># the base url of css js and images</span></div><div class=\"line\"><span class=\"symbol\">postImage_url:</span> <span class=\"string\">\"/w3c/images/\"</span> <span class=\"comment\"># the base url of post images</span></div><div class=\"line\"><span class=\"symbol\">postfile:</span> <span class=\"string\">\"/db/Postfile\"</span> <span class=\"comment\"># the Database</span></div><div class=\"line\"><span class=\"symbol\">sitefile:</span> <span class=\"string\">\"/db/Sitefile\"</span> <span class=\"comment\"># the Database</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># 3rd URL</span></div><div class=\"line\"><span class=\"symbol\">duoshuo_short_name:</span> <span class=\"string\">\"leolan\"</span> <span class=\"comment\"># 注册多说是填写的网址前缀 the user of user.domain.com </span></div><div class=\"line\"><span class=\"symbol\">duoshuo_user_uid:</span> <span class=\"string\">\"a61c3f290749b621688a3f42c7e8e31c\"</span> <span class=\"comment\">#多说的uid   the admin user uid  </span></div><div class=\"line\"><span class=\"symbol\">duoshuo_user_name:</span> <span class=\"string\">\"leolan\"</span> <span class=\"comment\">#多说的用户名 the admin user names   </span></div><div class=\"line\"><span class=\"symbol\">duoshuo_max_depth:</span> <span class=\"string\">\"2\"</span>  <span class=\"comment\"># the max_depth setting in duoshuo comments</span></div><div class=\"line\"><span class=\"symbol\">duoshuo_url:</span> <span class=\"string\">\"/w3c/duoshuo/embed.min.js\"</span> <span class=\"comment\"># the local duoshuo comment plugin, you can change it to remote \"http://static.duoshuo.com/\"</span></div><div class=\"line\"><span class=\"symbol\">jquery_url:</span> <span class=\"string\">\"http://cdn.bootcss.com/jquery/3.1.0/jquery.min.js\"</span> <span class=\"comment\"># use cdn</span></div><div class=\"line\"><span class=\"symbol\">baiduTemplate_url:</span> <span class=\"string\">\"/w3c/js/baiduTemplate.js\"</span> <span class=\"comment\">#use local</span></div><div class=\"line\"><span class=\"symbol\">google_analytics_id:</span> <span class=\"string\">\"UA-86334360-1\"</span>  <span class=\"comment\">#Google分析</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Build Settings</span></div><div class=\"line\"><span class=\"symbol\">excerpt_separator:</span> <span class=\"string\">\"\\n\\n\"</span> <span class=\"comment\"># you can specify your own separator here, default is \"\\n\\n\" String</span></div><div class=\"line\"><span class=\"symbol\">permalink:</span> /<span class=\"symbol\">:year/</span><span class=\"symbol\">:month/</span><span class=\"symbol\">:day/</span><span class=\"symbol\">:title</span>.html   <span class=\"comment\">#生成html文件的命名方式</span></div><div class=\"line\"><span class=\"symbol\">highlighter:</span> rouge   <span class=\"comment\">#代码高亮</span></div><div class=\"line\"><span class=\"symbol\">markdown:</span> kramdown   <span class=\"comment\">#markdown文档处理器</span></div><div class=\"line\"><span class=\"symbol\">kramdown:</span></div><div class=\"line\">  <span class=\"symbol\">input:</span> GFM</div><div class=\"line\">  <span class=\"symbol\">hard_wrap:</span> <span class=\"keyword\">true</span> <span class=\"comment\"># a newline in markdown text would be changed to &lt;br&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#插件（需要包含的插件）</span></div><div class=\"line\"><span class=\"symbol\">gems:</span></div><div class=\"line\">  - jemoji</div><div class=\"line\"></div><div class=\"line\"><span class=\"symbol\">lsi:</span> BOOL   <span class=\"comment\">#建立文件索引</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">####---------------------------------------------------------------------</span></div><div class=\"line\"><span class=\"comment\">#以下为github的默认设置</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Following is got in Github Help With Configuring Jekyll</span></div><div class=\"line\"><span class=\"comment\"># Github Page Default Settings which you can override:</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># kramdown:</span></div><div class=\"line\"><span class=\"comment\">#   input: GFM</span></div><div class=\"line\"><span class=\"comment\">#   hard_wrap: false</span></div><div class=\"line\"><span class=\"comment\"># gems:</span></div><div class=\"line\"><span class=\"comment\">#   - jekyll-coffeescript</span></div><div class=\"line\"><span class=\"comment\">#   - jekyll-paginate</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Github Page override the following settings which you cannot change:</span></div><div class=\"line\"><span class=\"comment\"># lsi: false</span></div><div class=\"line\"><span class=\"comment\"># safe: true    #安全方式，禁用所有插件</span></div><div class=\"line\"><span class=\"comment\"># source: [your repo's top level directory]</span></div><div class=\"line\"><span class=\"comment\"># incremental: false</span></div><div class=\"line\"><span class=\"comment\"># highlighter: rouge</span></div><div class=\"line\"><span class=\"comment\"># gist:</span></div><div class=\"line\"><span class=\"comment\">#  noscript: false</span></div><div class=\"line\"><span class=\"comment\"># kramdown:</span></div><div class=\"line\"><span class=\"comment\">#  math_engine: mathjax</span></div></pre></td></tr></table></figure></p>\n<h2 id=\"自动生成文件模板\"><a href=\"#自动生成文件模板\" class=\"headerlink\" title=\"自动生成文件模板\"></a>自动生成文件模板</h2><p>前面说到的带yml信息的文件头<br><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">---</span></div><div class=\"line\"><span class=\"attr\">layout:</span> post</div><div class=\"line\"><span class=\"attr\">title:</span>  <span class=\"string\">\"第一篇博客\"</span></div><div class=\"line\"><span class=\"attr\">date:</span>   <span class=\"number\">2016</span>/<span class=\"number\">10</span>/<span class=\"number\">26</span> <span class=\"number\">13</span>:<span class=\"number\">03</span>:<span class=\"number\">42</span></div><div class=\"line\"><span class=\"attr\">categories:</span> 文章阅读</div><div class=\"line\"><span class=\"attr\">tag:</span> 第一篇博客,jekyll搭建博客</div><div class=\"line\"><span class=\"meta\">---</span></div></pre></td></tr></table></figure></p>\n<p>文件头可以自动生成，而不用每次都手工码字，在网站根目录下创建Rakefile文件（ruby的一中脚本配置文件）<br>里面填入代码：</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div></pre></td><td class=\"code\"><pre><div class=\"line\">task <span class=\"symbol\">:default</span> =&gt; <span class=\"symbol\">:new</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">require</span> <span class=\"string\">'fileutils'</span></div><div class=\"line\"></div><div class=\"line\">desc <span class=\"string\">\"创建新 post\"</span></div><div class=\"line\">task <span class=\"symbol\">:new</span> <span class=\"keyword\">do</span></div><div class=\"line\">  puts <span class=\"string\">\"请输入要创建的.md文件名：\"</span></div><div class=\"line\">  @url = STDIN.gets.chomp</div><div class=\"line\">  puts <span class=\"string\">\"请输入 文章 标题：\"</span></div><div class=\"line\">  @name = STDIN.gets.chomp</div><div class=\"line\">  puts <span class=\"string\">\"请输入 文章 子标题：\"</span></div><div class=\"line\">  @subtitle = STDIN.gets.chomp</div><div class=\"line\">  puts <span class=\"string\">\"请输入 文章 分类，以空格分隔：\"</span></div><div class=\"line\">  @categories = STDIN.gets.chomp</div><div class=\"line\">  puts <span class=\"string\">\"请输入 博客分类 标签，以空格分隔：\"</span></div><div class=\"line\">  @tag = STDIN.gets.chomp</div><div class=\"line\">  @slug = <span class=\"string\">\"<span class=\"subst\">#&#123;@url&#125;</span>\"</span></div><div class=\"line\">  @slug = @slug.downcase.strip.gsub(<span class=\"string\">' '</span>, <span class=\"string\">'-'</span>)</div><div class=\"line\">  @date = Time.now.strftime(<span class=\"string\">\"%F\"</span>)</div><div class=\"line\">  @post_name = <span class=\"string\">\"_posts/<span class=\"subst\">#&#123;@date&#125;</span>-<span class=\"subst\">#&#123;@slug&#125;</span>.md\"</span></div><div class=\"line\">  <span class=\"keyword\">if</span> File.exist?(@post_name)</div><div class=\"line\">      abort(<span class=\"string\">\"文件名已经存在！创建失败\"</span>)</div><div class=\"line\">  <span class=\"keyword\">end</span></div><div class=\"line\">  FileUtils.touch(@post_name)</div><div class=\"line\">  open(@post_name, <span class=\"string\">'a'</span>) <span class=\"keyword\">do</span> <span class=\"params\">|file|</span></div><div class=\"line\">      file.puts <span class=\"string\">\"---\"</span></div><div class=\"line\">      file.puts <span class=\"string\">\"layout: post\"</span></div><div class=\"line\">      file.puts <span class=\"string\">\"title: <span class=\"subst\">#&#123;@name&#125;</span>\"</span></div><div class=\"line\">      file.puts <span class=\"string\">\"subtitle: <span class=\"subst\">#&#123;@subtitle&#125;</span>\"</span></div><div class=\"line\">      file.puts <span class=\"string\">\"author: Leo Lan\"</span></div><div class=\"line\">      file.puts <span class=\"string\">\"date: <span class=\"subst\">#&#123;Time.now&#125;</span>\"</span></div><div class=\"line\">      file.puts <span class=\"string\">\"categories: <span class=\"subst\">#&#123;@categories&#125;</span>\"</span></div><div class=\"line\">      file.puts <span class=\"string\">\"tag: <span class=\"subst\">#&#123;@tag&#125;</span>\"</span></div><div class=\"line\">      file.puts <span class=\"string\">\"published: true\"</span></div><div class=\"line\">      file.puts <span class=\"string\">\"---\"</span></div><div class=\"line\">  <span class=\"keyword\">end</span></div><div class=\"line\">  exec <span class=\"string\">\"vim <span class=\"subst\">#&#123;@post_name&#125;</span>\"</span></div><div class=\"line\"><span class=\"keyword\">end</span></div></pre></td></tr></table></figure>\n<p><strong>layout</strong>表示使用的是post布局，title是文章标题，<br><strong>date</strong>是自动生成的日期，<br><strong>subtitle</strong>是副标题<br><strong>categories</strong>是该文章生成html文件后存放的目录（分类），可以去_site/jekyll/update下找到对应日期下面的html文档。当然你也可以只设置jekyll单一的目录，甚至是更多级别的目录，用空格分开即可。<strong>tag</strong>是文章的标签。<br><strong>published</strong>表示是否发布文章<br>下次在命令行输入<code>rake new</code>按提示一步一步就能创建一个很好的文件啦，剩下的只需要专心写作就好了。</p>\n<p>参考：<a href=\"http://www.liubaicai.net/articles/733/\">http://www.liubaicai.net/articles/733/</a></p>\n<hr>\n<h1 id=\"用Github-Pages生成个人博客\"><a href=\"#用Github-Pages生成个人博客\" class=\"headerlink\" title=\"用Github Pages生成个人博客\"></a>用Github Pages生成个人博客</h1><p>Github Pages生成网站的两种方式的基本原理</p>\n<h2 id=\"法一：\"><a href=\"#法一：\" class=\"headerlink\" title=\"法一：\"></a>法一：</h2><p>在Github上有一个账号，名为 username （任意），有一个项目，名为 username.github.io （固定格式，username与账号名一致），项目分支名为 <strong>master</strong> （默认固定），这个分支有类似下面的目录结构：<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8Jekyll%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A203.png\" alt=\"\"><br>当你访问 <a href=\"http://username.github.io/\">http://username.github.io/</a> 时，Github会使用Jekyll解析用户 username 名下的 username.github.io 项目中，分支为 master 的源代码，为你构建一个静态网站，并将生成的 index.html 展示给你。</p>\n<h2 id=\"法二：\"><a href=\"#法二：\" class=\"headerlink\" title=\"法二：\"></a>法二：</h2><p>在Github上有一个账号，名为 username （任意），有一个项目，名为 blog （任意），项目分支名为 <strong>gh-pages </strong>（固定），这个分支也有上面那种结构。<br>那么当你访问 <a href=\"http://username.github.io/blog\">http://username.github.io/blog</a> 时，Github会去解析 username 用户下，project 项目的 gh-pages 分支下的源代码，为你构建网站。</p>\n<p>所以要搭建自己的博客你有两种选择：</p>\n<ul>\n<li>建立名为 username.github.io 的项目，在 master 分支下存放网站源代码</li>\n<li>建立名为 blog 的项目，在 gh-pages 分支下存放网站源代码<br>考虑到第一种项目名复杂不方便同步等，这里用第二种方法，方便管理。<br>新建一个仓库，名称随意，ReadMe.md文件随意，不懂的查看教程第4节“创建远程仓库”：<a href=\"http://leolan.top/2016/11/04/Dev-2016-11-04-Git%E6%95%99%E7%A8%8B/\">git教程</a></li>\n</ul>\n<p><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8Jekyll%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A204.png\" alt=\"\"><br>翻到下面，选择<strong>Launch automatic page generator</strong><br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8Jekyll%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A205.png\" alt=\"\"><br>再接着编译一下内容，点<strong>Continue to layouts</strong><br>选好模板，点击<strong>Publish page</strong>，就生成了Github Pages，并且，分支自动设置为了gh-pages。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E7%94%A8Jekyll%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A206.png\" alt=\"\"></p>\n<p>打开网站看看效果：<a href=\"https://myleolan.github.io/blog/\">https://myleolan.github.io/blog/</a><br>以后本地写好的文章，jekyll bundle之后就可以推送到gh-pages分支即可。推送博客到github推荐用命令行，Windows版的客户端不熟悉容易误操作。 博客源码和发布的博客网页在同一个仓库中，可以共同存放。（Hexo是生成的网站和博客原文分开存放的）</p>\n<h1 id=\"Github-Pages环境本地化\"><a href=\"#Github-Pages环境本地化\" class=\"headerlink\" title=\"Github Pages环境本地化\"></a>Github Pages环境本地化</h1><p>上面搭建的只是Jekyll的本地环境，当push到Github Pages后环境会有所变化，为了本地看到的效果和托管在Github Pages看到的效果一致，我们最好搭建本地的Github Pages环境。<br>ruby要2.0.0以上版本，如果<code>ruby --version</code>查看版本低于2.0.0，那么需要升级ruby。<br>安装ruby工具集管理工具Bundler （前面安装过了就不用安装了）<br><figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">gem <span class=\"keyword\">install </span><span class=\"keyword\">bundler</div><div class=\"line\"></span><span class=\"keyword\">bundler </span>-v</div></pre></td></tr></table></figure></p>\n<p>进入jekyll创建的网站目录<br><figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">git init                      <span class=\"comment\">#把当前目录加入版本库中</span></div><div class=\"line\">git checkout -<span class=\"keyword\">b </span>gh-pages      <span class=\"comment\">#创建gh-pages分支，用于推送到github上的gh-pages分支上。</span></div></pre></td></tr></table></figure></p>\n<p>创建<strong>Gemfile</strong>文件 如果本生有Gemfile和Gemfile.lock那就删除掉，内容如下：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">source</span> <span class=\"string\">'https://ruby.taobao.org'</span>  <span class=\"comment\">#(淘宝源，国内比较快)</span></div><div class=\"line\">gem <span class=\"string\">'github-pages'</span>, group: :jekyll_plugins</div><div class=\"line\">或</div><div class=\"line\"><span class=\"built_in\">source</span> <span class=\"string\">'https://rubygems.org'</span>   <span class=\"comment\">#(官方源)</span></div><div class=\"line\">gem <span class=\"string\">'github-pages'</span>, group: :jekyll_plugins</div></pre></td></tr></table></figure></p>\n<p>执行下面的命令安装Github Pages的工具集<strong>（在网站根目录，就是Gemfile文件的路径）</strong><br><code>bundle install</code><br>运行起来（一开始创建了网站就可以直接跑起来啦，如果没有创建网站，创建或fork别人的。）<br><code>bundle exec jekyll serve</code></p>\n<p>如果出现<strong>bundle exec jekyll serve</strong>能启动，而<strong>jekyll serve</strong>不能启动，则删除Gemfile和Gemfile.lock重新运行jekyll serve即可。<br>更多Github Pages本地化环境搭建，可参考官方文档:<a href=\"https://help.github.com/articles/setting-up-your-github-pages-site-locally-with-jekyll/\">https://help.github.com/articles/setting-up-your-github-pages-site-locally-with-jekyll/</a></p>\n<p>注意：如果是是下载了别人的模板进行修改，只把文件拷到自己项目中进行添加就可以了，不要全选把<strong>.git</strong>文件夹也拷过了，别人的分支和自己的不同时会出现各种问题。</p>\n<p>调试好各种东西后就可以推送到Github了。</p>\n<ol>\n<li>用markdown写文章，并按规定名称格式保存在_posts里。</li>\n<li>用<code>jekyll serve –watch</code>或<code>bundle exec jekyll server</code>启动服务器，在浏览器里查看。(指定端口在<strong>_config.yml</strong>文件中增加<code>port: xxxx</code>)</li>\n<li>用git客户端推送到远程仓库里。</li>\n<li>通过域名访问。</li>\n</ol>\n<hr>\n<h1 id=\"绑定域名\"><a href=\"#绑定域名\" class=\"headerlink\" title=\"绑定域名\"></a>绑定域名</h1><p>原理和博客绑定域名是一样的</p>\n<ul>\n<li>1· 在你的项目下新建一个<strong>CNAME</strong>文件，注意没有后缀名。在里面添加你的域名，如我的就是<strong> leolan.top</strong>，然后推送<strong>CNAME文件</strong>到远程仓库。（方法二是直接在pages页上找到域名绑定设置，最好同时绑定如：<strong>leolan.top</strong>和<strong>www.leolan.top</strong>,少绑一个，没绑的那个打不开）</li>\n<li>2· 到域名服务商那里增加你的CNAME记录。添加两条记录，@和www的主机记录，记录类型为CNAME，记录值为 <code>username.github.io.</code>，重要的是 io 后面还有一个原点（看官方帮助文档Coding的就不用加点），切记。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/%E5%9F%9F%E5%90%8D%E7%BB%91%E5%AE%9A.png\" alt=\"\"><br>过几分钟，刷新网页，就能直接用域名访问了，因为是在项目内建的<strong>CNAME</strong>文件，所以域名直接指向此项目文件夹，其他项目可以用其他域名设定。</li>\n</ul>\n<hr>\n"},{"title":"Centos网络端口","abbrlink":21569,"date":"2016-11-02T09:40:11.000Z","_content":"\nCentos查看端口占用情况命令，比如查看80端口占用情况使用如下命令：\n`lsof -i tcp:80`\n \n列出所有端口 \n`netstat -ntlp`\n \n### 1、开启端口（以80端口为例） \n* 方法一：\n`/sbin/iptables -I INPUT -p tcp --dport 80 -j ACCEPT `写入修改\n\n\t`/etc/init.d/iptables save`   保存修改\n\n\t`service iptables restart`    重启防火墙，修改生效\n \n* 方法二：\n`vim /etc/sysconfig/iptables`  修改配置文件加入如下语句:\n\n`-A INPUT -p tcp -m state --state NEW -m tcp --dport 80 -j ACCEPT` 重启防火墙，修改完成\n \n\n### 2、关闭端口\n* 方法一：\n\n`/sbin/iptables -I INPUT -p tcp --dport 80 -j DROP `  写入修改\n\n`/etc/init.d/iptables save `  保存修改\n\n`service iptables restart `   重启防火墙，修改生效\n \n* 方法二： \n`vi /etc/sysconfig/iptables`  修改配置文件加入如下语句: \n\n`-A INPUT -p tcp -m state --state NEW -m tcp --dport 80 -j DROP`  重启防火墙，修改完成\n \n\n### 3、查看端口状态\n Centos 6.x 、Centos 7\n`/etc/init.d/iptables status`\n\n`netstat -lntp `    查看监听(Listen)的端口\n\n`netstat -antp `   查看所有建立的TCP连接\n\n\n\n---\n\n","source":"_posts/系统管理/2016-11-02-Centos网络端口.md","raw":"---\ntitle: Centos网络端口\ncategories:\n  - 系统管理\ntags:\n  - Centos网络端口\nabbrlink: 21569\ndate: 2016-11-02 17:40:11\n---\n\nCentos查看端口占用情况命令，比如查看80端口占用情况使用如下命令：\n`lsof -i tcp:80`\n \n列出所有端口 \n`netstat -ntlp`\n \n### 1、开启端口（以80端口为例） \n* 方法一：\n`/sbin/iptables -I INPUT -p tcp --dport 80 -j ACCEPT `写入修改\n\n\t`/etc/init.d/iptables save`   保存修改\n\n\t`service iptables restart`    重启防火墙，修改生效\n \n* 方法二：\n`vim /etc/sysconfig/iptables`  修改配置文件加入如下语句:\n\n`-A INPUT -p tcp -m state --state NEW -m tcp --dport 80 -j ACCEPT` 重启防火墙，修改完成\n \n\n### 2、关闭端口\n* 方法一：\n\n`/sbin/iptables -I INPUT -p tcp --dport 80 -j DROP `  写入修改\n\n`/etc/init.d/iptables save `  保存修改\n\n`service iptables restart `   重启防火墙，修改生效\n \n* 方法二： \n`vi /etc/sysconfig/iptables`  修改配置文件加入如下语句: \n\n`-A INPUT -p tcp -m state --state NEW -m tcp --dport 80 -j DROP`  重启防火墙，修改完成\n \n\n### 3、查看端口状态\n Centos 6.x 、Centos 7\n`/etc/init.d/iptables status`\n\n`netstat -lntp `    查看监听(Listen)的端口\n\n`netstat -antp `   查看所有建立的TCP连接\n\n\n\n---\n\n","slug":"系统管理-2016-11-02-Centos网络端口","published":1,"updated":"2016-11-13T03:36:30.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civi8oujs002w2c6nnxyiw9pc","content":"<p>Centos查看端口占用情况命令，比如查看80端口占用情况使用如下命令：<br><code>lsof -i tcp:80</code></p>\n<p>列出所有端口<br><code>netstat -ntlp</code></p>\n<h3 id=\"1、开启端口（以80端口为例）\"><a href=\"#1、开启端口（以80端口为例）\" class=\"headerlink\" title=\"1、开启端口（以80端口为例）\"></a>1、开启端口（以80端口为例）</h3><ul>\n<li><p>方法一：<br><code>/sbin/iptables -I INPUT -p tcp --dport 80 -j ACCEPT</code>写入修改</p>\n<p>  <code>/etc/init.d/iptables save</code>   保存修改</p>\n<p>  <code>service iptables restart</code>    重启防火墙，修改生效</p>\n</li>\n<li><p>方法二：<br><code>vim /etc/sysconfig/iptables</code>  修改配置文件加入如下语句:</p>\n</li>\n</ul>\n<p><code>-A INPUT -p tcp -m state --state NEW -m tcp --dport 80 -j ACCEPT</code> 重启防火墙，修改完成</p>\n<h3 id=\"2、关闭端口\"><a href=\"#2、关闭端口\" class=\"headerlink\" title=\"2、关闭端口\"></a>2、关闭端口</h3><ul>\n<li>方法一：</li>\n</ul>\n<p><code>/sbin/iptables -I INPUT -p tcp --dport 80 -j DROP</code>  写入修改</p>\n<p><code>/etc/init.d/iptables save</code>  保存修改</p>\n<p><code>service iptables restart</code>   重启防火墙，修改生效</p>\n<ul>\n<li>方法二：<br><code>vi /etc/sysconfig/iptables</code>  修改配置文件加入如下语句: </li>\n</ul>\n<p><code>-A INPUT -p tcp -m state --state NEW -m tcp --dport 80 -j DROP</code>  重启防火墙，修改完成</p>\n<h3 id=\"3、查看端口状态\"><a href=\"#3、查看端口状态\" class=\"headerlink\" title=\"3、查看端口状态\"></a>3、查看端口状态</h3><p> Centos 6.x 、Centos 7<br><code>/etc/init.d/iptables status</code></p>\n<p><code>netstat -lntp</code>    查看监听(Listen)的端口</p>\n<p><code>netstat -antp</code>   查看所有建立的TCP连接</p>\n<hr>\n","excerpt":"","more":"<p>Centos查看端口占用情况命令，比如查看80端口占用情况使用如下命令：<br><code>lsof -i tcp:80</code></p>\n<p>列出所有端口<br><code>netstat -ntlp</code></p>\n<h3 id=\"1、开启端口（以80端口为例）\"><a href=\"#1、开启端口（以80端口为例）\" class=\"headerlink\" title=\"1、开启端口（以80端口为例）\"></a>1、开启端口（以80端口为例）</h3><ul>\n<li><p>方法一：<br><code>/sbin/iptables -I INPUT -p tcp --dport 80 -j ACCEPT</code>写入修改</p>\n<p>  <code>/etc/init.d/iptables save</code>   保存修改</p>\n<p>  <code>service iptables restart</code>    重启防火墙，修改生效</p>\n</li>\n<li><p>方法二：<br><code>vim /etc/sysconfig/iptables</code>  修改配置文件加入如下语句:</p>\n</li>\n</ul>\n<p><code>-A INPUT -p tcp -m state --state NEW -m tcp --dport 80 -j ACCEPT</code> 重启防火墙，修改完成</p>\n<h3 id=\"2、关闭端口\"><a href=\"#2、关闭端口\" class=\"headerlink\" title=\"2、关闭端口\"></a>2、关闭端口</h3><ul>\n<li>方法一：</li>\n</ul>\n<p><code>/sbin/iptables -I INPUT -p tcp --dport 80 -j DROP</code>  写入修改</p>\n<p><code>/etc/init.d/iptables save</code>  保存修改</p>\n<p><code>service iptables restart</code>   重启防火墙，修改生效</p>\n<ul>\n<li>方法二：<br><code>vi /etc/sysconfig/iptables</code>  修改配置文件加入如下语句: </li>\n</ul>\n<p><code>-A INPUT -p tcp -m state --state NEW -m tcp --dport 80 -j DROP</code>  重启防火墙，修改完成</p>\n<h3 id=\"3、查看端口状态\"><a href=\"#3、查看端口状态\" class=\"headerlink\" title=\"3、查看端口状态\"></a>3、查看端口状态</h3><p> Centos 6.x 、Centos 7<br><code>/etc/init.d/iptables status</code></p>\n<p><code>netstat -lntp</code>    查看监听(Listen)的端口</p>\n<p><code>netstat -antp</code>   查看所有建立的TCP连接</p>\n<hr>\n"},{"title":"GitLab服务器搭建","abbrlink":22149,"date":"2016-11-10T07:57:58.000Z","_content":"\n本节是根据[烂泥大神](http://www.ilanni.com/)分享的笔记摘录的！\n\n# 安装 GitLab\nGitLab   下载：http://www.gitlab.cc/downloads/\nGitLab 中文文档：http://doc.gitlab.cc\n安装方式官方有详细说明，这里使用Centos 6安装，其他系统参考官方文档，一部到位。\n\n```\n#切换到root用户登录\nyum -y install curl openssh-server openssh-clients postfix cronie\nservice postfix start\nchkconfig postfix on\n\n#这句是用来做防火墙的。避免用户通过ssh方式和http来访问\nsudo lokkit -s http -s ssh```\n\n## 添加GitLab仓库,并安装到服务器上\n```\n第一步：\ncurl -sS http://packages.gitlab.cc/install/gitlab-ce/script.rpm.sh | sudo bash\nyum -y install gitlab-ce\n\n或者使用国内的镜像源：\nvim /etc/yum.repos.d/gitlab-ce.repo\n[gitlab-ce]\nname=gitlab-ce\nbaseurl=http://mirrors.lifetoy.org/gitlab-ce/yum/el6\nrepo_gpgcheck=0\ngpgcheck=0\nenabled=1\ngpgkey=https://packages.gitlab.com/gpg.key\n\nyum -y install gitlab-ce\n\n或者使用\nvim /etc/yum.repos.d/gitlab-ce.repo\n[gitlab-ce]\nname=gitlab-ce\nbaseurl=http://mirrors.lifetoy.org/gitlab-ce/yum/el6/\nrepo_gpgcheck=0\ngpgcheck=0\nenabled=1\ngpgkey=https://packages.gitlab.com/gpg.key\n\nyum -y install gitlab-ce\n\n-----------------------------------------------------------------------------------------\n\n第二步：\nrpm -ivh https://mirrors.tuna.tsinghua.edu.cn/gitlab-ce/yum/el6/gitlab-ce-8.9.6-ce.0.el6.x86_64.rpm\n#截至到7.16为止，8.9.6版本还没有中文汉化版\n\n或者\nrpm -ivh http://mirrors.lifetoy.org/gitlab-ce/yum/el6/gitlab-ce-8.8.7-ce.1.el6.x86_64.rpm\n```\n查看gitlab-ce安装的软件包：`rpm -ql gitlab-ce |more`\n\n## 启动gitLab\n`sudo gitlab-ctl reconfigure`\n\n\n---\n\n# 使用mysql数据库代替gitlab-ce\n## 添加yum仓库源\n```\nwget -P /etc/yum.repos.d  http://mirrors.aliyun.com/repo/Centos-6.repo  #Centos7 源不一样，官网找。\nyum -y install mysql mysql-server mysql-devel gcc```\n\n## 初始化mysql\n设定root用户密码为：12345gitlab\n```\n/etc/init.d/mysqld start\n/usr/bin/mysqladmin -u root password '12345gitlab'```\n\n## 创建gitlab相关的数据库\n创建gitlab用户，并设定密码为：gitlab12345aa\n```\nmysql -uroot -p'12345gitlab'\ncreate user 'gitlab'@'%' identified by 'gitlab12345aa';\nset storage_engine=innodb;\ncreate database if not exists `gitlabhq_production` default character set `utf8` collate `utf8_unicode_ci`;\ngrant select,insert,update,delete,create,create temporary tables,drop,index,alter,lock tables on `gitlabhq_production`.* to 'gitlab'@'%';```\n\n## 删除用户名为空的主机，并刷新mysql权限\n```\nmysql -uroot -p'12345gitlab' mysql -e \"delete from user where user='';flush privileges;\"```\n\n## 测试gitlab用户连接数据库\n```\nmysql -h127.0.0.1 -ugitlab -p'gitlab12345aa'```\n\ngitlab配置文件：`vim /etc/gitlab/gitlab.rb`\ngitlab_rails['db_adapter'] = \"mysql2\"\ngitlab_rails['db_encoding'] = \"utf8\"\ngitlab_rails['db_database'] = \"gitlabhq_production\"\ngitlab_rails['db_pool'] = 10\ngitlab_rails['db_username'] = \"gitlab\"\ngitlab_rails['db_password'] = \"**gitlab12345aa**\"\ngitlab_rails['db_host'] = \"127.0.0.1\"\ngitlab_rails['db_port'] = 3306\npostgresql['enable'] = false\n\n```\nvim /opt/gitlab/embedded/service/gitlab-rails/.bundle/config```\n---\nBUNDLE_RETRY: 5\nBUNDLE_PATH: \"/opt/gitlab/embedded/service/gem\"\nBUNDLE_JOBS: 9\n`BUNDLE_WITHOUT: development:test:postgres`\nBUNDLE_DISABLE_SHARED_GEMS: '1'\n\n```\ncd /opt/gitlab/embedded/service/gitlab-rails\n/opt/gitlab/embedded/bin/bundle install\ngitlab-ctl reconfigure\ngitlab-ctl restart\ngitlab-rake gitlab:setup```\n到此gitlab-ce更换成mysql完成。\n\n打开http://IP/ 即可访问，首次访问GitLab,系统会让你重新设置管理员的密码,设置成功后会返回登录界面.\n默认的管理员账号是root,如果你想更改默认管理员账号,请输入上面设置的新密码登录系统后修改帐号名\n\n---\n\n# 修改gitlab通过域名访问：\n```\nvim /etc/gitlab/gitlab.rb\nexternal_url 'http://your.domain'```\n\n重启配置\n`sudo gitlab-ctl reconfigure`\n\n实时查看所有执行日志\n`gitlab-ctl tail`\n\n查看版本：`cat /opt/gitlab/embedded/service/gitlab-rails/VERSION`\n\n/var/opt/gitlab/gitlab-workhorse\n/opt/gitlab/embedded/service/gitlab-rails/public\n/opt/gitlab/etc/gitlab-workhorse\n\n/var/log/gitlab/gitlab-workhorse\n\n配置文件路径：\n/var/opt/gitlab/nginx\n/var/opt/gitlab/nginx/conf/nginx.conf\n/var/opt/gitlab/nginx/conf/gitlab-http.conf\n\n---\n# 汉化\n## 法一\n中文社区：https://gitlab.com/larryli/gitlab\n确认gitlab版本与当前汉化版本的 VERSION 是否相同，当前最新的汉化版本为 8.13.5 。\n如果安装版本小于当前汉化版本，请先升级。如果安装版本大于当前汉化版本，请在[项目](https://gitlab.com/larryli/gitlab/issues)中提交新的 issue。\n如果版本相同，首先在本地clone仓库。\n\n### 下载汉化补丁包\n* 1.先停止gitlab\n`gitlab-ctl stop`\n* 2.克隆gitLab.com仓库，有中文补丁\n`git clone https://gitlab.com/xhang/gitlab.git   #注意对应的版本地址不同`\n\n或gitcafe.com镜像，速度更快，暂时不支持中文补丁\n`git clone https://git.oschina.net/qiai365/gitlab-ce.git`\n或者\n`git clone https://git.oschina.net/johnwu/gitlab-zh.git`\n\n```\ncd gitlab\ngit branch -a |tac```\n![](http://ofyfogrgx.bkt.clouddn.com//blog/gitlab%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA1.png)\n8.8版本的汉化补丁（8-8-stable是英文稳定版，8-8-zh是中文版，两个diff结果便是汉化补丁）\ngit diff origin/8-8-stable origin/8-8-zh > /tmp/8.8.diff\n\n### 应用汉化补丁\n```\ncd /opt/gitlab/embedded/service/gitlab-rails\ngit apply /tmp/8.8.diff```\n\n启动gitlab：`gitlab-ctl start`\n\n## 法二\n```\nwget https://gitlab.com/larryli/gitlab/repository/archive.zip?ref=8-7-zh\nunzip gitlab-8-7-zh-faeea0c584b042eaa433ed6c82335fe0c124af97.zip\ncd gitlab-8-7-zh-faeea0c584b042eaa433ed6c82335fe0c124af97\nsudo gitlab-ctl reconfigure\nsudo gitlab-ctl restart```\n\n---\n# 最后配置\n```\nvim  /etc/gitlab/gitlab.rb\nvim /opt/gitlab/embedded/service/gitlab-rails/config/environments/production.rb\nvim /var/opt/gitlab/gitlab-rails/etc/smtp_settings.rb\nvim /opt/gitlab/embedded/service/gitlab-rails/config/gitlab.yml\ntime_zone: Asia/Shanghai\nvim /opt/gitlab/embedded/service/gitlab-rails/config/environments/development.rb```\n\n* 1.设置存放代码库的主目录：`vim /etc/gitlab/gitlab.rb`\n默认是在**/var/opt/gitlab/git-data**下\n`git_data_dir \"/var/opt/gitlab/git-data\"`\n\n* 2.访问刚搭建的GitLab站点，创建一个**group**，比如**devusers**。\n这时会在**/var/opt/gitlab/git-data**下创建**/var/opt/gitlab/git-data/devusers**文件夹。\n然后在**/var/opt/gitlab/git-data/repositories/**创建一个文件夹，比如**devusers**\n\n* 3.将现有的所有git项目文件复制到这个文件夹\n`cp -r /data/git/*  /var/opt/gitlab/git-data/devusers`\n\n* 4.修改一下复制过来的文件夹的所有者：\n`chown -R git:git /var/opt/gitlab/git-data/devusers`\n\n```\ncd /var/opt/gitlab\ngitlab-rake gitlab:import:repos```\n\ngitlab仓库地址\n```\n/var/opt/gitlab/git-data/repositories\nsudo vi /etc/gitlab/gitlab.rb\ngit_data_dir```\n\n\n---\n\n\n\n\n\n\n","source":"_posts/环境搭建/2016-11-10-GitLab服务器搭建.md","raw":"---\ntitle: GitLab服务器搭建\ncategories:\n  - 环境搭建\ntags:\n  - GitLab\n  - 版本控制\nabbrlink: 22149\ndate: 2016-11-10 15:57:58\n---\n\n本节是根据[烂泥大神](http://www.ilanni.com/)分享的笔记摘录的！\n\n# 安装 GitLab\nGitLab   下载：http://www.gitlab.cc/downloads/\nGitLab 中文文档：http://doc.gitlab.cc\n安装方式官方有详细说明，这里使用Centos 6安装，其他系统参考官方文档，一部到位。\n\n```\n#切换到root用户登录\nyum -y install curl openssh-server openssh-clients postfix cronie\nservice postfix start\nchkconfig postfix on\n\n#这句是用来做防火墙的。避免用户通过ssh方式和http来访问\nsudo lokkit -s http -s ssh```\n\n## 添加GitLab仓库,并安装到服务器上\n```\n第一步：\ncurl -sS http://packages.gitlab.cc/install/gitlab-ce/script.rpm.sh | sudo bash\nyum -y install gitlab-ce\n\n或者使用国内的镜像源：\nvim /etc/yum.repos.d/gitlab-ce.repo\n[gitlab-ce]\nname=gitlab-ce\nbaseurl=http://mirrors.lifetoy.org/gitlab-ce/yum/el6\nrepo_gpgcheck=0\ngpgcheck=0\nenabled=1\ngpgkey=https://packages.gitlab.com/gpg.key\n\nyum -y install gitlab-ce\n\n或者使用\nvim /etc/yum.repos.d/gitlab-ce.repo\n[gitlab-ce]\nname=gitlab-ce\nbaseurl=http://mirrors.lifetoy.org/gitlab-ce/yum/el6/\nrepo_gpgcheck=0\ngpgcheck=0\nenabled=1\ngpgkey=https://packages.gitlab.com/gpg.key\n\nyum -y install gitlab-ce\n\n-----------------------------------------------------------------------------------------\n\n第二步：\nrpm -ivh https://mirrors.tuna.tsinghua.edu.cn/gitlab-ce/yum/el6/gitlab-ce-8.9.6-ce.0.el6.x86_64.rpm\n#截至到7.16为止，8.9.6版本还没有中文汉化版\n\n或者\nrpm -ivh http://mirrors.lifetoy.org/gitlab-ce/yum/el6/gitlab-ce-8.8.7-ce.1.el6.x86_64.rpm\n```\n查看gitlab-ce安装的软件包：`rpm -ql gitlab-ce |more`\n\n## 启动gitLab\n`sudo gitlab-ctl reconfigure`\n\n\n---\n\n# 使用mysql数据库代替gitlab-ce\n## 添加yum仓库源\n```\nwget -P /etc/yum.repos.d  http://mirrors.aliyun.com/repo/Centos-6.repo  #Centos7 源不一样，官网找。\nyum -y install mysql mysql-server mysql-devel gcc```\n\n## 初始化mysql\n设定root用户密码为：12345gitlab\n```\n/etc/init.d/mysqld start\n/usr/bin/mysqladmin -u root password '12345gitlab'```\n\n## 创建gitlab相关的数据库\n创建gitlab用户，并设定密码为：gitlab12345aa\n```\nmysql -uroot -p'12345gitlab'\ncreate user 'gitlab'@'%' identified by 'gitlab12345aa';\nset storage_engine=innodb;\ncreate database if not exists `gitlabhq_production` default character set `utf8` collate `utf8_unicode_ci`;\ngrant select,insert,update,delete,create,create temporary tables,drop,index,alter,lock tables on `gitlabhq_production`.* to 'gitlab'@'%';```\n\n## 删除用户名为空的主机，并刷新mysql权限\n```\nmysql -uroot -p'12345gitlab' mysql -e \"delete from user where user='';flush privileges;\"```\n\n## 测试gitlab用户连接数据库\n```\nmysql -h127.0.0.1 -ugitlab -p'gitlab12345aa'```\n\ngitlab配置文件：`vim /etc/gitlab/gitlab.rb`\ngitlab_rails['db_adapter'] = \"mysql2\"\ngitlab_rails['db_encoding'] = \"utf8\"\ngitlab_rails['db_database'] = \"gitlabhq_production\"\ngitlab_rails['db_pool'] = 10\ngitlab_rails['db_username'] = \"gitlab\"\ngitlab_rails['db_password'] = \"**gitlab12345aa**\"\ngitlab_rails['db_host'] = \"127.0.0.1\"\ngitlab_rails['db_port'] = 3306\npostgresql['enable'] = false\n\n```\nvim /opt/gitlab/embedded/service/gitlab-rails/.bundle/config```\n---\nBUNDLE_RETRY: 5\nBUNDLE_PATH: \"/opt/gitlab/embedded/service/gem\"\nBUNDLE_JOBS: 9\n`BUNDLE_WITHOUT: development:test:postgres`\nBUNDLE_DISABLE_SHARED_GEMS: '1'\n\n```\ncd /opt/gitlab/embedded/service/gitlab-rails\n/opt/gitlab/embedded/bin/bundle install\ngitlab-ctl reconfigure\ngitlab-ctl restart\ngitlab-rake gitlab:setup```\n到此gitlab-ce更换成mysql完成。\n\n打开http://IP/ 即可访问，首次访问GitLab,系统会让你重新设置管理员的密码,设置成功后会返回登录界面.\n默认的管理员账号是root,如果你想更改默认管理员账号,请输入上面设置的新密码登录系统后修改帐号名\n\n---\n\n# 修改gitlab通过域名访问：\n```\nvim /etc/gitlab/gitlab.rb\nexternal_url 'http://your.domain'```\n\n重启配置\n`sudo gitlab-ctl reconfigure`\n\n实时查看所有执行日志\n`gitlab-ctl tail`\n\n查看版本：`cat /opt/gitlab/embedded/service/gitlab-rails/VERSION`\n\n/var/opt/gitlab/gitlab-workhorse\n/opt/gitlab/embedded/service/gitlab-rails/public\n/opt/gitlab/etc/gitlab-workhorse\n\n/var/log/gitlab/gitlab-workhorse\n\n配置文件路径：\n/var/opt/gitlab/nginx\n/var/opt/gitlab/nginx/conf/nginx.conf\n/var/opt/gitlab/nginx/conf/gitlab-http.conf\n\n---\n# 汉化\n## 法一\n中文社区：https://gitlab.com/larryli/gitlab\n确认gitlab版本与当前汉化版本的 VERSION 是否相同，当前最新的汉化版本为 8.13.5 。\n如果安装版本小于当前汉化版本，请先升级。如果安装版本大于当前汉化版本，请在[项目](https://gitlab.com/larryli/gitlab/issues)中提交新的 issue。\n如果版本相同，首先在本地clone仓库。\n\n### 下载汉化补丁包\n* 1.先停止gitlab\n`gitlab-ctl stop`\n* 2.克隆gitLab.com仓库，有中文补丁\n`git clone https://gitlab.com/xhang/gitlab.git   #注意对应的版本地址不同`\n\n或gitcafe.com镜像，速度更快，暂时不支持中文补丁\n`git clone https://git.oschina.net/qiai365/gitlab-ce.git`\n或者\n`git clone https://git.oschina.net/johnwu/gitlab-zh.git`\n\n```\ncd gitlab\ngit branch -a |tac```\n![](http://ofyfogrgx.bkt.clouddn.com//blog/gitlab%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA1.png)\n8.8版本的汉化补丁（8-8-stable是英文稳定版，8-8-zh是中文版，两个diff结果便是汉化补丁）\ngit diff origin/8-8-stable origin/8-8-zh > /tmp/8.8.diff\n\n### 应用汉化补丁\n```\ncd /opt/gitlab/embedded/service/gitlab-rails\ngit apply /tmp/8.8.diff```\n\n启动gitlab：`gitlab-ctl start`\n\n## 法二\n```\nwget https://gitlab.com/larryli/gitlab/repository/archive.zip?ref=8-7-zh\nunzip gitlab-8-7-zh-faeea0c584b042eaa433ed6c82335fe0c124af97.zip\ncd gitlab-8-7-zh-faeea0c584b042eaa433ed6c82335fe0c124af97\nsudo gitlab-ctl reconfigure\nsudo gitlab-ctl restart```\n\n---\n# 最后配置\n```\nvim  /etc/gitlab/gitlab.rb\nvim /opt/gitlab/embedded/service/gitlab-rails/config/environments/production.rb\nvim /var/opt/gitlab/gitlab-rails/etc/smtp_settings.rb\nvim /opt/gitlab/embedded/service/gitlab-rails/config/gitlab.yml\ntime_zone: Asia/Shanghai\nvim /opt/gitlab/embedded/service/gitlab-rails/config/environments/development.rb```\n\n* 1.设置存放代码库的主目录：`vim /etc/gitlab/gitlab.rb`\n默认是在**/var/opt/gitlab/git-data**下\n`git_data_dir \"/var/opt/gitlab/git-data\"`\n\n* 2.访问刚搭建的GitLab站点，创建一个**group**，比如**devusers**。\n这时会在**/var/opt/gitlab/git-data**下创建**/var/opt/gitlab/git-data/devusers**文件夹。\n然后在**/var/opt/gitlab/git-data/repositories/**创建一个文件夹，比如**devusers**\n\n* 3.将现有的所有git项目文件复制到这个文件夹\n`cp -r /data/git/*  /var/opt/gitlab/git-data/devusers`\n\n* 4.修改一下复制过来的文件夹的所有者：\n`chown -R git:git /var/opt/gitlab/git-data/devusers`\n\n```\ncd /var/opt/gitlab\ngitlab-rake gitlab:import:repos```\n\ngitlab仓库地址\n```\n/var/opt/gitlab/git-data/repositories\nsudo vi /etc/gitlab/gitlab.rb\ngit_data_dir```\n\n\n---\n\n\n\n\n\n\n","slug":"环境搭建-2016-11-10-GitLab服务器搭建","published":1,"updated":"2016-11-13T03:36:30.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civi8ouju002z2c6nsgdfsnpc","content":"<p>本节是根据<a href=\"http://www.ilanni.com/\" target=\"_blank\" rel=\"external\">烂泥大神</a>分享的笔记摘录的！</p>\n<h1 id=\"安装-GitLab\"><a href=\"#安装-GitLab\" class=\"headerlink\" title=\"安装 GitLab\"></a>安装 GitLab</h1><p>GitLab   下载：<a href=\"http://www.gitlab.cc/downloads/\" target=\"_blank\" rel=\"external\">http://www.gitlab.cc/downloads/</a><br>GitLab 中文文档：<a href=\"http://doc.gitlab.cc\" target=\"_blank\" rel=\"external\">http://doc.gitlab.cc</a><br>安装方式官方有详细说明，这里使用Centos 6安装，其他系统参考官方文档，一部到位。</p>\n<figure class=\"highlight livecodeserver\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#切换到root用户登录</span></div><div class=\"line\">yum -y install curl openssh-server openssh-clients postfix cronie</div><div class=\"line\">service postfix <span class=\"built_in\">start</span></div><div class=\"line\">chkconfig postfix <span class=\"keyword\">on</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#这句是用来做防火墙的。避免用户通过ssh方式和http来访问</span></div><div class=\"line\">sudo lokkit -s <span class=\"keyword\">http</span> -s ssh</div></pre></td></tr></table></figure>\n<h2 id=\"添加GitLab仓库-并安装到服务器上\"><a href=\"#添加GitLab仓库-并安装到服务器上\" class=\"headerlink\" title=\"添加GitLab仓库,并安装到服务器上\"></a>添加GitLab仓库,并安装到服务器上</h2><figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div></pre></td><td class=\"code\"><pre><div class=\"line\">第一步：</div><div class=\"line\">curl -sS http://packages.gitlab.<span class=\"keyword\">cc</span>/install/gitlab-<span class=\"keyword\">ce</span>/script.rpm.<span class=\"keyword\">sh</span> | sudo bash</div><div class=\"line\">yum -<span class=\"keyword\">y</span> install gitlab-<span class=\"keyword\">ce</span></div><div class=\"line\"></div><div class=\"line\">或者使用国内的镜像源：</div><div class=\"line\"><span class=\"keyword\">vim</span> /etc/yum.repos.d/gitlab-<span class=\"keyword\">ce</span>.repo</div><div class=\"line\">[gitlab-<span class=\"keyword\">ce</span>]</div><div class=\"line\">name=gitlab-<span class=\"keyword\">ce</span></div><div class=\"line\">baseurl=http://mirrors.lifetoy.org/gitlab-<span class=\"keyword\">ce</span>/yum/el6</div><div class=\"line\">repo_gpgcheck=<span class=\"number\">0</span></div><div class=\"line\">gpgcheck=<span class=\"number\">0</span></div><div class=\"line\">enabled=<span class=\"number\">1</span></div><div class=\"line\">gpgkey=http<span class=\"variable\">s:</span>//packages.gitlab.<span class=\"keyword\">com</span>/gpg.key</div><div class=\"line\"></div><div class=\"line\">yum -<span class=\"keyword\">y</span> install gitlab-<span class=\"keyword\">ce</span></div><div class=\"line\"></div><div class=\"line\">或者使用</div><div class=\"line\"><span class=\"keyword\">vim</span> /etc/yum.repos.d/gitlab-<span class=\"keyword\">ce</span>.repo</div><div class=\"line\">[gitlab-<span class=\"keyword\">ce</span>]</div><div class=\"line\">name=gitlab-<span class=\"keyword\">ce</span></div><div class=\"line\">baseurl=http://mirrors.lifetoy.org/gitlab-<span class=\"keyword\">ce</span>/yum/el6/</div><div class=\"line\">repo_gpgcheck=<span class=\"number\">0</span></div><div class=\"line\">gpgcheck=<span class=\"number\">0</span></div><div class=\"line\">enabled=<span class=\"number\">1</span></div><div class=\"line\">gpgkey=http<span class=\"variable\">s:</span>//packages.gitlab.<span class=\"keyword\">com</span>/gpg.key</div><div class=\"line\"></div><div class=\"line\">yum -<span class=\"keyword\">y</span> install gitlab-<span class=\"keyword\">ce</span></div><div class=\"line\"></div><div class=\"line\">-----------------------------------------------------------------------------------------</div><div class=\"line\"></div><div class=\"line\">第二步：</div><div class=\"line\">rpm -ivh http<span class=\"variable\">s:</span>//mirrors.tuna.tsinghua.edu.<span class=\"keyword\">cn</span>/gitlab-<span class=\"keyword\">ce</span>/yum/el6/gitlab-<span class=\"keyword\">ce</span>-<span class=\"number\">8.9</span>.<span class=\"number\">6</span>-<span class=\"keyword\">ce</span>.<span class=\"number\">0</span>.el6.x86_64.rpm</div><div class=\"line\">#截至到<span class=\"number\">7.16</span>为止，<span class=\"number\">8.9</span>.<span class=\"number\">6</span>版本还没有中文汉化版</div><div class=\"line\"></div><div class=\"line\">或者</div><div class=\"line\">rpm -ivh http://mirrors.lifetoy.org/gitlab-<span class=\"keyword\">ce</span>/yum/el6/gitlab-<span class=\"keyword\">ce</span>-<span class=\"number\">8.8</span>.<span class=\"number\">7</span>-<span class=\"keyword\">ce</span>.<span class=\"number\">1</span>.el6.x86_64.rpm</div></pre></td></tr></table></figure>\n<p>查看gitlab-ce安装的软件包：<code>rpm -ql gitlab-ce |more</code></p>\n<h2 id=\"启动gitLab\"><a href=\"#启动gitLab\" class=\"headerlink\" title=\"启动gitLab\"></a>启动gitLab</h2><p><code>sudo gitlab-ctl reconfigure</code></p>\n<hr>\n<h1 id=\"使用mysql数据库代替gitlab-ce\"><a href=\"#使用mysql数据库代替gitlab-ce\" class=\"headerlink\" title=\"使用mysql数据库代替gitlab-ce\"></a>使用mysql数据库代替gitlab-ce</h1><h2 id=\"添加yum仓库源\"><a href=\"#添加yum仓库源\" class=\"headerlink\" title=\"添加yum仓库源\"></a>添加yum仓库源</h2><figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">wget -P <span class=\"regexp\">/etc/yum</span>.repos.d  http:<span class=\"regexp\">//mi</span>rrors.aliyun.com<span class=\"regexp\">/repo/</span>Centos-<span class=\"number\">6</span>.repo  <span class=\"comment\">#Centos7 源不一样，官网找。</span></div><div class=\"line\">yum -y install mysql mysql-server mysql-devel gcc</div></pre></td></tr></table></figure>\n<h2 id=\"初始化mysql\"><a href=\"#初始化mysql\" class=\"headerlink\" title=\"初始化mysql\"></a>初始化mysql</h2><p>设定root用户密码为：12345gitlab<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">/etc/init.d/mysqld <span class=\"keyword\">start</span></div><div class=\"line\">/usr/<span class=\"keyword\">bin</span>/mysqladmin -u root <span class=\"keyword\">password</span> <span class=\"string\">'12345gitlab'</span></div></pre></td></tr></table></figure></p>\n<h2 id=\"创建gitlab相关的数据库\"><a href=\"#创建gitlab相关的数据库\" class=\"headerlink\" title=\"创建gitlab相关的数据库\"></a>创建gitlab相关的数据库</h2><p>创建gitlab用户，并设定密码为：gitlab12345aa<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">mysql -uroot -p'12345gitlab'</div><div class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">user</span> <span class=\"string\">'gitlab'</span>@<span class=\"string\">'%'</span> <span class=\"keyword\">identified</span> <span class=\"keyword\">by</span> <span class=\"string\">'gitlab12345aa'</span>;</div><div class=\"line\"><span class=\"keyword\">set</span> storage_engine=<span class=\"keyword\">innodb</span>;</div><div class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">database</span> <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> <span class=\"keyword\">exists</span> <span class=\"string\">`gitlabhq_production`</span> <span class=\"keyword\">default</span> <span class=\"built_in\">character</span> <span class=\"keyword\">set</span> <span class=\"string\">`utf8`</span> <span class=\"keyword\">collate</span> <span class=\"string\">`utf8_unicode_ci`</span>;</div><div class=\"line\"><span class=\"keyword\">grant</span> <span class=\"keyword\">select</span>,<span class=\"keyword\">insert</span>,<span class=\"keyword\">update</span>,<span class=\"keyword\">delete</span>,<span class=\"keyword\">create</span>,<span class=\"keyword\">create</span> <span class=\"keyword\">temporary</span> <span class=\"keyword\">tables</span>,<span class=\"keyword\">drop</span>,<span class=\"keyword\">index</span>,<span class=\"keyword\">alter</span>,<span class=\"keyword\">lock</span> <span class=\"keyword\">tables</span> <span class=\"keyword\">on</span> <span class=\"string\">`gitlabhq_production`</span>.* <span class=\"keyword\">to</span> <span class=\"string\">'gitlab'</span>@<span class=\"string\">'%'</span>;</div></pre></td></tr></table></figure></p>\n<h2 id=\"删除用户名为空的主机，并刷新mysql权限\"><a href=\"#删除用户名为空的主机，并刷新mysql权限\" class=\"headerlink\" title=\"删除用户名为空的主机，并刷新mysql权限\"></a>删除用户名为空的主机，并刷新mysql权限</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">mysql -uroot -p'12345gitlab' mysql -e \"<span class=\"keyword\">delete</span> <span class=\"keyword\">from</span> <span class=\"keyword\">user</span> <span class=\"keyword\">where</span> <span class=\"keyword\">user</span>=<span class=\"string\">''</span>;<span class=\"keyword\">flush</span> <span class=\"keyword\">privileges</span>;\"</div></pre></td></tr></table></figure>\n<h2 id=\"测试gitlab用户连接数据库\"><a href=\"#测试gitlab用户连接数据库\" class=\"headerlink\" title=\"测试gitlab用户连接数据库\"></a>测试gitlab用户连接数据库</h2><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">mysql -h127<span class=\"number\">.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span> -ugitlab -p'gitlab12345aa'</div></pre></td></tr></table></figure>\n<p>gitlab配置文件：<code>vim /etc/gitlab/gitlab.rb</code><br>gitlab_rails[‘db_adapter’] = “mysql2”<br>gitlab_rails[‘db_encoding’] = “utf8”<br>gitlab_rails[‘db_database’] = “gitlabhq_production”<br>gitlab_rails[‘db_pool’] = 10<br>gitlab_rails[‘db_username’] = “gitlab”<br>gitlab_rails[‘db_password’] = “<strong>gitlab12345aa</strong>“<br>gitlab_rails[‘db_host’] = “127.0.0.1”<br>gitlab_rails[‘db_port’] = 3306<br>postgresql[‘enable’] = false</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">vim <span class=\"regexp\">/opt/gi</span>tlab<span class=\"regexp\">/embedded/</span>service<span class=\"regexp\">/gitlab-rails/</span>.bundle<span class=\"regexp\">/config</span></div></pre></td></tr></table></figure>\n<hr>\n<p>BUNDLE_RETRY: 5<br>BUNDLE_PATH: “/opt/gitlab/embedded/service/gem”<br>BUNDLE_JOBS: 9<br><code>BUNDLE_WITHOUT: development:test:postgres</code><br>BUNDLE_DISABLE_SHARED_GEMS: ‘1’</p>\n<figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd <span class=\"regexp\">/opt/</span>gitlab<span class=\"regexp\">/embedded/</span>service/gitlab-rails</div><div class=\"line\"><span class=\"regexp\">/opt/</span>gitlab<span class=\"regexp\">/embedded/</span>bin/bundle install</div><div class=\"line\">gitlab-ctl reconfigure</div><div class=\"line\">gitlab-ctl restart</div><div class=\"line\">gitlab-rake <span class=\"string\">gitlab:</span>setup</div></pre></td></tr></table></figure>\n<p>到此gitlab-ce更换成mysql完成。</p>\n<p>打开<a href=\"http://IP/\" target=\"_blank\" rel=\"external\">http://IP/</a> 即可访问，首次访问GitLab,系统会让你重新设置管理员的密码,设置成功后会返回登录界面.<br>默认的管理员账号是root,如果你想更改默认管理员账号,请输入上面设置的新密码登录系统后修改帐号名</p>\n<hr>\n<h1 id=\"修改gitlab通过域名访问：\"><a href=\"#修改gitlab通过域名访问：\" class=\"headerlink\" title=\"修改gitlab通过域名访问：\"></a>修改gitlab通过域名访问：</h1><figure class=\"highlight rust\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">vim /etc/gitlab/gitlab.rb</div><div class=\"line\">external_url <span class=\"symbol\">'http</span>:<span class=\"comment\">//your.domain'</span></div></pre></td></tr></table></figure>\n<p>重启配置<br><code>sudo gitlab-ctl reconfigure</code></p>\n<p>实时查看所有执行日志<br><code>gitlab-ctl tail</code></p>\n<p>查看版本：<code>cat /opt/gitlab/embedded/service/gitlab-rails/VERSION</code></p>\n<p>/var/opt/gitlab/gitlab-workhorse<br>/opt/gitlab/embedded/service/gitlab-rails/public<br>/opt/gitlab/etc/gitlab-workhorse</p>\n<p>/var/log/gitlab/gitlab-workhorse</p>\n<p>配置文件路径：<br>/var/opt/gitlab/nginx<br>/var/opt/gitlab/nginx/conf/nginx.conf<br>/var/opt/gitlab/nginx/conf/gitlab-http.conf</p>\n<hr>\n<h1 id=\"汉化\"><a href=\"#汉化\" class=\"headerlink\" title=\"汉化\"></a>汉化</h1><h2 id=\"法一\"><a href=\"#法一\" class=\"headerlink\" title=\"法一\"></a>法一</h2><p>中文社区：<a href=\"https://gitlab.com/larryli/gitlab\" target=\"_blank\" rel=\"external\">https://gitlab.com/larryli/gitlab</a><br>确认gitlab版本与当前汉化版本的 VERSION 是否相同，当前最新的汉化版本为 8.13.5 。<br>如果安装版本小于当前汉化版本，请先升级。如果安装版本大于当前汉化版本，请在<a href=\"https://gitlab.com/larryli/gitlab/issues\" target=\"_blank\" rel=\"external\">项目</a>中提交新的 issue。<br>如果版本相同，首先在本地clone仓库。</p>\n<h3 id=\"下载汉化补丁包\"><a href=\"#下载汉化补丁包\" class=\"headerlink\" title=\"下载汉化补丁包\"></a>下载汉化补丁包</h3><ul>\n<li>1.先停止gitlab<br><code>gitlab-ctl stop</code></li>\n<li>2.克隆gitLab.com仓库，有中文补丁<br><code>git clone https://gitlab.com/xhang/gitlab.git   #注意对应的版本地址不同</code></li>\n</ul>\n<p>或gitcafe.com镜像，速度更快，暂时不支持中文补丁<br><code>git clone https://git.oschina.net/qiai365/gitlab-ce.git</code><br>或者<br><code>git clone https://git.oschina.net/johnwu/gitlab-zh.git</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">cd</span> gitlab</div><div class=\"line\">git branch <span class=\"_\">-a</span> |tac</div></pre></td></tr></table></figure>\n<p><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/gitlab%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA1.png\" alt=\"\"><br>8.8版本的汉化补丁（8-8-stable是英文稳定版，8-8-zh是中文版，两个diff结果便是汉化补丁）<br>git diff origin/8-8-stable origin/8-8-zh &gt; /tmp/8.8.diff</p>\n<h3 id=\"应用汉化补丁\"><a href=\"#应用汉化补丁\" class=\"headerlink\" title=\"应用汉化补丁\"></a>应用汉化补丁</h3><figure class=\"highlight dts\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd <span class=\"meta-keyword\">/opt/</span>gitlab<span class=\"meta-keyword\">/embedded/</span>service/gitlab-rails</div><div class=\"line\">git apply <span class=\"meta-keyword\">/tmp/</span><span class=\"number\">8.8</span>.diff</div></pre></td></tr></table></figure>\n<p>启动gitlab：<code>gitlab-ctl start</code></p>\n<h2 id=\"法二\"><a href=\"#法二\" class=\"headerlink\" title=\"法二\"></a>法二</h2><figure class=\"highlight subunit\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">wget https://gitlab.com/larryli/gitlab/repository/archive.zip?ref=8<span class=\"string\">-7</span>-zh</div><div class=\"line\">unzip gitlab<span class=\"string\">-8</span><span class=\"string\">-7</span>-zh-faeea0c584b042eaa433ed6c82335fe0c124af97.zip</div><div class=\"line\">cd gitlab<span class=\"string\">-8</span><span class=\"string\">-7</span>-zh-faeea0c584b042eaa433ed6c82335fe0c124af97</div><div class=\"line\">sudo gitlab-ctl reconfigure</div><div class=\"line\">sudo gitlab-ctl restart</div></pre></td></tr></table></figure>\n<hr>\n<h1 id=\"最后配置\"><a href=\"#最后配置\" class=\"headerlink\" title=\"最后配置\"></a>最后配置</h1><figure class=\"highlight dts\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">vim  <span class=\"meta-keyword\">/etc/</span>gitlab/gitlab.rb</div><div class=\"line\">vim <span class=\"meta-keyword\">/opt/</span>gitlab<span class=\"meta-keyword\">/embedded/</span>service<span class=\"meta-keyword\">/gitlab-rails/</span>config<span class=\"meta-keyword\">/environments/</span>production.rb</div><div class=\"line\">vim <span class=\"meta-keyword\">/var/</span>opt<span class=\"meta-keyword\">/gitlab/</span>gitlab-rails<span class=\"meta-keyword\">/etc/</span>smtp_settings.rb</div><div class=\"line\">vim <span class=\"meta-keyword\">/opt/</span>gitlab<span class=\"meta-keyword\">/embedded/</span>service<span class=\"meta-keyword\">/gitlab-rails/</span>config/gitlab.yml</div><div class=\"line\"><span class=\"symbol\">time_zone:</span> Asia/Shanghai</div><div class=\"line\">vim <span class=\"meta-keyword\">/opt/</span>gitlab<span class=\"meta-keyword\">/embedded/</span>service<span class=\"meta-keyword\">/gitlab-rails/</span>config<span class=\"meta-keyword\">/environments/</span>development.rb</div></pre></td></tr></table></figure>\n<ul>\n<li><p>1.设置存放代码库的主目录：<code>vim /etc/gitlab/gitlab.rb</code><br>默认是在<strong>/var/opt/gitlab/git-data</strong>下<br><code>git_data_dir &quot;/var/opt/gitlab/git-data&quot;</code></p>\n</li>\n<li><p>2.访问刚搭建的GitLab站点，创建一个<strong>group</strong>，比如<strong>devusers</strong>。<br>这时会在<strong>/var/opt/gitlab/git-data</strong>下创建<strong>/var/opt/gitlab/git-data/devusers</strong>文件夹。<br>然后在<strong>/var/opt/gitlab/git-data/repositories/</strong>创建一个文件夹，比如<strong>devusers</strong></p>\n</li>\n<li><p>3.将现有的所有git项目文件复制到这个文件夹<br><code>cp -r /data/git/*  /var/opt/gitlab/git-data/devusers</code></p>\n</li>\n<li><p>4.修改一下复制过来的文件夹的所有者：<br><code>chown -R git:git /var/opt/gitlab/git-data/devusers</code></p>\n</li>\n</ul>\n<figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd <span class=\"regexp\">/var/</span>opt/gitlab</div><div class=\"line\">gitlab-rake <span class=\"string\">gitlab:</span><span class=\"string\">import:</span>repos</div></pre></td></tr></table></figure>\n<p>gitlab仓库地址<br><figure class=\"highlight dts\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta-keyword\">/var/</span>opt<span class=\"meta-keyword\">/gitlab/</span>git-data/repositories</div><div class=\"line\">sudo vi <span class=\"meta-keyword\">/etc/</span>gitlab/gitlab.rb</div><div class=\"line\">git_data_dir</div></pre></td></tr></table></figure></p>\n<hr>\n","excerpt":"","more":"<p>本节是根据<a href=\"http://www.ilanni.com/\">烂泥大神</a>分享的笔记摘录的！</p>\n<h1 id=\"安装-GitLab\"><a href=\"#安装-GitLab\" class=\"headerlink\" title=\"安装 GitLab\"></a>安装 GitLab</h1><p>GitLab   下载：<a href=\"http://www.gitlab.cc/downloads/\">http://www.gitlab.cc/downloads/</a><br>GitLab 中文文档：<a href=\"http://doc.gitlab.cc\">http://doc.gitlab.cc</a><br>安装方式官方有详细说明，这里使用Centos 6安装，其他系统参考官方文档，一部到位。</p>\n<figure class=\"highlight livecodeserver\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#切换到root用户登录</span></div><div class=\"line\">yum -y install curl openssh-server openssh-clients postfix cronie</div><div class=\"line\">service postfix <span class=\"built_in\">start</span></div><div class=\"line\">chkconfig postfix <span class=\"keyword\">on</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#这句是用来做防火墙的。避免用户通过ssh方式和http来访问</span></div><div class=\"line\">sudo lokkit -s <span class=\"keyword\">http</span> -s ssh</div></pre></td></tr></table></figure>\n<h2 id=\"添加GitLab仓库-并安装到服务器上\"><a href=\"#添加GitLab仓库-并安装到服务器上\" class=\"headerlink\" title=\"添加GitLab仓库,并安装到服务器上\"></a>添加GitLab仓库,并安装到服务器上</h2><figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div></pre></td><td class=\"code\"><pre><div class=\"line\">第一步：</div><div class=\"line\">curl -sS http://packages.gitlab.<span class=\"keyword\">cc</span>/install/gitlab-<span class=\"keyword\">ce</span>/script.rpm.<span class=\"keyword\">sh</span> | sudo bash</div><div class=\"line\">yum -<span class=\"keyword\">y</span> install gitlab-<span class=\"keyword\">ce</span></div><div class=\"line\"></div><div class=\"line\">或者使用国内的镜像源：</div><div class=\"line\"><span class=\"keyword\">vim</span> /etc/yum.repos.d/gitlab-<span class=\"keyword\">ce</span>.repo</div><div class=\"line\">[gitlab-<span class=\"keyword\">ce</span>]</div><div class=\"line\">name=gitlab-<span class=\"keyword\">ce</span></div><div class=\"line\">baseurl=http://mirrors.lifetoy.org/gitlab-<span class=\"keyword\">ce</span>/yum/el6</div><div class=\"line\">repo_gpgcheck=<span class=\"number\">0</span></div><div class=\"line\">gpgcheck=<span class=\"number\">0</span></div><div class=\"line\">enabled=<span class=\"number\">1</span></div><div class=\"line\">gpgkey=http<span class=\"variable\">s:</span>//packages.gitlab.<span class=\"keyword\">com</span>/gpg.key</div><div class=\"line\"></div><div class=\"line\">yum -<span class=\"keyword\">y</span> install gitlab-<span class=\"keyword\">ce</span></div><div class=\"line\"></div><div class=\"line\">或者使用</div><div class=\"line\"><span class=\"keyword\">vim</span> /etc/yum.repos.d/gitlab-<span class=\"keyword\">ce</span>.repo</div><div class=\"line\">[gitlab-<span class=\"keyword\">ce</span>]</div><div class=\"line\">name=gitlab-<span class=\"keyword\">ce</span></div><div class=\"line\">baseurl=http://mirrors.lifetoy.org/gitlab-<span class=\"keyword\">ce</span>/yum/el6/</div><div class=\"line\">repo_gpgcheck=<span class=\"number\">0</span></div><div class=\"line\">gpgcheck=<span class=\"number\">0</span></div><div class=\"line\">enabled=<span class=\"number\">1</span></div><div class=\"line\">gpgkey=http<span class=\"variable\">s:</span>//packages.gitlab.<span class=\"keyword\">com</span>/gpg.key</div><div class=\"line\"></div><div class=\"line\">yum -<span class=\"keyword\">y</span> install gitlab-<span class=\"keyword\">ce</span></div><div class=\"line\"></div><div class=\"line\">-----------------------------------------------------------------------------------------</div><div class=\"line\"></div><div class=\"line\">第二步：</div><div class=\"line\">rpm -ivh http<span class=\"variable\">s:</span>//mirrors.tuna.tsinghua.edu.<span class=\"keyword\">cn</span>/gitlab-<span class=\"keyword\">ce</span>/yum/el6/gitlab-<span class=\"keyword\">ce</span>-<span class=\"number\">8.9</span>.<span class=\"number\">6</span>-<span class=\"keyword\">ce</span>.<span class=\"number\">0</span>.el6.x86_64.rpm</div><div class=\"line\">#截至到<span class=\"number\">7.16</span>为止，<span class=\"number\">8.9</span>.<span class=\"number\">6</span>版本还没有中文汉化版</div><div class=\"line\"></div><div class=\"line\">或者</div><div class=\"line\">rpm -ivh http://mirrors.lifetoy.org/gitlab-<span class=\"keyword\">ce</span>/yum/el6/gitlab-<span class=\"keyword\">ce</span>-<span class=\"number\">8.8</span>.<span class=\"number\">7</span>-<span class=\"keyword\">ce</span>.<span class=\"number\">1</span>.el6.x86_64.rpm</div></pre></td></tr></table></figure>\n<p>查看gitlab-ce安装的软件包：<code>rpm -ql gitlab-ce |more</code></p>\n<h2 id=\"启动gitLab\"><a href=\"#启动gitLab\" class=\"headerlink\" title=\"启动gitLab\"></a>启动gitLab</h2><p><code>sudo gitlab-ctl reconfigure</code></p>\n<hr>\n<h1 id=\"使用mysql数据库代替gitlab-ce\"><a href=\"#使用mysql数据库代替gitlab-ce\" class=\"headerlink\" title=\"使用mysql数据库代替gitlab-ce\"></a>使用mysql数据库代替gitlab-ce</h1><h2 id=\"添加yum仓库源\"><a href=\"#添加yum仓库源\" class=\"headerlink\" title=\"添加yum仓库源\"></a>添加yum仓库源</h2><figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">wget -P <span class=\"regexp\">/etc/yum</span>.repos.d  http:<span class=\"regexp\">//mi</span>rrors.aliyun.com<span class=\"regexp\">/repo/</span>Centos-<span class=\"number\">6</span>.repo  <span class=\"comment\">#Centos7 源不一样，官网找。</span></div><div class=\"line\">yum -y install mysql mysql-server mysql-devel gcc</div></pre></td></tr></table></figure>\n<h2 id=\"初始化mysql\"><a href=\"#初始化mysql\" class=\"headerlink\" title=\"初始化mysql\"></a>初始化mysql</h2><p>设定root用户密码为：12345gitlab<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">/etc/init.d/mysqld <span class=\"keyword\">start</span></div><div class=\"line\">/usr/<span class=\"keyword\">bin</span>/mysqladmin -u root <span class=\"keyword\">password</span> <span class=\"string\">'12345gitlab'</span></div></pre></td></tr></table></figure></p>\n<h2 id=\"创建gitlab相关的数据库\"><a href=\"#创建gitlab相关的数据库\" class=\"headerlink\" title=\"创建gitlab相关的数据库\"></a>创建gitlab相关的数据库</h2><p>创建gitlab用户，并设定密码为：gitlab12345aa<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">mysql -uroot -p'12345gitlab'</div><div class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">user</span> <span class=\"string\">'gitlab'</span>@<span class=\"string\">'%'</span> <span class=\"keyword\">identified</span> <span class=\"keyword\">by</span> <span class=\"string\">'gitlab12345aa'</span>;</div><div class=\"line\"><span class=\"keyword\">set</span> storage_engine=<span class=\"keyword\">innodb</span>;</div><div class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">database</span> <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> <span class=\"keyword\">exists</span> <span class=\"string\">`gitlabhq_production`</span> <span class=\"keyword\">default</span> <span class=\"built_in\">character</span> <span class=\"keyword\">set</span> <span class=\"string\">`utf8`</span> <span class=\"keyword\">collate</span> <span class=\"string\">`utf8_unicode_ci`</span>;</div><div class=\"line\"><span class=\"keyword\">grant</span> <span class=\"keyword\">select</span>,<span class=\"keyword\">insert</span>,<span class=\"keyword\">update</span>,<span class=\"keyword\">delete</span>,<span class=\"keyword\">create</span>,<span class=\"keyword\">create</span> <span class=\"keyword\">temporary</span> <span class=\"keyword\">tables</span>,<span class=\"keyword\">drop</span>,<span class=\"keyword\">index</span>,<span class=\"keyword\">alter</span>,<span class=\"keyword\">lock</span> <span class=\"keyword\">tables</span> <span class=\"keyword\">on</span> <span class=\"string\">`gitlabhq_production`</span>.* <span class=\"keyword\">to</span> <span class=\"string\">'gitlab'</span>@<span class=\"string\">'%'</span>;</div></pre></td></tr></table></figure></p>\n<h2 id=\"删除用户名为空的主机，并刷新mysql权限\"><a href=\"#删除用户名为空的主机，并刷新mysql权限\" class=\"headerlink\" title=\"删除用户名为空的主机，并刷新mysql权限\"></a>删除用户名为空的主机，并刷新mysql权限</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">mysql -uroot -p'12345gitlab' mysql -e \"<span class=\"keyword\">delete</span> <span class=\"keyword\">from</span> <span class=\"keyword\">user</span> <span class=\"keyword\">where</span> <span class=\"keyword\">user</span>=<span class=\"string\">''</span>;<span class=\"keyword\">flush</span> <span class=\"keyword\">privileges</span>;\"</div></pre></td></tr></table></figure>\n<h2 id=\"测试gitlab用户连接数据库\"><a href=\"#测试gitlab用户连接数据库\" class=\"headerlink\" title=\"测试gitlab用户连接数据库\"></a>测试gitlab用户连接数据库</h2><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">mysql -h127<span class=\"number\">.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span> -ugitlab -p'gitlab12345aa'</div></pre></td></tr></table></figure>\n<p>gitlab配置文件：<code>vim /etc/gitlab/gitlab.rb</code><br>gitlab_rails[‘db_adapter’] = “mysql2”<br>gitlab_rails[‘db_encoding’] = “utf8”<br>gitlab_rails[‘db_database’] = “gitlabhq_production”<br>gitlab_rails[‘db_pool’] = 10<br>gitlab_rails[‘db_username’] = “gitlab”<br>gitlab_rails[‘db_password’] = “<strong>gitlab12345aa</strong>“<br>gitlab_rails[‘db_host’] = “127.0.0.1”<br>gitlab_rails[‘db_port’] = 3306<br>postgresql[‘enable’] = false</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">vim <span class=\"regexp\">/opt/gi</span>tlab<span class=\"regexp\">/embedded/</span>service<span class=\"regexp\">/gitlab-rails/</span>.bundle<span class=\"regexp\">/config</span></div></pre></td></tr></table></figure>\n<hr>\n<p>BUNDLE_RETRY: 5<br>BUNDLE_PATH: “/opt/gitlab/embedded/service/gem”<br>BUNDLE_JOBS: 9<br><code>BUNDLE_WITHOUT: development:test:postgres</code><br>BUNDLE_DISABLE_SHARED_GEMS: ‘1’</p>\n<figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd <span class=\"regexp\">/opt/</span>gitlab<span class=\"regexp\">/embedded/</span>service/gitlab-rails</div><div class=\"line\"><span class=\"regexp\">/opt/</span>gitlab<span class=\"regexp\">/embedded/</span>bin/bundle install</div><div class=\"line\">gitlab-ctl reconfigure</div><div class=\"line\">gitlab-ctl restart</div><div class=\"line\">gitlab-rake <span class=\"string\">gitlab:</span>setup</div></pre></td></tr></table></figure>\n<p>到此gitlab-ce更换成mysql完成。</p>\n<p>打开<a href=\"http://IP/\">http://IP/</a> 即可访问，首次访问GitLab,系统会让你重新设置管理员的密码,设置成功后会返回登录界面.<br>默认的管理员账号是root,如果你想更改默认管理员账号,请输入上面设置的新密码登录系统后修改帐号名</p>\n<hr>\n<h1 id=\"修改gitlab通过域名访问：\"><a href=\"#修改gitlab通过域名访问：\" class=\"headerlink\" title=\"修改gitlab通过域名访问：\"></a>修改gitlab通过域名访问：</h1><figure class=\"highlight rust\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">vim /etc/gitlab/gitlab.rb</div><div class=\"line\">external_url <span class=\"symbol\">'http</span>:<span class=\"comment\">//your.domain'</span></div></pre></td></tr></table></figure>\n<p>重启配置<br><code>sudo gitlab-ctl reconfigure</code></p>\n<p>实时查看所有执行日志<br><code>gitlab-ctl tail</code></p>\n<p>查看版本：<code>cat /opt/gitlab/embedded/service/gitlab-rails/VERSION</code></p>\n<p>/var/opt/gitlab/gitlab-workhorse<br>/opt/gitlab/embedded/service/gitlab-rails/public<br>/opt/gitlab/etc/gitlab-workhorse</p>\n<p>/var/log/gitlab/gitlab-workhorse</p>\n<p>配置文件路径：<br>/var/opt/gitlab/nginx<br>/var/opt/gitlab/nginx/conf/nginx.conf<br>/var/opt/gitlab/nginx/conf/gitlab-http.conf</p>\n<hr>\n<h1 id=\"汉化\"><a href=\"#汉化\" class=\"headerlink\" title=\"汉化\"></a>汉化</h1><h2 id=\"法一\"><a href=\"#法一\" class=\"headerlink\" title=\"法一\"></a>法一</h2><p>中文社区：<a href=\"https://gitlab.com/larryli/gitlab\">https://gitlab.com/larryli/gitlab</a><br>确认gitlab版本与当前汉化版本的 VERSION 是否相同，当前最新的汉化版本为 8.13.5 。<br>如果安装版本小于当前汉化版本，请先升级。如果安装版本大于当前汉化版本，请在<a href=\"https://gitlab.com/larryli/gitlab/issues\">项目</a>中提交新的 issue。<br>如果版本相同，首先在本地clone仓库。</p>\n<h3 id=\"下载汉化补丁包\"><a href=\"#下载汉化补丁包\" class=\"headerlink\" title=\"下载汉化补丁包\"></a>下载汉化补丁包</h3><ul>\n<li>1.先停止gitlab<br><code>gitlab-ctl stop</code></li>\n<li>2.克隆gitLab.com仓库，有中文补丁<br><code>git clone https://gitlab.com/xhang/gitlab.git   #注意对应的版本地址不同</code></li>\n</ul>\n<p>或gitcafe.com镜像，速度更快，暂时不支持中文补丁<br><code>git clone https://git.oschina.net/qiai365/gitlab-ce.git</code><br>或者<br><code>git clone https://git.oschina.net/johnwu/gitlab-zh.git</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">cd</span> gitlab</div><div class=\"line\">git branch <span class=\"_\">-a</span> |tac</div></pre></td></tr></table></figure>\n<p><img src=\"http://ofyfogrgx.bkt.clouddn.com//blog/gitlab%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA1.png\" alt=\"\"><br>8.8版本的汉化补丁（8-8-stable是英文稳定版，8-8-zh是中文版，两个diff结果便是汉化补丁）<br>git diff origin/8-8-stable origin/8-8-zh &gt; /tmp/8.8.diff</p>\n<h3 id=\"应用汉化补丁\"><a href=\"#应用汉化补丁\" class=\"headerlink\" title=\"应用汉化补丁\"></a>应用汉化补丁</h3><figure class=\"highlight dts\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd <span class=\"meta-keyword\">/opt/</span>gitlab<span class=\"meta-keyword\">/embedded/</span>service/gitlab-rails</div><div class=\"line\">git apply <span class=\"meta-keyword\">/tmp/</span><span class=\"number\">8.8</span>.diff</div></pre></td></tr></table></figure>\n<p>启动gitlab：<code>gitlab-ctl start</code></p>\n<h2 id=\"法二\"><a href=\"#法二\" class=\"headerlink\" title=\"法二\"></a>法二</h2><figure class=\"highlight subunit\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">wget https://gitlab.com/larryli/gitlab/repository/archive.zip?ref=8<span class=\"string\">-7</span>-zh</div><div class=\"line\">unzip gitlab<span class=\"string\">-8</span><span class=\"string\">-7</span>-zh-faeea0c584b042eaa433ed6c82335fe0c124af97.zip</div><div class=\"line\">cd gitlab<span class=\"string\">-8</span><span class=\"string\">-7</span>-zh-faeea0c584b042eaa433ed6c82335fe0c124af97</div><div class=\"line\">sudo gitlab-ctl reconfigure</div><div class=\"line\">sudo gitlab-ctl restart</div></pre></td></tr></table></figure>\n<hr>\n<h1 id=\"最后配置\"><a href=\"#最后配置\" class=\"headerlink\" title=\"最后配置\"></a>最后配置</h1><figure class=\"highlight dts\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">vim  <span class=\"meta-keyword\">/etc/</span>gitlab/gitlab.rb</div><div class=\"line\">vim <span class=\"meta-keyword\">/opt/</span>gitlab<span class=\"meta-keyword\">/embedded/</span>service<span class=\"meta-keyword\">/gitlab-rails/</span>config<span class=\"meta-keyword\">/environments/</span>production.rb</div><div class=\"line\">vim <span class=\"meta-keyword\">/var/</span>opt<span class=\"meta-keyword\">/gitlab/</span>gitlab-rails<span class=\"meta-keyword\">/etc/</span>smtp_settings.rb</div><div class=\"line\">vim <span class=\"meta-keyword\">/opt/</span>gitlab<span class=\"meta-keyword\">/embedded/</span>service<span class=\"meta-keyword\">/gitlab-rails/</span>config/gitlab.yml</div><div class=\"line\"><span class=\"symbol\">time_zone:</span> Asia/Shanghai</div><div class=\"line\">vim <span class=\"meta-keyword\">/opt/</span>gitlab<span class=\"meta-keyword\">/embedded/</span>service<span class=\"meta-keyword\">/gitlab-rails/</span>config<span class=\"meta-keyword\">/environments/</span>development.rb</div></pre></td></tr></table></figure>\n<ul>\n<li><p>1.设置存放代码库的主目录：<code>vim /etc/gitlab/gitlab.rb</code><br>默认是在<strong>/var/opt/gitlab/git-data</strong>下<br><code>git_data_dir &quot;/var/opt/gitlab/git-data&quot;</code></p>\n</li>\n<li><p>2.访问刚搭建的GitLab站点，创建一个<strong>group</strong>，比如<strong>devusers</strong>。<br>这时会在<strong>/var/opt/gitlab/git-data</strong>下创建<strong>/var/opt/gitlab/git-data/devusers</strong>文件夹。<br>然后在<strong>/var/opt/gitlab/git-data/repositories/</strong>创建一个文件夹，比如<strong>devusers</strong></p>\n</li>\n<li><p>3.将现有的所有git项目文件复制到这个文件夹<br><code>cp -r /data/git/*  /var/opt/gitlab/git-data/devusers</code></p>\n</li>\n<li><p>4.修改一下复制过来的文件夹的所有者：<br><code>chown -R git:git /var/opt/gitlab/git-data/devusers</code></p>\n</li>\n</ul>\n<figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd <span class=\"regexp\">/var/</span>opt/gitlab</div><div class=\"line\">gitlab-rake <span class=\"string\">gitlab:</span><span class=\"string\">import:</span>repos</div></pre></td></tr></table></figure>\n<p>gitlab仓库地址<br><figure class=\"highlight dts\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta-keyword\">/var/</span>opt<span class=\"meta-keyword\">/gitlab/</span>git-data/repositories</div><div class=\"line\">sudo vi <span class=\"meta-keyword\">/etc/</span>gitlab/gitlab.rb</div><div class=\"line\">git_data_dir</div></pre></td></tr></table></figure></p>\n<hr>\n"},{"title":"Linux内核升级","abbrlink":27726,"date":"2016-11-02T13:58:39.000Z","_content":"\n# 内核升级：\n【内核版本 https://www.kernel.org/】\n参考：http://blog.csdn.net/taiyang1987912/article/details/42744019\n```\nyum install ncurses-devel -y\nyum install hmaccalc zlib-devel binutils-devel elfutils-libelf-devel -y\nwget  https://www.kernel.org/pub/linux/kernel/v3.x/linux-3.10.28.tar.xz     \ntar -xf linux-3.10.28.tar.xz\nmv linux-3.10.28 /usr/src/\ncd /usr/src/linux-3.10.28/\ncp /boot/config-2.6.32-573.el6.x86_64 .config\nsh -c 'yes \"\" | make oldconfig'\nmake oldconfig```\n\ncpu核数 `cat /proc/cpuinfo| grep \"processor\"| wc -l `  下面**-j**后面的48是cpu核数（指定编译核数）\n```\nmake -j48 bzImage\nmake -j48 modules\nmake -j48 modules_install\nmake install```\n\n安装完成后\n`vi /etc/grub.conf`\n 看新安装的内核在第几段，一般是在第一段，从0开始数看title CentOS (3.10.28) 在第一段为**default=0**，第二段为**default=1**\n\n例如:\n```\n#boot=/dev/sdb\ndefault=0\ntimeout=5\nsplashimage=(hd0,0)/grub/splash.xpm.gz\nhiddenmenu\ntitle CentOS (3.10.28)\n        root (hd0,0)\n        kernel /vmlinuz-3.10.28 ro root=UUID=28fbaad8-35a6-4348-b1e0-bf204537f8b0 rd_NO_LUKS rd_NO_LVM LANG=en_US.UTF-8 rd_NO_MD SYSFONT=latarcyrheb-sun16 crashkernel=auto  KEYBOARDTYPE=pc KEYTABLE=us rd_NO_DM rhgb quiet\n        initrd /initramfs-3.10.28.img\ntitle CentOS (2.6.32-642.3.1.el6.x86_64)\n        root (hd0,0)\n        kernel /vmlinuz-2.6.32-642.3.1.el6.x86_64 ro root=UUID=28fbaad8-35a6-4348-b1e0-bf204537f8b0 rd_NO_LUKS rd_NO_LVM LANG=en_US.UTF-8 rd_NO_MD SYSFONT=latarcyrheb-sun16 crashkernel=auto  KEYBOARDTYPE=pc KEYTABLE=us rd_NO_DM rhgb quiet\n        initrd /initramfs-2.6.32-642.3.1.el6.x86_64.img\ntitle CentOS 6 (2.6.32-573.el6.x86_64)\n        root (hd0,0)\n        kernel /vmlinuz-2.6.32-573.el6.x86_64 ro root=UUID=28fbaad8-35a6-4348-b1e0-bf204537f8b0 rd_NO_LUKS rd_NO_LVM LANG=en_US.UTF-8 rd_NO_MD SYSFONT=latarcyrheb-sun16 crashkernel=auto  KEYBOARDTYPE=pc KEYTABLE=us rd_NO_DM rhgb quiet\n        initrd /initramfs-2.6.32-573.el6.x86_64.img\n```\n`reboot`\n`uname -r `   查看内核版本\n\n\n\n---","source":"_posts/系统管理/2016-11-02-Linux内核升级.md","raw":"---\ntitle: Linux内核升级\ncategories:\n  - 系统管理\ntags:\n  - Linux内核升级\nabbrlink: 27726\ndate: 2016-11-02 21:58:39\n---\n\n# 内核升级：\n【内核版本 https://www.kernel.org/】\n参考：http://blog.csdn.net/taiyang1987912/article/details/42744019\n```\nyum install ncurses-devel -y\nyum install hmaccalc zlib-devel binutils-devel elfutils-libelf-devel -y\nwget  https://www.kernel.org/pub/linux/kernel/v3.x/linux-3.10.28.tar.xz     \ntar -xf linux-3.10.28.tar.xz\nmv linux-3.10.28 /usr/src/\ncd /usr/src/linux-3.10.28/\ncp /boot/config-2.6.32-573.el6.x86_64 .config\nsh -c 'yes \"\" | make oldconfig'\nmake oldconfig```\n\ncpu核数 `cat /proc/cpuinfo| grep \"processor\"| wc -l `  下面**-j**后面的48是cpu核数（指定编译核数）\n```\nmake -j48 bzImage\nmake -j48 modules\nmake -j48 modules_install\nmake install```\n\n安装完成后\n`vi /etc/grub.conf`\n 看新安装的内核在第几段，一般是在第一段，从0开始数看title CentOS (3.10.28) 在第一段为**default=0**，第二段为**default=1**\n\n例如:\n```\n#boot=/dev/sdb\ndefault=0\ntimeout=5\nsplashimage=(hd0,0)/grub/splash.xpm.gz\nhiddenmenu\ntitle CentOS (3.10.28)\n        root (hd0,0)\n        kernel /vmlinuz-3.10.28 ro root=UUID=28fbaad8-35a6-4348-b1e0-bf204537f8b0 rd_NO_LUKS rd_NO_LVM LANG=en_US.UTF-8 rd_NO_MD SYSFONT=latarcyrheb-sun16 crashkernel=auto  KEYBOARDTYPE=pc KEYTABLE=us rd_NO_DM rhgb quiet\n        initrd /initramfs-3.10.28.img\ntitle CentOS (2.6.32-642.3.1.el6.x86_64)\n        root (hd0,0)\n        kernel /vmlinuz-2.6.32-642.3.1.el6.x86_64 ro root=UUID=28fbaad8-35a6-4348-b1e0-bf204537f8b0 rd_NO_LUKS rd_NO_LVM LANG=en_US.UTF-8 rd_NO_MD SYSFONT=latarcyrheb-sun16 crashkernel=auto  KEYBOARDTYPE=pc KEYTABLE=us rd_NO_DM rhgb quiet\n        initrd /initramfs-2.6.32-642.3.1.el6.x86_64.img\ntitle CentOS 6 (2.6.32-573.el6.x86_64)\n        root (hd0,0)\n        kernel /vmlinuz-2.6.32-573.el6.x86_64 ro root=UUID=28fbaad8-35a6-4348-b1e0-bf204537f8b0 rd_NO_LUKS rd_NO_LVM LANG=en_US.UTF-8 rd_NO_MD SYSFONT=latarcyrheb-sun16 crashkernel=auto  KEYBOARDTYPE=pc KEYTABLE=us rd_NO_DM rhgb quiet\n        initrd /initramfs-2.6.32-573.el6.x86_64.img\n```\n`reboot`\n`uname -r `   查看内核版本\n\n\n\n---","slug":"系统管理-2016-11-02-Linux内核升级","published":1,"updated":"2016-11-13T03:36:30.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civi8oujw00312c6nydn7hm7v","content":"<h1 id=\"内核升级：\"><a href=\"#内核升级：\" class=\"headerlink\" title=\"内核升级：\"></a>内核升级：</h1><p>【内核版本 <a href=\"https://www.kernel.org/】\" target=\"_blank\" rel=\"external\">https://www.kernel.org/】</a><br>参考：<a href=\"http://blog.csdn.net/taiyang1987912/article/details/42744019\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/taiyang1987912/article/details/42744019</a><br><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">yum install ncurses-devel -y</div><div class=\"line\">yum install hmaccalc zlib-devel binutils-devel elfutils-libelf-devel -y</div><div class=\"line\">wget  https:<span class=\"comment\">//www.kernel.org/pub/linux/kernel/v3.x/linux-3.10.28.tar.xz     </span></div><div class=\"line\">tar -xf linux-<span class=\"number\">3.10</span>.<span class=\"number\">28</span><span class=\"selector-class\">.tar</span><span class=\"selector-class\">.xz</span></div><div class=\"line\">mv linux-<span class=\"number\">3.10</span>.<span class=\"number\">28</span> /usr/src/</div><div class=\"line\">cd /usr/src/linux-<span class=\"number\">3.10</span>.<span class=\"number\">28</span>/</div><div class=\"line\">cp /boot/config-<span class=\"number\">2.6</span>.<span class=\"number\">32</span>-<span class=\"number\">573</span><span class=\"selector-class\">.el6</span><span class=\"selector-class\">.x86_64</span> <span class=\"selector-class\">.config</span></div><div class=\"line\">sh -c <span class=\"string\">'yes \"\" | make oldconfig'</span></div><div class=\"line\">make oldconfig</div></pre></td></tr></table></figure></p>\n<p>cpu核数 <code>cat /proc/cpuinfo| grep &quot;processor&quot;| wc -l</code>  下面<strong>-j</strong>后面的48是cpu核数（指定编译核数）<br><figure class=\"highlight gauss\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">make</span> -j48 bzImage</div><div class=\"line\"><span class=\"built_in\">make</span> -j48 modules</div><div class=\"line\"><span class=\"built_in\">make</span> -j48 modules_install</div><div class=\"line\"><span class=\"built_in\">make</span> install</div></pre></td></tr></table></figure></p>\n<p>安装完成后<br><code>vi /etc/grub.conf</code><br> 看新安装的内核在第几段，一般是在第一段，从0开始数看title CentOS (3.10.28) 在第一段为<strong>default=0</strong>，第二段为<strong>default=1</strong></p>\n<p>例如:<br><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">#boot=/dev/sdb</div><div class=\"line\"><span class=\"section\">default</span>=<span class=\"number\">0</span></div><div class=\"line\">timeout=<span class=\"number\">5</span></div><div class=\"line\">splashimage=(hd0,<span class=\"number\">0</span>)/grub/splash.xpm.gz</div><div class=\"line\">hiddenmenu</div><div class=\"line\">title CentOS (<span class=\"number\">3.10</span><span class=\"number\">.28</span>)</div><div class=\"line\">        root (hd0,<span class=\"number\">0</span>)</div><div class=\"line\">        kernel /vmlinuz<span class=\"number\">-3.10</span><span class=\"number\">.28</span> ro root=UUID=<span class=\"number\">28</span>fbaad8<span class=\"number\">-35</span>a6<span class=\"number\">-4348</span>-b1e0-bf204537f8b0 rd_NO_LUKS rd_NO_LVM LANG=en_US.UTF<span class=\"number\">-8</span> rd_NO_MD SYSFONT=latarcyrheb-sun16 crashkernel=auto  KEYBOARDTYPE=pc KEYTABLE=us rd_NO_DM rhgb quiet</div><div class=\"line\">        initrd /initramfs<span class=\"number\">-3.10</span><span class=\"number\">.28</span>.img</div><div class=\"line\">title CentOS (<span class=\"number\">2.6</span><span class=\"number\">.32</span><span class=\"number\">-642.3</span><span class=\"number\">.1</span>.el6.x86_64)</div><div class=\"line\">        root (hd0,<span class=\"number\">0</span>)</div><div class=\"line\">        kernel /vmlinuz<span class=\"number\">-2.6</span><span class=\"number\">.32</span><span class=\"number\">-642.3</span><span class=\"number\">.1</span>.el6.x86_64 ro root=UUID=<span class=\"number\">28</span>fbaad8<span class=\"number\">-35</span>a6<span class=\"number\">-4348</span>-b1e0-bf204537f8b0 rd_NO_LUKS rd_NO_LVM LANG=en_US.UTF<span class=\"number\">-8</span> rd_NO_MD SYSFONT=latarcyrheb-sun16 crashkernel=auto  KEYBOARDTYPE=pc KEYTABLE=us rd_NO_DM rhgb quiet</div><div class=\"line\">        initrd /initramfs<span class=\"number\">-2.6</span><span class=\"number\">.32</span><span class=\"number\">-642.3</span><span class=\"number\">.1</span>.el6.x86_64.img</div><div class=\"line\">title CentOS <span class=\"number\">6</span> (<span class=\"number\">2.6</span><span class=\"number\">.32</span><span class=\"number\">-573.</span>el6.x86_64)</div><div class=\"line\">        root (hd0,<span class=\"number\">0</span>)</div><div class=\"line\">        kernel /vmlinuz<span class=\"number\">-2.6</span><span class=\"number\">.32</span><span class=\"number\">-573.</span>el6.x86_64 ro root=UUID=<span class=\"number\">28</span>fbaad8<span class=\"number\">-35</span>a6<span class=\"number\">-4348</span>-b1e0-bf204537f8b0 rd_NO_LUKS rd_NO_LVM LANG=en_US.UTF<span class=\"number\">-8</span> rd_NO_MD SYSFONT=latarcyrheb-sun16 crashkernel=auto  KEYBOARDTYPE=pc KEYTABLE=us rd_NO_DM rhgb quiet</div><div class=\"line\">        initrd /initramfs<span class=\"number\">-2.6</span><span class=\"number\">.32</span><span class=\"number\">-573.</span>el6.x86_64.img</div></pre></td></tr></table></figure></p>\n<p><code>reboot</code><br><code>uname -r</code>   查看内核版本</p>\n<hr>\n","excerpt":"","more":"<h1 id=\"内核升级：\"><a href=\"#内核升级：\" class=\"headerlink\" title=\"内核升级：\"></a>内核升级：</h1><p>【内核版本 <a href=\"https://www.kernel.org/】\">https://www.kernel.org/】</a><br>参考：<a href=\"http://blog.csdn.net/taiyang1987912/article/details/42744019\">http://blog.csdn.net/taiyang1987912/article/details/42744019</a><br><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">yum install ncurses-devel -y</div><div class=\"line\">yum install hmaccalc zlib-devel binutils-devel elfutils-libelf-devel -y</div><div class=\"line\">wget  https:<span class=\"comment\">//www.kernel.org/pub/linux/kernel/v3.x/linux-3.10.28.tar.xz     </span></div><div class=\"line\">tar -xf linux-<span class=\"number\">3.10</span>.<span class=\"number\">28</span><span class=\"selector-class\">.tar</span><span class=\"selector-class\">.xz</span></div><div class=\"line\">mv linux-<span class=\"number\">3.10</span>.<span class=\"number\">28</span> /usr/src/</div><div class=\"line\">cd /usr/src/linux-<span class=\"number\">3.10</span>.<span class=\"number\">28</span>/</div><div class=\"line\">cp /boot/config-<span class=\"number\">2.6</span>.<span class=\"number\">32</span>-<span class=\"number\">573</span><span class=\"selector-class\">.el6</span><span class=\"selector-class\">.x86_64</span> <span class=\"selector-class\">.config</span></div><div class=\"line\">sh -c <span class=\"string\">'yes \"\" | make oldconfig'</span></div><div class=\"line\">make oldconfig</div></pre></td></tr></table></figure></p>\n<p>cpu核数 <code>cat /proc/cpuinfo| grep &quot;processor&quot;| wc -l</code>  下面<strong>-j</strong>后面的48是cpu核数（指定编译核数）<br><figure class=\"highlight gauss\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">make</span> -j48 bzImage</div><div class=\"line\"><span class=\"built_in\">make</span> -j48 modules</div><div class=\"line\"><span class=\"built_in\">make</span> -j48 modules_install</div><div class=\"line\"><span class=\"built_in\">make</span> install</div></pre></td></tr></table></figure></p>\n<p>安装完成后<br><code>vi /etc/grub.conf</code><br> 看新安装的内核在第几段，一般是在第一段，从0开始数看title CentOS (3.10.28) 在第一段为<strong>default=0</strong>，第二段为<strong>default=1</strong></p>\n<p>例如:<br><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">#boot=/dev/sdb</div><div class=\"line\"><span class=\"section\">default</span>=<span class=\"number\">0</span></div><div class=\"line\">timeout=<span class=\"number\">5</span></div><div class=\"line\">splashimage=(hd0,<span class=\"number\">0</span>)/grub/splash.xpm.gz</div><div class=\"line\">hiddenmenu</div><div class=\"line\">title CentOS (<span class=\"number\">3.10</span><span class=\"number\">.28</span>)</div><div class=\"line\">        root (hd0,<span class=\"number\">0</span>)</div><div class=\"line\">        kernel /vmlinuz<span class=\"number\">-3.10</span><span class=\"number\">.28</span> ro root=UUID=<span class=\"number\">28</span>fbaad8<span class=\"number\">-35</span>a6<span class=\"number\">-4348</span>-b1e0-bf204537f8b0 rd_NO_LUKS rd_NO_LVM LANG=en_US.UTF<span class=\"number\">-8</span> rd_NO_MD SYSFONT=latarcyrheb-sun16 crashkernel=auto  KEYBOARDTYPE=pc KEYTABLE=us rd_NO_DM rhgb quiet</div><div class=\"line\">        initrd /initramfs<span class=\"number\">-3.10</span><span class=\"number\">.28</span>.img</div><div class=\"line\">title CentOS (<span class=\"number\">2.6</span><span class=\"number\">.32</span><span class=\"number\">-642.3</span><span class=\"number\">.1</span>.el6.x86_64)</div><div class=\"line\">        root (hd0,<span class=\"number\">0</span>)</div><div class=\"line\">        kernel /vmlinuz<span class=\"number\">-2.6</span><span class=\"number\">.32</span><span class=\"number\">-642.3</span><span class=\"number\">.1</span>.el6.x86_64 ro root=UUID=<span class=\"number\">28</span>fbaad8<span class=\"number\">-35</span>a6<span class=\"number\">-4348</span>-b1e0-bf204537f8b0 rd_NO_LUKS rd_NO_LVM LANG=en_US.UTF<span class=\"number\">-8</span> rd_NO_MD SYSFONT=latarcyrheb-sun16 crashkernel=auto  KEYBOARDTYPE=pc KEYTABLE=us rd_NO_DM rhgb quiet</div><div class=\"line\">        initrd /initramfs<span class=\"number\">-2.6</span><span class=\"number\">.32</span><span class=\"number\">-642.3</span><span class=\"number\">.1</span>.el6.x86_64.img</div><div class=\"line\">title CentOS <span class=\"number\">6</span> (<span class=\"number\">2.6</span><span class=\"number\">.32</span><span class=\"number\">-573.</span>el6.x86_64)</div><div class=\"line\">        root (hd0,<span class=\"number\">0</span>)</div><div class=\"line\">        kernel /vmlinuz<span class=\"number\">-2.6</span><span class=\"number\">.32</span><span class=\"number\">-573.</span>el6.x86_64 ro root=UUID=<span class=\"number\">28</span>fbaad8<span class=\"number\">-35</span>a6<span class=\"number\">-4348</span>-b1e0-bf204537f8b0 rd_NO_LUKS rd_NO_LVM LANG=en_US.UTF<span class=\"number\">-8</span> rd_NO_MD SYSFONT=latarcyrheb-sun16 crashkernel=auto  KEYBOARDTYPE=pc KEYTABLE=us rd_NO_DM rhgb quiet</div><div class=\"line\">        initrd /initramfs<span class=\"number\">-2.6</span><span class=\"number\">.32</span><span class=\"number\">-573.</span>el6.x86_64.img</div></pre></td></tr></table></figure></p>\n<p><code>reboot</code><br><code>uname -r</code>   查看内核版本</p>\n<hr>\n"},{"title":"SSH远程重装Centos系统","abbrlink":11076,"date":"2016-11-02T08:29:28.000Z","_content":"\n#### 注意：\n旧Linux系统必须能够正常ssh登录。旧Linux系统可以是任意Linux版本，现在的Linux用的一般都是grub引导管理器,新Linux系统必须是CentOS,RHEL或者Fedora，可以是32位或者64位。这几个Linux都支持VNC安装。\n\n\n## 步骤如下： \n可以建一个内网镜像源，也可以不建立，用公网的源（建议用公网源，简单快捷）。\n### 一.建一个内网的镜像源（如果使用在线源则跳过此步骤）\n登录服务器 192.168.1.83 （用此服务器搭建内网源）\n#### 1、安装apache \n```\nyum install httpd \nmkdir /var/www/html/centos/6 -p ```\n挂载iso镜像 \n```\nmount -o loop /opt/CentOS-6.6-x86_64-bin-DVD1.iso /var/www/html/centos/6 ```\n启动apache，通过浏览器访问**http://192.168.1.83/centos/6** 看是否有内容\n只有带**bin**字样的完整版光盘才有对应的启动内核，别的版本都不行\n\n### 二.远程重装服务器 \n#### 2、ssh登录要重装的服务器 \n如果用在线源请按网易源的修改方法修改\n\n```\nmkdir /centos_install \ncd /centos_install \nwget http://192.168.1.83/centos/6/images/pxeboot/initrd.img \nwget http://192.168.1.83/centos/6/images/pxeboot/vmlinuz \ncp vmlinuz /boot/vmlinuz.cent.pxe \ncp initrd.img /boot/initrd.img.cent.pxe```\n\n网址可用**网易源：http://mirrors.163.com/centos/6.8/os/x86_64/images/pxeboot/**代替       \ncentos 7目前还不支持pxe安装\n```\ncd /boot\nwget http://mirrors.163.com/centos/6.8/os/x86_64/images/pxeboot/initrd.img\nwget http://mirrors.163.com/centos/6.8/os/x86_64/images/pxeboot/vmlinuz\nchmod 755 vmlinuz\nchmod 600 initrd.img\n```\n启动文件是放在**/boot**下的，启动时以**/boot**为一级目录，所以注意**grub.conf**里的文件位置。\n#### 3.修改grub \n`vim /boot/grub/grub.conf`   或者 `menu.lst`  也行，这两个文件是链接在一起的。\n`default=0` 看情况修改，**default=0**表示默认启动**第一个标有title的项目**，**=1**为**第二个标有title**的项目，以此类推，直接把新增的放在最前面就不用修改**default=0**了。\n增加：\n```\ntitle Centos Install (PXE) \nroot (hd0,0) \nkernel /vmlinuz vnc vncpassword=123456 headless ip=192.168.1.106 netmask=255.225.255.0 gateway=192.168.1.1 dns=8.8.8.8 ksdevice=eth0 method=http://192.168.1.83/centos/6/或[http://mirrors.163.com/centos/6.8/os/x86_64/] lang=en_US或zh_CH.UTF-8 keymap=us \ninitrd /initrd.img```\n例：\n```\ntitle Centos Install (PXE) \n        root (hd0,0)\n        kernel /vmlinuz vnc vncpassword=123456 headless ip=192.168.30.145 netmask=255.225.255.0 gateway=192.168.30.1 dns=8.8.8.8 ksdevice=eth0 method=http://mirrors.163.com/centos/6.8/os/x86_64/ lang=zh_CH.UTF-8 keymap=us\n        initrd /initrd.img```\n                  \n保存退出   重启系统\n\n* root用户参数，要和grub.conf中的其他root参数一致；\nkernel参数和initrd参数后面的路径（是否/boot/开头）也要和grub.conf中的其他项一致；\n* ip地址，子网掩码和网关地址一定要和服务器一致；\nksdevice是主网卡\n* method后面的地址是新Linux系统的安装文件地址。如果这些配置有一项出错，就会导致远程安装失败。\n\n#### 4、开始安装 \nping服务器ip，ping通时，打开vnc重新连接**IP:1**或**IP:5901**，开始安装centos\n此时主机端显示\n\n安装好后重启系统，**登陆用户，root 密码，静态IP**等不变。\n\n\n---","source":"_posts/系统管理/2016-11-02-SSH远程重装Centos系统.md","raw":"---\ntitle: SSH远程重装Centos系统\ncategories:\n  - 系统管理\ntags:\n  - ssh远程重装centos系统\nabbrlink: 11076\ndate: 2016-11-02 16:29:28\n---\n\n#### 注意：\n旧Linux系统必须能够正常ssh登录。旧Linux系统可以是任意Linux版本，现在的Linux用的一般都是grub引导管理器,新Linux系统必须是CentOS,RHEL或者Fedora，可以是32位或者64位。这几个Linux都支持VNC安装。\n\n\n## 步骤如下： \n可以建一个内网镜像源，也可以不建立，用公网的源（建议用公网源，简单快捷）。\n### 一.建一个内网的镜像源（如果使用在线源则跳过此步骤）\n登录服务器 192.168.1.83 （用此服务器搭建内网源）\n#### 1、安装apache \n```\nyum install httpd \nmkdir /var/www/html/centos/6 -p ```\n挂载iso镜像 \n```\nmount -o loop /opt/CentOS-6.6-x86_64-bin-DVD1.iso /var/www/html/centos/6 ```\n启动apache，通过浏览器访问**http://192.168.1.83/centos/6** 看是否有内容\n只有带**bin**字样的完整版光盘才有对应的启动内核，别的版本都不行\n\n### 二.远程重装服务器 \n#### 2、ssh登录要重装的服务器 \n如果用在线源请按网易源的修改方法修改\n\n```\nmkdir /centos_install \ncd /centos_install \nwget http://192.168.1.83/centos/6/images/pxeboot/initrd.img \nwget http://192.168.1.83/centos/6/images/pxeboot/vmlinuz \ncp vmlinuz /boot/vmlinuz.cent.pxe \ncp initrd.img /boot/initrd.img.cent.pxe```\n\n网址可用**网易源：http://mirrors.163.com/centos/6.8/os/x86_64/images/pxeboot/**代替       \ncentos 7目前还不支持pxe安装\n```\ncd /boot\nwget http://mirrors.163.com/centos/6.8/os/x86_64/images/pxeboot/initrd.img\nwget http://mirrors.163.com/centos/6.8/os/x86_64/images/pxeboot/vmlinuz\nchmod 755 vmlinuz\nchmod 600 initrd.img\n```\n启动文件是放在**/boot**下的，启动时以**/boot**为一级目录，所以注意**grub.conf**里的文件位置。\n#### 3.修改grub \n`vim /boot/grub/grub.conf`   或者 `menu.lst`  也行，这两个文件是链接在一起的。\n`default=0` 看情况修改，**default=0**表示默认启动**第一个标有title的项目**，**=1**为**第二个标有title**的项目，以此类推，直接把新增的放在最前面就不用修改**default=0**了。\n增加：\n```\ntitle Centos Install (PXE) \nroot (hd0,0) \nkernel /vmlinuz vnc vncpassword=123456 headless ip=192.168.1.106 netmask=255.225.255.0 gateway=192.168.1.1 dns=8.8.8.8 ksdevice=eth0 method=http://192.168.1.83/centos/6/或[http://mirrors.163.com/centos/6.8/os/x86_64/] lang=en_US或zh_CH.UTF-8 keymap=us \ninitrd /initrd.img```\n例：\n```\ntitle Centos Install (PXE) \n        root (hd0,0)\n        kernel /vmlinuz vnc vncpassword=123456 headless ip=192.168.30.145 netmask=255.225.255.0 gateway=192.168.30.1 dns=8.8.8.8 ksdevice=eth0 method=http://mirrors.163.com/centos/6.8/os/x86_64/ lang=zh_CH.UTF-8 keymap=us\n        initrd /initrd.img```\n                  \n保存退出   重启系统\n\n* root用户参数，要和grub.conf中的其他root参数一致；\nkernel参数和initrd参数后面的路径（是否/boot/开头）也要和grub.conf中的其他项一致；\n* ip地址，子网掩码和网关地址一定要和服务器一致；\nksdevice是主网卡\n* method后面的地址是新Linux系统的安装文件地址。如果这些配置有一项出错，就会导致远程安装失败。\n\n#### 4、开始安装 \nping服务器ip，ping通时，打开vnc重新连接**IP:1**或**IP:5901**，开始安装centos\n此时主机端显示\n\n安装好后重启系统，**登陆用户，root 密码，静态IP**等不变。\n\n\n---","slug":"系统管理-2016-11-02-SSH远程重装Centos系统","published":1,"updated":"2016-11-13T03:36:30.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civi8oujx00352c6nbew1fyj5","content":"<h4 id=\"注意：\"><a href=\"#注意：\" class=\"headerlink\" title=\"注意：\"></a>注意：</h4><p>旧Linux系统必须能够正常ssh登录。旧Linux系统可以是任意Linux版本，现在的Linux用的一般都是grub引导管理器,新Linux系统必须是CentOS,RHEL或者Fedora，可以是32位或者64位。这几个Linux都支持VNC安装。</p>\n<h2 id=\"步骤如下：\"><a href=\"#步骤如下：\" class=\"headerlink\" title=\"步骤如下：\"></a>步骤如下：</h2><p>可以建一个内网镜像源，也可以不建立，用公网的源（建议用公网源，简单快捷）。</p>\n<h3 id=\"一-建一个内网的镜像源（如果使用在线源则跳过此步骤）\"><a href=\"#一-建一个内网的镜像源（如果使用在线源则跳过此步骤）\" class=\"headerlink\" title=\"一.建一个内网的镜像源（如果使用在线源则跳过此步骤）\"></a>一.建一个内网的镜像源（如果使用在线源则跳过此步骤）</h3><p>登录服务器 192.168.1.83 （用此服务器搭建内网源）</p>\n<h4 id=\"1、安装apache\"><a href=\"#1、安装apache\" class=\"headerlink\" title=\"1、安装apache\"></a>1、安装apache</h4><figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">yum install httpd </div><div class=\"line\">mkdir <span class=\"regexp\">/var/</span>www<span class=\"regexp\">/html/</span>centos<span class=\"regexp\">/6 -p</span></div></pre></td></tr></table></figure>\n<p>挂载iso镜像<br><figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">mount -o loop <span class=\"regexp\">/opt/</span>CentOS-<span class=\"number\">6.6</span>-x86_64-bin-DVD1.iso <span class=\"regexp\">/var/</span>www<span class=\"regexp\">/html/</span>centos<span class=\"regexp\">/6</span></div></pre></td></tr></table></figure></p>\n<p>启动apache，通过浏览器访问<strong><a href=\"http://192.168.1.83/centos/6\" target=\"_blank\" rel=\"external\">http://192.168.1.83/centos/6</a></strong> 看是否有内容<br>只有带<strong>bin</strong>字样的完整版光盘才有对应的启动内核，别的版本都不行</p>\n<h3 id=\"二-远程重装服务器\"><a href=\"#二-远程重装服务器\" class=\"headerlink\" title=\"二.远程重装服务器\"></a>二.远程重装服务器</h3><h4 id=\"2、ssh登录要重装的服务器\"><a href=\"#2、ssh登录要重装的服务器\" class=\"headerlink\" title=\"2、ssh登录要重装的服务器\"></a>2、ssh登录要重装的服务器</h4><p>如果用在线源请按网易源的修改方法修改</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">mkdir /centos_install </div><div class=\"line\">cd /centos_install </div><div class=\"line\">wget http:<span class=\"comment\">//192.168.1.83/centos/6/images/pxeboot/initrd.img </span></div><div class=\"line\">wget http:<span class=\"comment\">//192.168.1.83/centos/6/images/pxeboot/vmlinuz </span></div><div class=\"line\">cp vmlinuz /boot/vmlinuz<span class=\"selector-class\">.cent</span><span class=\"selector-class\">.pxe</span> </div><div class=\"line\">cp initrd<span class=\"selector-class\">.img</span> /boot/initrd<span class=\"selector-class\">.img</span><span class=\"selector-class\">.cent</span><span class=\"selector-class\">.pxe</span></div></pre></td></tr></table></figure>\n<p>网址可用<strong>网易源：<a href=\"http://mirrors.163.com/centos/6.8/os/x86_64/images/pxeboot/\" target=\"_blank\" rel=\"external\">http://mirrors.163.com/centos/6.8/os/x86_64/images/pxeboot/</a></strong>代替<br>centos 7目前还不支持pxe安装<br><figure class=\"highlight crystal\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd /boot</div><div class=\"line\">wget <span class=\"symbol\">http:</span>/<span class=\"regexp\">/mirrors.163.com/centos</span><span class=\"regexp\">/6.8/os</span><span class=\"regexp\">/x86_64/images</span><span class=\"regexp\">/pxeboot/initrd</span>.img</div><div class=\"line\">wget <span class=\"symbol\">http:</span>/<span class=\"regexp\">/mirrors.163.com/centos</span><span class=\"regexp\">/6.8/os</span><span class=\"regexp\">/x86_64/images</span><span class=\"regexp\">/pxeboot/vmlinuz</span></div><div class=\"line\">chmod <span class=\"number\">755</span> vmlinuz</div><div class=\"line\">chmod <span class=\"number\">600</span> initrd.img</div></pre></td></tr></table></figure></p>\n<p>启动文件是放在<strong>/boot</strong>下的，启动时以<strong>/boot</strong>为一级目录，所以注意<strong>grub.conf</strong>里的文件位置。</p>\n<h4 id=\"3-修改grub\"><a href=\"#3-修改grub\" class=\"headerlink\" title=\"3.修改grub\"></a>3.修改grub</h4><p><code>vim /boot/grub/grub.conf</code>   或者 <code>menu.lst</code>  也行，这两个文件是链接在一起的。<br><code>default=0</code> 看情况修改，<strong>default=0</strong>表示默认启动<strong>第一个标有title的项目</strong>，<strong>=1</strong>为<strong>第二个标有title</strong>的项目，以此类推，直接把新增的放在最前面就不用修改<strong>default=0</strong>了。<br>增加：<br><figure class=\"highlight oxygene\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">title Centos Install (PXE) </div><div class=\"line\">root (hd0,<span class=\"number\">0</span>) </div><div class=\"line\">kernel /vmlinuz vnc vncpassword=<span class=\"number\">123456</span> headless ip=<span class=\"number\">192.168</span>.<span class=\"number\">1.106</span> netmask=<span class=\"number\">255.225</span>.<span class=\"number\">255.0</span> gateway=<span class=\"number\">192.168</span>.<span class=\"number\">1.1</span> dns=<span class=\"number\">8.8</span>.<span class=\"number\">8.8</span> ksdevice=eth0 <span class=\"function\"><span class=\"keyword\">method</span>=<span class=\"title\">http</span>:</span><span class=\"comment\">//192.168.1.83/centos/6/或[http://mirrors.163.com/centos/6.8/os/x86_64/] lang=en_US或zh_CH.UTF-8 keymap=us </span></div><div class=\"line\">initrd /initrd.img</div></pre></td></tr></table></figure></p>\n<p>例：<br><figure class=\"highlight oxygene\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">title Centos Install (PXE) </div><div class=\"line\">        root (hd0,<span class=\"number\">0</span>)</div><div class=\"line\">        kernel /vmlinuz vnc vncpassword=<span class=\"number\">123456</span> headless ip=<span class=\"number\">192.168</span>.<span class=\"number\">30.145</span> netmask=<span class=\"number\">255.225</span>.<span class=\"number\">255.0</span> gateway=<span class=\"number\">192.168</span>.<span class=\"number\">30.1</span> dns=<span class=\"number\">8.8</span>.<span class=\"number\">8.8</span> ksdevice=eth0 <span class=\"function\"><span class=\"keyword\">method</span>=<span class=\"title\">http</span>:</span><span class=\"comment\">//mirrors.163.com/centos/6.8/os/x86_64/ lang=zh_CH.UTF-8 keymap=us</span></div><div class=\"line\">        initrd /initrd.img</div></pre></td></tr></table></figure></p>\n<p>保存退出   重启系统</p>\n<ul>\n<li>root用户参数，要和grub.conf中的其他root参数一致；<br>kernel参数和initrd参数后面的路径（是否/boot/开头）也要和grub.conf中的其他项一致；</li>\n<li>ip地址，子网掩码和网关地址一定要和服务器一致；<br>ksdevice是主网卡</li>\n<li>method后面的地址是新Linux系统的安装文件地址。如果这些配置有一项出错，就会导致远程安装失败。</li>\n</ul>\n<h4 id=\"4、开始安装\"><a href=\"#4、开始安装\" class=\"headerlink\" title=\"4、开始安装\"></a>4、开始安装</h4><p>ping服务器ip，ping通时，打开vnc重新连接<strong>IP:1</strong>或<strong>IP:5901</strong>，开始安装centos<br>此时主机端显示</p>\n<p>安装好后重启系统，<strong>登陆用户，root 密码，静态IP</strong>等不变。</p>\n<hr>\n","excerpt":"","more":"<h4 id=\"注意：\"><a href=\"#注意：\" class=\"headerlink\" title=\"注意：\"></a>注意：</h4><p>旧Linux系统必须能够正常ssh登录。旧Linux系统可以是任意Linux版本，现在的Linux用的一般都是grub引导管理器,新Linux系统必须是CentOS,RHEL或者Fedora，可以是32位或者64位。这几个Linux都支持VNC安装。</p>\n<h2 id=\"步骤如下：\"><a href=\"#步骤如下：\" class=\"headerlink\" title=\"步骤如下：\"></a>步骤如下：</h2><p>可以建一个内网镜像源，也可以不建立，用公网的源（建议用公网源，简单快捷）。</p>\n<h3 id=\"一-建一个内网的镜像源（如果使用在线源则跳过此步骤）\"><a href=\"#一-建一个内网的镜像源（如果使用在线源则跳过此步骤）\" class=\"headerlink\" title=\"一.建一个内网的镜像源（如果使用在线源则跳过此步骤）\"></a>一.建一个内网的镜像源（如果使用在线源则跳过此步骤）</h3><p>登录服务器 192.168.1.83 （用此服务器搭建内网源）</p>\n<h4 id=\"1、安装apache\"><a href=\"#1、安装apache\" class=\"headerlink\" title=\"1、安装apache\"></a>1、安装apache</h4><figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">yum install httpd </div><div class=\"line\">mkdir <span class=\"regexp\">/var/</span>www<span class=\"regexp\">/html/</span>centos<span class=\"regexp\">/6 -p</span></div></pre></td></tr></table></figure>\n<p>挂载iso镜像<br><figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">mount -o loop <span class=\"regexp\">/opt/</span>CentOS-<span class=\"number\">6.6</span>-x86_64-bin-DVD1.iso <span class=\"regexp\">/var/</span>www<span class=\"regexp\">/html/</span>centos<span class=\"regexp\">/6</span></div></pre></td></tr></table></figure></p>\n<p>启动apache，通过浏览器访问<strong><a href=\"http://192.168.1.83/centos/6\">http://192.168.1.83/centos/6</a></strong> 看是否有内容<br>只有带<strong>bin</strong>字样的完整版光盘才有对应的启动内核，别的版本都不行</p>\n<h3 id=\"二-远程重装服务器\"><a href=\"#二-远程重装服务器\" class=\"headerlink\" title=\"二.远程重装服务器\"></a>二.远程重装服务器</h3><h4 id=\"2、ssh登录要重装的服务器\"><a href=\"#2、ssh登录要重装的服务器\" class=\"headerlink\" title=\"2、ssh登录要重装的服务器\"></a>2、ssh登录要重装的服务器</h4><p>如果用在线源请按网易源的修改方法修改</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">mkdir /centos_install </div><div class=\"line\">cd /centos_install </div><div class=\"line\">wget http:<span class=\"comment\">//192.168.1.83/centos/6/images/pxeboot/initrd.img </span></div><div class=\"line\">wget http:<span class=\"comment\">//192.168.1.83/centos/6/images/pxeboot/vmlinuz </span></div><div class=\"line\">cp vmlinuz /boot/vmlinuz<span class=\"selector-class\">.cent</span><span class=\"selector-class\">.pxe</span> </div><div class=\"line\">cp initrd<span class=\"selector-class\">.img</span> /boot/initrd<span class=\"selector-class\">.img</span><span class=\"selector-class\">.cent</span><span class=\"selector-class\">.pxe</span></div></pre></td></tr></table></figure>\n<p>网址可用<strong>网易源：<a href=\"http://mirrors.163.com/centos/6.8/os/x86_64/images/pxeboot/\">http://mirrors.163.com/centos/6.8/os/x86_64/images/pxeboot/</a></strong>代替<br>centos 7目前还不支持pxe安装<br><figure class=\"highlight crystal\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd /boot</div><div class=\"line\">wget <span class=\"symbol\">http:</span>/<span class=\"regexp\">/mirrors.163.com/centos</span><span class=\"regexp\">/6.8/os</span><span class=\"regexp\">/x86_64/images</span><span class=\"regexp\">/pxeboot/initrd</span>.img</div><div class=\"line\">wget <span class=\"symbol\">http:</span>/<span class=\"regexp\">/mirrors.163.com/centos</span><span class=\"regexp\">/6.8/os</span><span class=\"regexp\">/x86_64/images</span><span class=\"regexp\">/pxeboot/vmlinuz</span></div><div class=\"line\">chmod <span class=\"number\">755</span> vmlinuz</div><div class=\"line\">chmod <span class=\"number\">600</span> initrd.img</div></pre></td></tr></table></figure></p>\n<p>启动文件是放在<strong>/boot</strong>下的，启动时以<strong>/boot</strong>为一级目录，所以注意<strong>grub.conf</strong>里的文件位置。</p>\n<h4 id=\"3-修改grub\"><a href=\"#3-修改grub\" class=\"headerlink\" title=\"3.修改grub\"></a>3.修改grub</h4><p><code>vim /boot/grub/grub.conf</code>   或者 <code>menu.lst</code>  也行，这两个文件是链接在一起的。<br><code>default=0</code> 看情况修改，<strong>default=0</strong>表示默认启动<strong>第一个标有title的项目</strong>，<strong>=1</strong>为<strong>第二个标有title</strong>的项目，以此类推，直接把新增的放在最前面就不用修改<strong>default=0</strong>了。<br>增加：<br><figure class=\"highlight oxygene\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">title Centos Install (PXE) </div><div class=\"line\">root (hd0,<span class=\"number\">0</span>) </div><div class=\"line\">kernel /vmlinuz vnc vncpassword=<span class=\"number\">123456</span> headless ip=<span class=\"number\">192.168</span>.<span class=\"number\">1.106</span> netmask=<span class=\"number\">255.225</span>.<span class=\"number\">255.0</span> gateway=<span class=\"number\">192.168</span>.<span class=\"number\">1.1</span> dns=<span class=\"number\">8.8</span>.<span class=\"number\">8.8</span> ksdevice=eth0 <span class=\"function\"><span class=\"keyword\">method</span>=<span class=\"title\">http</span>:</span><span class=\"comment\">//192.168.1.83/centos/6/或[http://mirrors.163.com/centos/6.8/os/x86_64/] lang=en_US或zh_CH.UTF-8 keymap=us </span></div><div class=\"line\">initrd /initrd.img</div></pre></td></tr></table></figure></p>\n<p>例：<br><figure class=\"highlight oxygene\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">title Centos Install (PXE) </div><div class=\"line\">        root (hd0,<span class=\"number\">0</span>)</div><div class=\"line\">        kernel /vmlinuz vnc vncpassword=<span class=\"number\">123456</span> headless ip=<span class=\"number\">192.168</span>.<span class=\"number\">30.145</span> netmask=<span class=\"number\">255.225</span>.<span class=\"number\">255.0</span> gateway=<span class=\"number\">192.168</span>.<span class=\"number\">30.1</span> dns=<span class=\"number\">8.8</span>.<span class=\"number\">8.8</span> ksdevice=eth0 <span class=\"function\"><span class=\"keyword\">method</span>=<span class=\"title\">http</span>:</span><span class=\"comment\">//mirrors.163.com/centos/6.8/os/x86_64/ lang=zh_CH.UTF-8 keymap=us</span></div><div class=\"line\">        initrd /initrd.img</div></pre></td></tr></table></figure></p>\n<p>保存退出   重启系统</p>\n<ul>\n<li>root用户参数，要和grub.conf中的其他root参数一致；<br>kernel参数和initrd参数后面的路径（是否/boot/开头）也要和grub.conf中的其他项一致；</li>\n<li>ip地址，子网掩码和网关地址一定要和服务器一致；<br>ksdevice是主网卡</li>\n<li>method后面的地址是新Linux系统的安装文件地址。如果这些配置有一项出错，就会导致远程安装失败。</li>\n</ul>\n<h4 id=\"4、开始安装\"><a href=\"#4、开始安装\" class=\"headerlink\" title=\"4、开始安装\"></a>4、开始安装</h4><p>ping服务器ip，ping通时，打开vnc重新连接<strong>IP:1</strong>或<strong>IP:5901</strong>，开始安装centos<br>此时主机端显示</p>\n<p>安装好后重启系统，<strong>登陆用户，root 密码，静态IP</strong>等不变。</p>\n<hr>\n"},{"title":"VNC服务","abbrlink":33402,"date":"2016-11-02T08:23:15.000Z","_content":"\n# Centos\n\n## 安装vnc \n\n`yum -y install vnc-server tigervnc tigervnc-server`\n\n`vim /root/.vnc/xstartup`\n把最后一行 **twm &**  注释掉，然后添加一行内容**gnome-session &**\n然后保存退出\n\n`vim /etc/sysconfig/vncservers`\n修改一下最后两行如下\n```\nVNCSERVERS=\"1:root 2:root\"\nVNCSERVERARGS[2]=\"-geometry 800x600 -nolisten tcp -localhost\"\n```\n然后保存退出\n\nvncserver 设置密码\n\n最后启动vncserver 并设置为开机启动，【如果系统防火墙不会用，就关闭吧】\n```\nservice vncserver start\nchkconfig vncserver on\nservice iptables stop\nchkconfig iptables on```\n\n现在vncserver服务器端已经配置好了，使用客户端进行图形界面远程即可。注意vnc远程的时候，默认第一个端口是**5901**，第二个界面是 **5902**依次类推。所以在使用vnc客户端远程的时候，要注意。否则连接不上的。\n\n\n\n---","source":"_posts/系统管理/2016-11-02-VNC服务.md","raw":"---\ntitle: VNC服务\ncategories:\n  - 系统管理\ntags:\n  - VNC服务\nabbrlink: 33402\ndate: 2016-11-02 16:23:15\n---\n\n# Centos\n\n## 安装vnc \n\n`yum -y install vnc-server tigervnc tigervnc-server`\n\n`vim /root/.vnc/xstartup`\n把最后一行 **twm &**  注释掉，然后添加一行内容**gnome-session &**\n然后保存退出\n\n`vim /etc/sysconfig/vncservers`\n修改一下最后两行如下\n```\nVNCSERVERS=\"1:root 2:root\"\nVNCSERVERARGS[2]=\"-geometry 800x600 -nolisten tcp -localhost\"\n```\n然后保存退出\n\nvncserver 设置密码\n\n最后启动vncserver 并设置为开机启动，【如果系统防火墙不会用，就关闭吧】\n```\nservice vncserver start\nchkconfig vncserver on\nservice iptables stop\nchkconfig iptables on```\n\n现在vncserver服务器端已经配置好了，使用客户端进行图形界面远程即可。注意vnc远程的时候，默认第一个端口是**5901**，第二个界面是 **5902**依次类推。所以在使用vnc客户端远程的时候，要注意。否则连接不上的。\n\n\n\n---","slug":"系统管理-2016-11-02-VNC服务","published":1,"updated":"2016-11-13T03:36:30.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civi8oujz00372c6nvxa6446r","content":"<h1 id=\"Centos\"><a href=\"#Centos\" class=\"headerlink\" title=\"Centos\"></a>Centos</h1><h2 id=\"安装vnc\"><a href=\"#安装vnc\" class=\"headerlink\" title=\"安装vnc\"></a>安装vnc</h2><p><code>yum -y install vnc-server tigervnc tigervnc-server</code></p>\n<p><code>vim /root/.vnc/xstartup</code><br>把最后一行 <strong>twm &amp;</strong>  注释掉，然后添加一行内容<strong>gnome-session &amp;</strong><br>然后保存退出</p>\n<p><code>vim /etc/sysconfig/vncservers</code><br>修改一下最后两行如下<br><figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">VNCSERVERS</span>=<span class=\"string\">\"1:root 2:root\"</span></div><div class=\"line\"><span class=\"attr\">VNCSERVERARGS[2]</span>=<span class=\"string\">\"-geometry 800x600 -nolisten tcp -localhost\"</span></div></pre></td></tr></table></figure></p>\n<p>然后保存退出</p>\n<p>vncserver 设置密码</p>\n<p>最后启动vncserver 并设置为开机启动，【如果系统防火墙不会用，就关闭吧】<br><figure class=\"highlight livecodeserver\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">service vncserver <span class=\"built_in\">start</span></div><div class=\"line\">chkconfig vncserver <span class=\"keyword\">on</span></div><div class=\"line\">service iptables <span class=\"built_in\">stop</span></div><div class=\"line\">chkconfig iptables <span class=\"keyword\">on</span></div></pre></td></tr></table></figure></p>\n<p>现在vncserver服务器端已经配置好了，使用客户端进行图形界面远程即可。注意vnc远程的时候，默认第一个端口是<strong>5901</strong>，第二个界面是 <strong>5902</strong>依次类推。所以在使用vnc客户端远程的时候，要注意。否则连接不上的。</p>\n<hr>\n","excerpt":"","more":"<h1 id=\"Centos\"><a href=\"#Centos\" class=\"headerlink\" title=\"Centos\"></a>Centos</h1><h2 id=\"安装vnc\"><a href=\"#安装vnc\" class=\"headerlink\" title=\"安装vnc\"></a>安装vnc</h2><p><code>yum -y install vnc-server tigervnc tigervnc-server</code></p>\n<p><code>vim /root/.vnc/xstartup</code><br>把最后一行 <strong>twm &amp;</strong>  注释掉，然后添加一行内容<strong>gnome-session &amp;</strong><br>然后保存退出</p>\n<p><code>vim /etc/sysconfig/vncservers</code><br>修改一下最后两行如下<br><figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">VNCSERVERS</span>=<span class=\"string\">\"1:root 2:root\"</span></div><div class=\"line\"><span class=\"attr\">VNCSERVERARGS[2]</span>=<span class=\"string\">\"-geometry 800x600 -nolisten tcp -localhost\"</span></div></pre></td></tr></table></figure></p>\n<p>然后保存退出</p>\n<p>vncserver 设置密码</p>\n<p>最后启动vncserver 并设置为开机启动，【如果系统防火墙不会用，就关闭吧】<br><figure class=\"highlight livecodeserver\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">service vncserver <span class=\"built_in\">start</span></div><div class=\"line\">chkconfig vncserver <span class=\"keyword\">on</span></div><div class=\"line\">service iptables <span class=\"built_in\">stop</span></div><div class=\"line\">chkconfig iptables <span class=\"keyword\">on</span></div></pre></td></tr></table></figure></p>\n<p>现在vncserver服务器端已经配置好了，使用客户端进行图形界面远程即可。注意vnc远程的时候，默认第一个端口是<strong>5901</strong>，第二个界面是 <strong>5902</strong>依次类推。所以在使用vnc客户端远程的时候，要注意。否则连接不上的。</p>\n<hr>\n"},{"title":"grub引导修复","abbrlink":34771,"date":"2016-11-02T08:52:46.000Z","_content":"\n## 法一：\n特别是在linux调整分区后，开机重启时会出现\nerror : unknow filesystem\ngrub rescue>\n的字样，系统就是进不去。这表示你的grub2的配置文件坏了……由于分区调整或分区UUID改变造成grub2不能正常启动，从而进入修复模式了（grub rescue)，也称救援模式。\n        \n在救援模式下只有很少的命令可以用：set  ,  ls , insmod , root , prefix\n\n\t(1)set  查看环境变量，这里可以查看启动路径和分区。\n\t(2)ls   查看设备\n\t(3)insmod  加载模块\n\t(4)root  指定用于启动系统的分区,在救援模式下设置grub启动分区\n\t(5)prefix 设定grub启动路径\n\n具体修复步骤如下：\n\n* 1、查看分区：grub rescue> `ls`   回车\n会出现如下字样：\n\n(hd0) (hd0,msdos9) (hd0,msdos8) (hd0,msdos7) (hd0,msdos6) (hd0,msdos5) (hd0,msdos2) (hd0,msdos1)\n\n注：上面是我的分区设备，每个人可能不一样，但原理都是一样的。grub> `find /boot/grub/grub.conf`   也行\n\n* 2、寻找ubuntu所在分区：\n（就是寻找你的Linux系统是装在以上哪个分区里）\n\ngrub rescue> `ls (hd0,msdos1)/`\n\n若出现unknown filesystem字样，则尝试下一个……若出现的是你的ubuntu主文件夹下的文件夹和文件的名字，那就是的要找的分区了。\n\n* 3、修改启动分区：（假如你找到的启动分区是hd0,msdos8）\ngrub rescue>`root=(hd0,msdos8)`\ngrub rescue>`prefix=/boot/grub`     //grub路径设置\ngrub rescue>`set root=(hd0,msdos8)`\ngrub rescue>`set prefix=(hd0,msdos8)/boot/grub`\ngrub rescue>`insmod normal`    //启动normal启动\ngrub rescue>`normal`\n之后你就会看到熟悉的启动菜单栏了\n\n* 4、进入命令行启动ubuntu\n\n进入系统启动选项界面后还是进不去，因为你还没有真正的修改grub,这个要到ubuntu里修改,进入系统启动项界面后，按C进入命令行模式。\ngrub >`set root=hd0,msdos8`\ngrub >`set prefix=(hd0,msdos8)/boot/grub`\ngrub >`linux /vmlinuz-xxx-xxx root=/dev/sda8` //里边的xxxx可以按Tab键，如果有acpi问题,在最后加一句acpi=off\ngrub >`initrd /initrd.img-xxx-xxx`\ngrub >`boot`\n这样就可以进入了\n\n* 5、进入ubuntu修复grub\n\n在终端里运行\n```\nsudo update-grub`\nsudo grub-install /dev/sda```\n\n* 6、重启，搞定！！\n\n 注：有时只修改1～3步骤，然后在菜单栏就可以进入系统了，且一切正常。\n在重启时，系统就只有一个光标在左上角不停的闪，咋也进不了系统。可能是启动项的问题，开机启动项改为硬盘启动就好了。\n\n---\n\n## 法二：\n首先制作 Ubuntu 启动 USB\n\n复制代码代码如下：\n```\nsudo dd if=ubuntu-13.10-desktop-amd64.iso of=/dev/sdb1 #/dev/sdb1 为 USB 盘符```\n\n* 1.使用启动 USB 进入 Ubuntu 试用环境\n\n* 2.查看硬盘分区状况，获取 Linux 系统安装分区编号\n`sudo fdisk -l`\n查看输出结果，然后根据文件类型和分区大小来判定 Linux 系统安装在哪块硬盘和安装的分区。我的电脑是在**/dev/sda3**安装了 **Ubuntu**。\n或者，打开 **Gparted** 图形化工具来查看分区信息也可以。\n挂载Ubuntu分区\n\n* 3.已知**Ubuntu**安装在了**/dev/sda3**上，所以我们可以用下面命令来挂载**Ubuntu**安装分区。你需要将**/dev/sda3**换成自己的 Linux 安装分区。\n`sudo mount /dev/sda3 /mnt`\n\n* 4.挂载其他所需的目录（使用 --bind）\n```\nsudo mount --bind /dev /mnt/dev\nsudo mount --bind /proc /mnt/proc\nsudo mount --bind /sys /mnt/sys```\n\n* 5.Chroot 到硬盘上的 Linux 系统\n代码如下：\n`sudo chroot /mnt ` chroot命令把根目录切换到指定目录下\n\n* 6.安装&更新 Grub\n```\ngrub2-install /dev/sda\ngrub2-mkconfig -o /boot/grub2/grub.cfg```\n\n* 7.Grub 已经修复成功，我们还需要退出 chroot 环境、卸载已经挂载的设备与目录：\n```\nexit #退出 chroot 环境\nsudo umount /mnt/dev\nsudo umount /mnt/proc\nsudo umount /mnt/sys\nsudo umount /mnt```\n\n* 8.重启。\n\n---\n\n可以进grub 这就好办了 >**root (hd0,x)** 提示： 输入（后 ，按 TAB键 自动补全 很好用的 。x表示你的linux根分区\n```\n>linux /vmlinuz ro quiet \n>initrd /initrd.lz\n>boot\n```\n\n先找到menu.lst菜单文件：\n`find --set-root /boot/grub/menu.lst`\n然后加载：\nGrub 命令索引`configfile /boot/grub/menu.lst`\n菜单文件可以换成grub.conf试试。\n\n\n\n参考：\n1、http://www.xitongzhijia.net/xtjc/20141208/32106.html （推荐）\n2、http://blog.chinaunix.net/uid-27037833-id-3235145.html\n\n\n---\n\n","source":"_posts/系统管理/2016-11-02-grub引导修复.md","raw":"---\ntitle: grub引导修复\ncategories:\n  - 系统管理\ntags:\n  - grub引导修复\nabbrlink: 34771\ndate: 2016-11-02 16:52:46\n---\n\n## 法一：\n特别是在linux调整分区后，开机重启时会出现\nerror : unknow filesystem\ngrub rescue>\n的字样，系统就是进不去。这表示你的grub2的配置文件坏了……由于分区调整或分区UUID改变造成grub2不能正常启动，从而进入修复模式了（grub rescue)，也称救援模式。\n        \n在救援模式下只有很少的命令可以用：set  ,  ls , insmod , root , prefix\n\n\t(1)set  查看环境变量，这里可以查看启动路径和分区。\n\t(2)ls   查看设备\n\t(3)insmod  加载模块\n\t(4)root  指定用于启动系统的分区,在救援模式下设置grub启动分区\n\t(5)prefix 设定grub启动路径\n\n具体修复步骤如下：\n\n* 1、查看分区：grub rescue> `ls`   回车\n会出现如下字样：\n\n(hd0) (hd0,msdos9) (hd0,msdos8) (hd0,msdos7) (hd0,msdos6) (hd0,msdos5) (hd0,msdos2) (hd0,msdos1)\n\n注：上面是我的分区设备，每个人可能不一样，但原理都是一样的。grub> `find /boot/grub/grub.conf`   也行\n\n* 2、寻找ubuntu所在分区：\n（就是寻找你的Linux系统是装在以上哪个分区里）\n\ngrub rescue> `ls (hd0,msdos1)/`\n\n若出现unknown filesystem字样，则尝试下一个……若出现的是你的ubuntu主文件夹下的文件夹和文件的名字，那就是的要找的分区了。\n\n* 3、修改启动分区：（假如你找到的启动分区是hd0,msdos8）\ngrub rescue>`root=(hd0,msdos8)`\ngrub rescue>`prefix=/boot/grub`     //grub路径设置\ngrub rescue>`set root=(hd0,msdos8)`\ngrub rescue>`set prefix=(hd0,msdos8)/boot/grub`\ngrub rescue>`insmod normal`    //启动normal启动\ngrub rescue>`normal`\n之后你就会看到熟悉的启动菜单栏了\n\n* 4、进入命令行启动ubuntu\n\n进入系统启动选项界面后还是进不去，因为你还没有真正的修改grub,这个要到ubuntu里修改,进入系统启动项界面后，按C进入命令行模式。\ngrub >`set root=hd0,msdos8`\ngrub >`set prefix=(hd0,msdos8)/boot/grub`\ngrub >`linux /vmlinuz-xxx-xxx root=/dev/sda8` //里边的xxxx可以按Tab键，如果有acpi问题,在最后加一句acpi=off\ngrub >`initrd /initrd.img-xxx-xxx`\ngrub >`boot`\n这样就可以进入了\n\n* 5、进入ubuntu修复grub\n\n在终端里运行\n```\nsudo update-grub`\nsudo grub-install /dev/sda```\n\n* 6、重启，搞定！！\n\n 注：有时只修改1～3步骤，然后在菜单栏就可以进入系统了，且一切正常。\n在重启时，系统就只有一个光标在左上角不停的闪，咋也进不了系统。可能是启动项的问题，开机启动项改为硬盘启动就好了。\n\n---\n\n## 法二：\n首先制作 Ubuntu 启动 USB\n\n复制代码代码如下：\n```\nsudo dd if=ubuntu-13.10-desktop-amd64.iso of=/dev/sdb1 #/dev/sdb1 为 USB 盘符```\n\n* 1.使用启动 USB 进入 Ubuntu 试用环境\n\n* 2.查看硬盘分区状况，获取 Linux 系统安装分区编号\n`sudo fdisk -l`\n查看输出结果，然后根据文件类型和分区大小来判定 Linux 系统安装在哪块硬盘和安装的分区。我的电脑是在**/dev/sda3**安装了 **Ubuntu**。\n或者，打开 **Gparted** 图形化工具来查看分区信息也可以。\n挂载Ubuntu分区\n\n* 3.已知**Ubuntu**安装在了**/dev/sda3**上，所以我们可以用下面命令来挂载**Ubuntu**安装分区。你需要将**/dev/sda3**换成自己的 Linux 安装分区。\n`sudo mount /dev/sda3 /mnt`\n\n* 4.挂载其他所需的目录（使用 --bind）\n```\nsudo mount --bind /dev /mnt/dev\nsudo mount --bind /proc /mnt/proc\nsudo mount --bind /sys /mnt/sys```\n\n* 5.Chroot 到硬盘上的 Linux 系统\n代码如下：\n`sudo chroot /mnt ` chroot命令把根目录切换到指定目录下\n\n* 6.安装&更新 Grub\n```\ngrub2-install /dev/sda\ngrub2-mkconfig -o /boot/grub2/grub.cfg```\n\n* 7.Grub 已经修复成功，我们还需要退出 chroot 环境、卸载已经挂载的设备与目录：\n```\nexit #退出 chroot 环境\nsudo umount /mnt/dev\nsudo umount /mnt/proc\nsudo umount /mnt/sys\nsudo umount /mnt```\n\n* 8.重启。\n\n---\n\n可以进grub 这就好办了 >**root (hd0,x)** 提示： 输入（后 ，按 TAB键 自动补全 很好用的 。x表示你的linux根分区\n```\n>linux /vmlinuz ro quiet \n>initrd /initrd.lz\n>boot\n```\n\n先找到menu.lst菜单文件：\n`find --set-root /boot/grub/menu.lst`\n然后加载：\nGrub 命令索引`configfile /boot/grub/menu.lst`\n菜单文件可以换成grub.conf试试。\n\n\n\n参考：\n1、http://www.xitongzhijia.net/xtjc/20141208/32106.html （推荐）\n2、http://blog.chinaunix.net/uid-27037833-id-3235145.html\n\n\n---\n\n","slug":"系统管理-2016-11-02-grub引导修复","published":1,"updated":"2016-11-13T03:36:30.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civi8ouk1003c2c6n2b382w3a","content":"<h2 id=\"法一：\"><a href=\"#法一：\" class=\"headerlink\" title=\"法一：\"></a>法一：</h2><p>特别是在linux调整分区后，开机重启时会出现<br>error : unknow filesystem<br>grub rescue&gt;<br>的字样，系统就是进不去。这表示你的grub2的配置文件坏了……由于分区调整或分区UUID改变造成grub2不能正常启动，从而进入修复模式了（grub rescue)，也称救援模式。</p>\n<p>在救援模式下只有很少的命令可以用：set  ,  ls , insmod , root , prefix</p>\n<pre><code>(1)set  查看环境变量，这里可以查看启动路径和分区。\n(2)ls   查看设备\n(3)insmod  加载模块\n(4)root  指定用于启动系统的分区,在救援模式下设置grub启动分区\n(5)prefix 设定grub启动路径\n</code></pre><p>具体修复步骤如下：</p>\n<ul>\n<li>1、查看分区：grub rescue&gt; <code>ls</code>   回车<br>会出现如下字样：</li>\n</ul>\n<p>(hd0) (hd0,msdos9) (hd0,msdos8) (hd0,msdos7) (hd0,msdos6) (hd0,msdos5) (hd0,msdos2) (hd0,msdos1)</p>\n<p>注：上面是我的分区设备，每个人可能不一样，但原理都是一样的。grub&gt; <code>find /boot/grub/grub.conf</code>   也行</p>\n<ul>\n<li>2、寻找ubuntu所在分区：<br>（就是寻找你的Linux系统是装在以上哪个分区里）</li>\n</ul>\n<p>grub rescue&gt; <code>ls (hd0,msdos1)/</code></p>\n<p>若出现unknown filesystem字样，则尝试下一个……若出现的是你的ubuntu主文件夹下的文件夹和文件的名字，那就是的要找的分区了。</p>\n<ul>\n<li><p>3、修改启动分区：（假如你找到的启动分区是hd0,msdos8）<br>grub rescue&gt;<code>root=(hd0,msdos8)</code><br>grub rescue&gt;<code>prefix=/boot/grub</code>     //grub路径设置<br>grub rescue&gt;<code>set root=(hd0,msdos8)</code><br>grub rescue&gt;<code>set prefix=(hd0,msdos8)/boot/grub</code><br>grub rescue&gt;<code>insmod normal</code>    //启动normal启动<br>grub rescue&gt;<code>normal</code><br>之后你就会看到熟悉的启动菜单栏了</p>\n</li>\n<li><p>4、进入命令行启动ubuntu</p>\n</li>\n</ul>\n<p>进入系统启动选项界面后还是进不去，因为你还没有真正的修改grub,这个要到ubuntu里修改,进入系统启动项界面后，按C进入命令行模式。<br>grub &gt;<code>set root=hd0,msdos8</code><br>grub &gt;<code>set prefix=(hd0,msdos8)/boot/grub</code><br>grub &gt;<code>linux /vmlinuz-xxx-xxx root=/dev/sda8</code> //里边的xxxx可以按Tab键，如果有acpi问题,在最后加一句acpi=off<br>grub &gt;<code>initrd /initrd.img-xxx-xxx</code><br>grub &gt;<code>boot</code><br>这样就可以进入了</p>\n<ul>\n<li>5、进入ubuntu修复grub</li>\n</ul>\n<p>在终端里运行<br><figure class=\"highlight q\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo <span class=\"keyword\">update</span>-grub`</div><div class=\"line\">sudo grub-install /<span class=\"built_in\">dev</span>/sda</div></pre></td></tr></table></figure></p>\n<ul>\n<li><p>6、重启，搞定！！</p>\n<p>注：有时只修改1～3步骤，然后在菜单栏就可以进入系统了，且一切正常。<br>在重启时，系统就只有一个光标在左上角不停的闪，咋也进不了系统。可能是启动项的问题，开机启动项改为硬盘启动就好了。</p>\n</li>\n</ul>\n<hr>\n<h2 id=\"法二：\"><a href=\"#法二：\" class=\"headerlink\" title=\"法二：\"></a>法二：</h2><p>首先制作 Ubuntu 启动 USB</p>\n<p>复制代码代码如下：<br><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo <span class=\"selector-tag\">dd</span> <span class=\"keyword\">if</span>=ubuntu-<span class=\"number\">13.10</span>-desktop-amd64<span class=\"selector-class\">.iso</span> of=/dev/sdb1 #/dev/sdb1 为 USB 盘符</div></pre></td></tr></table></figure></p>\n<ul>\n<li><p>1.使用启动 USB 进入 Ubuntu 试用环境</p>\n</li>\n<li><p>2.查看硬盘分区状况，获取 Linux 系统安装分区编号<br><code>sudo fdisk -l</code><br>查看输出结果，然后根据文件类型和分区大小来判定 Linux 系统安装在哪块硬盘和安装的分区。我的电脑是在<strong>/dev/sda3</strong>安装了 <strong>Ubuntu</strong>。<br>或者，打开 <strong>Gparted</strong> 图形化工具来查看分区信息也可以。<br>挂载Ubuntu分区</p>\n</li>\n<li><p>3.已知<strong>Ubuntu</strong>安装在了<strong>/dev/sda3</strong>上，所以我们可以用下面命令来挂载<strong>Ubuntu</strong>安装分区。你需要将<strong>/dev/sda3</strong>换成自己的 Linux 安装分区。<br><code>sudo mount /dev/sda3 /mnt</code></p>\n</li>\n<li><p>4.挂载其他所需的目录（使用 –bind）</p>\n<figure class=\"highlight armasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"symbol\">sudo</span> mount --<span class=\"keyword\">bind </span>/dev /mnt/dev</div><div class=\"line\"><span class=\"symbol\">sudo</span> mount --<span class=\"keyword\">bind </span>/<span class=\"meta\">proc</span> /mnt/<span class=\"meta\">proc</span></div><div class=\"line\"><span class=\"symbol\">sudo</span> mount --<span class=\"keyword\">bind </span>/sys /mnt/sys</div></pre></td></tr></table></figure>\n</li>\n<li><p>5.Chroot 到硬盘上的 Linux 系统<br>代码如下：<br><code>sudo chroot /mnt</code> chroot命令把根目录切换到指定目录下</p>\n</li>\n<li><p>6.安装&amp;更新 Grub</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">grub2-install <span class=\"regexp\">/dev/</span>sda</div><div class=\"line\">grub2-mkconfig -o <span class=\"regexp\">/boot/g</span>rub2<span class=\"regexp\">/grub.cfg</span></div></pre></td></tr></table></figure>\n</li>\n<li><p>7.Grub 已经修复成功，我们还需要退出 chroot 环境、卸载已经挂载的设备与目录：</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">exit</span> <span class=\"comment\">#退出 chroot 环境</span></div><div class=\"line\">sudo umount <span class=\"regexp\">/mnt/</span>dev</div><div class=\"line\">sudo umount <span class=\"regexp\">/mnt/</span>proc</div><div class=\"line\">sudo umount <span class=\"regexp\">/mnt/</span>sys</div><div class=\"line\">sudo umount <span class=\"regexp\">/mnt</span></div></pre></td></tr></table></figure>\n</li>\n<li><p>8.重启。</p>\n</li>\n</ul>\n<hr>\n<p>可以进grub 这就好办了 &gt;<strong>root (hd0,x)</strong> 提示： 输入（后 ，按 TAB键 自动补全 很好用的 。x表示你的linux根分区<br><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt;linux /vmlinuz ro quiet </div><div class=\"line\">&gt;initrd /initrd<span class=\"selector-class\">.lz</span></div><div class=\"line\">&gt;boot</div></pre></td></tr></table></figure></p>\n<p>先找到menu.lst菜单文件：<br><code>find --set-root /boot/grub/menu.lst</code><br>然后加载：<br>Grub 命令索引<code>configfile /boot/grub/menu.lst</code><br>菜单文件可以换成grub.conf试试。</p>\n<p>参考：<br>1、<a href=\"http://www.xitongzhijia.net/xtjc/20141208/32106.html\" target=\"_blank\" rel=\"external\">http://www.xitongzhijia.net/xtjc/20141208/32106.html</a> （推荐）<br>2、<a href=\"http://blog.chinaunix.net/uid-27037833-id-3235145.html\" target=\"_blank\" rel=\"external\">http://blog.chinaunix.net/uid-27037833-id-3235145.html</a></p>\n<hr>\n","excerpt":"","more":"<h2 id=\"法一：\"><a href=\"#法一：\" class=\"headerlink\" title=\"法一：\"></a>法一：</h2><p>特别是在linux调整分区后，开机重启时会出现<br>error : unknow filesystem<br>grub rescue&gt;<br>的字样，系统就是进不去。这表示你的grub2的配置文件坏了……由于分区调整或分区UUID改变造成grub2不能正常启动，从而进入修复模式了（grub rescue)，也称救援模式。</p>\n<p>在救援模式下只有很少的命令可以用：set  ,  ls , insmod , root , prefix</p>\n<pre><code>(1)set  查看环境变量，这里可以查看启动路径和分区。\n(2)ls   查看设备\n(3)insmod  加载模块\n(4)root  指定用于启动系统的分区,在救援模式下设置grub启动分区\n(5)prefix 设定grub启动路径\n</code></pre><p>具体修复步骤如下：</p>\n<ul>\n<li>1、查看分区：grub rescue&gt; <code>ls</code>   回车<br>会出现如下字样：</li>\n</ul>\n<p>(hd0) (hd0,msdos9) (hd0,msdos8) (hd0,msdos7) (hd0,msdos6) (hd0,msdos5) (hd0,msdos2) (hd0,msdos1)</p>\n<p>注：上面是我的分区设备，每个人可能不一样，但原理都是一样的。grub&gt; <code>find /boot/grub/grub.conf</code>   也行</p>\n<ul>\n<li>2、寻找ubuntu所在分区：<br>（就是寻找你的Linux系统是装在以上哪个分区里）</li>\n</ul>\n<p>grub rescue&gt; <code>ls (hd0,msdos1)/</code></p>\n<p>若出现unknown filesystem字样，则尝试下一个……若出现的是你的ubuntu主文件夹下的文件夹和文件的名字，那就是的要找的分区了。</p>\n<ul>\n<li><p>3、修改启动分区：（假如你找到的启动分区是hd0,msdos8）<br>grub rescue&gt;<code>root=(hd0,msdos8)</code><br>grub rescue&gt;<code>prefix=/boot/grub</code>     //grub路径设置<br>grub rescue&gt;<code>set root=(hd0,msdos8)</code><br>grub rescue&gt;<code>set prefix=(hd0,msdos8)/boot/grub</code><br>grub rescue&gt;<code>insmod normal</code>    //启动normal启动<br>grub rescue&gt;<code>normal</code><br>之后你就会看到熟悉的启动菜单栏了</p>\n</li>\n<li><p>4、进入命令行启动ubuntu</p>\n</li>\n</ul>\n<p>进入系统启动选项界面后还是进不去，因为你还没有真正的修改grub,这个要到ubuntu里修改,进入系统启动项界面后，按C进入命令行模式。<br>grub &gt;<code>set root=hd0,msdos8</code><br>grub &gt;<code>set prefix=(hd0,msdos8)/boot/grub</code><br>grub &gt;<code>linux /vmlinuz-xxx-xxx root=/dev/sda8</code> //里边的xxxx可以按Tab键，如果有acpi问题,在最后加一句acpi=off<br>grub &gt;<code>initrd /initrd.img-xxx-xxx</code><br>grub &gt;<code>boot</code><br>这样就可以进入了</p>\n<ul>\n<li>5、进入ubuntu修复grub</li>\n</ul>\n<p>在终端里运行<br><figure class=\"highlight q\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo <span class=\"keyword\">update</span>-grub`</div><div class=\"line\">sudo grub-install /<span class=\"built_in\">dev</span>/sda</div></pre></td></tr></table></figure></p>\n<ul>\n<li><p>6、重启，搞定！！</p>\n<p>注：有时只修改1～3步骤，然后在菜单栏就可以进入系统了，且一切正常。<br>在重启时，系统就只有一个光标在左上角不停的闪，咋也进不了系统。可能是启动项的问题，开机启动项改为硬盘启动就好了。</p>\n</li>\n</ul>\n<hr>\n<h2 id=\"法二：\"><a href=\"#法二：\" class=\"headerlink\" title=\"法二：\"></a>法二：</h2><p>首先制作 Ubuntu 启动 USB</p>\n<p>复制代码代码如下：<br><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo <span class=\"selector-tag\">dd</span> <span class=\"keyword\">if</span>=ubuntu-<span class=\"number\">13.10</span>-desktop-amd64<span class=\"selector-class\">.iso</span> of=/dev/sdb1 #/dev/sdb1 为 USB 盘符</div></pre></td></tr></table></figure></p>\n<ul>\n<li><p>1.使用启动 USB 进入 Ubuntu 试用环境</p>\n</li>\n<li><p>2.查看硬盘分区状况，获取 Linux 系统安装分区编号<br><code>sudo fdisk -l</code><br>查看输出结果，然后根据文件类型和分区大小来判定 Linux 系统安装在哪块硬盘和安装的分区。我的电脑是在<strong>/dev/sda3</strong>安装了 <strong>Ubuntu</strong>。<br>或者，打开 <strong>Gparted</strong> 图形化工具来查看分区信息也可以。<br>挂载Ubuntu分区</p>\n</li>\n<li><p>3.已知<strong>Ubuntu</strong>安装在了<strong>/dev/sda3</strong>上，所以我们可以用下面命令来挂载<strong>Ubuntu</strong>安装分区。你需要将<strong>/dev/sda3</strong>换成自己的 Linux 安装分区。<br><code>sudo mount /dev/sda3 /mnt</code></p>\n</li>\n<li><p>4.挂载其他所需的目录（使用 –bind）</p>\n<figure class=\"highlight armasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"symbol\">sudo</span> mount --<span class=\"keyword\">bind </span>/dev /mnt/dev</div><div class=\"line\"><span class=\"symbol\">sudo</span> mount --<span class=\"keyword\">bind </span>/<span class=\"meta\">proc</span> /mnt/<span class=\"meta\">proc</span></div><div class=\"line\"><span class=\"symbol\">sudo</span> mount --<span class=\"keyword\">bind </span>/sys /mnt/sys</div></pre></td></tr></table></figure>\n</li>\n<li><p>5.Chroot 到硬盘上的 Linux 系统<br>代码如下：<br><code>sudo chroot /mnt</code> chroot命令把根目录切换到指定目录下</p>\n</li>\n<li><p>6.安装&amp;更新 Grub</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">grub2-install <span class=\"regexp\">/dev/</span>sda</div><div class=\"line\">grub2-mkconfig -o <span class=\"regexp\">/boot/g</span>rub2<span class=\"regexp\">/grub.cfg</span></div></pre></td></tr></table></figure>\n</li>\n<li><p>7.Grub 已经修复成功，我们还需要退出 chroot 环境、卸载已经挂载的设备与目录：</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">exit</span> <span class=\"comment\">#退出 chroot 环境</span></div><div class=\"line\">sudo umount <span class=\"regexp\">/mnt/</span>dev</div><div class=\"line\">sudo umount <span class=\"regexp\">/mnt/</span>proc</div><div class=\"line\">sudo umount <span class=\"regexp\">/mnt/</span>sys</div><div class=\"line\">sudo umount <span class=\"regexp\">/mnt</span></div></pre></td></tr></table></figure>\n</li>\n<li><p>8.重启。</p>\n</li>\n</ul>\n<hr>\n<p>可以进grub 这就好办了 &gt;<strong>root (hd0,x)</strong> 提示： 输入（后 ，按 TAB键 自动补全 很好用的 。x表示你的linux根分区<br><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt;linux /vmlinuz ro quiet </div><div class=\"line\">&gt;initrd /initrd<span class=\"selector-class\">.lz</span></div><div class=\"line\">&gt;boot</div></pre></td></tr></table></figure></p>\n<p>先找到menu.lst菜单文件：<br><code>find --set-root /boot/grub/menu.lst</code><br>然后加载：<br>Grub 命令索引<code>configfile /boot/grub/menu.lst</code><br>菜单文件可以换成grub.conf试试。</p>\n<p>参考：<br>1、<a href=\"http://www.xitongzhijia.net/xtjc/20141208/32106.html\">http://www.xitongzhijia.net/xtjc/20141208/32106.html</a> （推荐）<br>2、<a href=\"http://blog.chinaunix.net/uid-27037833-id-3235145.html\">http://blog.chinaunix.net/uid-27037833-id-3235145.html</a></p>\n<hr>\n"},{"title":"iptables防火墙","abbrlink":61534,"date":"2016-11-02T08:08:29.000Z","_content":"\n#### 网上看到一篇博客，讲的很详细，摘录分享。\n\niptables 是一个安装在Ubuntu Server上的默认防火墙。在正常的ubuntu安装过程中，iptables是被安装上了的，但是它默认允许所有的流量(不管防火墙是否是无效的)\n关于iptables有价值的信息很多，但是大多都描述的很复杂。如果你想做些基本的配置，下面的 How To 很适合你。 \n◆ 基本命令 \n键入： \n\n`iptables -L `\n\n列出您当前iptables中在规则。如果您是刚刚建立您的服务器，那么可能此时还没有任何规则，而且您应该看到如下： \n\nChain INPUT (policy ACCEPT) \ntarget prot opt source destination \n\nChain FORWARD (policy ACCEPT) \ntarget prot opt source destination \n\nChain OUTPUT (policy ACCEPT) \ntarget prot opt source destination \n\n◆ 允许建立会话 \n\n我们可以允许建立会话来接受流量： \n\n`iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT `\n\n◆ 在指定端口上允许入站流量 \n\n阻断所有流量您也可以启动系统，但是您可能正在通过SSH工作，所有在您阻断其他流量前有必要允许SSH流量。 \n\n为了在22端口号(默认的SSH端口)上的允许流量入站，您可以告诉iptables允许您的网卡接受所有的目的端口为22的TCP流量。 \n\n`iptables -A INPUT -p tcp -i eth0 --dport ssh -j ACCEPT `\n\n特别的，这将向表中追加(-A)INPUT规则，允许目的端口号为SSH的所有流量进入接口(-i) eth0，以便iptables完成跳转(-j)或动作：ACCEPT \n\n让我们核对下这些规则：(这里仅显示了少数行，您应该看到更多) \n\n`iptables -L `\n\nChain INPUT (policy ACCEPT) \ntarget prot opt source destination \nACCEPT all -- anywhere anywhere state RELATED,ESTABLISHED \nACCEPT tcp -- anywhere anywhere tcp dpt:ssh \n\n现在，让我们允许所有的web流量 \n\n`iptables -A INPUT -p tcp -i eth0 --dport 80 -j ACCEPT `\n\n检查我们现有的规则 \n\n`iptables -L `\n\nChain INPUT (policy ACCEPT) \ntarget prot opt source destination \nACCEPT all -- anywhere anywhere state RELATED,ESTABLISHED \nACCEPT tcp -- anywhere anywhere tcp dpt:ssh \nACCEPT tcp -- anywhere anywhere tcp dpt:www \n\n我们已经指定SSH和web端口为允许通过的TCP流量，但是因为我们还没阻断任何流量，所以到目前为止所有的流量仍然可以进入。 \n\n◆ 阻断流量 \n\n一旦一条规则对一个包进行了匹配，其他规则不再对这个包有效。因为我们的规则首先允许SSH和WEB流量，所以只要我们阻断所有流量的规则紧跟其後，我们依然能接受我们感兴趣的流量。我们要做的仅仅是把阻断所有流量的规则放在最後，所以我们需要再次用到它。 \n\n`iptables -A INPUT -j DROP `\n\n` iptables -L `\n\nChain INPUT (policy ACCEPT) \ntarget prot opt source destination \nACCEPT all -- anywhere anywhere state RELATED,ESTABLISHED \nACCEPT tcp -- anywhere anywhere tcp dpt:ssh \nACCEPT tcp -- anywhere anywhere tcp dpt:www \nDROP all -- anywhere anywhere \n\n因为我们刚才没有指定一个接口或一个协议，所以除了web和ssh流量外其他任何流量都会被阻断。 \n\n◆ 编辑 iptables \n\n到目前为止我们设置过程中唯一的问题是回环端口(loopbakc)也被阻断了。我们本可以通过指定 -i eth0 来仅仅丢弃eth0上的数据包，但我们也可以为回环端口(loopback)添加一条规则。如果我们追加这条规则，这将太晚了----因为所有的流量已经 被丢弃。我们必须插入这条跪着到第4行。 \n\n`iptables -I INPUT 4 -i lo -j ACCEPT `\n\n` iptables -L `\n\nChain INPUT (policy ACCEPT) \ntarget prot opt source destination \nACCEPT all -- anywhere anywhere state RELATED,ESTABLISHED \nACCEPT tcp -- anywhere anywhere tcp dpt:ssh \nACCEPT tcp -- anywhere anywhere tcp dpt:www \nACCEPT all -- anywhere anywhere \nDROP all -- anywhere anywhere \n\n最後2行看起来几乎一样，因此我们可以让iptables列的更详细些。 \n\n` iptables -L -v `\n\n◆ 日志记录 \n\n在上面的例子中，所有的流量都不会被记录。如果您愿意在syslog中记录被丢弃的包, 下面将是最快捷的方式: \n```\niptables -I INPUT 5 -m limit --limit 5/min -j LOG --log-prefix \"iptables denied: \" --log-level 7 ```\n\n看 提示 段获得更多关于logging的ideas. \n\n◆ 保存 iptables \n\n如果您现在要重新启动机器的话，您的iptables配置将会消失。为了不用每次重新启动时敲入这些命令，您可以保存你的配置，让它在系统启动时自动启动。你可以通过iptables-save 和iptables-restore命令来保存配置。 \n\n\n◆ 配置启动时自动加载规则 \n\n保存您的防火墙股则到一个文件 \n\n`iptables-save > /etc/iptables.up.rules `\n\n接着修改**/etc/network/interfaces** 脚本自动应用这些规则(末行是添加的) \n```\nauto eth0 \niface eth0 inet dhcp \npre-up iptables-restore < /etc/iptables.up.rules ```\n\n你也可以准备一组规则并自动应用它 \n```\nauto eth0 \niface eth0 inet dhcp \npre-up iptables-restore < /etc/iptables.up.rules \npost-down iptables-restore < /etc/iptables.down.rules ```\n\n◆ 提示 \n◆ 如果你要在一个规则基础上手动编辑iptables \n\n下面的步骤复习了怎样建立你的防火墙规则，并假定它们相对固定(而且对于大多数人来说它们也应该是)。但是如果你要做许多研究工作，你也许想要你的 iptables在你每次重启时保存一次。你可以在**/etc/network/interfaces ** 里添加像下面的一行: \n```\npre-up iptables-restore < /etc/iptables.up.rules \npost-down iptables-save > /etc/iptables.up.rules #此行将保存规则用于下次启动时使用。```\n\n\n◆ 用iptables-save/restore来测试规则 \n\n如果你超出了这个指南来编辑iptables，你可能想利用iptables-save和iptables-restore来编辑和测试你的规则。你可以通过使用你喜爱的文本编辑器(此处为gedit)来打开这些规则文件来完成编辑。 \n\n```\niptables-save > /etc/iptables.test.rules \ngedit /etc/iptables.test.rules ```\n\n你会得到一个如下类似的文件(下面是紧接上的例子文件)： \n\nGenerated by iptables-save v1.3.1 on Sun Apr 23 06:19:53 2006 \n*filter \n:INPUT ACCEPT [368:102354] \n:FORWARD ACCEPT [0:0] \n:OUTPUT ACCEPT [92952:20764374] \n-A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT \n-A INPUT -i eth0 -p tcp -m tcp --dport 22 -j ACCEPT \n-A INPUT -i eth0 -p tcp -m tcp --dport 80 -j ACCEPT \n-A INPUT -i lo -j ACCEPT \n-A INPUT -m limit --limit 5/min -j LOG --log-prefix \"iptables denied: \" --log-level 7 \n-A INPUT -j DROP \nCOMMIT \n Completed on Sun Apr 23 06:19:53 2006 \n\n注意到这些都是减去iptables命令的iptables语句。随意编辑这些命令、完成後保存它们。然後简单的测试下： \n\n` iptables-restore < /etc/iptables.test.rules `\n\n测试完毕後，如果你还没添加iptables-save命令 到**/etc/network/interfaces** 里面，记得不要丢失了你的更改： \n\n`iptables-save > /etc/iptables.up.rules `\n\n◆ 更详细的日志 \n为了在你的syslog中获得更多细节，你可能想创建一个额外的链。下面是个很简短的例子---我的**/etc/iptables.up.rules** ,它将展示我是如何设置iptables记录到syslog中的： \n\nGenerated by iptables-save v1.3.1 on Sun Apr 23 05:32:09 2006 \n*filter \n:INPUT ACCEPT [273:55355] \n:FORWARD ACCEPT [0:0] \n:LOGNDROP - [0:0] \n:OUTPUT ACCEPT [92376:20668252] \n-A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT \n-A INPUT -i eth0 -p tcp -m tcp --dport 22 -j ACCEPT \n-A INPUT -i eth0 -p tcp -m tcp --dport 80 -j ACCEPT \n-A INPUT -i lo -j ACCEPT \n-A INPUT -j LOGNDROP \n-A LOGNDROP -p tcp -m limit --limit 5/min -j LOG --log-prefix \"Denied TCP: \" --log-level 7 \n-A LOGNDROP -p udp -m limit --limit 5/min -j LOG --log-prefix \"Denied UDP: \" --log-level 7 \n-A LOGNDROP -p icmp -m limit --limit 5/min -j LOG --log-prefix \"Denied ICMP: \" --log-level 7 \n-A LOGNDROP -j DROP \nCOMMIT \nCompleted on Sun Apr 23 05:32:09 2006 \n\n请注意 一个名为 LOGNDROP的链在文件顶部。而且，INPUT链底部标准的DROP被替换成了LOGNDROP，同时添加了协议描述so it makes sense looking at the log。最後我们在LOGNDROP链尾部丢弃了这些流量。下面的行告诉我们发生了什么： \n\n* --limit 设置记录相同规则到syslog中的次数 \n* --log-prefix \"Denied...\" 添加一个前缀使得在syslog中查找更easy \n* --log-level 7 设置syslog的消息级别 (see man syslog for more detail, but you can probably leave this) \n\n◆ 禁用防火墙 \n\n如果您要临时禁用防火墙，您可以通过下面的命令清空所偶的规则： \n\n` iptables -F `\n\n◆ 轻松配置通过 GUI \n\n新手可以利用 Firetarter(一个gui工具)---仓库中的可用软件(新立德或apt-get 获得)来配置她或他的iptables规则，而需要命令行知识。请查看指南，尽管...... 配置很简单，但是对于高级用户来说可能远远不能满足。然而它对于大多数的家庭用户来说是足够的...... 。(我)建议您使用firestarter在策略表中将出站配置为 “限制”，而将您需要的连接类型(如用于http的80、https的443，msn chat的1683等等)加入白名单。您也可以通过它查看进出您计算机的活动连接...... 。防火墙会一直保持下去一旦通过向导配置完毕。拨号用户必须在向导中指定它在拨号时自动启动。 \n\nfirestarter主页： http://www.fs-security.com/ (仓库源中可用, 不需要编译) \n指南: http://www.fs-security.com/docs/tutorial.php \n\n个人笔记：不幸运的是，它没有阻断(或询问用户)特定应用/程序的选项......。因此，我的理解是一旦启用了80端口(例如，用于访问网页)，那么任何程序都可以通过80端口连接任何服务器、做任何它想做的事......\n\n\n\n---\n","source":"_posts/系统管理/2016-11-02-iptables防火墙.md","raw":"---\ntitle: iptables防火墙\ncategories:\n  - 系统管理\ntags:\n  - iptables防火墙\nabbrlink: 61534\ndate: 2016-11-02 16:08:29\n---\n\n#### 网上看到一篇博客，讲的很详细，摘录分享。\n\niptables 是一个安装在Ubuntu Server上的默认防火墙。在正常的ubuntu安装过程中，iptables是被安装上了的，但是它默认允许所有的流量(不管防火墙是否是无效的)\n关于iptables有价值的信息很多，但是大多都描述的很复杂。如果你想做些基本的配置，下面的 How To 很适合你。 \n◆ 基本命令 \n键入： \n\n`iptables -L `\n\n列出您当前iptables中在规则。如果您是刚刚建立您的服务器，那么可能此时还没有任何规则，而且您应该看到如下： \n\nChain INPUT (policy ACCEPT) \ntarget prot opt source destination \n\nChain FORWARD (policy ACCEPT) \ntarget prot opt source destination \n\nChain OUTPUT (policy ACCEPT) \ntarget prot opt source destination \n\n◆ 允许建立会话 \n\n我们可以允许建立会话来接受流量： \n\n`iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT `\n\n◆ 在指定端口上允许入站流量 \n\n阻断所有流量您也可以启动系统，但是您可能正在通过SSH工作，所有在您阻断其他流量前有必要允许SSH流量。 \n\n为了在22端口号(默认的SSH端口)上的允许流量入站，您可以告诉iptables允许您的网卡接受所有的目的端口为22的TCP流量。 \n\n`iptables -A INPUT -p tcp -i eth0 --dport ssh -j ACCEPT `\n\n特别的，这将向表中追加(-A)INPUT规则，允许目的端口号为SSH的所有流量进入接口(-i) eth0，以便iptables完成跳转(-j)或动作：ACCEPT \n\n让我们核对下这些规则：(这里仅显示了少数行，您应该看到更多) \n\n`iptables -L `\n\nChain INPUT (policy ACCEPT) \ntarget prot opt source destination \nACCEPT all -- anywhere anywhere state RELATED,ESTABLISHED \nACCEPT tcp -- anywhere anywhere tcp dpt:ssh \n\n现在，让我们允许所有的web流量 \n\n`iptables -A INPUT -p tcp -i eth0 --dport 80 -j ACCEPT `\n\n检查我们现有的规则 \n\n`iptables -L `\n\nChain INPUT (policy ACCEPT) \ntarget prot opt source destination \nACCEPT all -- anywhere anywhere state RELATED,ESTABLISHED \nACCEPT tcp -- anywhere anywhere tcp dpt:ssh \nACCEPT tcp -- anywhere anywhere tcp dpt:www \n\n我们已经指定SSH和web端口为允许通过的TCP流量，但是因为我们还没阻断任何流量，所以到目前为止所有的流量仍然可以进入。 \n\n◆ 阻断流量 \n\n一旦一条规则对一个包进行了匹配，其他规则不再对这个包有效。因为我们的规则首先允许SSH和WEB流量，所以只要我们阻断所有流量的规则紧跟其後，我们依然能接受我们感兴趣的流量。我们要做的仅仅是把阻断所有流量的规则放在最後，所以我们需要再次用到它。 \n\n`iptables -A INPUT -j DROP `\n\n` iptables -L `\n\nChain INPUT (policy ACCEPT) \ntarget prot opt source destination \nACCEPT all -- anywhere anywhere state RELATED,ESTABLISHED \nACCEPT tcp -- anywhere anywhere tcp dpt:ssh \nACCEPT tcp -- anywhere anywhere tcp dpt:www \nDROP all -- anywhere anywhere \n\n因为我们刚才没有指定一个接口或一个协议，所以除了web和ssh流量外其他任何流量都会被阻断。 \n\n◆ 编辑 iptables \n\n到目前为止我们设置过程中唯一的问题是回环端口(loopbakc)也被阻断了。我们本可以通过指定 -i eth0 来仅仅丢弃eth0上的数据包，但我们也可以为回环端口(loopback)添加一条规则。如果我们追加这条规则，这将太晚了----因为所有的流量已经 被丢弃。我们必须插入这条跪着到第4行。 \n\n`iptables -I INPUT 4 -i lo -j ACCEPT `\n\n` iptables -L `\n\nChain INPUT (policy ACCEPT) \ntarget prot opt source destination \nACCEPT all -- anywhere anywhere state RELATED,ESTABLISHED \nACCEPT tcp -- anywhere anywhere tcp dpt:ssh \nACCEPT tcp -- anywhere anywhere tcp dpt:www \nACCEPT all -- anywhere anywhere \nDROP all -- anywhere anywhere \n\n最後2行看起来几乎一样，因此我们可以让iptables列的更详细些。 \n\n` iptables -L -v `\n\n◆ 日志记录 \n\n在上面的例子中，所有的流量都不会被记录。如果您愿意在syslog中记录被丢弃的包, 下面将是最快捷的方式: \n```\niptables -I INPUT 5 -m limit --limit 5/min -j LOG --log-prefix \"iptables denied: \" --log-level 7 ```\n\n看 提示 段获得更多关于logging的ideas. \n\n◆ 保存 iptables \n\n如果您现在要重新启动机器的话，您的iptables配置将会消失。为了不用每次重新启动时敲入这些命令，您可以保存你的配置，让它在系统启动时自动启动。你可以通过iptables-save 和iptables-restore命令来保存配置。 \n\n\n◆ 配置启动时自动加载规则 \n\n保存您的防火墙股则到一个文件 \n\n`iptables-save > /etc/iptables.up.rules `\n\n接着修改**/etc/network/interfaces** 脚本自动应用这些规则(末行是添加的) \n```\nauto eth0 \niface eth0 inet dhcp \npre-up iptables-restore < /etc/iptables.up.rules ```\n\n你也可以准备一组规则并自动应用它 \n```\nauto eth0 \niface eth0 inet dhcp \npre-up iptables-restore < /etc/iptables.up.rules \npost-down iptables-restore < /etc/iptables.down.rules ```\n\n◆ 提示 \n◆ 如果你要在一个规则基础上手动编辑iptables \n\n下面的步骤复习了怎样建立你的防火墙规则，并假定它们相对固定(而且对于大多数人来说它们也应该是)。但是如果你要做许多研究工作，你也许想要你的 iptables在你每次重启时保存一次。你可以在**/etc/network/interfaces ** 里添加像下面的一行: \n```\npre-up iptables-restore < /etc/iptables.up.rules \npost-down iptables-save > /etc/iptables.up.rules #此行将保存规则用于下次启动时使用。```\n\n\n◆ 用iptables-save/restore来测试规则 \n\n如果你超出了这个指南来编辑iptables，你可能想利用iptables-save和iptables-restore来编辑和测试你的规则。你可以通过使用你喜爱的文本编辑器(此处为gedit)来打开这些规则文件来完成编辑。 \n\n```\niptables-save > /etc/iptables.test.rules \ngedit /etc/iptables.test.rules ```\n\n你会得到一个如下类似的文件(下面是紧接上的例子文件)： \n\nGenerated by iptables-save v1.3.1 on Sun Apr 23 06:19:53 2006 \n*filter \n:INPUT ACCEPT [368:102354] \n:FORWARD ACCEPT [0:0] \n:OUTPUT ACCEPT [92952:20764374] \n-A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT \n-A INPUT -i eth0 -p tcp -m tcp --dport 22 -j ACCEPT \n-A INPUT -i eth0 -p tcp -m tcp --dport 80 -j ACCEPT \n-A INPUT -i lo -j ACCEPT \n-A INPUT -m limit --limit 5/min -j LOG --log-prefix \"iptables denied: \" --log-level 7 \n-A INPUT -j DROP \nCOMMIT \n Completed on Sun Apr 23 06:19:53 2006 \n\n注意到这些都是减去iptables命令的iptables语句。随意编辑这些命令、完成後保存它们。然後简单的测试下： \n\n` iptables-restore < /etc/iptables.test.rules `\n\n测试完毕後，如果你还没添加iptables-save命令 到**/etc/network/interfaces** 里面，记得不要丢失了你的更改： \n\n`iptables-save > /etc/iptables.up.rules `\n\n◆ 更详细的日志 \n为了在你的syslog中获得更多细节，你可能想创建一个额外的链。下面是个很简短的例子---我的**/etc/iptables.up.rules** ,它将展示我是如何设置iptables记录到syslog中的： \n\nGenerated by iptables-save v1.3.1 on Sun Apr 23 05:32:09 2006 \n*filter \n:INPUT ACCEPT [273:55355] \n:FORWARD ACCEPT [0:0] \n:LOGNDROP - [0:0] \n:OUTPUT ACCEPT [92376:20668252] \n-A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT \n-A INPUT -i eth0 -p tcp -m tcp --dport 22 -j ACCEPT \n-A INPUT -i eth0 -p tcp -m tcp --dport 80 -j ACCEPT \n-A INPUT -i lo -j ACCEPT \n-A INPUT -j LOGNDROP \n-A LOGNDROP -p tcp -m limit --limit 5/min -j LOG --log-prefix \"Denied TCP: \" --log-level 7 \n-A LOGNDROP -p udp -m limit --limit 5/min -j LOG --log-prefix \"Denied UDP: \" --log-level 7 \n-A LOGNDROP -p icmp -m limit --limit 5/min -j LOG --log-prefix \"Denied ICMP: \" --log-level 7 \n-A LOGNDROP -j DROP \nCOMMIT \nCompleted on Sun Apr 23 05:32:09 2006 \n\n请注意 一个名为 LOGNDROP的链在文件顶部。而且，INPUT链底部标准的DROP被替换成了LOGNDROP，同时添加了协议描述so it makes sense looking at the log。最後我们在LOGNDROP链尾部丢弃了这些流量。下面的行告诉我们发生了什么： \n\n* --limit 设置记录相同规则到syslog中的次数 \n* --log-prefix \"Denied...\" 添加一个前缀使得在syslog中查找更easy \n* --log-level 7 设置syslog的消息级别 (see man syslog for more detail, but you can probably leave this) \n\n◆ 禁用防火墙 \n\n如果您要临时禁用防火墙，您可以通过下面的命令清空所偶的规则： \n\n` iptables -F `\n\n◆ 轻松配置通过 GUI \n\n新手可以利用 Firetarter(一个gui工具)---仓库中的可用软件(新立德或apt-get 获得)来配置她或他的iptables规则，而需要命令行知识。请查看指南，尽管...... 配置很简单，但是对于高级用户来说可能远远不能满足。然而它对于大多数的家庭用户来说是足够的...... 。(我)建议您使用firestarter在策略表中将出站配置为 “限制”，而将您需要的连接类型(如用于http的80、https的443，msn chat的1683等等)加入白名单。您也可以通过它查看进出您计算机的活动连接...... 。防火墙会一直保持下去一旦通过向导配置完毕。拨号用户必须在向导中指定它在拨号时自动启动。 \n\nfirestarter主页： http://www.fs-security.com/ (仓库源中可用, 不需要编译) \n指南: http://www.fs-security.com/docs/tutorial.php \n\n个人笔记：不幸运的是，它没有阻断(或询问用户)特定应用/程序的选项......。因此，我的理解是一旦启用了80端口(例如，用于访问网页)，那么任何程序都可以通过80端口连接任何服务器、做任何它想做的事......\n\n\n\n---\n","slug":"系统管理-2016-11-02-iptables防火墙","published":1,"updated":"2016-11-13T03:36:30.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civi8ouk2003d2c6nhix3f9gm","content":"<h4 id=\"网上看到一篇博客，讲的很详细，摘录分享。\"><a href=\"#网上看到一篇博客，讲的很详细，摘录分享。\" class=\"headerlink\" title=\"网上看到一篇博客，讲的很详细，摘录分享。\"></a>网上看到一篇博客，讲的很详细，摘录分享。</h4><p>iptables 是一个安装在Ubuntu Server上的默认防火墙。在正常的ubuntu安装过程中，iptables是被安装上了的，但是它默认允许所有的流量(不管防火墙是否是无效的)<br>关于iptables有价值的信息很多，但是大多都描述的很复杂。如果你想做些基本的配置，下面的 How To 很适合你。<br>◆ 基本命令<br>键入： </p>\n<p><code>iptables -L</code></p>\n<p>列出您当前iptables中在规则。如果您是刚刚建立您的服务器，那么可能此时还没有任何规则，而且您应该看到如下： </p>\n<p>Chain INPUT (policy ACCEPT)<br>target prot opt source destination </p>\n<p>Chain FORWARD (policy ACCEPT)<br>target prot opt source destination </p>\n<p>Chain OUTPUT (policy ACCEPT)<br>target prot opt source destination </p>\n<p>◆ 允许建立会话 </p>\n<p>我们可以允许建立会话来接受流量： </p>\n<p><code>iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT</code></p>\n<p>◆ 在指定端口上允许入站流量 </p>\n<p>阻断所有流量您也可以启动系统，但是您可能正在通过SSH工作，所有在您阻断其他流量前有必要允许SSH流量。 </p>\n<p>为了在22端口号(默认的SSH端口)上的允许流量入站，您可以告诉iptables允许您的网卡接受所有的目的端口为22的TCP流量。 </p>\n<p><code>iptables -A INPUT -p tcp -i eth0 --dport ssh -j ACCEPT</code></p>\n<p>特别的，这将向表中追加(-A)INPUT规则，允许目的端口号为SSH的所有流量进入接口(-i) eth0，以便iptables完成跳转(-j)或动作：ACCEPT </p>\n<p>让我们核对下这些规则：(这里仅显示了少数行，您应该看到更多) </p>\n<p><code>iptables -L</code></p>\n<p>Chain INPUT (policy ACCEPT)<br>target prot opt source destination<br>ACCEPT all – anywhere anywhere state RELATED,ESTABLISHED<br>ACCEPT tcp – anywhere anywhere tcp dpt:ssh </p>\n<p>现在，让我们允许所有的web流量 </p>\n<p><code>iptables -A INPUT -p tcp -i eth0 --dport 80 -j ACCEPT</code></p>\n<p>检查我们现有的规则 </p>\n<p><code>iptables -L</code></p>\n<p>Chain INPUT (policy ACCEPT)<br>target prot opt source destination<br>ACCEPT all – anywhere anywhere state RELATED,ESTABLISHED<br>ACCEPT tcp – anywhere anywhere tcp dpt:ssh<br>ACCEPT tcp – anywhere anywhere tcp dpt:www </p>\n<p>我们已经指定SSH和web端口为允许通过的TCP流量，但是因为我们还没阻断任何流量，所以到目前为止所有的流量仍然可以进入。 </p>\n<p>◆ 阻断流量 </p>\n<p>一旦一条规则对一个包进行了匹配，其他规则不再对这个包有效。因为我们的规则首先允许SSH和WEB流量，所以只要我们阻断所有流量的规则紧跟其後，我们依然能接受我们感兴趣的流量。我们要做的仅仅是把阻断所有流量的规则放在最後，所以我们需要再次用到它。 </p>\n<p><code>iptables -A INPUT -j DROP</code></p>\n<p><code>iptables -L</code></p>\n<p>Chain INPUT (policy ACCEPT)<br>target prot opt source destination<br>ACCEPT all – anywhere anywhere state RELATED,ESTABLISHED<br>ACCEPT tcp – anywhere anywhere tcp dpt:ssh<br>ACCEPT tcp – anywhere anywhere tcp dpt:www<br>DROP all – anywhere anywhere </p>\n<p>因为我们刚才没有指定一个接口或一个协议，所以除了web和ssh流量外其他任何流量都会被阻断。 </p>\n<p>◆ 编辑 iptables </p>\n<p>到目前为止我们设置过程中唯一的问题是回环端口(loopbakc)也被阻断了。我们本可以通过指定 -i eth0 来仅仅丢弃eth0上的数据包，但我们也可以为回环端口(loopback)添加一条规则。如果我们追加这条规则，这将太晚了—-因为所有的流量已经 被丢弃。我们必须插入这条跪着到第4行。 </p>\n<p><code>iptables -I INPUT 4 -i lo -j ACCEPT</code></p>\n<p><code>iptables -L</code></p>\n<p>Chain INPUT (policy ACCEPT)<br>target prot opt source destination<br>ACCEPT all – anywhere anywhere state RELATED,ESTABLISHED<br>ACCEPT tcp – anywhere anywhere tcp dpt:ssh<br>ACCEPT tcp – anywhere anywhere tcp dpt:www<br>ACCEPT all – anywhere anywhere<br>DROP all – anywhere anywhere </p>\n<p>最後2行看起来几乎一样，因此我们可以让iptables列的更详细些。 </p>\n<p><code>iptables -L -v</code></p>\n<p>◆ 日志记录 </p>\n<p>在上面的例子中，所有的流量都不会被记录。如果您愿意在syslog中记录被丢弃的包, 下面将是最快捷的方式:<br><figure class=\"highlight maxima\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">iptables -I INPUT <span class=\"number\">5</span> -m <span class=\"built_in\">limit</span> --<span class=\"built_in\">limit</span> <span class=\"number\">5</span>/<span class=\"built_in\">min</span> -j LOG --<span class=\"built_in\">log</span>-<span class=\"built_in\">prefix</span> <span class=\"string\">\"iptables denied: \"</span> --<span class=\"built_in\">log</span>-level <span class=\"number\">7</span></div></pre></td></tr></table></figure></p>\n<p>看 提示 段获得更多关于logging的ideas. </p>\n<p>◆ 保存 iptables </p>\n<p>如果您现在要重新启动机器的话，您的iptables配置将会消失。为了不用每次重新启动时敲入这些命令，您可以保存你的配置，让它在系统启动时自动启动。你可以通过iptables-save 和iptables-restore命令来保存配置。 </p>\n<p>◆ 配置启动时自动加载规则 </p>\n<p>保存您的防火墙股则到一个文件 </p>\n<p><code>iptables-save &gt; /etc/iptables.up.rules</code></p>\n<p>接着修改<strong>/etc/network/interfaces</strong> 脚本自动应用这些规则(末行是添加的)<br><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attribute\">auto</span> eth0 </div><div class=\"line\">iface eth0 inet dhcp </div><div class=\"line\">pre-up iptables-restore &lt; /etc/iptables<span class=\"selector-class\">.up</span><span class=\"selector-class\">.rules</span></div></pre></td></tr></table></figure></p>\n<p>你也可以准备一组规则并自动应用它<br><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attribute\">auto</span> eth0 </div><div class=\"line\">iface eth0 inet dhcp </div><div class=\"line\">pre-up iptables-restore &lt; /etc/iptables<span class=\"selector-class\">.up</span><span class=\"selector-class\">.rules</span> </div><div class=\"line\">post-down iptables-restore &lt; /etc/iptables<span class=\"selector-class\">.down</span><span class=\"selector-class\">.rules</span></div></pre></td></tr></table></figure></p>\n<p>◆ 提示<br>◆ 如果你要在一个规则基础上手动编辑iptables </p>\n<p>下面的步骤复习了怎样建立你的防火墙规则，并假定它们相对固定(而且对于大多数人来说它们也应该是)。但是如果你要做许多研究工作，你也许想要你的 iptables在你每次重启时保存一次。你可以在<strong>/etc/network/interfaces </strong> 里添加像下面的一行:<br><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">pre-up iptables-restore &lt; /etc/iptables<span class=\"selector-class\">.up</span><span class=\"selector-class\">.rules</span> </div><div class=\"line\">post-down iptables-save &gt; /etc/iptables<span class=\"selector-class\">.up</span><span class=\"selector-class\">.rules</span> #此行将保存规则用于下次启动时使用。</div></pre></td></tr></table></figure></p>\n<p>◆ 用iptables-save/restore来测试规则 </p>\n<p>如果你超出了这个指南来编辑iptables，你可能想利用iptables-save和iptables-restore来编辑和测试你的规则。你可以通过使用你喜爱的文本编辑器(此处为gedit)来打开这些规则文件来完成编辑。 </p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">iptables-save &gt; /etc/iptables<span class=\"selector-class\">.test</span><span class=\"selector-class\">.rules</span> </div><div class=\"line\">gedit /etc/iptables<span class=\"selector-class\">.test</span><span class=\"selector-class\">.rules</span></div></pre></td></tr></table></figure>\n<p>你会得到一个如下类似的文件(下面是紧接上的例子文件)： </p>\n<p>Generated by iptables-save v1.3.1 on Sun Apr 23 06:19:53 2006<br>*filter<br>:INPUT ACCEPT [368:102354]<br>:FORWARD ACCEPT [0:0]<br>:OUTPUT ACCEPT [92952:20764374]<br>-A INPUT -m state –state RELATED,ESTABLISHED -j ACCEPT<br>-A INPUT -i eth0 -p tcp -m tcp –dport 22 -j ACCEPT<br>-A INPUT -i eth0 -p tcp -m tcp –dport 80 -j ACCEPT<br>-A INPUT -i lo -j ACCEPT<br>-A INPUT -m limit –limit 5/min -j LOG –log-prefix “iptables denied: “ –log-level 7<br>-A INPUT -j DROP<br>COMMIT<br> Completed on Sun Apr 23 06:19:53 2006 </p>\n<p>注意到这些都是减去iptables命令的iptables语句。随意编辑这些命令、完成後保存它们。然後简单的测试下： </p>\n<p><code>iptables-restore &lt; /etc/iptables.test.rules</code></p>\n<p>测试完毕後，如果你还没添加iptables-save命令 到<strong>/etc/network/interfaces</strong> 里面，记得不要丢失了你的更改： </p>\n<p><code>iptables-save &gt; /etc/iptables.up.rules</code></p>\n<p>◆ 更详细的日志<br>为了在你的syslog中获得更多细节，你可能想创建一个额外的链。下面是个很简短的例子—我的<strong>/etc/iptables.up.rules</strong> ,它将展示我是如何设置iptables记录到syslog中的： </p>\n<p>Generated by iptables-save v1.3.1 on Sun Apr 23 05:32:09 2006<br>*filter<br>:INPUT ACCEPT [273:55355]<br>:FORWARD ACCEPT [0:0]<br>:LOGNDROP - [0:0]<br>:OUTPUT ACCEPT [92376:20668252]<br>-A INPUT -m state –state RELATED,ESTABLISHED -j ACCEPT<br>-A INPUT -i eth0 -p tcp -m tcp –dport 22 -j ACCEPT<br>-A INPUT -i eth0 -p tcp -m tcp –dport 80 -j ACCEPT<br>-A INPUT -i lo -j ACCEPT<br>-A INPUT -j LOGNDROP<br>-A LOGNDROP -p tcp -m limit –limit 5/min -j LOG –log-prefix “Denied TCP: “ –log-level 7<br>-A LOGNDROP -p udp -m limit –limit 5/min -j LOG –log-prefix “Denied UDP: “ –log-level 7<br>-A LOGNDROP -p icmp -m limit –limit 5/min -j LOG –log-prefix “Denied ICMP: “ –log-level 7<br>-A LOGNDROP -j DROP<br>COMMIT<br>Completed on Sun Apr 23 05:32:09 2006 </p>\n<p>请注意 一个名为 LOGNDROP的链在文件顶部。而且，INPUT链底部标准的DROP被替换成了LOGNDROP，同时添加了协议描述so it makes sense looking at the log。最後我们在LOGNDROP链尾部丢弃了这些流量。下面的行告诉我们发生了什么： </p>\n<ul>\n<li>–limit 设置记录相同规则到syslog中的次数 </li>\n<li>–log-prefix “Denied…” 添加一个前缀使得在syslog中查找更easy </li>\n<li>–log-level 7 设置syslog的消息级别 (see man syslog for more detail, but you can probably leave this) </li>\n</ul>\n<p>◆ 禁用防火墙 </p>\n<p>如果您要临时禁用防火墙，您可以通过下面的命令清空所偶的规则： </p>\n<p><code>iptables -F</code></p>\n<p>◆ 轻松配置通过 GUI </p>\n<p>新手可以利用 Firetarter(一个gui工具)—仓库中的可用软件(新立德或apt-get 获得)来配置她或他的iptables规则，而需要命令行知识。请查看指南，尽管…… 配置很简单，但是对于高级用户来说可能远远不能满足。然而它对于大多数的家庭用户来说是足够的…… 。(我)建议您使用firestarter在策略表中将出站配置为 “限制”，而将您需要的连接类型(如用于http的80、https的443，msn chat的1683等等)加入白名单。您也可以通过它查看进出您计算机的活动连接…… 。防火墙会一直保持下去一旦通过向导配置完毕。拨号用户必须在向导中指定它在拨号时自动启动。 </p>\n<p>firestarter主页： <a href=\"http://www.fs-security.com/\" target=\"_blank\" rel=\"external\">http://www.fs-security.com/</a> (仓库源中可用, 不需要编译)<br>指南: <a href=\"http://www.fs-security.com/docs/tutorial.php\" target=\"_blank\" rel=\"external\">http://www.fs-security.com/docs/tutorial.php</a> </p>\n<p>个人笔记：不幸运的是，它没有阻断(或询问用户)特定应用/程序的选项……。因此，我的理解是一旦启用了80端口(例如，用于访问网页)，那么任何程序都可以通过80端口连接任何服务器、做任何它想做的事……</p>\n<hr>\n","excerpt":"","more":"<h4 id=\"网上看到一篇博客，讲的很详细，摘录分享。\"><a href=\"#网上看到一篇博客，讲的很详细，摘录分享。\" class=\"headerlink\" title=\"网上看到一篇博客，讲的很详细，摘录分享。\"></a>网上看到一篇博客，讲的很详细，摘录分享。</h4><p>iptables 是一个安装在Ubuntu Server上的默认防火墙。在正常的ubuntu安装过程中，iptables是被安装上了的，但是它默认允许所有的流量(不管防火墙是否是无效的)<br>关于iptables有价值的信息很多，但是大多都描述的很复杂。如果你想做些基本的配置，下面的 How To 很适合你。<br>◆ 基本命令<br>键入： </p>\n<p><code>iptables -L</code></p>\n<p>列出您当前iptables中在规则。如果您是刚刚建立您的服务器，那么可能此时还没有任何规则，而且您应该看到如下： </p>\n<p>Chain INPUT (policy ACCEPT)<br>target prot opt source destination </p>\n<p>Chain FORWARD (policy ACCEPT)<br>target prot opt source destination </p>\n<p>Chain OUTPUT (policy ACCEPT)<br>target prot opt source destination </p>\n<p>◆ 允许建立会话 </p>\n<p>我们可以允许建立会话来接受流量： </p>\n<p><code>iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT</code></p>\n<p>◆ 在指定端口上允许入站流量 </p>\n<p>阻断所有流量您也可以启动系统，但是您可能正在通过SSH工作，所有在您阻断其他流量前有必要允许SSH流量。 </p>\n<p>为了在22端口号(默认的SSH端口)上的允许流量入站，您可以告诉iptables允许您的网卡接受所有的目的端口为22的TCP流量。 </p>\n<p><code>iptables -A INPUT -p tcp -i eth0 --dport ssh -j ACCEPT</code></p>\n<p>特别的，这将向表中追加(-A)INPUT规则，允许目的端口号为SSH的所有流量进入接口(-i) eth0，以便iptables完成跳转(-j)或动作：ACCEPT </p>\n<p>让我们核对下这些规则：(这里仅显示了少数行，您应该看到更多) </p>\n<p><code>iptables -L</code></p>\n<p>Chain INPUT (policy ACCEPT)<br>target prot opt source destination<br>ACCEPT all – anywhere anywhere state RELATED,ESTABLISHED<br>ACCEPT tcp – anywhere anywhere tcp dpt:ssh </p>\n<p>现在，让我们允许所有的web流量 </p>\n<p><code>iptables -A INPUT -p tcp -i eth0 --dport 80 -j ACCEPT</code></p>\n<p>检查我们现有的规则 </p>\n<p><code>iptables -L</code></p>\n<p>Chain INPUT (policy ACCEPT)<br>target prot opt source destination<br>ACCEPT all – anywhere anywhere state RELATED,ESTABLISHED<br>ACCEPT tcp – anywhere anywhere tcp dpt:ssh<br>ACCEPT tcp – anywhere anywhere tcp dpt:www </p>\n<p>我们已经指定SSH和web端口为允许通过的TCP流量，但是因为我们还没阻断任何流量，所以到目前为止所有的流量仍然可以进入。 </p>\n<p>◆ 阻断流量 </p>\n<p>一旦一条规则对一个包进行了匹配，其他规则不再对这个包有效。因为我们的规则首先允许SSH和WEB流量，所以只要我们阻断所有流量的规则紧跟其後，我们依然能接受我们感兴趣的流量。我们要做的仅仅是把阻断所有流量的规则放在最後，所以我们需要再次用到它。 </p>\n<p><code>iptables -A INPUT -j DROP</code></p>\n<p><code>iptables -L</code></p>\n<p>Chain INPUT (policy ACCEPT)<br>target prot opt source destination<br>ACCEPT all – anywhere anywhere state RELATED,ESTABLISHED<br>ACCEPT tcp – anywhere anywhere tcp dpt:ssh<br>ACCEPT tcp – anywhere anywhere tcp dpt:www<br>DROP all – anywhere anywhere </p>\n<p>因为我们刚才没有指定一个接口或一个协议，所以除了web和ssh流量外其他任何流量都会被阻断。 </p>\n<p>◆ 编辑 iptables </p>\n<p>到目前为止我们设置过程中唯一的问题是回环端口(loopbakc)也被阻断了。我们本可以通过指定 -i eth0 来仅仅丢弃eth0上的数据包，但我们也可以为回环端口(loopback)添加一条规则。如果我们追加这条规则，这将太晚了—-因为所有的流量已经 被丢弃。我们必须插入这条跪着到第4行。 </p>\n<p><code>iptables -I INPUT 4 -i lo -j ACCEPT</code></p>\n<p><code>iptables -L</code></p>\n<p>Chain INPUT (policy ACCEPT)<br>target prot opt source destination<br>ACCEPT all – anywhere anywhere state RELATED,ESTABLISHED<br>ACCEPT tcp – anywhere anywhere tcp dpt:ssh<br>ACCEPT tcp – anywhere anywhere tcp dpt:www<br>ACCEPT all – anywhere anywhere<br>DROP all – anywhere anywhere </p>\n<p>最後2行看起来几乎一样，因此我们可以让iptables列的更详细些。 </p>\n<p><code>iptables -L -v</code></p>\n<p>◆ 日志记录 </p>\n<p>在上面的例子中，所有的流量都不会被记录。如果您愿意在syslog中记录被丢弃的包, 下面将是最快捷的方式:<br><figure class=\"highlight maxima\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">iptables -I INPUT <span class=\"number\">5</span> -m <span class=\"built_in\">limit</span> --<span class=\"built_in\">limit</span> <span class=\"number\">5</span>/<span class=\"built_in\">min</span> -j LOG --<span class=\"built_in\">log</span>-<span class=\"built_in\">prefix</span> <span class=\"string\">\"iptables denied: \"</span> --<span class=\"built_in\">log</span>-level <span class=\"number\">7</span></div></pre></td></tr></table></figure></p>\n<p>看 提示 段获得更多关于logging的ideas. </p>\n<p>◆ 保存 iptables </p>\n<p>如果您现在要重新启动机器的话，您的iptables配置将会消失。为了不用每次重新启动时敲入这些命令，您可以保存你的配置，让它在系统启动时自动启动。你可以通过iptables-save 和iptables-restore命令来保存配置。 </p>\n<p>◆ 配置启动时自动加载规则 </p>\n<p>保存您的防火墙股则到一个文件 </p>\n<p><code>iptables-save &gt; /etc/iptables.up.rules</code></p>\n<p>接着修改<strong>/etc/network/interfaces</strong> 脚本自动应用这些规则(末行是添加的)<br><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attribute\">auto</span> eth0 </div><div class=\"line\">iface eth0 inet dhcp </div><div class=\"line\">pre-up iptables-restore &lt; /etc/iptables<span class=\"selector-class\">.up</span><span class=\"selector-class\">.rules</span></div></pre></td></tr></table></figure></p>\n<p>你也可以准备一组规则并自动应用它<br><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attribute\">auto</span> eth0 </div><div class=\"line\">iface eth0 inet dhcp </div><div class=\"line\">pre-up iptables-restore &lt; /etc/iptables<span class=\"selector-class\">.up</span><span class=\"selector-class\">.rules</span> </div><div class=\"line\">post-down iptables-restore &lt; /etc/iptables<span class=\"selector-class\">.down</span><span class=\"selector-class\">.rules</span></div></pre></td></tr></table></figure></p>\n<p>◆ 提示<br>◆ 如果你要在一个规则基础上手动编辑iptables </p>\n<p>下面的步骤复习了怎样建立你的防火墙规则，并假定它们相对固定(而且对于大多数人来说它们也应该是)。但是如果你要做许多研究工作，你也许想要你的 iptables在你每次重启时保存一次。你可以在<strong>/etc/network/interfaces </strong> 里添加像下面的一行:<br><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">pre-up iptables-restore &lt; /etc/iptables<span class=\"selector-class\">.up</span><span class=\"selector-class\">.rules</span> </div><div class=\"line\">post-down iptables-save &gt; /etc/iptables<span class=\"selector-class\">.up</span><span class=\"selector-class\">.rules</span> #此行将保存规则用于下次启动时使用。</div></pre></td></tr></table></figure></p>\n<p>◆ 用iptables-save/restore来测试规则 </p>\n<p>如果你超出了这个指南来编辑iptables，你可能想利用iptables-save和iptables-restore来编辑和测试你的规则。你可以通过使用你喜爱的文本编辑器(此处为gedit)来打开这些规则文件来完成编辑。 </p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">iptables-save &gt; /etc/iptables<span class=\"selector-class\">.test</span><span class=\"selector-class\">.rules</span> </div><div class=\"line\">gedit /etc/iptables<span class=\"selector-class\">.test</span><span class=\"selector-class\">.rules</span></div></pre></td></tr></table></figure>\n<p>你会得到一个如下类似的文件(下面是紧接上的例子文件)： </p>\n<p>Generated by iptables-save v1.3.1 on Sun Apr 23 06:19:53 2006<br>*filter<br>:INPUT ACCEPT [368:102354]<br>:FORWARD ACCEPT [0:0]<br>:OUTPUT ACCEPT [92952:20764374]<br>-A INPUT -m state –state RELATED,ESTABLISHED -j ACCEPT<br>-A INPUT -i eth0 -p tcp -m tcp –dport 22 -j ACCEPT<br>-A INPUT -i eth0 -p tcp -m tcp –dport 80 -j ACCEPT<br>-A INPUT -i lo -j ACCEPT<br>-A INPUT -m limit –limit 5/min -j LOG –log-prefix “iptables denied: “ –log-level 7<br>-A INPUT -j DROP<br>COMMIT<br> Completed on Sun Apr 23 06:19:53 2006 </p>\n<p>注意到这些都是减去iptables命令的iptables语句。随意编辑这些命令、完成後保存它们。然後简单的测试下： </p>\n<p><code>iptables-restore &lt; /etc/iptables.test.rules</code></p>\n<p>测试完毕後，如果你还没添加iptables-save命令 到<strong>/etc/network/interfaces</strong> 里面，记得不要丢失了你的更改： </p>\n<p><code>iptables-save &gt; /etc/iptables.up.rules</code></p>\n<p>◆ 更详细的日志<br>为了在你的syslog中获得更多细节，你可能想创建一个额外的链。下面是个很简短的例子—我的<strong>/etc/iptables.up.rules</strong> ,它将展示我是如何设置iptables记录到syslog中的： </p>\n<p>Generated by iptables-save v1.3.1 on Sun Apr 23 05:32:09 2006<br>*filter<br>:INPUT ACCEPT [273:55355]<br>:FORWARD ACCEPT [0:0]<br>:LOGNDROP - [0:0]<br>:OUTPUT ACCEPT [92376:20668252]<br>-A INPUT -m state –state RELATED,ESTABLISHED -j ACCEPT<br>-A INPUT -i eth0 -p tcp -m tcp –dport 22 -j ACCEPT<br>-A INPUT -i eth0 -p tcp -m tcp –dport 80 -j ACCEPT<br>-A INPUT -i lo -j ACCEPT<br>-A INPUT -j LOGNDROP<br>-A LOGNDROP -p tcp -m limit –limit 5/min -j LOG –log-prefix “Denied TCP: “ –log-level 7<br>-A LOGNDROP -p udp -m limit –limit 5/min -j LOG –log-prefix “Denied UDP: “ –log-level 7<br>-A LOGNDROP -p icmp -m limit –limit 5/min -j LOG –log-prefix “Denied ICMP: “ –log-level 7<br>-A LOGNDROP -j DROP<br>COMMIT<br>Completed on Sun Apr 23 05:32:09 2006 </p>\n<p>请注意 一个名为 LOGNDROP的链在文件顶部。而且，INPUT链底部标准的DROP被替换成了LOGNDROP，同时添加了协议描述so it makes sense looking at the log。最後我们在LOGNDROP链尾部丢弃了这些流量。下面的行告诉我们发生了什么： </p>\n<ul>\n<li>–limit 设置记录相同规则到syslog中的次数 </li>\n<li>–log-prefix “Denied…” 添加一个前缀使得在syslog中查找更easy </li>\n<li>–log-level 7 设置syslog的消息级别 (see man syslog for more detail, but you can probably leave this) </li>\n</ul>\n<p>◆ 禁用防火墙 </p>\n<p>如果您要临时禁用防火墙，您可以通过下面的命令清空所偶的规则： </p>\n<p><code>iptables -F</code></p>\n<p>◆ 轻松配置通过 GUI </p>\n<p>新手可以利用 Firetarter(一个gui工具)—仓库中的可用软件(新立德或apt-get 获得)来配置她或他的iptables规则，而需要命令行知识。请查看指南，尽管…… 配置很简单，但是对于高级用户来说可能远远不能满足。然而它对于大多数的家庭用户来说是足够的…… 。(我)建议您使用firestarter在策略表中将出站配置为 “限制”，而将您需要的连接类型(如用于http的80、https的443，msn chat的1683等等)加入白名单。您也可以通过它查看进出您计算机的活动连接…… 。防火墙会一直保持下去一旦通过向导配置完毕。拨号用户必须在向导中指定它在拨号时自动启动。 </p>\n<p>firestarter主页： <a href=\"http://www.fs-security.com/\">http://www.fs-security.com/</a> (仓库源中可用, 不需要编译)<br>指南: <a href=\"http://www.fs-security.com/docs/tutorial.php\">http://www.fs-security.com/docs/tutorial.php</a> </p>\n<p>个人笔记：不幸运的是，它没有阻断(或询问用户)特定应用/程序的选项……。因此，我的理解是一旦启用了80端口(例如，用于访问网页)，那么任何程序都可以通过80端口连接任何服务器、做任何它想做的事……</p>\n<hr>\n"},{"title":"LVM磁盘管理","abbrlink":13541,"date":"2016-11-03T00:57:16.000Z","_content":"\n## 动态扩容\nLVM是在磁盘分区和文件系统之间添加的一个逻辑层，来为文件系统屏蔽下层磁盘分区布局，提供一个抽象的盘卷，在盘卷上建立文件系统。首先我们讨论以下几个LVM术语：\n\n* 物理存储介质（The physical media）：这里指系统的存储设备：硬盘，如：/dev/hda1、/dev/sda等等，是存储系统最低层的存储单元。\n* 物理卷（physical volume）：物理卷就是指硬盘分区或从逻辑上与磁盘分区具有同样功能的设备(如RAID)，是LVM的基本存储逻辑块，但和基本的物理存储介质（如分区、磁盘等）比较，却包含有与LVM相关的管理参数。\n* 卷组（Volume Group）：LVM卷组类似于非LVM系统中的物理硬盘，其由物理卷组成。可以在卷组上创建一个或多个“LVM分区”（逻辑卷），LVM卷组由一个或多个物理卷组成。\n* 逻辑卷（logical volume）：LVM的逻辑卷类似于非LVM系统中的硬盘分区，在逻辑卷之上可以建立文件系统(比如/home或者/usr等)。\n* PE（physical extent）：每一个物理卷被划分为称为PE(Physical Extents)的基本单元，具有唯一编号的PE是可以被LVM寻址的最小单元。PE的大小是可配置的，默认为4MB。\n* LE（logical extent）：逻辑卷也被划分为被称为LE(Logical Extents) 的可被寻址的基本单位。在同一个卷组中，LE的大小和PE是相同的，并且一一对应。\n\n简单来说就是：\n\n* PV:是物理的磁盘分区\n* VG:LVM中的物理的磁盘分区，也就是PV，必须加入VG，可以将VG理解为一个仓库或者是几个大的硬盘。\n* LV：也就是从VG中划分的逻辑分区\n如下图所示PV、VG、LV三者关系：\n![](http://ofyfogrgx.bkt.clouddn.com/LVM%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86001.png)\n![](http://ofyfogrgx.bkt.clouddn.com/LVM%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86002.png)\n\n\n## 扩容原理：\n#### 用新磁盘创建PV，然后合并到现有的VG中，然后再扩容某个LV。\n貌似全程都不用格式化新建分区\n\n安装LVM\n首先确定系统中是否安装了lvm工具：\n\n* Centos:`yum install lvm2`              \n* Ubuntu:`apt-get install lvm2`\n\n`df -h` 和 `fdisk -l`  查看分区情况\n#### 开始分区：\n```\nfdisk /dev/sdb\nn          #新建\np          #设定为主分区\n回车       #设定起始扇区\n回车       #设定结束扇区（直接回车默认用全部空间创建，也可以输入+500M设定为500M）\n\nt         #此时输入L能看到所有格式的代码，指定分区格式，8e为LVM\nPartition number（1-4）：1     #指定分区，即为之后创建的sdb1-4(主分区只能4个)\n8e          # 设定为LVM\np           # 查看当前分区情况\nw           # 写入硬盘\n\npartprobe   # 重读分区表，可能会提示无法只读。。。。不用理会\n```\n查看当前PV:\n`pvdisplay` 或 `pvscan`\n\n创建PV（物理卷）\n`pvcreate /dev/sdb1`  使用之前创建的sdb1的全部空间创建PV，不想使用全部空间，之前分区时就要注意了。\n\n查看当前VG（卷组）\n`vgdisplay` 或 `vgscan`\n\n用/dev/sdb1创建VG并加到已存在的vg_bogon中\n`vgextend vg_bogon /dev/sdb1`  **vg_bogon是本机正在使用的vg_name**\n\n查看当前VG`vgdisplay`\n![](http://ofyfogrgx.bkt.clouddn.com/LVM%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86003.png)\n发现有9.99G的空间\n\n#### 扩容/分区所在的LV（逻辑卷）\n**/dev/vg_bogon/LogVol01为正在使用的/分区**\n`lvextend -l +100%FREE /dev/vg_bogon/LogVol01`   **路径用/dev/vg_bogon/LogVol01**或**/dev/mapper/vg_bogon-LogVol01**都是可以的,**df -h**就能查看,或 `lvextend -L +10G  /dev/vg_bogon/LogVol01`   来增加10G空间。\n\n查看当前VG:\n`vgdisplay`已经扩容了，但**df -h** 显示没有扩容\n\n重设逻辑卷大小，对于当前正在使用的LogVol01有效\n`resize2fs /dev/vg_bogon/LogVol01`\n\n---\n\n#### 缩小其他分区扩容根分区\n* 1.首先查看磁盘使用情况:`df -h`\n文件系统 容量  已用 可用  已用% 挂载点\nFilesystem              Size  Used Avail Use% Mounted on  \n/dev/mapper/VolGroup-lv_root 154G  7.9G  139G   6% /\ntmpfs                  1.9G  100K  1.9G   1% /dev/shm\n/dev/sda1              485M   69M  391M  15% /boot\n/dev/mapper/VolGroup-lv_home 299G  984M  283G   1% /home\n\n* 2、卸载/home **这里缩小home，把扩容/分区**\n`umount /home`\n**umount /home** 如果提示无法卸载，则是有进程占用/home，使用如下命令来终止占用进程：`fuser -m /home`\n\n* 3、调整分区大小\n`resize2fs -p /dev/mapper/VolGroup-lv_home 20G`  **此处缩小home分区到20G**\n如果提示运行“e2fsck -f /dev/mapper/VolGroup-lv_home”，则执行相关命令： \n`e2fsck -f /dev/mapper/VolGroup-lv_home` \n然后重新执行命令:`resize2fs -p /dev/mapper/VolGroup-lv_home 20G`\n注：**resize2fs** 为重新设定磁盘大小，只是重新指定一下大小，并不对结果有影响，需要下面lvreduce的配合\n* 4、挂载上/home，查看磁盘使用情况\n```\nmount /home\ndf -h```\n 此时看/home分区只有20G了。\n\n* 5、设置空闲空间\n使用**lvreduce**指令用于减少LVM逻辑卷占用的空间大小。可能会删除逻辑卷上已有的数据，所以在操作前必须进行确认。记得输入 “y”\n`lvreduce -L 20G /dev/mapper/VolGroup-lv_home` **刚才只是把/home多余的空间标记为不使用，这一步开始真正分割lv，把/home的lv分割为刚刚设定的大小，只能比20G大，比20G小，多分割出来的地方数据会丢失（上面已经设定了为20G了）**\n\n注：**lvreduce -L 20G**的意思为设置当前文件系统为20G，如果lvreduce -l 20G是指从当前文件系统上减少20G **(-L设定为指定大小，-l减小指定大小),使用lvreduce减小逻辑卷的大小。注意：减小后的大小不能小于文件的大小，否则会丢失数据。 **\n \n可以使用**vgdisplay**命令等查看一下可以操作的大小。也可以是用fdisk -l命令查看详细信息。\n`vgdisplay` 注：vgdisplay为显示LVM卷组的元数据信息,此时可以看到有free空间。\n\n* 6.把闲置空间挂在到根目录下\n`lvextend -l +100%FREE  /dev/mapper/VolGroup-lv_root`  **把free空间全部分给/分区**\n注：如果使用**lvextend -L +283G**则为在文件系统上增加283G\n\n`resize2fs -p /dev/mapper/VolGroup-lv_root`   **重设磁盘大小**\n\n* 7、检查调整结果\n`df -h`\nOK扩容完成\n\n---\n\n#### 其他命令：\n* 移除lv逻辑卷：\n```\nlvdisplay\nlvremove -f /dev/vg_bogon/LogVol02  **移除该lv逻辑卷**```\n\n* lv逻辑卷重命名：\n`lvrename /dev/vg_bogon/LogVol02 /dev/vg_bogon/lv_root  `  \n如果无法修改可能是因为激活原因，激活VG就可以修改LV名了\n`lvchange -an /dev/vg_bogon/LogVol02`\n\n* VG重命名\n`vgrename vg_bogon vg_new `\n\n\n若不是用于扩容，只是用来做磁盘存储文件，则要挂载分区，开机自动挂载修改**/etc/fastab**文件。\n![](http://ofyfogrgx.bkt.clouddn.com/LVM%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86004.png)\n如果改名的lv卷是启动分区的话，再修改**/etc/grub.conf**文件\n![](http://ofyfogrgx.bkt.clouddn.com/LVM%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86005.png)\n   \n\n\n---\n","source":"_posts/系统管理/2016-11-03-LVM磁盘管理.md","raw":"---\ntitle: LVM磁盘管理\ncategories:\n  - 系统管理\ntags:\n  - LVM磁盘管理\n  - LVM扩容\nabbrlink: 13541\ndate: 2016-11-03 08:57:16\n---\n\n## 动态扩容\nLVM是在磁盘分区和文件系统之间添加的一个逻辑层，来为文件系统屏蔽下层磁盘分区布局，提供一个抽象的盘卷，在盘卷上建立文件系统。首先我们讨论以下几个LVM术语：\n\n* 物理存储介质（The physical media）：这里指系统的存储设备：硬盘，如：/dev/hda1、/dev/sda等等，是存储系统最低层的存储单元。\n* 物理卷（physical volume）：物理卷就是指硬盘分区或从逻辑上与磁盘分区具有同样功能的设备(如RAID)，是LVM的基本存储逻辑块，但和基本的物理存储介质（如分区、磁盘等）比较，却包含有与LVM相关的管理参数。\n* 卷组（Volume Group）：LVM卷组类似于非LVM系统中的物理硬盘，其由物理卷组成。可以在卷组上创建一个或多个“LVM分区”（逻辑卷），LVM卷组由一个或多个物理卷组成。\n* 逻辑卷（logical volume）：LVM的逻辑卷类似于非LVM系统中的硬盘分区，在逻辑卷之上可以建立文件系统(比如/home或者/usr等)。\n* PE（physical extent）：每一个物理卷被划分为称为PE(Physical Extents)的基本单元，具有唯一编号的PE是可以被LVM寻址的最小单元。PE的大小是可配置的，默认为4MB。\n* LE（logical extent）：逻辑卷也被划分为被称为LE(Logical Extents) 的可被寻址的基本单位。在同一个卷组中，LE的大小和PE是相同的，并且一一对应。\n\n简单来说就是：\n\n* PV:是物理的磁盘分区\n* VG:LVM中的物理的磁盘分区，也就是PV，必须加入VG，可以将VG理解为一个仓库或者是几个大的硬盘。\n* LV：也就是从VG中划分的逻辑分区\n如下图所示PV、VG、LV三者关系：\n![](http://ofyfogrgx.bkt.clouddn.com/LVM%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86001.png)\n![](http://ofyfogrgx.bkt.clouddn.com/LVM%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86002.png)\n\n\n## 扩容原理：\n#### 用新磁盘创建PV，然后合并到现有的VG中，然后再扩容某个LV。\n貌似全程都不用格式化新建分区\n\n安装LVM\n首先确定系统中是否安装了lvm工具：\n\n* Centos:`yum install lvm2`              \n* Ubuntu:`apt-get install lvm2`\n\n`df -h` 和 `fdisk -l`  查看分区情况\n#### 开始分区：\n```\nfdisk /dev/sdb\nn          #新建\np          #设定为主分区\n回车       #设定起始扇区\n回车       #设定结束扇区（直接回车默认用全部空间创建，也可以输入+500M设定为500M）\n\nt         #此时输入L能看到所有格式的代码，指定分区格式，8e为LVM\nPartition number（1-4）：1     #指定分区，即为之后创建的sdb1-4(主分区只能4个)\n8e          # 设定为LVM\np           # 查看当前分区情况\nw           # 写入硬盘\n\npartprobe   # 重读分区表，可能会提示无法只读。。。。不用理会\n```\n查看当前PV:\n`pvdisplay` 或 `pvscan`\n\n创建PV（物理卷）\n`pvcreate /dev/sdb1`  使用之前创建的sdb1的全部空间创建PV，不想使用全部空间，之前分区时就要注意了。\n\n查看当前VG（卷组）\n`vgdisplay` 或 `vgscan`\n\n用/dev/sdb1创建VG并加到已存在的vg_bogon中\n`vgextend vg_bogon /dev/sdb1`  **vg_bogon是本机正在使用的vg_name**\n\n查看当前VG`vgdisplay`\n![](http://ofyfogrgx.bkt.clouddn.com/LVM%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86003.png)\n发现有9.99G的空间\n\n#### 扩容/分区所在的LV（逻辑卷）\n**/dev/vg_bogon/LogVol01为正在使用的/分区**\n`lvextend -l +100%FREE /dev/vg_bogon/LogVol01`   **路径用/dev/vg_bogon/LogVol01**或**/dev/mapper/vg_bogon-LogVol01**都是可以的,**df -h**就能查看,或 `lvextend -L +10G  /dev/vg_bogon/LogVol01`   来增加10G空间。\n\n查看当前VG:\n`vgdisplay`已经扩容了，但**df -h** 显示没有扩容\n\n重设逻辑卷大小，对于当前正在使用的LogVol01有效\n`resize2fs /dev/vg_bogon/LogVol01`\n\n---\n\n#### 缩小其他分区扩容根分区\n* 1.首先查看磁盘使用情况:`df -h`\n文件系统 容量  已用 可用  已用% 挂载点\nFilesystem              Size  Used Avail Use% Mounted on  \n/dev/mapper/VolGroup-lv_root 154G  7.9G  139G   6% /\ntmpfs                  1.9G  100K  1.9G   1% /dev/shm\n/dev/sda1              485M   69M  391M  15% /boot\n/dev/mapper/VolGroup-lv_home 299G  984M  283G   1% /home\n\n* 2、卸载/home **这里缩小home，把扩容/分区**\n`umount /home`\n**umount /home** 如果提示无法卸载，则是有进程占用/home，使用如下命令来终止占用进程：`fuser -m /home`\n\n* 3、调整分区大小\n`resize2fs -p /dev/mapper/VolGroup-lv_home 20G`  **此处缩小home分区到20G**\n如果提示运行“e2fsck -f /dev/mapper/VolGroup-lv_home”，则执行相关命令： \n`e2fsck -f /dev/mapper/VolGroup-lv_home` \n然后重新执行命令:`resize2fs -p /dev/mapper/VolGroup-lv_home 20G`\n注：**resize2fs** 为重新设定磁盘大小，只是重新指定一下大小，并不对结果有影响，需要下面lvreduce的配合\n* 4、挂载上/home，查看磁盘使用情况\n```\nmount /home\ndf -h```\n 此时看/home分区只有20G了。\n\n* 5、设置空闲空间\n使用**lvreduce**指令用于减少LVM逻辑卷占用的空间大小。可能会删除逻辑卷上已有的数据，所以在操作前必须进行确认。记得输入 “y”\n`lvreduce -L 20G /dev/mapper/VolGroup-lv_home` **刚才只是把/home多余的空间标记为不使用，这一步开始真正分割lv，把/home的lv分割为刚刚设定的大小，只能比20G大，比20G小，多分割出来的地方数据会丢失（上面已经设定了为20G了）**\n\n注：**lvreduce -L 20G**的意思为设置当前文件系统为20G，如果lvreduce -l 20G是指从当前文件系统上减少20G **(-L设定为指定大小，-l减小指定大小),使用lvreduce减小逻辑卷的大小。注意：减小后的大小不能小于文件的大小，否则会丢失数据。 **\n \n可以使用**vgdisplay**命令等查看一下可以操作的大小。也可以是用fdisk -l命令查看详细信息。\n`vgdisplay` 注：vgdisplay为显示LVM卷组的元数据信息,此时可以看到有free空间。\n\n* 6.把闲置空间挂在到根目录下\n`lvextend -l +100%FREE  /dev/mapper/VolGroup-lv_root`  **把free空间全部分给/分区**\n注：如果使用**lvextend -L +283G**则为在文件系统上增加283G\n\n`resize2fs -p /dev/mapper/VolGroup-lv_root`   **重设磁盘大小**\n\n* 7、检查调整结果\n`df -h`\nOK扩容完成\n\n---\n\n#### 其他命令：\n* 移除lv逻辑卷：\n```\nlvdisplay\nlvremove -f /dev/vg_bogon/LogVol02  **移除该lv逻辑卷**```\n\n* lv逻辑卷重命名：\n`lvrename /dev/vg_bogon/LogVol02 /dev/vg_bogon/lv_root  `  \n如果无法修改可能是因为激活原因，激活VG就可以修改LV名了\n`lvchange -an /dev/vg_bogon/LogVol02`\n\n* VG重命名\n`vgrename vg_bogon vg_new `\n\n\n若不是用于扩容，只是用来做磁盘存储文件，则要挂载分区，开机自动挂载修改**/etc/fastab**文件。\n![](http://ofyfogrgx.bkt.clouddn.com/LVM%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86004.png)\n如果改名的lv卷是启动分区的话，再修改**/etc/grub.conf**文件\n![](http://ofyfogrgx.bkt.clouddn.com/LVM%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86005.png)\n   \n\n\n---\n","slug":"系统管理-2016-11-03-LVM磁盘管理","published":1,"updated":"2016-11-13T03:36:30.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civi8ouk5003h2c6n41ztk2u0","content":"<h2 id=\"动态扩容\"><a href=\"#动态扩容\" class=\"headerlink\" title=\"动态扩容\"></a>动态扩容</h2><p>LVM是在磁盘分区和文件系统之间添加的一个逻辑层，来为文件系统屏蔽下层磁盘分区布局，提供一个抽象的盘卷，在盘卷上建立文件系统。首先我们讨论以下几个LVM术语：</p>\n<ul>\n<li>物理存储介质（The physical media）：这里指系统的存储设备：硬盘，如：/dev/hda1、/dev/sda等等，是存储系统最低层的存储单元。</li>\n<li>物理卷（physical volume）：物理卷就是指硬盘分区或从逻辑上与磁盘分区具有同样功能的设备(如RAID)，是LVM的基本存储逻辑块，但和基本的物理存储介质（如分区、磁盘等）比较，却包含有与LVM相关的管理参数。</li>\n<li>卷组（Volume Group）：LVM卷组类似于非LVM系统中的物理硬盘，其由物理卷组成。可以在卷组上创建一个或多个“LVM分区”（逻辑卷），LVM卷组由一个或多个物理卷组成。</li>\n<li>逻辑卷（logical volume）：LVM的逻辑卷类似于非LVM系统中的硬盘分区，在逻辑卷之上可以建立文件系统(比如/home或者/usr等)。</li>\n<li>PE（physical extent）：每一个物理卷被划分为称为PE(Physical Extents)的基本单元，具有唯一编号的PE是可以被LVM寻址的最小单元。PE的大小是可配置的，默认为4MB。</li>\n<li>LE（logical extent）：逻辑卷也被划分为被称为LE(Logical Extents) 的可被寻址的基本单位。在同一个卷组中，LE的大小和PE是相同的，并且一一对应。</li>\n</ul>\n<p>简单来说就是：</p>\n<ul>\n<li>PV:是物理的磁盘分区</li>\n<li>VG:LVM中的物理的磁盘分区，也就是PV，必须加入VG，可以将VG理解为一个仓库或者是几个大的硬盘。</li>\n<li>LV：也就是从VG中划分的逻辑分区<br>如下图所示PV、VG、LV三者关系：<br><img src=\"http://ofyfogrgx.bkt.clouddn.com/LVM%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86001.png\" alt=\"\"><br><img src=\"http://ofyfogrgx.bkt.clouddn.com/LVM%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86002.png\" alt=\"\"></li>\n</ul>\n<h2 id=\"扩容原理：\"><a href=\"#扩容原理：\" class=\"headerlink\" title=\"扩容原理：\"></a>扩容原理：</h2><h4 id=\"用新磁盘创建PV，然后合并到现有的VG中，然后再扩容某个LV。\"><a href=\"#用新磁盘创建PV，然后合并到现有的VG中，然后再扩容某个LV。\" class=\"headerlink\" title=\"用新磁盘创建PV，然后合并到现有的VG中，然后再扩容某个LV。\"></a>用新磁盘创建PV，然后合并到现有的VG中，然后再扩容某个LV。</h4><p>貌似全程都不用格式化新建分区</p>\n<p>安装LVM<br>首先确定系统中是否安装了lvm工具：</p>\n<ul>\n<li>Centos:<code>yum install lvm2</code>              </li>\n<li>Ubuntu:<code>apt-get install lvm2</code></li>\n</ul>\n<p><code>df -h</code> 和 <code>fdisk -l</code>  查看分区情况</p>\n<h4 id=\"开始分区：\"><a href=\"#开始分区：\" class=\"headerlink\" title=\"开始分区：\"></a>开始分区：</h4><figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">fdisk /dev/sdb</div><div class=\"line\">n          <span class=\"comment\">#新建</span></div><div class=\"line\">p          <span class=\"comment\">#设定为主分区</span></div><div class=\"line\">回车       <span class=\"comment\">#设定起始扇区</span></div><div class=\"line\">回车       <span class=\"comment\">#设定结束扇区（直接回车默认用全部空间创建，也可以输入+500M设定为500M）</span></div><div class=\"line\"></div><div class=\"line\">t         <span class=\"comment\">#此时输入L能看到所有格式的代码，指定分区格式，8e为LVM</span></div><div class=\"line\">Partition <span class=\"built_in\">number</span>（<span class=\"number\">1</span><span class=\"number\">-4</span>）：<span class=\"number\">1</span>     <span class=\"comment\">#指定分区，即为之后创建的sdb1-4(主分区只能4个)</span></div><div class=\"line\"><span class=\"number\">8</span>e          <span class=\"comment\"># 设定为LVM</span></div><div class=\"line\">p           <span class=\"comment\"># 查看当前分区情况</span></div><div class=\"line\">w           <span class=\"comment\"># 写入硬盘</span></div><div class=\"line\"></div><div class=\"line\">partprobe   <span class=\"comment\"># 重读分区表，可能会提示无法只读。。。。不用理会</span></div></pre></td></tr></table></figure>\n<p>查看当前PV:<br><code>pvdisplay</code> 或 <code>pvscan</code></p>\n<p>创建PV（物理卷）<br><code>pvcreate /dev/sdb1</code>  使用之前创建的sdb1的全部空间创建PV，不想使用全部空间，之前分区时就要注意了。</p>\n<p>查看当前VG（卷组）<br><code>vgdisplay</code> 或 <code>vgscan</code></p>\n<p>用/dev/sdb1创建VG并加到已存在的vg_bogon中<br><code>vgextend vg_bogon /dev/sdb1</code>  <strong>vg_bogon是本机正在使用的vg_name</strong></p>\n<p>查看当前VG<code>vgdisplay</code><br><img src=\"http://ofyfogrgx.bkt.clouddn.com/LVM%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86003.png\" alt=\"\"><br>发现有9.99G的空间</p>\n<h4 id=\"扩容-分区所在的LV（逻辑卷）\"><a href=\"#扩容-分区所在的LV（逻辑卷）\" class=\"headerlink\" title=\"扩容/分区所在的LV（逻辑卷）\"></a>扩容/分区所在的LV（逻辑卷）</h4><p><strong>/dev/vg_bogon/LogVol01为正在使用的/分区</strong><br><code>lvextend -l +100%FREE /dev/vg_bogon/LogVol01</code>   <strong>路径用/dev/vg_bogon/LogVol01</strong>或<strong>/dev/mapper/vg_bogon-LogVol01</strong>都是可以的,<strong>df -h</strong>就能查看,或 <code>lvextend -L +10G  /dev/vg_bogon/LogVol01</code>   来增加10G空间。</p>\n<p>查看当前VG:<br><code>vgdisplay</code>已经扩容了，但<strong>df -h</strong> 显示没有扩容</p>\n<p>重设逻辑卷大小，对于当前正在使用的LogVol01有效<br><code>resize2fs /dev/vg_bogon/LogVol01</code></p>\n<hr>\n<h4 id=\"缩小其他分区扩容根分区\"><a href=\"#缩小其他分区扩容根分区\" class=\"headerlink\" title=\"缩小其他分区扩容根分区\"></a>缩小其他分区扩容根分区</h4><ul>\n<li><p>1.首先查看磁盘使用情况:<code>df -h</code><br>文件系统 容量  已用 可用  已用% 挂载点<br>Filesystem              Size  Used Avail Use% Mounted on<br>/dev/mapper/VolGroup-lv_root 154G  7.9G  139G   6% /<br>tmpfs                  1.9G  100K  1.9G   1% /dev/shm<br>/dev/sda1              485M   69M  391M  15% /boot<br>/dev/mapper/VolGroup-lv_home 299G  984M  283G   1% /home</p>\n</li>\n<li><p>2、卸载/home <strong>这里缩小home，把扩容/分区</strong><br><code>umount /home</code><br><strong>umount /home</strong> 如果提示无法卸载，则是有进程占用/home，使用如下命令来终止占用进程：<code>fuser -m /home</code></p>\n</li>\n<li><p>3、调整分区大小<br><code>resize2fs -p /dev/mapper/VolGroup-lv_home 20G</code>  <strong>此处缩小home分区到20G</strong><br>如果提示运行“e2fsck -f /dev/mapper/VolGroup-lv_home”，则执行相关命令：<br><code>e2fsck -f /dev/mapper/VolGroup-lv_home</code><br>然后重新执行命令:<code>resize2fs -p /dev/mapper/VolGroup-lv_home 20G</code><br>注：<strong>resize2fs</strong> 为重新设定磁盘大小，只是重新指定一下大小，并不对结果有影响，需要下面lvreduce的配合</p>\n</li>\n<li><p>4、挂载上/home，查看磁盘使用情况</p>\n<figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">mount /<span class=\"built_in\">home</span></div><div class=\"line\">df -h</div></pre></td></tr></table></figure>\n<p>此时看/home分区只有20G了。</p>\n</li>\n<li><p>5、设置空闲空间<br>使用<strong>lvreduce</strong>指令用于减少LVM逻辑卷占用的空间大小。可能会删除逻辑卷上已有的数据，所以在操作前必须进行确认。记得输入 “y”<br><code>lvreduce -L 20G /dev/mapper/VolGroup-lv_home</code> <strong>刚才只是把/home多余的空间标记为不使用，这一步开始真正分割lv，把/home的lv分割为刚刚设定的大小，只能比20G大，比20G小，多分割出来的地方数据会丢失（上面已经设定了为20G了）</strong></p>\n</li>\n</ul>\n<p>注：<strong>lvreduce -L 20G</strong>的意思为设置当前文件系统为20G，如果lvreduce -l 20G是指从当前文件系统上减少20G <strong>(-L设定为指定大小，-l减小指定大小),使用lvreduce减小逻辑卷的大小。注意：减小后的大小不能小于文件的大小，否则会丢失数据。 </strong></p>\n<p>可以使用<strong>vgdisplay</strong>命令等查看一下可以操作的大小。也可以是用fdisk -l命令查看详细信息。<br><code>vgdisplay</code> 注：vgdisplay为显示LVM卷组的元数据信息,此时可以看到有free空间。</p>\n<ul>\n<li>6.把闲置空间挂在到根目录下<br><code>lvextend -l +100%FREE  /dev/mapper/VolGroup-lv_root</code>  <strong>把free空间全部分给/分区</strong><br>注：如果使用<strong>lvextend -L +283G</strong>则为在文件系统上增加283G</li>\n</ul>\n<p><code>resize2fs -p /dev/mapper/VolGroup-lv_root</code>   <strong>重设磁盘大小</strong></p>\n<ul>\n<li>7、检查调整结果<br><code>df -h</code><br>OK扩容完成</li>\n</ul>\n<hr>\n<h4 id=\"其他命令：\"><a href=\"#其他命令：\" class=\"headerlink\" title=\"其他命令：\"></a>其他命令：</h4><ul>\n<li><p>移除lv逻辑卷：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">lvdisplay</div><div class=\"line\">lvremove <span class=\"_\">-f</span> /dev/vg_bogon/LogVol02  **移除该lv逻辑卷**</div></pre></td></tr></table></figure>\n</li>\n<li><p>lv逻辑卷重命名：<br><code>lvrename /dev/vg_bogon/LogVol02 /dev/vg_bogon/lv_root</code><br>如果无法修改可能是因为激活原因，激活VG就可以修改LV名了<br><code>lvchange -an /dev/vg_bogon/LogVol02</code></p>\n</li>\n<li><p>VG重命名<br><code>vgrename vg_bogon vg_new</code></p>\n</li>\n</ul>\n<p>若不是用于扩容，只是用来做磁盘存储文件，则要挂载分区，开机自动挂载修改<strong>/etc/fastab</strong>文件。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com/LVM%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86004.png\" alt=\"\"><br>如果改名的lv卷是启动分区的话，再修改<strong>/etc/grub.conf</strong>文件<br><img src=\"http://ofyfogrgx.bkt.clouddn.com/LVM%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86005.png\" alt=\"\"></p>\n<hr>\n","excerpt":"","more":"<h2 id=\"动态扩容\"><a href=\"#动态扩容\" class=\"headerlink\" title=\"动态扩容\"></a>动态扩容</h2><p>LVM是在磁盘分区和文件系统之间添加的一个逻辑层，来为文件系统屏蔽下层磁盘分区布局，提供一个抽象的盘卷，在盘卷上建立文件系统。首先我们讨论以下几个LVM术语：</p>\n<ul>\n<li>物理存储介质（The physical media）：这里指系统的存储设备：硬盘，如：/dev/hda1、/dev/sda等等，是存储系统最低层的存储单元。</li>\n<li>物理卷（physical volume）：物理卷就是指硬盘分区或从逻辑上与磁盘分区具有同样功能的设备(如RAID)，是LVM的基本存储逻辑块，但和基本的物理存储介质（如分区、磁盘等）比较，却包含有与LVM相关的管理参数。</li>\n<li>卷组（Volume Group）：LVM卷组类似于非LVM系统中的物理硬盘，其由物理卷组成。可以在卷组上创建一个或多个“LVM分区”（逻辑卷），LVM卷组由一个或多个物理卷组成。</li>\n<li>逻辑卷（logical volume）：LVM的逻辑卷类似于非LVM系统中的硬盘分区，在逻辑卷之上可以建立文件系统(比如/home或者/usr等)。</li>\n<li>PE（physical extent）：每一个物理卷被划分为称为PE(Physical Extents)的基本单元，具有唯一编号的PE是可以被LVM寻址的最小单元。PE的大小是可配置的，默认为4MB。</li>\n<li>LE（logical extent）：逻辑卷也被划分为被称为LE(Logical Extents) 的可被寻址的基本单位。在同一个卷组中，LE的大小和PE是相同的，并且一一对应。</li>\n</ul>\n<p>简单来说就是：</p>\n<ul>\n<li>PV:是物理的磁盘分区</li>\n<li>VG:LVM中的物理的磁盘分区，也就是PV，必须加入VG，可以将VG理解为一个仓库或者是几个大的硬盘。</li>\n<li>LV：也就是从VG中划分的逻辑分区<br>如下图所示PV、VG、LV三者关系：<br><img src=\"http://ofyfogrgx.bkt.clouddn.com/LVM%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86001.png\" alt=\"\"><br><img src=\"http://ofyfogrgx.bkt.clouddn.com/LVM%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86002.png\" alt=\"\"></li>\n</ul>\n<h2 id=\"扩容原理：\"><a href=\"#扩容原理：\" class=\"headerlink\" title=\"扩容原理：\"></a>扩容原理：</h2><h4 id=\"用新磁盘创建PV，然后合并到现有的VG中，然后再扩容某个LV。\"><a href=\"#用新磁盘创建PV，然后合并到现有的VG中，然后再扩容某个LV。\" class=\"headerlink\" title=\"用新磁盘创建PV，然后合并到现有的VG中，然后再扩容某个LV。\"></a>用新磁盘创建PV，然后合并到现有的VG中，然后再扩容某个LV。</h4><p>貌似全程都不用格式化新建分区</p>\n<p>安装LVM<br>首先确定系统中是否安装了lvm工具：</p>\n<ul>\n<li>Centos:<code>yum install lvm2</code>              </li>\n<li>Ubuntu:<code>apt-get install lvm2</code></li>\n</ul>\n<p><code>df -h</code> 和 <code>fdisk -l</code>  查看分区情况</p>\n<h4 id=\"开始分区：\"><a href=\"#开始分区：\" class=\"headerlink\" title=\"开始分区：\"></a>开始分区：</h4><figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">fdisk /dev/sdb</div><div class=\"line\">n          <span class=\"comment\">#新建</span></div><div class=\"line\">p          <span class=\"comment\">#设定为主分区</span></div><div class=\"line\">回车       <span class=\"comment\">#设定起始扇区</span></div><div class=\"line\">回车       <span class=\"comment\">#设定结束扇区（直接回车默认用全部空间创建，也可以输入+500M设定为500M）</span></div><div class=\"line\"></div><div class=\"line\">t         <span class=\"comment\">#此时输入L能看到所有格式的代码，指定分区格式，8e为LVM</span></div><div class=\"line\">Partition <span class=\"built_in\">number</span>（<span class=\"number\">1</span><span class=\"number\">-4</span>）：<span class=\"number\">1</span>     <span class=\"comment\">#指定分区，即为之后创建的sdb1-4(主分区只能4个)</span></div><div class=\"line\"><span class=\"number\">8</span>e          <span class=\"comment\"># 设定为LVM</span></div><div class=\"line\">p           <span class=\"comment\"># 查看当前分区情况</span></div><div class=\"line\">w           <span class=\"comment\"># 写入硬盘</span></div><div class=\"line\"></div><div class=\"line\">partprobe   <span class=\"comment\"># 重读分区表，可能会提示无法只读。。。。不用理会</span></div></pre></td></tr></table></figure>\n<p>查看当前PV:<br><code>pvdisplay</code> 或 <code>pvscan</code></p>\n<p>创建PV（物理卷）<br><code>pvcreate /dev/sdb1</code>  使用之前创建的sdb1的全部空间创建PV，不想使用全部空间，之前分区时就要注意了。</p>\n<p>查看当前VG（卷组）<br><code>vgdisplay</code> 或 <code>vgscan</code></p>\n<p>用/dev/sdb1创建VG并加到已存在的vg_bogon中<br><code>vgextend vg_bogon /dev/sdb1</code>  <strong>vg_bogon是本机正在使用的vg_name</strong></p>\n<p>查看当前VG<code>vgdisplay</code><br><img src=\"http://ofyfogrgx.bkt.clouddn.com/LVM%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86003.png\" alt=\"\"><br>发现有9.99G的空间</p>\n<h4 id=\"扩容-分区所在的LV（逻辑卷）\"><a href=\"#扩容-分区所在的LV（逻辑卷）\" class=\"headerlink\" title=\"扩容/分区所在的LV（逻辑卷）\"></a>扩容/分区所在的LV（逻辑卷）</h4><p><strong>/dev/vg_bogon/LogVol01为正在使用的/分区</strong><br><code>lvextend -l +100%FREE /dev/vg_bogon/LogVol01</code>   <strong>路径用/dev/vg_bogon/LogVol01</strong>或<strong>/dev/mapper/vg_bogon-LogVol01</strong>都是可以的,<strong>df -h</strong>就能查看,或 <code>lvextend -L +10G  /dev/vg_bogon/LogVol01</code>   来增加10G空间。</p>\n<p>查看当前VG:<br><code>vgdisplay</code>已经扩容了，但<strong>df -h</strong> 显示没有扩容</p>\n<p>重设逻辑卷大小，对于当前正在使用的LogVol01有效<br><code>resize2fs /dev/vg_bogon/LogVol01</code></p>\n<hr>\n<h4 id=\"缩小其他分区扩容根分区\"><a href=\"#缩小其他分区扩容根分区\" class=\"headerlink\" title=\"缩小其他分区扩容根分区\"></a>缩小其他分区扩容根分区</h4><ul>\n<li><p>1.首先查看磁盘使用情况:<code>df -h</code><br>文件系统 容量  已用 可用  已用% 挂载点<br>Filesystem              Size  Used Avail Use% Mounted on<br>/dev/mapper/VolGroup-lv_root 154G  7.9G  139G   6% /<br>tmpfs                  1.9G  100K  1.9G   1% /dev/shm<br>/dev/sda1              485M   69M  391M  15% /boot<br>/dev/mapper/VolGroup-lv_home 299G  984M  283G   1% /home</p>\n</li>\n<li><p>2、卸载/home <strong>这里缩小home，把扩容/分区</strong><br><code>umount /home</code><br><strong>umount /home</strong> 如果提示无法卸载，则是有进程占用/home，使用如下命令来终止占用进程：<code>fuser -m /home</code></p>\n</li>\n<li><p>3、调整分区大小<br><code>resize2fs -p /dev/mapper/VolGroup-lv_home 20G</code>  <strong>此处缩小home分区到20G</strong><br>如果提示运行“e2fsck -f /dev/mapper/VolGroup-lv_home”，则执行相关命令：<br><code>e2fsck -f /dev/mapper/VolGroup-lv_home</code><br>然后重新执行命令:<code>resize2fs -p /dev/mapper/VolGroup-lv_home 20G</code><br>注：<strong>resize2fs</strong> 为重新设定磁盘大小，只是重新指定一下大小，并不对结果有影响，需要下面lvreduce的配合</p>\n</li>\n<li><p>4、挂载上/home，查看磁盘使用情况</p>\n<figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">mount /<span class=\"built_in\">home</span></div><div class=\"line\">df -h</div></pre></td></tr></table></figure>\n<p>此时看/home分区只有20G了。</p>\n</li>\n<li><p>5、设置空闲空间<br>使用<strong>lvreduce</strong>指令用于减少LVM逻辑卷占用的空间大小。可能会删除逻辑卷上已有的数据，所以在操作前必须进行确认。记得输入 “y”<br><code>lvreduce -L 20G /dev/mapper/VolGroup-lv_home</code> <strong>刚才只是把/home多余的空间标记为不使用，这一步开始真正分割lv，把/home的lv分割为刚刚设定的大小，只能比20G大，比20G小，多分割出来的地方数据会丢失（上面已经设定了为20G了）</strong></p>\n</li>\n</ul>\n<p>注：<strong>lvreduce -L 20G</strong>的意思为设置当前文件系统为20G，如果lvreduce -l 20G是指从当前文件系统上减少20G <strong>(-L设定为指定大小，-l减小指定大小),使用lvreduce减小逻辑卷的大小。注意：减小后的大小不能小于文件的大小，否则会丢失数据。 </strong></p>\n<p>可以使用<strong>vgdisplay</strong>命令等查看一下可以操作的大小。也可以是用fdisk -l命令查看详细信息。<br><code>vgdisplay</code> 注：vgdisplay为显示LVM卷组的元数据信息,此时可以看到有free空间。</p>\n<ul>\n<li>6.把闲置空间挂在到根目录下<br><code>lvextend -l +100%FREE  /dev/mapper/VolGroup-lv_root</code>  <strong>把free空间全部分给/分区</strong><br>注：如果使用<strong>lvextend -L +283G</strong>则为在文件系统上增加283G</li>\n</ul>\n<p><code>resize2fs -p /dev/mapper/VolGroup-lv_root</code>   <strong>重设磁盘大小</strong></p>\n<ul>\n<li>7、检查调整结果<br><code>df -h</code><br>OK扩容完成</li>\n</ul>\n<hr>\n<h4 id=\"其他命令：\"><a href=\"#其他命令：\" class=\"headerlink\" title=\"其他命令：\"></a>其他命令：</h4><ul>\n<li><p>移除lv逻辑卷：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">lvdisplay</div><div class=\"line\">lvremove <span class=\"_\">-f</span> /dev/vg_bogon/LogVol02  **移除该lv逻辑卷**</div></pre></td></tr></table></figure>\n</li>\n<li><p>lv逻辑卷重命名：<br><code>lvrename /dev/vg_bogon/LogVol02 /dev/vg_bogon/lv_root</code><br>如果无法修改可能是因为激活原因，激活VG就可以修改LV名了<br><code>lvchange -an /dev/vg_bogon/LogVol02</code></p>\n</li>\n<li><p>VG重命名<br><code>vgrename vg_bogon vg_new</code></p>\n</li>\n</ul>\n<p>若不是用于扩容，只是用来做磁盘存储文件，则要挂载分区，开机自动挂载修改<strong>/etc/fastab</strong>文件。<br><img src=\"http://ofyfogrgx.bkt.clouddn.com/LVM%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86004.png\" alt=\"\"><br>如果改名的lv卷是启动分区的话，再修改<strong>/etc/grub.conf</strong>文件<br><img src=\"http://ofyfogrgx.bkt.clouddn.com/LVM%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86005.png\" alt=\"\"></p>\n<hr>\n"},{"title":"服务器入侵肉鸡发包","abbrlink":22486,"date":"2016-11-03T01:34:15.000Z","_content":"\n安装工具：`yum install ifstat nload iptraf sysstat`\n\n大多数是因为PHP-ddos木马原因导致发包\n\n`watch ifconfig`　**查看数据包新增情况**\n\n`ifstat`　**查看网卡流量**\n\n|       eth0        ||        eth1         ||       \n|----------|---------|-----------|----------|\n|KB/s in   | KB/s out|  KB/s in  | KB/s out |\n|  407.34  |  154.99 |   134.96  |  324.29  |\n|  274.08  |  191.48 |   210.72  |  248.32  |\n|  240.20  |  192.91 |   257.22  |  179.06  |\n|  136.48  |  236.72 |   203.89  |  179.84  |\n\n`nload`　**以流量图显示**\n\n`iptraf`　**很直观的工具**\n\n[root@ct-nat ~]# `sar -n DEV 1 4` 　**查看4次数据**\n\n`netstat -tu -c`   查看发包的端口\n\n用 **lsof -i :39733** 查看端口的进程，Kill就可以了\n\n一篇博客的解决办法：\n从服务器上使用命令`sar -n DEV 1 4 `，确实出现大量发包的问题，（下边是正常的，异常的情况eth0txpck/s 10000左右了）\n\n先进行限速或者拔掉网线：\n开始之前，先要清除 eth0所有队列规则\n`tc qdisc del dev eth0 root 2> /dev/null > /dev/null`\n\n1) 定义最顶层(根)队列规则，并指定 default 类别编号\n```\ntc qdisc add dev eth0 root handle 1: htb default 20\ntc class add dev eth0 parent 1: classid 1:20 htb rate 2000kbit```\n\n（1KB/s = 8KBit/s）\n\nTC命令格式：\n```\ntc qdisc [ add | change | replace | link ] dev DEV [ parent qdisc-id | root ] [ handle qdisc-id ] qdisc [ qdisc specific parameters ]\n\ntc class [ add | change | replace ] dev DEV parent qdisc-id [ classid class-id ] qdisc [ qdisc specific parameters ]\n\ntc filter [ add | change | replace ] dev DEV [ parent qdisc-id | root ] protocol protocol prio priority filtertype [ filtertype specific parameters ] flowid flow-id```\n\n显示\n```\ntc [-s | -d ] qdisc show [ dev DEV ]\ntc [-s | -d ] class show dev DEV tc filter show dev DEV```\n\n查看TC的状态\n```\ntc -s -d qdisc show dev eth0\ntc -s -d class show dev eth0```\n\n删除tc规则\n\n`tc qdisc del dev eth0 root`\n\n查看状态：\n`top` CPU和MEM都正常，看不出异常的进程。\n\n```\nyum install -y tcpdump\ntcpdump -nn```\n找到大量的IP地址\n\n本机（192.168.35.145）和主机114.114.110.110之间的数据\n`tcpdump -n -i eth0 host 192.168.35.145 and 114.114.110.110`\n\n还有截取全部进入服务器的数据可以使用以下的格式\n`tcpdump -n -i eth0 dst 192.168.35.145`\n\n或者服务器有多个IP 可以使用参数\n`tcpdump -n -i eth0 dst 192.168.35.145  or  192.168.35.155`\n\n我们抓取全部进入服务器的TCP数据包使用以下的格式，大家可以参考下\n`tcpdump -n -i eth0 dst 192.168.35.145 or 192.168.35.155 and tcp`\n\n从本机出去的数据包\n```\ntcpdump -n -i eth0 src 192.168.35.145 or 192.168.35.155\ntcpdump -n -i eth0 src 192.168.35.145 or 192.168.35.155 and port ! 22 and tcp```\n或者可以条件可以是or  和 and  配合使用即可筛选出更好的结果。\n\n可以将异常IP加入到**/etc/hosts.deny**中，或者防火墙设置下\n\n**NetHogs**查看网络使用情况\n```\nwget http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm\nrpm -Uvh epel-release-6-8.noarch.rpm\nyum clean all\nyum makecache\nyum install nethogs -y\nnethogs```\n\n下图显示各进程当前网络使用情况：\n![](http://ofyfogrgx.bkt.clouddn.com/%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%85%A5%E4%BE%B5%E8%82%89%E9%B8%A1%E5%8F%91%E5%8C%851.jpg)\n\n按“m”键可以切换到统计视图，显示各进程总的网络使用情况\n![](http://ofyfogrgx.bkt.clouddn.com/%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%85%A5%E4%BE%B5%E8%82%89%E9%B8%A1%E5%8F%91%E5%8C%852.jpg)\n\n使用帮助：\n`nethogs --help`\n  \n\tusage: nethogs [-V] [-b] [-d seconds] [-t] [-p] [device [device [device ...]]]  \n\t\t-V : 显示版本信息，注意是大写字母V.  \n\t\t-d : 延迟更新刷新速率，以秒为单位。默认值为 1.  \n\t\t-t : 跟踪模式.  \n\t\t-b : bug 狩猎模式 — — 意味着跟踪模式.  \n\t\t-p : 混合模式（不推荐）.  \n\t\t设备 : 要监视的设备名称. 默认为 eth0  \n\t当 nethogs 运行时, 按:  \n\t\tq: 退出  \n\t\tm: 总数和当前使用情况模式之间切换  \n找到大量发包的进程，之后kill掉，再排查下这个进程是什么程序，文件路径在哪里，删除掉异常的文件。\n\n\n---\n","source":"_posts/系统管理/2016-11-03-服务器入侵肉鸡发包.md","raw":"---\ntitle: 服务器入侵肉鸡发包\ncategories:\n  - 系统管理\ntags:\n  - 服务器入侵肉鸡发包\nabbrlink: 22486\ndate: 2016-11-03 09:34:15\n---\n\n安装工具：`yum install ifstat nload iptraf sysstat`\n\n大多数是因为PHP-ddos木马原因导致发包\n\n`watch ifconfig`　**查看数据包新增情况**\n\n`ifstat`　**查看网卡流量**\n\n|       eth0        ||        eth1         ||       \n|----------|---------|-----------|----------|\n|KB/s in   | KB/s out|  KB/s in  | KB/s out |\n|  407.34  |  154.99 |   134.96  |  324.29  |\n|  274.08  |  191.48 |   210.72  |  248.32  |\n|  240.20  |  192.91 |   257.22  |  179.06  |\n|  136.48  |  236.72 |   203.89  |  179.84  |\n\n`nload`　**以流量图显示**\n\n`iptraf`　**很直观的工具**\n\n[root@ct-nat ~]# `sar -n DEV 1 4` 　**查看4次数据**\n\n`netstat -tu -c`   查看发包的端口\n\n用 **lsof -i :39733** 查看端口的进程，Kill就可以了\n\n一篇博客的解决办法：\n从服务器上使用命令`sar -n DEV 1 4 `，确实出现大量发包的问题，（下边是正常的，异常的情况eth0txpck/s 10000左右了）\n\n先进行限速或者拔掉网线：\n开始之前，先要清除 eth0所有队列规则\n`tc qdisc del dev eth0 root 2> /dev/null > /dev/null`\n\n1) 定义最顶层(根)队列规则，并指定 default 类别编号\n```\ntc qdisc add dev eth0 root handle 1: htb default 20\ntc class add dev eth0 parent 1: classid 1:20 htb rate 2000kbit```\n\n（1KB/s = 8KBit/s）\n\nTC命令格式：\n```\ntc qdisc [ add | change | replace | link ] dev DEV [ parent qdisc-id | root ] [ handle qdisc-id ] qdisc [ qdisc specific parameters ]\n\ntc class [ add | change | replace ] dev DEV parent qdisc-id [ classid class-id ] qdisc [ qdisc specific parameters ]\n\ntc filter [ add | change | replace ] dev DEV [ parent qdisc-id | root ] protocol protocol prio priority filtertype [ filtertype specific parameters ] flowid flow-id```\n\n显示\n```\ntc [-s | -d ] qdisc show [ dev DEV ]\ntc [-s | -d ] class show dev DEV tc filter show dev DEV```\n\n查看TC的状态\n```\ntc -s -d qdisc show dev eth0\ntc -s -d class show dev eth0```\n\n删除tc规则\n\n`tc qdisc del dev eth0 root`\n\n查看状态：\n`top` CPU和MEM都正常，看不出异常的进程。\n\n```\nyum install -y tcpdump\ntcpdump -nn```\n找到大量的IP地址\n\n本机（192.168.35.145）和主机114.114.110.110之间的数据\n`tcpdump -n -i eth0 host 192.168.35.145 and 114.114.110.110`\n\n还有截取全部进入服务器的数据可以使用以下的格式\n`tcpdump -n -i eth0 dst 192.168.35.145`\n\n或者服务器有多个IP 可以使用参数\n`tcpdump -n -i eth0 dst 192.168.35.145  or  192.168.35.155`\n\n我们抓取全部进入服务器的TCP数据包使用以下的格式，大家可以参考下\n`tcpdump -n -i eth0 dst 192.168.35.145 or 192.168.35.155 and tcp`\n\n从本机出去的数据包\n```\ntcpdump -n -i eth0 src 192.168.35.145 or 192.168.35.155\ntcpdump -n -i eth0 src 192.168.35.145 or 192.168.35.155 and port ! 22 and tcp```\n或者可以条件可以是or  和 and  配合使用即可筛选出更好的结果。\n\n可以将异常IP加入到**/etc/hosts.deny**中，或者防火墙设置下\n\n**NetHogs**查看网络使用情况\n```\nwget http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm\nrpm -Uvh epel-release-6-8.noarch.rpm\nyum clean all\nyum makecache\nyum install nethogs -y\nnethogs```\n\n下图显示各进程当前网络使用情况：\n![](http://ofyfogrgx.bkt.clouddn.com/%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%85%A5%E4%BE%B5%E8%82%89%E9%B8%A1%E5%8F%91%E5%8C%851.jpg)\n\n按“m”键可以切换到统计视图，显示各进程总的网络使用情况\n![](http://ofyfogrgx.bkt.clouddn.com/%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%85%A5%E4%BE%B5%E8%82%89%E9%B8%A1%E5%8F%91%E5%8C%852.jpg)\n\n使用帮助：\n`nethogs --help`\n  \n\tusage: nethogs [-V] [-b] [-d seconds] [-t] [-p] [device [device [device ...]]]  \n\t\t-V : 显示版本信息，注意是大写字母V.  \n\t\t-d : 延迟更新刷新速率，以秒为单位。默认值为 1.  \n\t\t-t : 跟踪模式.  \n\t\t-b : bug 狩猎模式 — — 意味着跟踪模式.  \n\t\t-p : 混合模式（不推荐）.  \n\t\t设备 : 要监视的设备名称. 默认为 eth0  \n\t当 nethogs 运行时, 按:  \n\t\tq: 退出  \n\t\tm: 总数和当前使用情况模式之间切换  \n找到大量发包的进程，之后kill掉，再排查下这个进程是什么程序，文件路径在哪里，删除掉异常的文件。\n\n\n---\n","slug":"系统管理-2016-11-03-服务器入侵肉鸡发包","published":1,"updated":"2016-11-13T03:36:30.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civi8ouk6003j2c6nw2fy28nh","content":"<p>安装工具：<code>yum install ifstat nload iptraf sysstat</code></p>\n<p>大多数是因为PHP-ddos木马原因导致发包</p>\n<p><code>watch ifconfig</code>　<strong>查看数据包新增情况</strong></p>\n<p><code>ifstat</code>　<strong>查看网卡流量</strong></p>\n<table>\n<thead>\n<tr>\n<th>eth0</th>\n<th></th>\n<th>eth1</th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>KB/s in</td>\n<td>KB/s out</td>\n<td>KB/s in</td>\n<td>KB/s out</td>\n</tr>\n<tr>\n<td>407.34</td>\n<td>154.99</td>\n<td>134.96</td>\n<td>324.29</td>\n</tr>\n<tr>\n<td>274.08</td>\n<td>191.48</td>\n<td>210.72</td>\n<td>248.32</td>\n</tr>\n<tr>\n<td>240.20</td>\n<td>192.91</td>\n<td>257.22</td>\n<td>179.06</td>\n</tr>\n<tr>\n<td>136.48</td>\n<td>236.72</td>\n<td>203.89</td>\n<td>179.84</td>\n</tr>\n</tbody>\n</table>\n<p><code>nload</code>　<strong>以流量图显示</strong></p>\n<p><code>iptraf</code>　<strong>很直观的工具</strong></p>\n<p>[root@ct-nat ~]# <code>sar -n DEV 1 4</code> 　<strong>查看4次数据</strong></p>\n<p><code>netstat -tu -c</code>   查看发包的端口</p>\n<p>用 <strong>lsof -i :39733</strong> 查看端口的进程，Kill就可以了</p>\n<p>一篇博客的解决办法：<br>从服务器上使用命令<code>sar -n DEV 1 4</code>，确实出现大量发包的问题，（下边是正常的，异常的情况eth0txpck/s 10000左右了）</p>\n<p>先进行限速或者拔掉网线：<br>开始之前，先要清除 eth0所有队列规则<br><code>tc qdisc del dev eth0 root 2&gt; /dev/null &gt; /dev/null</code></p>\n<p>1) 定义最顶层(根)队列规则，并指定 default 类别编号<br><figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">tc qdisc <span class=\"keyword\">add</span><span class=\"bash\"> dev eth0 root handle 1: htb default 20</span></div><div class=\"line\">tc class <span class=\"keyword\">add</span><span class=\"bash\"> dev eth0 parent 1: classid 1:20 htb rate 2000kbit</span></div></pre></td></tr></table></figure></p>\n<p>（1KB/s = 8KBit/s）</p>\n<p>TC命令格式：<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">tc qdisc [ add | <span class=\"keyword\">change</span> | <span class=\"keyword\">replace</span> | <span class=\"keyword\">link</span> ] dev DEV [ <span class=\"keyword\">parent</span> qdisc-<span class=\"keyword\">id</span> | root ] [ handle qdisc-<span class=\"keyword\">id</span> ] qdisc [ qdisc specific <span class=\"keyword\">parameters</span> ]</div><div class=\"line\"></div><div class=\"line\">tc <span class=\"keyword\">class</span> [ <span class=\"keyword\">add</span> | <span class=\"keyword\">change</span> | <span class=\"keyword\">replace</span> ] dev DEV <span class=\"keyword\">parent</span> qdisc-<span class=\"keyword\">id</span> [ classid <span class=\"keyword\">class</span>-<span class=\"keyword\">id</span> ] qdisc [ qdisc specific <span class=\"keyword\">parameters</span> ]</div><div class=\"line\"></div><div class=\"line\">tc filter [ <span class=\"keyword\">add</span> | <span class=\"keyword\">change</span> | <span class=\"keyword\">replace</span> ] dev DEV [ <span class=\"keyword\">parent</span> qdisc-<span class=\"keyword\">id</span> | root ] protocol protocol prio <span class=\"keyword\">priority</span> filtertype [ filtertype specific <span class=\"keyword\">parameters</span> ] flowid flow-<span class=\"keyword\">id</span></div></pre></td></tr></table></figure></p>\n<p>显示<br><figure class=\"highlight q\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">tc [-s | -d ] qdisc <span class=\"built_in\">show</span> [ <span class=\"built_in\">dev</span> DEV ]</div><div class=\"line\">tc [-s | -d ] class <span class=\"built_in\">show</span> <span class=\"built_in\">dev</span> DEV tc filter <span class=\"built_in\">show</span> <span class=\"built_in\">dev</span> DEV</div></pre></td></tr></table></figure></p>\n<p>查看TC的状态<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">tc <span class=\"_\">-s</span> <span class=\"_\">-d</span> qdisc show dev eth0</div><div class=\"line\">tc <span class=\"_\">-s</span> <span class=\"_\">-d</span> class show dev eth0</div></pre></td></tr></table></figure></p>\n<p>删除tc规则</p>\n<p><code>tc qdisc del dev eth0 root</code></p>\n<p>查看状态：<br><code>top</code> CPU和MEM都正常，看不出异常的进程。</p>\n<figure class=\"highlight cmake\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">yum <span class=\"keyword\">install</span> -y tcpdump</div><div class=\"line\">tcpdump -nn</div></pre></td></tr></table></figure>\n<p>找到大量的IP地址</p>\n<p>本机（192.168.35.145）和主机114.114.110.110之间的数据<br><code>tcpdump -n -i eth0 host 192.168.35.145 and 114.114.110.110</code></p>\n<p>还有截取全部进入服务器的数据可以使用以下的格式<br><code>tcpdump -n -i eth0 dst 192.168.35.145</code></p>\n<p>或者服务器有多个IP 可以使用参数<br><code>tcpdump -n -i eth0 dst 192.168.35.145  or  192.168.35.155</code></p>\n<p>我们抓取全部进入服务器的TCP数据包使用以下的格式，大家可以参考下<br><code>tcpdump -n -i eth0 dst 192.168.35.145 or 192.168.35.155 and tcp</code></p>\n<p>从本机出去的数据包<br><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">tcpdump -n -i eth0 src <span class=\"number\">192.168</span><span class=\"number\">.35</span><span class=\"number\">.145</span> or <span class=\"number\">192.168</span><span class=\"number\">.35</span><span class=\"number\">.155</span></div><div class=\"line\">tcpdump -n -i eth0 src <span class=\"number\">192.168</span><span class=\"number\">.35</span><span class=\"number\">.145</span> or <span class=\"number\">192.168</span><span class=\"number\">.35</span><span class=\"number\">.155</span> and port ! <span class=\"number\">22</span> and tcp</div></pre></td></tr></table></figure></p>\n<p>或者可以条件可以是or  和 and  配合使用即可筛选出更好的结果。</p>\n<p>可以将异常IP加入到<strong>/etc/hosts.deny</strong>中，或者防火墙设置下</p>\n<p><strong>NetHogs</strong>查看网络使用情况<br><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">wget http:<span class=\"comment\">//dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm</span></div><div class=\"line\">rpm -Uvh epel-release-<span class=\"number\">6</span>-<span class=\"number\">8</span><span class=\"selector-class\">.noarch</span><span class=\"selector-class\">.rpm</span></div><div class=\"line\">yum clean all</div><div class=\"line\">yum makecache</div><div class=\"line\">yum install nethogs -y</div><div class=\"line\">nethogs</div></pre></td></tr></table></figure></p>\n<p>下图显示各进程当前网络使用情况：<br><img src=\"http://ofyfogrgx.bkt.clouddn.com/%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%85%A5%E4%BE%B5%E8%82%89%E9%B8%A1%E5%8F%91%E5%8C%851.jpg\" alt=\"\"></p>\n<p>按“m”键可以切换到统计视图，显示各进程总的网络使用情况<br><img src=\"http://ofyfogrgx.bkt.clouddn.com/%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%85%A5%E4%BE%B5%E8%82%89%E9%B8%A1%E5%8F%91%E5%8C%852.jpg\" alt=\"\"></p>\n<p>使用帮助：<br><code>nethogs --help</code></p>\n<pre><code>usage: nethogs [-V] [-b] [-d seconds] [-t] [-p] [device [device [device ...]]]  \n    -V : 显示版本信息，注意是大写字母V.  \n    -d : 延迟更新刷新速率，以秒为单位。默认值为 1.  \n    -t : 跟踪模式.  \n    -b : bug 狩猎模式 — — 意味着跟踪模式.  \n    -p : 混合模式（不推荐）.  \n    设备 : 要监视的设备名称. 默认为 eth0  \n当 nethogs 运行时, 按:  \n    q: 退出  \n    m: 总数和当前使用情况模式之间切换  \n</code></pre><p>找到大量发包的进程，之后kill掉，再排查下这个进程是什么程序，文件路径在哪里，删除掉异常的文件。</p>\n<hr>\n","excerpt":"","more":"<p>安装工具：<code>yum install ifstat nload iptraf sysstat</code></p>\n<p>大多数是因为PHP-ddos木马原因导致发包</p>\n<p><code>watch ifconfig</code>　<strong>查看数据包新增情况</strong></p>\n<p><code>ifstat</code>　<strong>查看网卡流量</strong></p>\n<table>\n<thead>\n<tr>\n<th>eth0</th>\n<th></th>\n<th>eth1</th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>KB/s in</td>\n<td>KB/s out</td>\n<td>KB/s in</td>\n<td>KB/s out</td>\n</tr>\n<tr>\n<td>407.34</td>\n<td>154.99</td>\n<td>134.96</td>\n<td>324.29</td>\n</tr>\n<tr>\n<td>274.08</td>\n<td>191.48</td>\n<td>210.72</td>\n<td>248.32</td>\n</tr>\n<tr>\n<td>240.20</td>\n<td>192.91</td>\n<td>257.22</td>\n<td>179.06</td>\n</tr>\n<tr>\n<td>136.48</td>\n<td>236.72</td>\n<td>203.89</td>\n<td>179.84</td>\n</tr>\n</tbody>\n</table>\n<p><code>nload</code>　<strong>以流量图显示</strong></p>\n<p><code>iptraf</code>　<strong>很直观的工具</strong></p>\n<p>[root@ct-nat ~]# <code>sar -n DEV 1 4</code> 　<strong>查看4次数据</strong></p>\n<p><code>netstat -tu -c</code>   查看发包的端口</p>\n<p>用 <strong>lsof -i :39733</strong> 查看端口的进程，Kill就可以了</p>\n<p>一篇博客的解决办法：<br>从服务器上使用命令<code>sar -n DEV 1 4</code>，确实出现大量发包的问题，（下边是正常的，异常的情况eth0txpck/s 10000左右了）</p>\n<p>先进行限速或者拔掉网线：<br>开始之前，先要清除 eth0所有队列规则<br><code>tc qdisc del dev eth0 root 2&gt; /dev/null &gt; /dev/null</code></p>\n<p>1) 定义最顶层(根)队列规则，并指定 default 类别编号<br><figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">tc qdisc <span class=\"keyword\">add</span><span class=\"bash\"> dev eth0 root handle 1: htb default 20</div><div class=\"line\"></span>tc class <span class=\"keyword\">add</span><span class=\"bash\"> dev eth0 parent 1: classid 1:20 htb rate 2000kbit</span></div></pre></td></tr></table></figure></p>\n<p>（1KB/s = 8KBit/s）</p>\n<p>TC命令格式：<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">tc qdisc [ add | <span class=\"keyword\">change</span> | <span class=\"keyword\">replace</span> | <span class=\"keyword\">link</span> ] dev DEV [ <span class=\"keyword\">parent</span> qdisc-<span class=\"keyword\">id</span> | root ] [ handle qdisc-<span class=\"keyword\">id</span> ] qdisc [ qdisc specific <span class=\"keyword\">parameters</span> ]</div><div class=\"line\"></div><div class=\"line\">tc <span class=\"keyword\">class</span> [ <span class=\"keyword\">add</span> | <span class=\"keyword\">change</span> | <span class=\"keyword\">replace</span> ] dev DEV <span class=\"keyword\">parent</span> qdisc-<span class=\"keyword\">id</span> [ classid <span class=\"keyword\">class</span>-<span class=\"keyword\">id</span> ] qdisc [ qdisc specific <span class=\"keyword\">parameters</span> ]</div><div class=\"line\"></div><div class=\"line\">tc filter [ <span class=\"keyword\">add</span> | <span class=\"keyword\">change</span> | <span class=\"keyword\">replace</span> ] dev DEV [ <span class=\"keyword\">parent</span> qdisc-<span class=\"keyword\">id</span> | root ] protocol protocol prio <span class=\"keyword\">priority</span> filtertype [ filtertype specific <span class=\"keyword\">parameters</span> ] flowid flow-<span class=\"keyword\">id</span></div></pre></td></tr></table></figure></p>\n<p>显示<br><figure class=\"highlight q\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">tc [-s | -d ] qdisc <span class=\"built_in\">show</span> [ <span class=\"built_in\">dev</span> DEV ]</div><div class=\"line\">tc [-s | -d ] class <span class=\"built_in\">show</span> <span class=\"built_in\">dev</span> DEV tc filter <span class=\"built_in\">show</span> <span class=\"built_in\">dev</span> DEV</div></pre></td></tr></table></figure></p>\n<p>查看TC的状态<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">tc <span class=\"_\">-s</span> <span class=\"_\">-d</span> qdisc show dev eth0</div><div class=\"line\">tc <span class=\"_\">-s</span> <span class=\"_\">-d</span> class show dev eth0</div></pre></td></tr></table></figure></p>\n<p>删除tc规则</p>\n<p><code>tc qdisc del dev eth0 root</code></p>\n<p>查看状态：<br><code>top</code> CPU和MEM都正常，看不出异常的进程。</p>\n<figure class=\"highlight cmake\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">yum <span class=\"keyword\">install</span> -y tcpdump</div><div class=\"line\">tcpdump -nn</div></pre></td></tr></table></figure>\n<p>找到大量的IP地址</p>\n<p>本机（192.168.35.145）和主机114.114.110.110之间的数据<br><code>tcpdump -n -i eth0 host 192.168.35.145 and 114.114.110.110</code></p>\n<p>还有截取全部进入服务器的数据可以使用以下的格式<br><code>tcpdump -n -i eth0 dst 192.168.35.145</code></p>\n<p>或者服务器有多个IP 可以使用参数<br><code>tcpdump -n -i eth0 dst 192.168.35.145  or  192.168.35.155</code></p>\n<p>我们抓取全部进入服务器的TCP数据包使用以下的格式，大家可以参考下<br><code>tcpdump -n -i eth0 dst 192.168.35.145 or 192.168.35.155 and tcp</code></p>\n<p>从本机出去的数据包<br><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">tcpdump -n -i eth0 src <span class=\"number\">192.168</span><span class=\"number\">.35</span><span class=\"number\">.145</span> or <span class=\"number\">192.168</span><span class=\"number\">.35</span><span class=\"number\">.155</span></div><div class=\"line\">tcpdump -n -i eth0 src <span class=\"number\">192.168</span><span class=\"number\">.35</span><span class=\"number\">.145</span> or <span class=\"number\">192.168</span><span class=\"number\">.35</span><span class=\"number\">.155</span> and port ! <span class=\"number\">22</span> and tcp</div></pre></td></tr></table></figure></p>\n<p>或者可以条件可以是or  和 and  配合使用即可筛选出更好的结果。</p>\n<p>可以将异常IP加入到<strong>/etc/hosts.deny</strong>中，或者防火墙设置下</p>\n<p><strong>NetHogs</strong>查看网络使用情况<br><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">wget http:<span class=\"comment\">//dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm</span></div><div class=\"line\">rpm -Uvh epel-release-<span class=\"number\">6</span>-<span class=\"number\">8</span><span class=\"selector-class\">.noarch</span><span class=\"selector-class\">.rpm</span></div><div class=\"line\">yum clean all</div><div class=\"line\">yum makecache</div><div class=\"line\">yum install nethogs -y</div><div class=\"line\">nethogs</div></pre></td></tr></table></figure></p>\n<p>下图显示各进程当前网络使用情况：<br><img src=\"http://ofyfogrgx.bkt.clouddn.com/%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%85%A5%E4%BE%B5%E8%82%89%E9%B8%A1%E5%8F%91%E5%8C%851.jpg\" alt=\"\"></p>\n<p>按“m”键可以切换到统计视图，显示各进程总的网络使用情况<br><img src=\"http://ofyfogrgx.bkt.clouddn.com/%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%85%A5%E4%BE%B5%E8%82%89%E9%B8%A1%E5%8F%91%E5%8C%852.jpg\" alt=\"\"></p>\n<p>使用帮助：<br><code>nethogs --help</code></p>\n<pre><code>usage: nethogs [-V] [-b] [-d seconds] [-t] [-p] [device [device [device ...]]]  \n    -V : 显示版本信息，注意是大写字母V.  \n    -d : 延迟更新刷新速率，以秒为单位。默认值为 1.  \n    -t : 跟踪模式.  \n    -b : bug 狩猎模式 — — 意味着跟踪模式.  \n    -p : 混合模式（不推荐）.  \n    设备 : 要监视的设备名称. 默认为 eth0  \n当 nethogs 运行时, 按:  \n    q: 退出  \n    m: 总数和当前使用情况模式之间切换  \n</code></pre><p>找到大量发包的进程，之后kill掉，再排查下这个进程是什么程序，文件路径在哪里，删除掉异常的文件。</p>\n<hr>\n"},{"title":"swap分区转换","abbrlink":4829,"date":"2016-11-11T07:09:02.000Z","_content":"\n# 建立Swap分区（普通分区转Swap分区）\n增加Swap分区，适用于系统没有Swap分区，或者有Swap分区但空间很小的情况。\n\n查看有哪些分区：`fdisk -l`\n查看已挂载的分区：`df -h`\n这两条命令可以看出系统有没有多余的没有使用的分区。\n\n查看内存和Swap空间：`free -m` 　-m是以MB为单位显示\n　　　　　　　　　　　total　　　　used　　　　free　　　　shared　　buffers　　cached\nMem:　　　　　　　　996　　　　　928　　　　　67　　　　　　0　　　　215　　　　482\n-/+ buffers/cache:　　　　　　　　　231　　　　765\nSwap:　　　　　　　　　0　　　　　　0　　　　　　0\n\n上表中Swap分区大小是0（有Swap分区没有激活，或者根本没有Swap分区），这时我们需要增加Swap空间，有2种方式，都要用root用户操作。\n\n\n## 压缩正常的分区，分出小部分转换为Swap分区。\n如果是LVM分区，参考：[LVM磁盘管理](http://leolan.top/2016/11/03/%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86-2016-11-03-LVM%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86/)\n\n1. 找到要要缩小的磁盘，比如**/home**，先备份**/home**下的文件\n```\ncd /tmp\ntar -zcpv -f home.tar.gz /home/```\n2. 然后卸载**/home**下的分区，先在终端`df -h`一下，记下挂载在/home下的设备名，假设是**/dev/sda5**。执行命令\n`umount /home`或`umount /dev/sda5`就卸载了。\n3. 重新分区，执行命令`fdisk /dev/sda`\n输入p,查看一下当前的分区表\n输入d，删除分区，输入5，删除**/dev/sda5**\n输入n，新建分区，输入+8G，建立一个8G分区\n输入n，新建分区，输入起始磁道号，然后输入结束磁道号，把剩余空间再新建一个分区\n这时候，会提示要reboot才能读取磁盘分区表，我们不reboot，输入命令`partprobe`就可以了！\n4. 挂载磁盘，恢复**/home**\n```\ncd /tmp\ntar -zxvf home.tar.gz -C /home```\n5. 把8G空间转换为Swap分区，和下面的内容是一样的。\n\n\n## 有未使用的分区或为激活的Swap分区，直接转换为Swap分区激活即可。\n这里假设**/dev/sda5**是空闲空间。\n1. 格式化分区：`mkfs.ext3 /dev/sda5`会有**UUID**号，记录下来备用。\n2. 将分区转换成交换分区，格式化交换分区（mkswap）：`mkswap /dev/sda5 `\n3. 激活交换分区：`swapon /dev/sda5`\n4. 现在再`free -m`看看，Swap分区已经不为0了。\n5. 最后添加开机挂载就行，按格式写好,注意**UUID**是刚刚记录下来的。\n```\nUUID=aa65f414-312f-4ec8-aed6-9e0423e87938 none            swap    sw              0       0```\n\n---\n# Swap分区转普通分区\n1. 关闭交换分区（swapoff）：`swapoff /dev/sda5`  \n2. 重新格式化分区：`mkfs.ext3 /dev/sda5`会有**UUID**号，记录下来备用。\n3. 设置磁盘巻标：`e2label /dev/sda5 sky`  \n4. 查看巻标：\n```\ne2label /dev/sda5  \nsky  ```\n5. 根据巻标查看硬盘：`findfs LABEL=sky ` \n6. 最后添加开机挂载就行，按格式写好,注意**UUID**是刚刚记录下来的。\n```\nUUID=aa65f414-312f-4ec8-aed6-9e0423e87938 none            swap    sw              0       0```\n\n---","source":"_posts/系统管理/2016-11-11-swap分区转换.md","raw":"---\ntitle: swap分区转换\ncategories:\n  - 系统管理\ntags:\n  - swap分区转换\nabbrlink: 4829\ndate: 2016-11-11 15:09:02\n---\n\n# 建立Swap分区（普通分区转Swap分区）\n增加Swap分区，适用于系统没有Swap分区，或者有Swap分区但空间很小的情况。\n\n查看有哪些分区：`fdisk -l`\n查看已挂载的分区：`df -h`\n这两条命令可以看出系统有没有多余的没有使用的分区。\n\n查看内存和Swap空间：`free -m` 　-m是以MB为单位显示\n　　　　　　　　　　　total　　　　used　　　　free　　　　shared　　buffers　　cached\nMem:　　　　　　　　996　　　　　928　　　　　67　　　　　　0　　　　215　　　　482\n-/+ buffers/cache:　　　　　　　　　231　　　　765\nSwap:　　　　　　　　　0　　　　　　0　　　　　　0\n\n上表中Swap分区大小是0（有Swap分区没有激活，或者根本没有Swap分区），这时我们需要增加Swap空间，有2种方式，都要用root用户操作。\n\n\n## 压缩正常的分区，分出小部分转换为Swap分区。\n如果是LVM分区，参考：[LVM磁盘管理](http://leolan.top/2016/11/03/%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86-2016-11-03-LVM%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86/)\n\n1. 找到要要缩小的磁盘，比如**/home**，先备份**/home**下的文件\n```\ncd /tmp\ntar -zcpv -f home.tar.gz /home/```\n2. 然后卸载**/home**下的分区，先在终端`df -h`一下，记下挂载在/home下的设备名，假设是**/dev/sda5**。执行命令\n`umount /home`或`umount /dev/sda5`就卸载了。\n3. 重新分区，执行命令`fdisk /dev/sda`\n输入p,查看一下当前的分区表\n输入d，删除分区，输入5，删除**/dev/sda5**\n输入n，新建分区，输入+8G，建立一个8G分区\n输入n，新建分区，输入起始磁道号，然后输入结束磁道号，把剩余空间再新建一个分区\n这时候，会提示要reboot才能读取磁盘分区表，我们不reboot，输入命令`partprobe`就可以了！\n4. 挂载磁盘，恢复**/home**\n```\ncd /tmp\ntar -zxvf home.tar.gz -C /home```\n5. 把8G空间转换为Swap分区，和下面的内容是一样的。\n\n\n## 有未使用的分区或为激活的Swap分区，直接转换为Swap分区激活即可。\n这里假设**/dev/sda5**是空闲空间。\n1. 格式化分区：`mkfs.ext3 /dev/sda5`会有**UUID**号，记录下来备用。\n2. 将分区转换成交换分区，格式化交换分区（mkswap）：`mkswap /dev/sda5 `\n3. 激活交换分区：`swapon /dev/sda5`\n4. 现在再`free -m`看看，Swap分区已经不为0了。\n5. 最后添加开机挂载就行，按格式写好,注意**UUID**是刚刚记录下来的。\n```\nUUID=aa65f414-312f-4ec8-aed6-9e0423e87938 none            swap    sw              0       0```\n\n---\n# Swap分区转普通分区\n1. 关闭交换分区（swapoff）：`swapoff /dev/sda5`  \n2. 重新格式化分区：`mkfs.ext3 /dev/sda5`会有**UUID**号，记录下来备用。\n3. 设置磁盘巻标：`e2label /dev/sda5 sky`  \n4. 查看巻标：\n```\ne2label /dev/sda5  \nsky  ```\n5. 根据巻标查看硬盘：`findfs LABEL=sky ` \n6. 最后添加开机挂载就行，按格式写好,注意**UUID**是刚刚记录下来的。\n```\nUUID=aa65f414-312f-4ec8-aed6-9e0423e87938 none            swap    sw              0       0```\n\n---","slug":"系统管理-2016-11-11-swap分区转换","published":1,"updated":"2016-11-13T03:36:30.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civi8ouk8003n2c6nkq0pj4f2","content":"<h1 id=\"建立Swap分区（普通分区转Swap分区）\"><a href=\"#建立Swap分区（普通分区转Swap分区）\" class=\"headerlink\" title=\"建立Swap分区（普通分区转Swap分区）\"></a>建立Swap分区（普通分区转Swap分区）</h1><p>增加Swap分区，适用于系统没有Swap分区，或者有Swap分区但空间很小的情况。</p>\n<p>查看有哪些分区：<code>fdisk -l</code><br>查看已挂载的分区：<code>df -h</code><br>这两条命令可以看出系统有没有多余的没有使用的分区。</p>\n<p>查看内存和Swap空间：<code>free -m</code> 　-m是以MB为单位显示<br>　　　　　　　　　　　total　　　　used　　　　free　　　　shared　　buffers　　cached<br>Mem:　　　　　　　　996　　　　　928　　　　　67　　　　　　0　　　　215　　　　482<br>-/+ buffers/cache:　　　　　　　　　231　　　　765<br>Swap:　　　　　　　　　0　　　　　　0　　　　　　0</p>\n<p>上表中Swap分区大小是0（有Swap分区没有激活，或者根本没有Swap分区），这时我们需要增加Swap空间，有2种方式，都要用root用户操作。</p>\n<h2 id=\"压缩正常的分区，分出小部分转换为Swap分区。\"><a href=\"#压缩正常的分区，分出小部分转换为Swap分区。\" class=\"headerlink\" title=\"压缩正常的分区，分出小部分转换为Swap分区。\"></a>压缩正常的分区，分出小部分转换为Swap分区。</h2><p>如果是LVM分区，参考：<a href=\"http://leolan.top/2016/11/03/%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86-2016-11-03-LVM%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86/\" target=\"_blank\" rel=\"external\">LVM磁盘管理</a></p>\n<ol>\n<li><p>找到要要缩小的磁盘，比如<strong>/home</strong>，先备份<strong>/home</strong>下的文件</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd /tmp</div><div class=\"line\">tar -zcpv -f home<span class=\"selector-class\">.tar</span><span class=\"selector-class\">.gz</span> /home/</div></pre></td></tr></table></figure>\n</li>\n<li><p>然后卸载<strong>/home</strong>下的分区，先在终端<code>df -h</code>一下，记下挂载在/home下的设备名，假设是<strong>/dev/sda5</strong>。执行命令<br><code>umount /home</code>或<code>umount /dev/sda5</code>就卸载了。</p>\n</li>\n<li>重新分区，执行命令<code>fdisk /dev/sda</code><br>输入p,查看一下当前的分区表<br>输入d，删除分区，输入5，删除<strong>/dev/sda5</strong><br>输入n，新建分区，输入+8G，建立一个8G分区<br>输入n，新建分区，输入起始磁道号，然后输入结束磁道号，把剩余空间再新建一个分区<br>这时候，会提示要reboot才能读取磁盘分区表，我们不reboot，输入命令<code>partprobe</code>就可以了！</li>\n<li><p>挂载磁盘，恢复<strong>/home</strong></p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd /tmp</div><div class=\"line\">tar -zxvf home<span class=\"selector-class\">.tar</span><span class=\"selector-class\">.gz</span> -C /home</div></pre></td></tr></table></figure>\n</li>\n<li><p>把8G空间转换为Swap分区，和下面的内容是一样的。</p>\n</li>\n</ol>\n<h2 id=\"有未使用的分区或为激活的Swap分区，直接转换为Swap分区激活即可。\"><a href=\"#有未使用的分区或为激活的Swap分区，直接转换为Swap分区激活即可。\" class=\"headerlink\" title=\"有未使用的分区或为激活的Swap分区，直接转换为Swap分区激活即可。\"></a>有未使用的分区或为激活的Swap分区，直接转换为Swap分区激活即可。</h2><p>这里假设<strong>/dev/sda5</strong>是空闲空间。</p>\n<ol>\n<li>格式化分区：<code>mkfs.ext3 /dev/sda5</code>会有<strong>UUID</strong>号，记录下来备用。</li>\n<li>将分区转换成交换分区，格式化交换分区（mkswap）：<code>mkswap /dev/sda5</code></li>\n<li>激活交换分区：<code>swapon /dev/sda5</code></li>\n<li>现在再<code>free -m</code>看看，Swap分区已经不为0了。</li>\n<li>最后添加开机挂载就行，按格式写好,注意<strong>UUID</strong>是刚刚记录下来的。<figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">UUID=aa65f414<span class=\"number\">-312</span>f<span class=\"number\">-4</span>ec8-aed6<span class=\"number\">-9e0423</span>e87938 none            swap    sw              <span class=\"number\">0</span>       <span class=\"number\">0</span></div></pre></td></tr></table></figure>\n</li>\n</ol>\n<hr>\n<h1 id=\"Swap分区转普通分区\"><a href=\"#Swap分区转普通分区\" class=\"headerlink\" title=\"Swap分区转普通分区\"></a>Swap分区转普通分区</h1><ol>\n<li>关闭交换分区（swapoff）：<code>swapoff /dev/sda5</code>  </li>\n<li>重新格式化分区：<code>mkfs.ext3 /dev/sda5</code>会有<strong>UUID</strong>号，记录下来备用。</li>\n<li>设置磁盘巻标：<code>e2label /dev/sda5 sky</code>  </li>\n<li><p>查看巻标：</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">e2label <span class=\"regexp\">/dev/</span>sda5  </div><div class=\"line\">sky</div></pre></td></tr></table></figure>\n</li>\n<li><p>根据巻标查看硬盘：<code>findfs LABEL=sky</code> </p>\n</li>\n<li>最后添加开机挂载就行，按格式写好,注意<strong>UUID</strong>是刚刚记录下来的。<figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">UUID=aa65f414<span class=\"number\">-312</span>f<span class=\"number\">-4</span>ec8-aed6<span class=\"number\">-9e0423</span>e87938 none            swap    sw              <span class=\"number\">0</span>       <span class=\"number\">0</span></div></pre></td></tr></table></figure>\n</li>\n</ol>\n<hr>\n","excerpt":"","more":"<h1 id=\"建立Swap分区（普通分区转Swap分区）\"><a href=\"#建立Swap分区（普通分区转Swap分区）\" class=\"headerlink\" title=\"建立Swap分区（普通分区转Swap分区）\"></a>建立Swap分区（普通分区转Swap分区）</h1><p>增加Swap分区，适用于系统没有Swap分区，或者有Swap分区但空间很小的情况。</p>\n<p>查看有哪些分区：<code>fdisk -l</code><br>查看已挂载的分区：<code>df -h</code><br>这两条命令可以看出系统有没有多余的没有使用的分区。</p>\n<p>查看内存和Swap空间：<code>free -m</code> 　-m是以MB为单位显示<br>　　　　　　　　　　　total　　　　used　　　　free　　　　shared　　buffers　　cached<br>Mem:　　　　　　　　996　　　　　928　　　　　67　　　　　　0　　　　215　　　　482<br>-/+ buffers/cache:　　　　　　　　　231　　　　765<br>Swap:　　　　　　　　　0　　　　　　0　　　　　　0</p>\n<p>上表中Swap分区大小是0（有Swap分区没有激活，或者根本没有Swap分区），这时我们需要增加Swap空间，有2种方式，都要用root用户操作。</p>\n<h2 id=\"压缩正常的分区，分出小部分转换为Swap分区。\"><a href=\"#压缩正常的分区，分出小部分转换为Swap分区。\" class=\"headerlink\" title=\"压缩正常的分区，分出小部分转换为Swap分区。\"></a>压缩正常的分区，分出小部分转换为Swap分区。</h2><p>如果是LVM分区，参考：<a href=\"http://leolan.top/2016/11/03/%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86-2016-11-03-LVM%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86/\">LVM磁盘管理</a></p>\n<ol>\n<li><p>找到要要缩小的磁盘，比如<strong>/home</strong>，先备份<strong>/home</strong>下的文件</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd /tmp</div><div class=\"line\">tar -zcpv -f home<span class=\"selector-class\">.tar</span><span class=\"selector-class\">.gz</span> /home/</div></pre></td></tr></table></figure>\n</li>\n<li><p>然后卸载<strong>/home</strong>下的分区，先在终端<code>df -h</code>一下，记下挂载在/home下的设备名，假设是<strong>/dev/sda5</strong>。执行命令<br><code>umount /home</code>或<code>umount /dev/sda5</code>就卸载了。</p>\n</li>\n<li>重新分区，执行命令<code>fdisk /dev/sda</code><br>输入p,查看一下当前的分区表<br>输入d，删除分区，输入5，删除<strong>/dev/sda5</strong><br>输入n，新建分区，输入+8G，建立一个8G分区<br>输入n，新建分区，输入起始磁道号，然后输入结束磁道号，把剩余空间再新建一个分区<br>这时候，会提示要reboot才能读取磁盘分区表，我们不reboot，输入命令<code>partprobe</code>就可以了！</li>\n<li><p>挂载磁盘，恢复<strong>/home</strong></p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd /tmp</div><div class=\"line\">tar -zxvf home<span class=\"selector-class\">.tar</span><span class=\"selector-class\">.gz</span> -C /home</div></pre></td></tr></table></figure>\n</li>\n<li><p>把8G空间转换为Swap分区，和下面的内容是一样的。</p>\n</li>\n</ol>\n<h2 id=\"有未使用的分区或为激活的Swap分区，直接转换为Swap分区激活即可。\"><a href=\"#有未使用的分区或为激活的Swap分区，直接转换为Swap分区激活即可。\" class=\"headerlink\" title=\"有未使用的分区或为激活的Swap分区，直接转换为Swap分区激活即可。\"></a>有未使用的分区或为激活的Swap分区，直接转换为Swap分区激活即可。</h2><p>这里假设<strong>/dev/sda5</strong>是空闲空间。</p>\n<ol>\n<li>格式化分区：<code>mkfs.ext3 /dev/sda5</code>会有<strong>UUID</strong>号，记录下来备用。</li>\n<li>将分区转换成交换分区，格式化交换分区（mkswap）：<code>mkswap /dev/sda5</code></li>\n<li>激活交换分区：<code>swapon /dev/sda5</code></li>\n<li>现在再<code>free -m</code>看看，Swap分区已经不为0了。</li>\n<li>最后添加开机挂载就行，按格式写好,注意<strong>UUID</strong>是刚刚记录下来的。<figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">UUID=aa65f414<span class=\"number\">-312</span>f<span class=\"number\">-4</span>ec8-aed6<span class=\"number\">-9e0423</span>e87938 none            swap    sw              <span class=\"number\">0</span>       <span class=\"number\">0</span></div></pre></td></tr></table></figure>\n</li>\n</ol>\n<hr>\n<h1 id=\"Swap分区转普通分区\"><a href=\"#Swap分区转普通分区\" class=\"headerlink\" title=\"Swap分区转普通分区\"></a>Swap分区转普通分区</h1><ol>\n<li>关闭交换分区（swapoff）：<code>swapoff /dev/sda5</code>  </li>\n<li>重新格式化分区：<code>mkfs.ext3 /dev/sda5</code>会有<strong>UUID</strong>号，记录下来备用。</li>\n<li>设置磁盘巻标：<code>e2label /dev/sda5 sky</code>  </li>\n<li><p>查看巻标：</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">e2label <span class=\"regexp\">/dev/</span>sda5  </div><div class=\"line\">sky</div></pre></td></tr></table></figure>\n</li>\n<li><p>根据巻标查看硬盘：<code>findfs LABEL=sky</code> </p>\n</li>\n<li>最后添加开机挂载就行，按格式写好,注意<strong>UUID</strong>是刚刚记录下来的。<figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">UUID=aa65f414<span class=\"number\">-312</span>f<span class=\"number\">-4</span>ec8-aed6<span class=\"number\">-9e0423</span>e87938 none            swap    sw              <span class=\"number\">0</span>       <span class=\"number\">0</span></div></pre></td></tr></table></figure>\n</li>\n</ol>\n<hr>\n"},{"title":"Docker安装","abbrlink":41070,"date":"2016-11-03T04:23:58.000Z","_content":"\nDocker官网下载：https://www.docker.com/products/overview\n\n官方文档：https://docs.docker.com/\n\n官方安装文档：https://docs.docker.com/engine/installation/\n\n---\n# Centos 7\n### 1、root用户登录，`uname -r`确保内核版本大于等于3.10\n`yum update`更新系统\n### 2、加入Docker源\n```\ntee /etc/yum.repos.d/docker.repo <<-'EOF'\n[dockerrepo]\nname=Docker Repository\nbaseurl=https://yum.dockerproject.org/repo/main/centos/7/\nenabled=1\ngpgcheck=1\ngpgkey=https://yum.dockerproject.org/gpg\nEOF```\n### 3、安装：\n```\nyum install docker-engine\nsystemctl enable docker.service\nsystemctl start docker```\n\n---\n\n# Windows\n下载最新exe安装包进行安装。\nhttps://github.com/boot2docker/windows-installer/releases\n\n---\n\n# Ubuntu 14 && Ubuntu 16\n### 1、root用户登录，`uname -r`确保内核版本大于等于3.10\n### 2、加入Docker源\n```\napt-get update\napt-get install apt-transport-https ca-certificates\napt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D```\n##### 选择对应版本在终端运行命令\nTrusty 14.04 (LTS)\t`deb https://apt.dockerproject.org/repo ubuntu-trusty main`\nXenial 16.04 (LTS)\t`deb https://apt.dockerproject.org/repo ubuntu-xenial main`\n```\necho \"<REPO>\" | sudo tee /etc/apt/sources.list.d/docker.list\napt-get update\napt-cache policy docker-engine```\n### 3、安装：\n```\napt-get update\napt-get install linux-image-extra-$(uname -r) linux-image-extra-virtual\napt-get install docker-engine\nservice docker start\n```\n---\n\n# Mac\n1 安装\n下载最新pkg格式安装包：Boot2Docker-1.3.2.pkg进行安装。\n**https://github.com/boot2docker/osx-installer/releases/latest**\n\n\n或者手动初始化Boot2Docker，打开终端并运行:\n```\nboot2docker init\nboot2docker start\nexport DOCKER_HOST=tcp://$(boot2docker ip 2>/dev/null):2375```\n\n一旦你初始化化好了一个虚拟机，你就能用boot2docker stop和boot2docker start来进行控制。\n安装好后带有virtualBox虚拟机。\n\n更新\n* 1.下载最新版的Docker for OS X Installer\n* 2.运行安装程序, 更新VirtualBox和Boot2Docker管理工具。\n* 3.更新现有虚拟机，打开终端并运行:\n\n```\nboot2docker stop\nboot2docker download\nboot2docker start```\n\n\n### Brew方式安装\n```\nbrew update\nbrew install docker\nbrew link docker\nbrew link boot2docker```\n\n当用brew安装某个应用后，但没有成功创建brew link（比如，link的目录已经存在相同的老版本文件导致link创建失败），此时可以将老版本删除，然后再次执行`brew link xxx`就可以创建link了，之后就可以使用brew安装的新版本了。\n\n注：`ls -lh /usr/local/bin/*docker*` 　就可以看到Docker安装的位置。\n\n**Boot2Docker的缺省用户名为docker，密码为tcuser。**\n\n## 运行Docker\n在终端上跑一个“hello world” 的示例来测试Docker。启动虚拟机然后运行：\n`docker run ubuntu echo hello world`\n这样应该会下载ubuntu镜像并打印hello world。\n\n## 容器端口跳转\n最新版的boot2docker建立了一个仅有网络适配器的主机提供可以接入容器的端口。\n如果你运行一个有公开端口的容器，\n\n`docker run --rm -i -t -p 80:80 nginx`\n然后你应该能用IP地址接入Nginx服务器:\n\n`boot2docker ip` 显示当前IP\n这个IP地址可能被VirtualBox启用的DHCP修改。\n\n#### Boot2Docker管理工具提供了很多命令:\n`./boot2docker [<options>] [<args>]`\n\n参数：**{help|init|up|ssh|save|down|poweroff|reset|restart|config|status|info|ip|delete**\n**|download|version} **\n\n\n---\n","source":"_posts/虚拟化/2016-11-03-Docker安装.md","raw":"---\ntitle: Docker安装\ncategories:\n  - 虚拟化\ntags:\n  - Docker安装\nabbrlink: 41070\ndate: 2016-11-03 12:23:58\n---\n\nDocker官网下载：https://www.docker.com/products/overview\n\n官方文档：https://docs.docker.com/\n\n官方安装文档：https://docs.docker.com/engine/installation/\n\n---\n# Centos 7\n### 1、root用户登录，`uname -r`确保内核版本大于等于3.10\n`yum update`更新系统\n### 2、加入Docker源\n```\ntee /etc/yum.repos.d/docker.repo <<-'EOF'\n[dockerrepo]\nname=Docker Repository\nbaseurl=https://yum.dockerproject.org/repo/main/centos/7/\nenabled=1\ngpgcheck=1\ngpgkey=https://yum.dockerproject.org/gpg\nEOF```\n### 3、安装：\n```\nyum install docker-engine\nsystemctl enable docker.service\nsystemctl start docker```\n\n---\n\n# Windows\n下载最新exe安装包进行安装。\nhttps://github.com/boot2docker/windows-installer/releases\n\n---\n\n# Ubuntu 14 && Ubuntu 16\n### 1、root用户登录，`uname -r`确保内核版本大于等于3.10\n### 2、加入Docker源\n```\napt-get update\napt-get install apt-transport-https ca-certificates\napt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D```\n##### 选择对应版本在终端运行命令\nTrusty 14.04 (LTS)\t`deb https://apt.dockerproject.org/repo ubuntu-trusty main`\nXenial 16.04 (LTS)\t`deb https://apt.dockerproject.org/repo ubuntu-xenial main`\n```\necho \"<REPO>\" | sudo tee /etc/apt/sources.list.d/docker.list\napt-get update\napt-cache policy docker-engine```\n### 3、安装：\n```\napt-get update\napt-get install linux-image-extra-$(uname -r) linux-image-extra-virtual\napt-get install docker-engine\nservice docker start\n```\n---\n\n# Mac\n1 安装\n下载最新pkg格式安装包：Boot2Docker-1.3.2.pkg进行安装。\n**https://github.com/boot2docker/osx-installer/releases/latest**\n\n\n或者手动初始化Boot2Docker，打开终端并运行:\n```\nboot2docker init\nboot2docker start\nexport DOCKER_HOST=tcp://$(boot2docker ip 2>/dev/null):2375```\n\n一旦你初始化化好了一个虚拟机，你就能用boot2docker stop和boot2docker start来进行控制。\n安装好后带有virtualBox虚拟机。\n\n更新\n* 1.下载最新版的Docker for OS X Installer\n* 2.运行安装程序, 更新VirtualBox和Boot2Docker管理工具。\n* 3.更新现有虚拟机，打开终端并运行:\n\n```\nboot2docker stop\nboot2docker download\nboot2docker start```\n\n\n### Brew方式安装\n```\nbrew update\nbrew install docker\nbrew link docker\nbrew link boot2docker```\n\n当用brew安装某个应用后，但没有成功创建brew link（比如，link的目录已经存在相同的老版本文件导致link创建失败），此时可以将老版本删除，然后再次执行`brew link xxx`就可以创建link了，之后就可以使用brew安装的新版本了。\n\n注：`ls -lh /usr/local/bin/*docker*` 　就可以看到Docker安装的位置。\n\n**Boot2Docker的缺省用户名为docker，密码为tcuser。**\n\n## 运行Docker\n在终端上跑一个“hello world” 的示例来测试Docker。启动虚拟机然后运行：\n`docker run ubuntu echo hello world`\n这样应该会下载ubuntu镜像并打印hello world。\n\n## 容器端口跳转\n最新版的boot2docker建立了一个仅有网络适配器的主机提供可以接入容器的端口。\n如果你运行一个有公开端口的容器，\n\n`docker run --rm -i -t -p 80:80 nginx`\n然后你应该能用IP地址接入Nginx服务器:\n\n`boot2docker ip` 显示当前IP\n这个IP地址可能被VirtualBox启用的DHCP修改。\n\n#### Boot2Docker管理工具提供了很多命令:\n`./boot2docker [<options>] [<args>]`\n\n参数：**{help|init|up|ssh|save|down|poweroff|reset|restart|config|status|info|ip|delete**\n**|download|version} **\n\n\n---\n","slug":"虚拟化-2016-11-03-Docker安装","published":1,"updated":"2016-11-13T03:36:30.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civi8ouka003p2c6npp6vpkv6","content":"<p>Docker官网下载：<a href=\"https://www.docker.com/products/overview\" target=\"_blank\" rel=\"external\">https://www.docker.com/products/overview</a></p>\n<p>官方文档：<a href=\"https://docs.docker.com/\" target=\"_blank\" rel=\"external\">https://docs.docker.com/</a></p>\n<p>官方安装文档：<a href=\"https://docs.docker.com/engine/installation/\" target=\"_blank\" rel=\"external\">https://docs.docker.com/engine/installation/</a></p>\n<hr>\n<h1 id=\"Centos-7\"><a href=\"#Centos-7\" class=\"headerlink\" title=\"Centos 7\"></a>Centos 7</h1><h3 id=\"1、root用户登录，uname-r确保内核版本大于等于3-10\"><a href=\"#1、root用户登录，uname-r确保内核版本大于等于3-10\" class=\"headerlink\" title=\"1、root用户登录，uname -r确保内核版本大于等于3.10\"></a>1、root用户登录，<code>uname -r</code>确保内核版本大于等于3.10</h3><p><code>yum update</code>更新系统</p>\n<h3 id=\"2、加入Docker源\"><a href=\"#2、加入Docker源\" class=\"headerlink\" title=\"2、加入Docker源\"></a>2、加入Docker源</h3><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">tee /etc/yum<span class=\"selector-class\">.repos</span><span class=\"selector-class\">.d</span>/docker<span class=\"selector-class\">.repo</span> &lt;&lt;-<span class=\"string\">'EOF'</span></div><div class=\"line\">[dockerrepo]</div><div class=\"line\">name=Docker Repository</div><div class=\"line\">baseurl=https:<span class=\"comment\">//yum.dockerproject.org/repo/main/centos/7/</span></div><div class=\"line\">enabled=<span class=\"number\">1</span></div><div class=\"line\">gpgcheck=<span class=\"number\">1</span></div><div class=\"line\">gpgkey=https:<span class=\"comment\">//yum.dockerproject.org/gpg</span></div><div class=\"line\">EOF</div></pre></td></tr></table></figure>\n<h3 id=\"3、安装：\"><a href=\"#3、安装：\" class=\"headerlink\" title=\"3、安装：\"></a>3、安装：</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">yum <span class=\"keyword\">install</span> docker-<span class=\"keyword\">engine</span></div><div class=\"line\">systemctl <span class=\"keyword\">enable</span> docker.service</div><div class=\"line\">systemctl <span class=\"keyword\">start</span> docker</div></pre></td></tr></table></figure>\n<hr>\n<h1 id=\"Windows\"><a href=\"#Windows\" class=\"headerlink\" title=\"Windows\"></a>Windows</h1><p>下载最新exe安装包进行安装。<br><a href=\"https://github.com/boot2docker/windows-installer/releases\" target=\"_blank\" rel=\"external\">https://github.com/boot2docker/windows-installer/releases</a></p>\n<hr>\n<h1 id=\"Ubuntu-14-amp-amp-Ubuntu-16\"><a href=\"#Ubuntu-14-amp-amp-Ubuntu-16\" class=\"headerlink\" title=\"Ubuntu 14 &amp;&amp; Ubuntu 16\"></a>Ubuntu 14 &amp;&amp; Ubuntu 16</h1><h3 id=\"1、root用户登录，uname-r确保内核版本大于等于3-10-1\"><a href=\"#1、root用户登录，uname-r确保内核版本大于等于3-10-1\" class=\"headerlink\" title=\"1、root用户登录，uname -r确保内核版本大于等于3.10\"></a>1、root用户登录，<code>uname -r</code>确保内核版本大于等于3.10</h3><h3 id=\"2、加入Docker源-1\"><a href=\"#2、加入Docker源-1\" class=\"headerlink\" title=\"2、加入Docker源\"></a>2、加入Docker源</h3><figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">apt-<span class=\"built_in\">get</span> <span class=\"keyword\">update</span></div><div class=\"line\">apt-<span class=\"built_in\">get</span> install apt-transport-https <span class=\"keyword\">ca</span>-certificates</div><div class=\"line\">apt-key adv --keyserver hkp://p80.pool.sks-keyservers.ne<span class=\"variable\">t:80</span> --recv-<span class=\"built_in\">keys</span> <span class=\"number\">58118</span>E89F3A912897C070ADBF76221572C52609D</div></pre></td></tr></table></figure>\n<h5 id=\"选择对应版本在终端运行命令\"><a href=\"#选择对应版本在终端运行命令\" class=\"headerlink\" title=\"选择对应版本在终端运行命令\"></a>选择对应版本在终端运行命令</h5><p>Trusty 14.04 (LTS)    <code>deb https://apt.dockerproject.org/repo ubuntu-trusty main</code><br>Xenial 16.04 (LTS)    <code>deb https://apt.dockerproject.org/repo ubuntu-xenial main</code><br><figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">\"&lt;REPO&gt;\"</span> | sudo tee /etc/apt/sources.<span class=\"keyword\">list</span>.d/docker.<span class=\"keyword\">list</span></div><div class=\"line\">apt-<span class=\"built_in\">get</span> <span class=\"keyword\">update</span></div><div class=\"line\">apt-cache policy docker-engine</div></pre></td></tr></table></figure></p>\n<h3 id=\"3、安装：-1\"><a href=\"#3、安装：-1\" class=\"headerlink\" title=\"3、安装：\"></a>3、安装：</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">apt-get <span class=\"keyword\">update</span></div><div class=\"line\">apt-<span class=\"keyword\">get</span> <span class=\"keyword\">install</span> linux-image-extra-$(uname -r) linux-image-extra-<span class=\"keyword\">virtual</span></div><div class=\"line\">apt-<span class=\"keyword\">get</span> <span class=\"keyword\">install</span> docker-<span class=\"keyword\">engine</span></div><div class=\"line\">service docker <span class=\"keyword\">start</span></div></pre></td></tr></table></figure>\n<hr>\n<h1 id=\"Mac\"><a href=\"#Mac\" class=\"headerlink\" title=\"Mac\"></a>Mac</h1><p>1 安装<br>下载最新pkg格式安装包：Boot2Docker-1.3.2.pkg进行安装。<br><strong><a href=\"https://github.com/boot2docker/osx-installer/releases/latest\" target=\"_blank\" rel=\"external\">https://github.com/boot2docker/osx-installer/releases/latest</a></strong></p>\n<p>或者手动初始化Boot2Docker，打开终端并运行:<br><figure class=\"highlight armasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">boot2docker </span>init</div><div class=\"line\"><span class=\"keyword\">boot2docker </span>start</div><div class=\"line\"><span class=\"symbol\">export</span> DOCKER_HOST<span class=\"symbol\">=tcp</span>://$(<span class=\"keyword\">boot2docker </span><span class=\"built_in\">ip</span> <span class=\"number\">2</span>&gt;/dev/null):<span class=\"number\">2375</span></div></pre></td></tr></table></figure></p>\n<p>一旦你初始化化好了一个虚拟机，你就能用boot2docker stop和boot2docker start来进行控制。<br>安装好后带有virtualBox虚拟机。</p>\n<p>更新</p>\n<ul>\n<li>1.下载最新版的Docker for OS X Installer</li>\n<li>2.运行安装程序, 更新VirtualBox和Boot2Docker管理工具。</li>\n<li>3.更新现有虚拟机，打开终端并运行:</li>\n</ul>\n<figure class=\"highlight armasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">boot2docker </span>stop</div><div class=\"line\"><span class=\"keyword\">boot2docker </span>download</div><div class=\"line\"><span class=\"keyword\">boot2docker </span>start</div></pre></td></tr></table></figure>\n<h3 id=\"Brew方式安装\"><a href=\"#Brew方式安装\" class=\"headerlink\" title=\"Brew方式安装\"></a>Brew方式安装</h3><figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">brew </span>update</div><div class=\"line\"><span class=\"keyword\">brew </span><span class=\"keyword\">install </span>docker</div><div class=\"line\"><span class=\"keyword\">brew </span>link docker</div><div class=\"line\"><span class=\"keyword\">brew </span>link <span class=\"keyword\">boot2docker</span></div></pre></td></tr></table></figure>\n<p>当用brew安装某个应用后，但没有成功创建brew link（比如，link的目录已经存在相同的老版本文件导致link创建失败），此时可以将老版本删除，然后再次执行<code>brew link xxx</code>就可以创建link了，之后就可以使用brew安装的新版本了。</p>\n<p>注：<code>ls -lh /usr/local/bin/*docker*</code> 　就可以看到Docker安装的位置。</p>\n<p><strong>Boot2Docker的缺省用户名为docker，密码为tcuser。</strong></p>\n<h2 id=\"运行Docker\"><a href=\"#运行Docker\" class=\"headerlink\" title=\"运行Docker\"></a>运行Docker</h2><p>在终端上跑一个“hello world” 的示例来测试Docker。启动虚拟机然后运行：<br><code>docker run ubuntu echo hello world</code><br>这样应该会下载ubuntu镜像并打印hello world。</p>\n<h2 id=\"容器端口跳转\"><a href=\"#容器端口跳转\" class=\"headerlink\" title=\"容器端口跳转\"></a>容器端口跳转</h2><p>最新版的boot2docker建立了一个仅有网络适配器的主机提供可以接入容器的端口。<br>如果你运行一个有公开端口的容器，</p>\n<p><code>docker run --rm -i -t -p 80:80 nginx</code><br>然后你应该能用IP地址接入Nginx服务器:</p>\n<p><code>boot2docker ip</code> 显示当前IP<br>这个IP地址可能被VirtualBox启用的DHCP修改。</p>\n<h4 id=\"Boot2Docker管理工具提供了很多命令\"><a href=\"#Boot2Docker管理工具提供了很多命令\" class=\"headerlink\" title=\"Boot2Docker管理工具提供了很多命令:\"></a>Boot2Docker管理工具提供了很多命令:</h4><p><code>./boot2docker [&lt;options&gt;] [&lt;args&gt;]</code></p>\n<p>参数：<strong>{help|init|up|ssh|save|down|poweroff|reset|restart|config|status|info|ip|delete</strong><br><strong>|download|version} </strong></p>\n<hr>\n","excerpt":"","more":"<p>Docker官网下载：<a href=\"https://www.docker.com/products/overview\">https://www.docker.com/products/overview</a></p>\n<p>官方文档：<a href=\"https://docs.docker.com/\">https://docs.docker.com/</a></p>\n<p>官方安装文档：<a href=\"https://docs.docker.com/engine/installation/\">https://docs.docker.com/engine/installation/</a></p>\n<hr>\n<h1 id=\"Centos-7\"><a href=\"#Centos-7\" class=\"headerlink\" title=\"Centos 7\"></a>Centos 7</h1><h3 id=\"1、root用户登录，uname-r确保内核版本大于等于3-10\"><a href=\"#1、root用户登录，uname-r确保内核版本大于等于3-10\" class=\"headerlink\" title=\"1、root用户登录，uname -r确保内核版本大于等于3.10\"></a>1、root用户登录，<code>uname -r</code>确保内核版本大于等于3.10</h3><p><code>yum update</code>更新系统</p>\n<h3 id=\"2、加入Docker源\"><a href=\"#2、加入Docker源\" class=\"headerlink\" title=\"2、加入Docker源\"></a>2、加入Docker源</h3><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">tee /etc/yum<span class=\"selector-class\">.repos</span><span class=\"selector-class\">.d</span>/docker<span class=\"selector-class\">.repo</span> &lt;&lt;-<span class=\"string\">'EOF'</span></div><div class=\"line\">[dockerrepo]</div><div class=\"line\">name=Docker Repository</div><div class=\"line\">baseurl=https:<span class=\"comment\">//yum.dockerproject.org/repo/main/centos/7/</span></div><div class=\"line\">enabled=<span class=\"number\">1</span></div><div class=\"line\">gpgcheck=<span class=\"number\">1</span></div><div class=\"line\">gpgkey=https:<span class=\"comment\">//yum.dockerproject.org/gpg</span></div><div class=\"line\">EOF</div></pre></td></tr></table></figure>\n<h3 id=\"3、安装：\"><a href=\"#3、安装：\" class=\"headerlink\" title=\"3、安装：\"></a>3、安装：</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">yum <span class=\"keyword\">install</span> docker-<span class=\"keyword\">engine</span></div><div class=\"line\">systemctl <span class=\"keyword\">enable</span> docker.service</div><div class=\"line\">systemctl <span class=\"keyword\">start</span> docker</div></pre></td></tr></table></figure>\n<hr>\n<h1 id=\"Windows\"><a href=\"#Windows\" class=\"headerlink\" title=\"Windows\"></a>Windows</h1><p>下载最新exe安装包进行安装。<br><a href=\"https://github.com/boot2docker/windows-installer/releases\">https://github.com/boot2docker/windows-installer/releases</a></p>\n<hr>\n<h1 id=\"Ubuntu-14-amp-amp-Ubuntu-16\"><a href=\"#Ubuntu-14-amp-amp-Ubuntu-16\" class=\"headerlink\" title=\"Ubuntu 14 &amp;&amp; Ubuntu 16\"></a>Ubuntu 14 &amp;&amp; Ubuntu 16</h1><h3 id=\"1、root用户登录，uname-r确保内核版本大于等于3-10-1\"><a href=\"#1、root用户登录，uname-r确保内核版本大于等于3-10-1\" class=\"headerlink\" title=\"1、root用户登录，uname -r确保内核版本大于等于3.10\"></a>1、root用户登录，<code>uname -r</code>确保内核版本大于等于3.10</h3><h3 id=\"2、加入Docker源-1\"><a href=\"#2、加入Docker源-1\" class=\"headerlink\" title=\"2、加入Docker源\"></a>2、加入Docker源</h3><figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">apt-<span class=\"built_in\">get</span> <span class=\"keyword\">update</span></div><div class=\"line\">apt-<span class=\"built_in\">get</span> install apt-transport-https <span class=\"keyword\">ca</span>-certificates</div><div class=\"line\">apt-key adv --keyserver hkp://p80.pool.sks-keyservers.ne<span class=\"variable\">t:80</span> --recv-<span class=\"built_in\">keys</span> <span class=\"number\">58118</span>E89F3A912897C070ADBF76221572C52609D</div></pre></td></tr></table></figure>\n<h5 id=\"选择对应版本在终端运行命令\"><a href=\"#选择对应版本在终端运行命令\" class=\"headerlink\" title=\"选择对应版本在终端运行命令\"></a>选择对应版本在终端运行命令</h5><p>Trusty 14.04 (LTS)    <code>deb https://apt.dockerproject.org/repo ubuntu-trusty main</code><br>Xenial 16.04 (LTS)    <code>deb https://apt.dockerproject.org/repo ubuntu-xenial main</code><br><figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">\"&lt;REPO&gt;\"</span> | sudo tee /etc/apt/sources.<span class=\"keyword\">list</span>.d/docker.<span class=\"keyword\">list</span></div><div class=\"line\">apt-<span class=\"built_in\">get</span> <span class=\"keyword\">update</span></div><div class=\"line\">apt-cache policy docker-engine</div></pre></td></tr></table></figure></p>\n<h3 id=\"3、安装：-1\"><a href=\"#3、安装：-1\" class=\"headerlink\" title=\"3、安装：\"></a>3、安装：</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">apt-get <span class=\"keyword\">update</span></div><div class=\"line\">apt-<span class=\"keyword\">get</span> <span class=\"keyword\">install</span> linux-image-extra-$(uname -r) linux-image-extra-<span class=\"keyword\">virtual</span></div><div class=\"line\">apt-<span class=\"keyword\">get</span> <span class=\"keyword\">install</span> docker-<span class=\"keyword\">engine</span></div><div class=\"line\">service docker <span class=\"keyword\">start</span></div></pre></td></tr></table></figure>\n<hr>\n<h1 id=\"Mac\"><a href=\"#Mac\" class=\"headerlink\" title=\"Mac\"></a>Mac</h1><p>1 安装<br>下载最新pkg格式安装包：Boot2Docker-1.3.2.pkg进行安装。<br><strong><a href=\"https://github.com/boot2docker/osx-installer/releases/latest\">https://github.com/boot2docker/osx-installer/releases/latest</a></strong></p>\n<p>或者手动初始化Boot2Docker，打开终端并运行:<br><figure class=\"highlight armasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">boot2docker </span>init</div><div class=\"line\"><span class=\"keyword\">boot2docker </span>start</div><div class=\"line\"><span class=\"symbol\">export</span> DOCKER_HOST<span class=\"symbol\">=tcp</span>://$(<span class=\"keyword\">boot2docker </span><span class=\"built_in\">ip</span> <span class=\"number\">2</span>&gt;/dev/null):<span class=\"number\">2375</span></div></pre></td></tr></table></figure></p>\n<p>一旦你初始化化好了一个虚拟机，你就能用boot2docker stop和boot2docker start来进行控制。<br>安装好后带有virtualBox虚拟机。</p>\n<p>更新</p>\n<ul>\n<li>1.下载最新版的Docker for OS X Installer</li>\n<li>2.运行安装程序, 更新VirtualBox和Boot2Docker管理工具。</li>\n<li>3.更新现有虚拟机，打开终端并运行:</li>\n</ul>\n<figure class=\"highlight armasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">boot2docker </span>stop</div><div class=\"line\"><span class=\"keyword\">boot2docker </span>download</div><div class=\"line\"><span class=\"keyword\">boot2docker </span>start</div></pre></td></tr></table></figure>\n<h3 id=\"Brew方式安装\"><a href=\"#Brew方式安装\" class=\"headerlink\" title=\"Brew方式安装\"></a>Brew方式安装</h3><figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">brew </span>update</div><div class=\"line\"><span class=\"keyword\">brew </span><span class=\"keyword\">install </span>docker</div><div class=\"line\"><span class=\"keyword\">brew </span>link docker</div><div class=\"line\"><span class=\"keyword\">brew </span>link <span class=\"keyword\">boot2docker</span></div></pre></td></tr></table></figure>\n<p>当用brew安装某个应用后，但没有成功创建brew link（比如，link的目录已经存在相同的老版本文件导致link创建失败），此时可以将老版本删除，然后再次执行<code>brew link xxx</code>就可以创建link了，之后就可以使用brew安装的新版本了。</p>\n<p>注：<code>ls -lh /usr/local/bin/*docker*</code> 　就可以看到Docker安装的位置。</p>\n<p><strong>Boot2Docker的缺省用户名为docker，密码为tcuser。</strong></p>\n<h2 id=\"运行Docker\"><a href=\"#运行Docker\" class=\"headerlink\" title=\"运行Docker\"></a>运行Docker</h2><p>在终端上跑一个“hello world” 的示例来测试Docker。启动虚拟机然后运行：<br><code>docker run ubuntu echo hello world</code><br>这样应该会下载ubuntu镜像并打印hello world。</p>\n<h2 id=\"容器端口跳转\"><a href=\"#容器端口跳转\" class=\"headerlink\" title=\"容器端口跳转\"></a>容器端口跳转</h2><p>最新版的boot2docker建立了一个仅有网络适配器的主机提供可以接入容器的端口。<br>如果你运行一个有公开端口的容器，</p>\n<p><code>docker run --rm -i -t -p 80:80 nginx</code><br>然后你应该能用IP地址接入Nginx服务器:</p>\n<p><code>boot2docker ip</code> 显示当前IP<br>这个IP地址可能被VirtualBox启用的DHCP修改。</p>\n<h4 id=\"Boot2Docker管理工具提供了很多命令\"><a href=\"#Boot2Docker管理工具提供了很多命令\" class=\"headerlink\" title=\"Boot2Docker管理工具提供了很多命令:\"></a>Boot2Docker管理工具提供了很多命令:</h4><p><code>./boot2docker [&lt;options&gt;] [&lt;args&gt;]</code></p>\n<p>参数：<strong>{help|init|up|ssh|save|down|poweroff|reset|restart|config|status|info|ip|delete</strong><br><strong>|download|version} </strong></p>\n<hr>\n"},{"title":"KVM虚拟化","abbrlink":7260,"date":"2016-11-03T02:27:18.000Z","_content":"\n* 检测\n`egrep 'vmx|svm' /proc/cpuinfo`\n\n* 安装 KVM\n```\nyum install -y kvm python-virtinst libvirt bridge-utils virt-manager gemu-kvm-tools virt-viewer virt-v2v libguestfs-tools```\n\n* 后台制作iso文件\n`nohup cp /dev/cdrom /data/iso/mini.iso &`\n\n* 安装iso文件\n```\nvirt-install --name=centos67 --ram 1024 --vcpus=1 --disk path=/data/kvm/centos67mini.img,size=20,bus=virtio --accelerate --cdrom /data/iso/mini.iso --vnc --vncport=5910 --vnclisten=0.0.0.0 --network bridge=be0,model=virtio --no-acpi --noautoconsole```\n\n----未完----\n\n\n---","source":"_posts/虚拟化/2016-11-03-KVM虚拟化.md","raw":"---\ntitle: KVM虚拟化\ncategories:\n  - 虚拟化\ntags:\n  - KVM\nabbrlink: 7260\ndate: 2016-11-03 10:27:18\n---\n\n* 检测\n`egrep 'vmx|svm' /proc/cpuinfo`\n\n* 安装 KVM\n```\nyum install -y kvm python-virtinst libvirt bridge-utils virt-manager gemu-kvm-tools virt-viewer virt-v2v libguestfs-tools```\n\n* 后台制作iso文件\n`nohup cp /dev/cdrom /data/iso/mini.iso &`\n\n* 安装iso文件\n```\nvirt-install --name=centos67 --ram 1024 --vcpus=1 --disk path=/data/kvm/centos67mini.img,size=20,bus=virtio --accelerate --cdrom /data/iso/mini.iso --vnc --vncport=5910 --vnclisten=0.0.0.0 --network bridge=be0,model=virtio --no-acpi --noautoconsole```\n\n----未完----\n\n\n---","slug":"虚拟化-2016-11-03-KVM虚拟化","published":1,"updated":"2016-11-13T03:36:30.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civi8oukd003t2c6ng03obfsr","content":"<ul>\n<li><p>检测<br><code>egrep &#39;vmx|svm&#39; /proc/cpuinfo</code></p>\n</li>\n<li><p>安装 KVM</p>\n<figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">yum <span class=\"keyword\">install </span>-y kvm python-virtinst libvirt <span class=\"keyword\">bridge-utils </span>virt-manager gemu-kvm-tools virt-viewer virt-v2v libguestfs-tools</div></pre></td></tr></table></figure>\n</li>\n<li><p>后台制作iso文件<br><code>nohup cp /dev/cdrom /data/iso/mini.iso &amp;</code></p>\n</li>\n<li><p>安装iso文件</p>\n<figure class=\"highlight brainfuck\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">virt</span><span class=\"literal\">-</span><span class=\"comment\">install</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">name=centos67</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">ram</span> <span class=\"comment\">1024</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">vcpus=1</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">disk</span> <span class=\"comment\">path=/data/kvm/centos67mini</span><span class=\"string\">.</span><span class=\"comment\">img</span><span class=\"string\">,</span><span class=\"comment\">size=20</span><span class=\"string\">,</span><span class=\"comment\">bus=virtio</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">accelerate</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">cdrom</span> <span class=\"comment\">/data/iso/mini</span><span class=\"string\">.</span><span class=\"comment\">iso</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">vnc</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">vncport=5910</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">vnclisten=0</span><span class=\"string\">.</span><span class=\"comment\">0</span><span class=\"string\">.</span><span class=\"comment\">0</span><span class=\"string\">.</span><span class=\"comment\">0</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">network</span> <span class=\"comment\">bridge=be0</span><span class=\"string\">,</span><span class=\"comment\">model=virtio</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">no</span><span class=\"literal\">-</span><span class=\"comment\">acpi</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">noautoconsole</span></div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>—-未完—-</p>\n<hr>\n","excerpt":"","more":"<ul>\n<li><p>检测<br><code>egrep &#39;vmx|svm&#39; /proc/cpuinfo</code></p>\n</li>\n<li><p>安装 KVM</p>\n<figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">yum <span class=\"keyword\">install </span>-y kvm python-virtinst libvirt <span class=\"keyword\">bridge-utils </span>virt-manager gemu-kvm-tools virt-viewer virt-v2v libguestfs-tools</div></pre></td></tr></table></figure>\n</li>\n<li><p>后台制作iso文件<br><code>nohup cp /dev/cdrom /data/iso/mini.iso &amp;</code></p>\n</li>\n<li><p>安装iso文件</p>\n<figure class=\"highlight brainfuck\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">virt</span><span class=\"literal\">-</span><span class=\"comment\">install</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">name=centos67</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">ram</span> <span class=\"comment\">1024</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">vcpus=1</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">disk</span> <span class=\"comment\">path=/data/kvm/centos67mini</span><span class=\"string\">.</span><span class=\"comment\">img</span><span class=\"string\">,</span><span class=\"comment\">size=20</span><span class=\"string\">,</span><span class=\"comment\">bus=virtio</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">accelerate</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">cdrom</span> <span class=\"comment\">/data/iso/mini</span><span class=\"string\">.</span><span class=\"comment\">iso</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">vnc</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">vncport=5910</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">vnclisten=0</span><span class=\"string\">.</span><span class=\"comment\">0</span><span class=\"string\">.</span><span class=\"comment\">0</span><span class=\"string\">.</span><span class=\"comment\">0</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">network</span> <span class=\"comment\">bridge=be0</span><span class=\"string\">,</span><span class=\"comment\">model=virtio</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">no</span><span class=\"literal\">-</span><span class=\"comment\">acpi</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">noautoconsole</span></div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>—-未完—-</p>\n<hr>\n"},{"title":"tomcat单机多实例","abbrlink":20879,"date":"2016-11-03T09:25:35.000Z","_content":"\n运用了一个镜像启动多个容器，一个容器可以启动多个示例的原理，具体请搜索本博客：Docker常用命令\n\n此篇博客是学习“烂泥\"大神分享的笔记写的！\n\n主机IP：192.168.8.33\n容器IP：192.168.8.188\n从docker仓库下载最新的tomcat容器，然后使用这个tomcat容器，就可以启动多个tomcat实例，而我们只需要在192.168.0.100上通过端口进行区分就行了。\n\n启动第一个实例：\n```\ndocker run -dit --name tomcat8282 -v /root/:/root/ -p 8282:8080 192.168.8.188:5000/ilanni:160922-03-12 /bin/bash```\n\n`docker exec -it tomcat8282 /bin/bash`\n\n`cat webapps/ilanni/index.html`\n\n![](http://ofyfogrgx.bkt.clouddn.com/docker%20tomcat%E5%8D%95%E6%9C%BA%E5%A4%9A%E5%AE%9E%E4%BE%8B001.png)\n![](http://ofyfogrgx.bkt.clouddn.com/docker%20tomcat%E5%8D%95%E6%9C%BA%E5%A4%9A%E5%AE%9E%E4%BE%8B002.png)\n\n\n启动第二个实例：\n```\ndocker run -dit --name tomcat8383 -v /root/:/root/ -p 8383:8080 192.168.8.188:5000/ilanni:160922-03-12 /bin/bash```\n\n`docker exec -it tomcat8383 /bin/bash`\n\n`cat webapps/ilanni/index.html`\n\n![](http://ofyfogrgx.bkt.clouddn.com/docker%20tomcat%E5%8D%95%E6%9C%BA%E5%A4%9A%E5%AE%9E%E4%BE%8B003.png)\n![](http://ofyfogrgx.bkt.clouddn.com/docker%20tomcat%E5%8D%95%E6%9C%BA%E5%A4%9A%E5%AE%9E%E4%BE%8B004.png)\n\n\n---","source":"_posts/虚拟化/2016-11-03-tomcat单机多实例.md","raw":"---\ntitle: tomcat单机多实例\ncategories:\n  - 虚拟化\ntags:\n  - null\nabbrlink: 20879\ndate: 2016-11-03 17:25:35\n---\n\n运用了一个镜像启动多个容器，一个容器可以启动多个示例的原理，具体请搜索本博客：Docker常用命令\n\n此篇博客是学习“烂泥\"大神分享的笔记写的！\n\n主机IP：192.168.8.33\n容器IP：192.168.8.188\n从docker仓库下载最新的tomcat容器，然后使用这个tomcat容器，就可以启动多个tomcat实例，而我们只需要在192.168.0.100上通过端口进行区分就行了。\n\n启动第一个实例：\n```\ndocker run -dit --name tomcat8282 -v /root/:/root/ -p 8282:8080 192.168.8.188:5000/ilanni:160922-03-12 /bin/bash```\n\n`docker exec -it tomcat8282 /bin/bash`\n\n`cat webapps/ilanni/index.html`\n\n![](http://ofyfogrgx.bkt.clouddn.com/docker%20tomcat%E5%8D%95%E6%9C%BA%E5%A4%9A%E5%AE%9E%E4%BE%8B001.png)\n![](http://ofyfogrgx.bkt.clouddn.com/docker%20tomcat%E5%8D%95%E6%9C%BA%E5%A4%9A%E5%AE%9E%E4%BE%8B002.png)\n\n\n启动第二个实例：\n```\ndocker run -dit --name tomcat8383 -v /root/:/root/ -p 8383:8080 192.168.8.188:5000/ilanni:160922-03-12 /bin/bash```\n\n`docker exec -it tomcat8383 /bin/bash`\n\n`cat webapps/ilanni/index.html`\n\n![](http://ofyfogrgx.bkt.clouddn.com/docker%20tomcat%E5%8D%95%E6%9C%BA%E5%A4%9A%E5%AE%9E%E4%BE%8B003.png)\n![](http://ofyfogrgx.bkt.clouddn.com/docker%20tomcat%E5%8D%95%E6%9C%BA%E5%A4%9A%E5%AE%9E%E4%BE%8B004.png)\n\n\n---","slug":"虚拟化-2016-11-03-tomcat单机多实例","published":1,"updated":"2016-11-13T03:36:30.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civi8ouke003u2c6nckb4tz46","content":"<p>运用了一个镜像启动多个容器，一个容器可以启动多个示例的原理，具体请搜索本博客：Docker常用命令</p>\n<p>此篇博客是学习“烂泥”大神分享的笔记写的！</p>\n<p>主机IP：192.168.8.33<br>容器IP：192.168.8.188<br>从docker仓库下载最新的tomcat容器，然后使用这个tomcat容器，就可以启动多个tomcat实例，而我们只需要在192.168.0.100上通过端口进行区分就行了。</p>\n<p>启动第一个实例：<br><figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">docker run -dit --name tomcat8282 -v <span class=\"regexp\">/root/</span>:<span class=\"regexp\">/root/</span> -p <span class=\"number\">8282</span>:<span class=\"number\">8080</span> <span class=\"number\">192.168</span>.<span class=\"number\">8.188</span>:<span class=\"number\">5000</span><span class=\"regexp\">/ilanni:160922-03-12 /</span>bin<span class=\"regexp\">/bash</span></div></pre></td></tr></table></figure></p>\n<p><code>docker exec -it tomcat8282 /bin/bash</code></p>\n<p><code>cat webapps/ilanni/index.html</code></p>\n<p><img src=\"http://ofyfogrgx.bkt.clouddn.com/docker%20tomcat%E5%8D%95%E6%9C%BA%E5%A4%9A%E5%AE%9E%E4%BE%8B001.png\" alt=\"\"><br><img src=\"http://ofyfogrgx.bkt.clouddn.com/docker%20tomcat%E5%8D%95%E6%9C%BA%E5%A4%9A%E5%AE%9E%E4%BE%8B002.png\" alt=\"\"></p>\n<p>启动第二个实例：<br><figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">docker run -dit --name tomcat8383 -v <span class=\"regexp\">/root/</span>:<span class=\"regexp\">/root/</span> -p <span class=\"number\">8383</span>:<span class=\"number\">8080</span> <span class=\"number\">192.168</span>.<span class=\"number\">8.188</span>:<span class=\"number\">5000</span><span class=\"regexp\">/ilanni:160922-03-12 /</span>bin<span class=\"regexp\">/bash</span></div></pre></td></tr></table></figure></p>\n<p><code>docker exec -it tomcat8383 /bin/bash</code></p>\n<p><code>cat webapps/ilanni/index.html</code></p>\n<p><img src=\"http://ofyfogrgx.bkt.clouddn.com/docker%20tomcat%E5%8D%95%E6%9C%BA%E5%A4%9A%E5%AE%9E%E4%BE%8B003.png\" alt=\"\"><br><img src=\"http://ofyfogrgx.bkt.clouddn.com/docker%20tomcat%E5%8D%95%E6%9C%BA%E5%A4%9A%E5%AE%9E%E4%BE%8B004.png\" alt=\"\"></p>\n<hr>\n","excerpt":"","more":"<p>运用了一个镜像启动多个容器，一个容器可以启动多个示例的原理，具体请搜索本博客：Docker常用命令</p>\n<p>此篇博客是学习“烂泥”大神分享的笔记写的！</p>\n<p>主机IP：192.168.8.33<br>容器IP：192.168.8.188<br>从docker仓库下载最新的tomcat容器，然后使用这个tomcat容器，就可以启动多个tomcat实例，而我们只需要在192.168.0.100上通过端口进行区分就行了。</p>\n<p>启动第一个实例：<br><figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">docker run -dit --name tomcat8282 -v <span class=\"regexp\">/root/</span>:<span class=\"regexp\">/root/</span> -p <span class=\"number\">8282</span>:<span class=\"number\">8080</span> <span class=\"number\">192.168</span>.<span class=\"number\">8.188</span>:<span class=\"number\">5000</span><span class=\"regexp\">/ilanni:160922-03-12 /</span>bin<span class=\"regexp\">/bash</span></div></pre></td></tr></table></figure></p>\n<p><code>docker exec -it tomcat8282 /bin/bash</code></p>\n<p><code>cat webapps/ilanni/index.html</code></p>\n<p><img src=\"http://ofyfogrgx.bkt.clouddn.com/docker%20tomcat%E5%8D%95%E6%9C%BA%E5%A4%9A%E5%AE%9E%E4%BE%8B001.png\" alt=\"\"><br><img src=\"http://ofyfogrgx.bkt.clouddn.com/docker%20tomcat%E5%8D%95%E6%9C%BA%E5%A4%9A%E5%AE%9E%E4%BE%8B002.png\" alt=\"\"></p>\n<p>启动第二个实例：<br><figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">docker run -dit --name tomcat8383 -v <span class=\"regexp\">/root/</span>:<span class=\"regexp\">/root/</span> -p <span class=\"number\">8383</span>:<span class=\"number\">8080</span> <span class=\"number\">192.168</span>.<span class=\"number\">8.188</span>:<span class=\"number\">5000</span><span class=\"regexp\">/ilanni:160922-03-12 /</span>bin<span class=\"regexp\">/bash</span></div></pre></td></tr></table></figure></p>\n<p><code>docker exec -it tomcat8383 /bin/bash</code></p>\n<p><code>cat webapps/ilanni/index.html</code></p>\n<p><img src=\"http://ofyfogrgx.bkt.clouddn.com/docker%20tomcat%E5%8D%95%E6%9C%BA%E5%A4%9A%E5%AE%9E%E4%BE%8B003.png\" alt=\"\"><br><img src=\"http://ofyfogrgx.bkt.clouddn.com/docker%20tomcat%E5%8D%95%E6%9C%BA%E5%A4%9A%E5%AE%9E%E4%BE%8B004.png\" alt=\"\"></p>\n<hr>\n"},{"title":"Docker常用命令","abbrlink":7569,"date":"2016-11-03T07:53:27.000Z","_content":"\n\nDocker是基于容器的，直接用带有相应功能的镜像就行，而不必运行Docker容器来自己搭建环境那么麻烦。\nDocker 中文网 http://www.docker.org.cn\n\n## 1. 查看docker信息\n\n#### 查看docker版本  \n`docker version`\n#### 显示docker系统的信息  \n`docker info ` \n\n## 2. 对image的操作\n#### 检索、搜索image  \n`docker search image_name  `\n#### 下载image  \n`docker pull image_name   `\n#### 列出镜像列表  \n`docker images `\n参数：\n* -a, --all=false Show all images; \n* --no-trunc=false Don't truncate output; \n* -q, --quiet=false Only show numeric IDs \n\n#### 删除一个或者多个镜像  \n`docker rmi image_name`\n（第六节是删除容器，注意两者区别）\n参数:\n-f, --force=false Force; \n--no-prune=false Do not delete untagged parents  \n\n#### 显示一个镜像的历史 \n`docker history image_name`\n参数：\n--no-trunc=false Don't truncate output; \n-q, --quiet=false Only show numeric IDs  \n\n## 3. 启动容器\n\ndocker容器可以理解为在沙盒中运行的进程。这个沙盒包含了该进程运行所必须的资源，包括文件系统、系统类库、shell 环境等等。但这个沙盒默认是不会运行任何程序的。你需要在沙盒中运行一个进程来启动某一个容器。这个进程是该容器的唯一进程，所以当该进程结束的时候，容器也会完全的停止。\n\n\n#### 在容器中运行\"echo\"命令，输出\"hello word\"  \n`docker run image_name echo \"hello word\" ` \n\n#### 交互式进入容器中  \n`docker run -i -t image_name /bin/bash  `\n  \n#### 在容器中安装新的程序  \n`docker run image_name apt-get install -y app_name ` \n\nNote：  **Ubuntu在执行apt-get 命令的时候，要带上-y参数。如果不指定-y参数的话，apt-get命令会进入交互模式，需要用户输入命令来进行确认，但在docker环境中是无法响应这种交互的。**apt-get 命令执行完毕之后，容器就会停止，但对容器的改动不会丢失。\n\n## 4. 查看容器（ps）\n#### 列出当前所有正在运行的container  \n`docker ps ` \n#### 列出所有的container  \n`docker ps -a  `\n#### 列出最近一次启动的container  \n`docker ps -l ` \n\n## 5. 保存对容器的修改（commit）\n\n当你对某一个容器做了修改之后（通过在容器中运行某一个命令），可以把对容器的修改保存下来，这样下次可以从保存后的最新状态运行该容器。\n#### 保存对容器的修改\n`docker commit ID new_image_name `\n参数：\n* -a, --author=\"\" Author; \n* -m, --message=\"\" Commit message  \n\nNote：  image相当于类，container相当于实例，不过可以动态给实例安装新软件，然后把这个container用commit命令固化成一个image。\n\n## 6. 对容器的操作\n\n#### 删除所有容器 \n\tdocker rm `docker ps -a -q`\n（删除的是容器，而不是镜像；注意容器和镜像的区别，一个镜像可以创建多个容器。删除镜像用rmi命令）    \n#### 删除单个容器参数：\n`docker rm Name/ID  `\n参数：\n* **-f, --force=false** \n* **-l, --link=false** Remove the specified link and not the underlying container; \n* **-v, --volumes=false** Remove the volumes associated to the container  \n\n#### 停止、启动、杀死一个容器  \n```\ndocker stop Name/ID  \ndocker start Name/ID  \ndocker kill Name/ID  ```\n  \n#### 从一个容器中取日志\n`docker logs Name/ID ` \n参数：\n* **-f, --follow=false** Follow log output; \n* **-t, --timestamps=false** Show timestamps  \n \n#### 列出一个容器里面被改变的文件或者目录\n`docker diff Name/ID  `\n（list列表会显示出三种事件，A 增加的，D 删除的，C 被改变的）\n\n#### 显示一个运行的容器里面的进程信息  \n`docker top Name/ID  `\n  \n#### 从容器里面拷贝文件/目录到本地一个路径  \n`docker cp Name:/container_path to_path ` \n或者：\n`docker cp ID:/container_path to_path  `\n\n#### 重启一个正在运行的容器\n`docker restart Name/ID ` \n参数：\n* **-t, --time=10** Number of seconds to try to stop for before killing the container, Default=10  \n\n#### 附加到一个运行的容器上面 \n`docker attach ID ` \n参数：\n* **--no-stdin=false** Do not attach stdin; \n* **--sig-proxy=true** Proxify all received signal to the process  \n\nNote： attach命令允许你查看或者影响一个运行的容器。你可以在同一时间attach同一个容器。你也可以从一个容器中脱离出来，是从CTRL-C。\n\n\n## 7. 保存和加载镜像（save、load）\n\n当需要把一台机器上的镜像迁移到另一台机器的时候，需要保存镜像与加载镜像。\n#### 保存镜像到一个tar包\n`docker save image_name -o file_path`\n参数：\n* **-o, --output=\"\"** Write to an file  \n  \n#### 加载一个tar包格式的镜像\n`docker load -i file_path ` \n参数：\n* **-i, --input=\"\"** Read from a tar archive file  \n \n#### 机器a  \n`docker save image_name > /home/save.tar ` \n#### 使用scp将save.tar拷到机器b上，然后：  \n`docker load < /home/save.tar  `\n\n## 8、 登录registry server（login）\n#### 登陆registry server\n`docker login`  \n参数：\n* **-e, --email=\"\"** Email; \n* **-p, --password=\"\"** Password; \n* **-u, --username=\"\"** Username  \n\n## 9. 发布image（push）\n#### 发布docker镜像  \n`docker push new_image_name  `\n\n## 10.  根据Dockerfile 构建出一个容器\n#### build  \n`docker build -t image_name Dockerfile_path`  \n参数：\n* **--no-cache=false** Do not use cache when building the image\n* **-q, --quiet=false** Suppress the verbose output generated by the containers\n* **--rm=true** Remove intermediate containers after a successful build\n* **-t, --tag=\"\"** Repository name (and optionally a tag) to be applied to the resulting image in case of success  \n\n---\n\n## 参考资料：\n搭建Docker环境:\n搭建Java Web环境：http://www.open-open.com/lib/view/open1422413794439.html\nDocker搭建私有仓库：http://blog.csdn.net/wangtaoking1/article/details/44180901\n搭建WordPress站点：https://linux.cn/article-5560-1.html\n\ndocker常用命令:\nhttp://www.cnblogs.com/ivictor/archive/2015/09/08/4791274.html\n\n\n\n---\n\n","source":"_posts/虚拟化/2016-11-03-Docker常用命令.md","raw":"---\ntitle: Docker常用命令\ncategories:\n  - 虚拟化\ntags:\n  - Docker常用命令\nabbrlink: 7569\ndate: 2016-11-03 15:53:27\n---\n\n\nDocker是基于容器的，直接用带有相应功能的镜像就行，而不必运行Docker容器来自己搭建环境那么麻烦。\nDocker 中文网 http://www.docker.org.cn\n\n## 1. 查看docker信息\n\n#### 查看docker版本  \n`docker version`\n#### 显示docker系统的信息  \n`docker info ` \n\n## 2. 对image的操作\n#### 检索、搜索image  \n`docker search image_name  `\n#### 下载image  \n`docker pull image_name   `\n#### 列出镜像列表  \n`docker images `\n参数：\n* -a, --all=false Show all images; \n* --no-trunc=false Don't truncate output; \n* -q, --quiet=false Only show numeric IDs \n\n#### 删除一个或者多个镜像  \n`docker rmi image_name`\n（第六节是删除容器，注意两者区别）\n参数:\n-f, --force=false Force; \n--no-prune=false Do not delete untagged parents  \n\n#### 显示一个镜像的历史 \n`docker history image_name`\n参数：\n--no-trunc=false Don't truncate output; \n-q, --quiet=false Only show numeric IDs  \n\n## 3. 启动容器\n\ndocker容器可以理解为在沙盒中运行的进程。这个沙盒包含了该进程运行所必须的资源，包括文件系统、系统类库、shell 环境等等。但这个沙盒默认是不会运行任何程序的。你需要在沙盒中运行一个进程来启动某一个容器。这个进程是该容器的唯一进程，所以当该进程结束的时候，容器也会完全的停止。\n\n\n#### 在容器中运行\"echo\"命令，输出\"hello word\"  \n`docker run image_name echo \"hello word\" ` \n\n#### 交互式进入容器中  \n`docker run -i -t image_name /bin/bash  `\n  \n#### 在容器中安装新的程序  \n`docker run image_name apt-get install -y app_name ` \n\nNote：  **Ubuntu在执行apt-get 命令的时候，要带上-y参数。如果不指定-y参数的话，apt-get命令会进入交互模式，需要用户输入命令来进行确认，但在docker环境中是无法响应这种交互的。**apt-get 命令执行完毕之后，容器就会停止，但对容器的改动不会丢失。\n\n## 4. 查看容器（ps）\n#### 列出当前所有正在运行的container  \n`docker ps ` \n#### 列出所有的container  \n`docker ps -a  `\n#### 列出最近一次启动的container  \n`docker ps -l ` \n\n## 5. 保存对容器的修改（commit）\n\n当你对某一个容器做了修改之后（通过在容器中运行某一个命令），可以把对容器的修改保存下来，这样下次可以从保存后的最新状态运行该容器。\n#### 保存对容器的修改\n`docker commit ID new_image_name `\n参数：\n* -a, --author=\"\" Author; \n* -m, --message=\"\" Commit message  \n\nNote：  image相当于类，container相当于实例，不过可以动态给实例安装新软件，然后把这个container用commit命令固化成一个image。\n\n## 6. 对容器的操作\n\n#### 删除所有容器 \n\tdocker rm `docker ps -a -q`\n（删除的是容器，而不是镜像；注意容器和镜像的区别，一个镜像可以创建多个容器。删除镜像用rmi命令）    \n#### 删除单个容器参数：\n`docker rm Name/ID  `\n参数：\n* **-f, --force=false** \n* **-l, --link=false** Remove the specified link and not the underlying container; \n* **-v, --volumes=false** Remove the volumes associated to the container  \n\n#### 停止、启动、杀死一个容器  \n```\ndocker stop Name/ID  \ndocker start Name/ID  \ndocker kill Name/ID  ```\n  \n#### 从一个容器中取日志\n`docker logs Name/ID ` \n参数：\n* **-f, --follow=false** Follow log output; \n* **-t, --timestamps=false** Show timestamps  \n \n#### 列出一个容器里面被改变的文件或者目录\n`docker diff Name/ID  `\n（list列表会显示出三种事件，A 增加的，D 删除的，C 被改变的）\n\n#### 显示一个运行的容器里面的进程信息  \n`docker top Name/ID  `\n  \n#### 从容器里面拷贝文件/目录到本地一个路径  \n`docker cp Name:/container_path to_path ` \n或者：\n`docker cp ID:/container_path to_path  `\n\n#### 重启一个正在运行的容器\n`docker restart Name/ID ` \n参数：\n* **-t, --time=10** Number of seconds to try to stop for before killing the container, Default=10  \n\n#### 附加到一个运行的容器上面 \n`docker attach ID ` \n参数：\n* **--no-stdin=false** Do not attach stdin; \n* **--sig-proxy=true** Proxify all received signal to the process  \n\nNote： attach命令允许你查看或者影响一个运行的容器。你可以在同一时间attach同一个容器。你也可以从一个容器中脱离出来，是从CTRL-C。\n\n\n## 7. 保存和加载镜像（save、load）\n\n当需要把一台机器上的镜像迁移到另一台机器的时候，需要保存镜像与加载镜像。\n#### 保存镜像到一个tar包\n`docker save image_name -o file_path`\n参数：\n* **-o, --output=\"\"** Write to an file  \n  \n#### 加载一个tar包格式的镜像\n`docker load -i file_path ` \n参数：\n* **-i, --input=\"\"** Read from a tar archive file  \n \n#### 机器a  \n`docker save image_name > /home/save.tar ` \n#### 使用scp将save.tar拷到机器b上，然后：  \n`docker load < /home/save.tar  `\n\n## 8、 登录registry server（login）\n#### 登陆registry server\n`docker login`  \n参数：\n* **-e, --email=\"\"** Email; \n* **-p, --password=\"\"** Password; \n* **-u, --username=\"\"** Username  \n\n## 9. 发布image（push）\n#### 发布docker镜像  \n`docker push new_image_name  `\n\n## 10.  根据Dockerfile 构建出一个容器\n#### build  \n`docker build -t image_name Dockerfile_path`  \n参数：\n* **--no-cache=false** Do not use cache when building the image\n* **-q, --quiet=false** Suppress the verbose output generated by the containers\n* **--rm=true** Remove intermediate containers after a successful build\n* **-t, --tag=\"\"** Repository name (and optionally a tag) to be applied to the resulting image in case of success  \n\n---\n\n## 参考资料：\n搭建Docker环境:\n搭建Java Web环境：http://www.open-open.com/lib/view/open1422413794439.html\nDocker搭建私有仓库：http://blog.csdn.net/wangtaoking1/article/details/44180901\n搭建WordPress站点：https://linux.cn/article-5560-1.html\n\ndocker常用命令:\nhttp://www.cnblogs.com/ivictor/archive/2015/09/08/4791274.html\n\n\n\n---\n\n","slug":"虚拟化-2016-11-03-Docker常用命令","published":1,"updated":"2016-11-13T03:36:30.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civi8oukg003x2c6n0o6lgu8g","content":"<p>Docker是基于容器的，直接用带有相应功能的镜像就行，而不必运行Docker容器来自己搭建环境那么麻烦。<br>Docker 中文网 <a href=\"http://www.docker.org.cn\" target=\"_blank\" rel=\"external\">http://www.docker.org.cn</a></p>\n<h2 id=\"1-查看docker信息\"><a href=\"#1-查看docker信息\" class=\"headerlink\" title=\"1. 查看docker信息\"></a>1. 查看docker信息</h2><h4 id=\"查看docker版本\"><a href=\"#查看docker版本\" class=\"headerlink\" title=\"查看docker版本\"></a>查看docker版本</h4><p><code>docker version</code></p>\n<h4 id=\"显示docker系统的信息\"><a href=\"#显示docker系统的信息\" class=\"headerlink\" title=\"显示docker系统的信息\"></a>显示docker系统的信息</h4><p><code>docker info</code> </p>\n<h2 id=\"2-对image的操作\"><a href=\"#2-对image的操作\" class=\"headerlink\" title=\"2. 对image的操作\"></a>2. 对image的操作</h2><h4 id=\"检索、搜索image\"><a href=\"#检索、搜索image\" class=\"headerlink\" title=\"检索、搜索image\"></a>检索、搜索image</h4><p><code>docker search image_name</code></p>\n<h4 id=\"下载image\"><a href=\"#下载image\" class=\"headerlink\" title=\"下载image\"></a>下载image</h4><p><code>docker pull image_name</code></p>\n<h4 id=\"列出镜像列表\"><a href=\"#列出镜像列表\" class=\"headerlink\" title=\"列出镜像列表\"></a>列出镜像列表</h4><p><code>docker images</code><br>参数：</p>\n<ul>\n<li>-a, –all=false Show all images; </li>\n<li>–no-trunc=false Don’t truncate output; </li>\n<li>-q, –quiet=false Only show numeric IDs </li>\n</ul>\n<h4 id=\"删除一个或者多个镜像\"><a href=\"#删除一个或者多个镜像\" class=\"headerlink\" title=\"删除一个或者多个镜像\"></a>删除一个或者多个镜像</h4><p><code>docker rmi image_name</code><br>（第六节是删除容器，注意两者区别）<br>参数:<br>-f, –force=false Force;<br>–no-prune=false Do not delete untagged parents  </p>\n<h4 id=\"显示一个镜像的历史\"><a href=\"#显示一个镜像的历史\" class=\"headerlink\" title=\"显示一个镜像的历史\"></a>显示一个镜像的历史</h4><p><code>docker history image_name</code><br>参数：<br>–no-trunc=false Don’t truncate output;<br>-q, –quiet=false Only show numeric IDs  </p>\n<h2 id=\"3-启动容器\"><a href=\"#3-启动容器\" class=\"headerlink\" title=\"3. 启动容器\"></a>3. 启动容器</h2><p>docker容器可以理解为在沙盒中运行的进程。这个沙盒包含了该进程运行所必须的资源，包括文件系统、系统类库、shell 环境等等。但这个沙盒默认是不会运行任何程序的。你需要在沙盒中运行一个进程来启动某一个容器。这个进程是该容器的唯一进程，所以当该进程结束的时候，容器也会完全的停止。</p>\n<h4 id=\"在容器中运行”echo”命令，输出”hello-word”\"><a href=\"#在容器中运行”echo”命令，输出”hello-word”\" class=\"headerlink\" title=\"在容器中运行”echo”命令，输出”hello word”\"></a>在容器中运行”echo”命令，输出”hello word”</h4><p><code>docker run image_name echo &quot;hello word&quot;</code> </p>\n<h4 id=\"交互式进入容器中\"><a href=\"#交互式进入容器中\" class=\"headerlink\" title=\"交互式进入容器中\"></a>交互式进入容器中</h4><p><code>docker run -i -t image_name /bin/bash</code></p>\n<h4 id=\"在容器中安装新的程序\"><a href=\"#在容器中安装新的程序\" class=\"headerlink\" title=\"在容器中安装新的程序\"></a>在容器中安装新的程序</h4><p><code>docker run image_name apt-get install -y app_name</code> </p>\n<p>Note：  <strong>Ubuntu在执行apt-get 命令的时候，要带上-y参数。如果不指定-y参数的话，apt-get命令会进入交互模式，需要用户输入命令来进行确认，但在docker环境中是无法响应这种交互的。</strong>apt-get 命令执行完毕之后，容器就会停止，但对容器的改动不会丢失。</p>\n<h2 id=\"4-查看容器（ps）\"><a href=\"#4-查看容器（ps）\" class=\"headerlink\" title=\"4. 查看容器（ps）\"></a>4. 查看容器（ps）</h2><h4 id=\"列出当前所有正在运行的container\"><a href=\"#列出当前所有正在运行的container\" class=\"headerlink\" title=\"列出当前所有正在运行的container\"></a>列出当前所有正在运行的container</h4><p><code>docker ps</code> </p>\n<h4 id=\"列出所有的container\"><a href=\"#列出所有的container\" class=\"headerlink\" title=\"列出所有的container\"></a>列出所有的container</h4><p><code>docker ps -a</code></p>\n<h4 id=\"列出最近一次启动的container\"><a href=\"#列出最近一次启动的container\" class=\"headerlink\" title=\"列出最近一次启动的container\"></a>列出最近一次启动的container</h4><p><code>docker ps -l</code> </p>\n<h2 id=\"5-保存对容器的修改（commit）\"><a href=\"#5-保存对容器的修改（commit）\" class=\"headerlink\" title=\"5. 保存对容器的修改（commit）\"></a>5. 保存对容器的修改（commit）</h2><p>当你对某一个容器做了修改之后（通过在容器中运行某一个命令），可以把对容器的修改保存下来，这样下次可以从保存后的最新状态运行该容器。</p>\n<h4 id=\"保存对容器的修改\"><a href=\"#保存对容器的修改\" class=\"headerlink\" title=\"保存对容器的修改\"></a>保存对容器的修改</h4><p><code>docker commit ID new_image_name</code><br>参数：</p>\n<ul>\n<li>-a, –author=”” Author; </li>\n<li>-m, –message=”” Commit message  </li>\n</ul>\n<p>Note：  image相当于类，container相当于实例，不过可以动态给实例安装新软件，然后把这个container用commit命令固化成一个image。</p>\n<h2 id=\"6-对容器的操作\"><a href=\"#6-对容器的操作\" class=\"headerlink\" title=\"6. 对容器的操作\"></a>6. 对容器的操作</h2><h4 id=\"删除所有容器\"><a href=\"#删除所有容器\" class=\"headerlink\" title=\"删除所有容器\"></a>删除所有容器</h4><pre><code>docker rm `docker ps -a -q`\n</code></pre><p>（删除的是容器，而不是镜像；注意容器和镜像的区别，一个镜像可以创建多个容器。删除镜像用rmi命令）    </p>\n<h4 id=\"删除单个容器参数：\"><a href=\"#删除单个容器参数：\" class=\"headerlink\" title=\"删除单个容器参数：\"></a>删除单个容器参数：</h4><p><code>docker rm Name/ID</code><br>参数：</p>\n<ul>\n<li><strong>-f, –force=false</strong> </li>\n<li><strong>-l, –link=false</strong> Remove the specified link and not the underlying container; </li>\n<li><strong>-v, –volumes=false</strong> Remove the volumes associated to the container  </li>\n</ul>\n<h4 id=\"停止、启动、杀死一个容器\"><a href=\"#停止、启动、杀死一个容器\" class=\"headerlink\" title=\"停止、启动、杀死一个容器\"></a>停止、启动、杀死一个容器</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">docker <span class=\"keyword\">stop</span> <span class=\"keyword\">Name</span>/<span class=\"keyword\">ID</span>  </div><div class=\"line\">docker <span class=\"keyword\">start</span> <span class=\"keyword\">Name</span>/<span class=\"keyword\">ID</span>  </div><div class=\"line\">docker <span class=\"keyword\">kill</span> <span class=\"keyword\">Name</span>/<span class=\"keyword\">ID</span></div></pre></td></tr></table></figure>\n<h4 id=\"从一个容器中取日志\"><a href=\"#从一个容器中取日志\" class=\"headerlink\" title=\"从一个容器中取日志\"></a>从一个容器中取日志</h4><p><code>docker logs Name/ID</code><br>参数：</p>\n<ul>\n<li><strong>-f, –follow=false</strong> Follow log output; </li>\n<li><strong>-t, –timestamps=false</strong> Show timestamps  </li>\n</ul>\n<h4 id=\"列出一个容器里面被改变的文件或者目录\"><a href=\"#列出一个容器里面被改变的文件或者目录\" class=\"headerlink\" title=\"列出一个容器里面被改变的文件或者目录\"></a>列出一个容器里面被改变的文件或者目录</h4><p><code>docker diff Name/ID</code><br>（list列表会显示出三种事件，A 增加的，D 删除的，C 被改变的）</p>\n<h4 id=\"显示一个运行的容器里面的进程信息\"><a href=\"#显示一个运行的容器里面的进程信息\" class=\"headerlink\" title=\"显示一个运行的容器里面的进程信息\"></a>显示一个运行的容器里面的进程信息</h4><p><code>docker top Name/ID</code></p>\n<h4 id=\"从容器里面拷贝文件-目录到本地一个路径\"><a href=\"#从容器里面拷贝文件-目录到本地一个路径\" class=\"headerlink\" title=\"从容器里面拷贝文件/目录到本地一个路径\"></a>从容器里面拷贝文件/目录到本地一个路径</h4><p><code>docker cp Name:/container_path to_path</code><br>或者：<br><code>docker cp ID:/container_path to_path</code></p>\n<h4 id=\"重启一个正在运行的容器\"><a href=\"#重启一个正在运行的容器\" class=\"headerlink\" title=\"重启一个正在运行的容器\"></a>重启一个正在运行的容器</h4><p><code>docker restart Name/ID</code><br>参数：</p>\n<ul>\n<li><strong>-t, –time=10</strong> Number of seconds to try to stop for before killing the container, Default=10  </li>\n</ul>\n<h4 id=\"附加到一个运行的容器上面\"><a href=\"#附加到一个运行的容器上面\" class=\"headerlink\" title=\"附加到一个运行的容器上面\"></a>附加到一个运行的容器上面</h4><p><code>docker attach ID</code><br>参数：</p>\n<ul>\n<li><strong>–no-stdin=false</strong> Do not attach stdin; </li>\n<li><strong>–sig-proxy=true</strong> Proxify all received signal to the process  </li>\n</ul>\n<p>Note： attach命令允许你查看或者影响一个运行的容器。你可以在同一时间attach同一个容器。你也可以从一个容器中脱离出来，是从CTRL-C。</p>\n<h2 id=\"7-保存和加载镜像（save、load）\"><a href=\"#7-保存和加载镜像（save、load）\" class=\"headerlink\" title=\"7. 保存和加载镜像（save、load）\"></a>7. 保存和加载镜像（save、load）</h2><p>当需要把一台机器上的镜像迁移到另一台机器的时候，需要保存镜像与加载镜像。</p>\n<h4 id=\"保存镜像到一个tar包\"><a href=\"#保存镜像到一个tar包\" class=\"headerlink\" title=\"保存镜像到一个tar包\"></a>保存镜像到一个tar包</h4><p><code>docker save image_name -o file_path</code><br>参数：</p>\n<ul>\n<li><strong>-o, –output=””</strong> Write to an file  </li>\n</ul>\n<h4 id=\"加载一个tar包格式的镜像\"><a href=\"#加载一个tar包格式的镜像\" class=\"headerlink\" title=\"加载一个tar包格式的镜像\"></a>加载一个tar包格式的镜像</h4><p><code>docker load -i file_path</code><br>参数：</p>\n<ul>\n<li><strong>-i, –input=””</strong> Read from a tar archive file  </li>\n</ul>\n<h4 id=\"机器a\"><a href=\"#机器a\" class=\"headerlink\" title=\"机器a\"></a>机器a</h4><p><code>docker save image_name &gt; /home/save.tar</code> </p>\n<h4 id=\"使用scp将save-tar拷到机器b上，然后：\"><a href=\"#使用scp将save-tar拷到机器b上，然后：\" class=\"headerlink\" title=\"使用scp将save.tar拷到机器b上，然后：\"></a>使用scp将save.tar拷到机器b上，然后：</h4><p><code>docker load &lt; /home/save.tar</code></p>\n<h2 id=\"8、-登录registry-server（login）\"><a href=\"#8、-登录registry-server（login）\" class=\"headerlink\" title=\"8、 登录registry server（login）\"></a>8、 登录registry server（login）</h2><h4 id=\"登陆registry-server\"><a href=\"#登陆registry-server\" class=\"headerlink\" title=\"登陆registry server\"></a>登陆registry server</h4><p><code>docker login</code><br>参数：</p>\n<ul>\n<li><strong>-e, –email=””</strong> Email; </li>\n<li><strong>-p, –password=””</strong> Password; </li>\n<li><strong>-u, –username=””</strong> Username  </li>\n</ul>\n<h2 id=\"9-发布image（push）\"><a href=\"#9-发布image（push）\" class=\"headerlink\" title=\"9. 发布image（push）\"></a>9. 发布image（push）</h2><h4 id=\"发布docker镜像\"><a href=\"#发布docker镜像\" class=\"headerlink\" title=\"发布docker镜像\"></a>发布docker镜像</h4><p><code>docker push new_image_name</code></p>\n<h2 id=\"10-根据Dockerfile-构建出一个容器\"><a href=\"#10-根据Dockerfile-构建出一个容器\" class=\"headerlink\" title=\"10.  根据Dockerfile 构建出一个容器\"></a>10.  根据Dockerfile 构建出一个容器</h2><h4 id=\"build\"><a href=\"#build\" class=\"headerlink\" title=\"build\"></a>build</h4><p><code>docker build -t image_name Dockerfile_path</code><br>参数：</p>\n<ul>\n<li><strong>–no-cache=false</strong> Do not use cache when building the image</li>\n<li><strong>-q, –quiet=false</strong> Suppress the verbose output generated by the containers</li>\n<li><strong>–rm=true</strong> Remove intermediate containers after a successful build</li>\n<li><strong>-t, –tag=””</strong> Repository name (and optionally a tag) to be applied to the resulting image in case of success  </li>\n</ul>\n<hr>\n<h2 id=\"参考资料：\"><a href=\"#参考资料：\" class=\"headerlink\" title=\"参考资料：\"></a>参考资料：</h2><p>搭建Docker环境:<br>搭建Java Web环境：<a href=\"http://www.open-open.com/lib/view/open1422413794439.html\" target=\"_blank\" rel=\"external\">http://www.open-open.com/lib/view/open1422413794439.html</a><br>Docker搭建私有仓库：<a href=\"http://blog.csdn.net/wangtaoking1/article/details/44180901\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/wangtaoking1/article/details/44180901</a><br>搭建WordPress站点：<a href=\"https://linux.cn/article-5560-1.html\" target=\"_blank\" rel=\"external\">https://linux.cn/article-5560-1.html</a></p>\n<p>docker常用命令:<br><a href=\"http://www.cnblogs.com/ivictor/archive/2015/09/08/4791274.html\" target=\"_blank\" rel=\"external\">http://www.cnblogs.com/ivictor/archive/2015/09/08/4791274.html</a></p>\n<hr>\n","excerpt":"","more":"<p>Docker是基于容器的，直接用带有相应功能的镜像就行，而不必运行Docker容器来自己搭建环境那么麻烦。<br>Docker 中文网 <a href=\"http://www.docker.org.cn\">http://www.docker.org.cn</a></p>\n<h2 id=\"1-查看docker信息\"><a href=\"#1-查看docker信息\" class=\"headerlink\" title=\"1. 查看docker信息\"></a>1. 查看docker信息</h2><h4 id=\"查看docker版本\"><a href=\"#查看docker版本\" class=\"headerlink\" title=\"查看docker版本\"></a>查看docker版本</h4><p><code>docker version</code></p>\n<h4 id=\"显示docker系统的信息\"><a href=\"#显示docker系统的信息\" class=\"headerlink\" title=\"显示docker系统的信息\"></a>显示docker系统的信息</h4><p><code>docker info</code> </p>\n<h2 id=\"2-对image的操作\"><a href=\"#2-对image的操作\" class=\"headerlink\" title=\"2. 对image的操作\"></a>2. 对image的操作</h2><h4 id=\"检索、搜索image\"><a href=\"#检索、搜索image\" class=\"headerlink\" title=\"检索、搜索image\"></a>检索、搜索image</h4><p><code>docker search image_name</code></p>\n<h4 id=\"下载image\"><a href=\"#下载image\" class=\"headerlink\" title=\"下载image\"></a>下载image</h4><p><code>docker pull image_name</code></p>\n<h4 id=\"列出镜像列表\"><a href=\"#列出镜像列表\" class=\"headerlink\" title=\"列出镜像列表\"></a>列出镜像列表</h4><p><code>docker images</code><br>参数：</p>\n<ul>\n<li>-a, –all=false Show all images; </li>\n<li>–no-trunc=false Don’t truncate output; </li>\n<li>-q, –quiet=false Only show numeric IDs </li>\n</ul>\n<h4 id=\"删除一个或者多个镜像\"><a href=\"#删除一个或者多个镜像\" class=\"headerlink\" title=\"删除一个或者多个镜像\"></a>删除一个或者多个镜像</h4><p><code>docker rmi image_name</code><br>（第六节是删除容器，注意两者区别）<br>参数:<br>-f, –force=false Force;<br>–no-prune=false Do not delete untagged parents  </p>\n<h4 id=\"显示一个镜像的历史\"><a href=\"#显示一个镜像的历史\" class=\"headerlink\" title=\"显示一个镜像的历史\"></a>显示一个镜像的历史</h4><p><code>docker history image_name</code><br>参数：<br>–no-trunc=false Don’t truncate output;<br>-q, –quiet=false Only show numeric IDs  </p>\n<h2 id=\"3-启动容器\"><a href=\"#3-启动容器\" class=\"headerlink\" title=\"3. 启动容器\"></a>3. 启动容器</h2><p>docker容器可以理解为在沙盒中运行的进程。这个沙盒包含了该进程运行所必须的资源，包括文件系统、系统类库、shell 环境等等。但这个沙盒默认是不会运行任何程序的。你需要在沙盒中运行一个进程来启动某一个容器。这个进程是该容器的唯一进程，所以当该进程结束的时候，容器也会完全的停止。</p>\n<h4 id=\"在容器中运行”echo”命令，输出”hello-word”\"><a href=\"#在容器中运行”echo”命令，输出”hello-word”\" class=\"headerlink\" title=\"在容器中运行”echo”命令，输出”hello word”\"></a>在容器中运行”echo”命令，输出”hello word”</h4><p><code>docker run image_name echo &quot;hello word&quot;</code> </p>\n<h4 id=\"交互式进入容器中\"><a href=\"#交互式进入容器中\" class=\"headerlink\" title=\"交互式进入容器中\"></a>交互式进入容器中</h4><p><code>docker run -i -t image_name /bin/bash</code></p>\n<h4 id=\"在容器中安装新的程序\"><a href=\"#在容器中安装新的程序\" class=\"headerlink\" title=\"在容器中安装新的程序\"></a>在容器中安装新的程序</h4><p><code>docker run image_name apt-get install -y app_name</code> </p>\n<p>Note：  <strong>Ubuntu在执行apt-get 命令的时候，要带上-y参数。如果不指定-y参数的话，apt-get命令会进入交互模式，需要用户输入命令来进行确认，但在docker环境中是无法响应这种交互的。</strong>apt-get 命令执行完毕之后，容器就会停止，但对容器的改动不会丢失。</p>\n<h2 id=\"4-查看容器（ps）\"><a href=\"#4-查看容器（ps）\" class=\"headerlink\" title=\"4. 查看容器（ps）\"></a>4. 查看容器（ps）</h2><h4 id=\"列出当前所有正在运行的container\"><a href=\"#列出当前所有正在运行的container\" class=\"headerlink\" title=\"列出当前所有正在运行的container\"></a>列出当前所有正在运行的container</h4><p><code>docker ps</code> </p>\n<h4 id=\"列出所有的container\"><a href=\"#列出所有的container\" class=\"headerlink\" title=\"列出所有的container\"></a>列出所有的container</h4><p><code>docker ps -a</code></p>\n<h4 id=\"列出最近一次启动的container\"><a href=\"#列出最近一次启动的container\" class=\"headerlink\" title=\"列出最近一次启动的container\"></a>列出最近一次启动的container</h4><p><code>docker ps -l</code> </p>\n<h2 id=\"5-保存对容器的修改（commit）\"><a href=\"#5-保存对容器的修改（commit）\" class=\"headerlink\" title=\"5. 保存对容器的修改（commit）\"></a>5. 保存对容器的修改（commit）</h2><p>当你对某一个容器做了修改之后（通过在容器中运行某一个命令），可以把对容器的修改保存下来，这样下次可以从保存后的最新状态运行该容器。</p>\n<h4 id=\"保存对容器的修改\"><a href=\"#保存对容器的修改\" class=\"headerlink\" title=\"保存对容器的修改\"></a>保存对容器的修改</h4><p><code>docker commit ID new_image_name</code><br>参数：</p>\n<ul>\n<li>-a, –author=”” Author; </li>\n<li>-m, –message=”” Commit message  </li>\n</ul>\n<p>Note：  image相当于类，container相当于实例，不过可以动态给实例安装新软件，然后把这个container用commit命令固化成一个image。</p>\n<h2 id=\"6-对容器的操作\"><a href=\"#6-对容器的操作\" class=\"headerlink\" title=\"6. 对容器的操作\"></a>6. 对容器的操作</h2><h4 id=\"删除所有容器\"><a href=\"#删除所有容器\" class=\"headerlink\" title=\"删除所有容器\"></a>删除所有容器</h4><pre><code>docker rm `docker ps -a -q`\n</code></pre><p>（删除的是容器，而不是镜像；注意容器和镜像的区别，一个镜像可以创建多个容器。删除镜像用rmi命令）    </p>\n<h4 id=\"删除单个容器参数：\"><a href=\"#删除单个容器参数：\" class=\"headerlink\" title=\"删除单个容器参数：\"></a>删除单个容器参数：</h4><p><code>docker rm Name/ID</code><br>参数：</p>\n<ul>\n<li><strong>-f, –force=false</strong> </li>\n<li><strong>-l, –link=false</strong> Remove the specified link and not the underlying container; </li>\n<li><strong>-v, –volumes=false</strong> Remove the volumes associated to the container  </li>\n</ul>\n<h4 id=\"停止、启动、杀死一个容器\"><a href=\"#停止、启动、杀死一个容器\" class=\"headerlink\" title=\"停止、启动、杀死一个容器\"></a>停止、启动、杀死一个容器</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">docker <span class=\"keyword\">stop</span> <span class=\"keyword\">Name</span>/<span class=\"keyword\">ID</span>  </div><div class=\"line\">docker <span class=\"keyword\">start</span> <span class=\"keyword\">Name</span>/<span class=\"keyword\">ID</span>  </div><div class=\"line\">docker <span class=\"keyword\">kill</span> <span class=\"keyword\">Name</span>/<span class=\"keyword\">ID</span></div></pre></td></tr></table></figure>\n<h4 id=\"从一个容器中取日志\"><a href=\"#从一个容器中取日志\" class=\"headerlink\" title=\"从一个容器中取日志\"></a>从一个容器中取日志</h4><p><code>docker logs Name/ID</code><br>参数：</p>\n<ul>\n<li><strong>-f, –follow=false</strong> Follow log output; </li>\n<li><strong>-t, –timestamps=false</strong> Show timestamps  </li>\n</ul>\n<h4 id=\"列出一个容器里面被改变的文件或者目录\"><a href=\"#列出一个容器里面被改变的文件或者目录\" class=\"headerlink\" title=\"列出一个容器里面被改变的文件或者目录\"></a>列出一个容器里面被改变的文件或者目录</h4><p><code>docker diff Name/ID</code><br>（list列表会显示出三种事件，A 增加的，D 删除的，C 被改变的）</p>\n<h4 id=\"显示一个运行的容器里面的进程信息\"><a href=\"#显示一个运行的容器里面的进程信息\" class=\"headerlink\" title=\"显示一个运行的容器里面的进程信息\"></a>显示一个运行的容器里面的进程信息</h4><p><code>docker top Name/ID</code></p>\n<h4 id=\"从容器里面拷贝文件-目录到本地一个路径\"><a href=\"#从容器里面拷贝文件-目录到本地一个路径\" class=\"headerlink\" title=\"从容器里面拷贝文件/目录到本地一个路径\"></a>从容器里面拷贝文件/目录到本地一个路径</h4><p><code>docker cp Name:/container_path to_path</code><br>或者：<br><code>docker cp ID:/container_path to_path</code></p>\n<h4 id=\"重启一个正在运行的容器\"><a href=\"#重启一个正在运行的容器\" class=\"headerlink\" title=\"重启一个正在运行的容器\"></a>重启一个正在运行的容器</h4><p><code>docker restart Name/ID</code><br>参数：</p>\n<ul>\n<li><strong>-t, –time=10</strong> Number of seconds to try to stop for before killing the container, Default=10  </li>\n</ul>\n<h4 id=\"附加到一个运行的容器上面\"><a href=\"#附加到一个运行的容器上面\" class=\"headerlink\" title=\"附加到一个运行的容器上面\"></a>附加到一个运行的容器上面</h4><p><code>docker attach ID</code><br>参数：</p>\n<ul>\n<li><strong>–no-stdin=false</strong> Do not attach stdin; </li>\n<li><strong>–sig-proxy=true</strong> Proxify all received signal to the process  </li>\n</ul>\n<p>Note： attach命令允许你查看或者影响一个运行的容器。你可以在同一时间attach同一个容器。你也可以从一个容器中脱离出来，是从CTRL-C。</p>\n<h2 id=\"7-保存和加载镜像（save、load）\"><a href=\"#7-保存和加载镜像（save、load）\" class=\"headerlink\" title=\"7. 保存和加载镜像（save、load）\"></a>7. 保存和加载镜像（save、load）</h2><p>当需要把一台机器上的镜像迁移到另一台机器的时候，需要保存镜像与加载镜像。</p>\n<h4 id=\"保存镜像到一个tar包\"><a href=\"#保存镜像到一个tar包\" class=\"headerlink\" title=\"保存镜像到一个tar包\"></a>保存镜像到一个tar包</h4><p><code>docker save image_name -o file_path</code><br>参数：</p>\n<ul>\n<li><strong>-o, –output=””</strong> Write to an file  </li>\n</ul>\n<h4 id=\"加载一个tar包格式的镜像\"><a href=\"#加载一个tar包格式的镜像\" class=\"headerlink\" title=\"加载一个tar包格式的镜像\"></a>加载一个tar包格式的镜像</h4><p><code>docker load -i file_path</code><br>参数：</p>\n<ul>\n<li><strong>-i, –input=””</strong> Read from a tar archive file  </li>\n</ul>\n<h4 id=\"机器a\"><a href=\"#机器a\" class=\"headerlink\" title=\"机器a\"></a>机器a</h4><p><code>docker save image_name &gt; /home/save.tar</code> </p>\n<h4 id=\"使用scp将save-tar拷到机器b上，然后：\"><a href=\"#使用scp将save-tar拷到机器b上，然后：\" class=\"headerlink\" title=\"使用scp将save.tar拷到机器b上，然后：\"></a>使用scp将save.tar拷到机器b上，然后：</h4><p><code>docker load &lt; /home/save.tar</code></p>\n<h2 id=\"8、-登录registry-server（login）\"><a href=\"#8、-登录registry-server（login）\" class=\"headerlink\" title=\"8、 登录registry server（login）\"></a>8、 登录registry server（login）</h2><h4 id=\"登陆registry-server\"><a href=\"#登陆registry-server\" class=\"headerlink\" title=\"登陆registry server\"></a>登陆registry server</h4><p><code>docker login</code><br>参数：</p>\n<ul>\n<li><strong>-e, –email=””</strong> Email; </li>\n<li><strong>-p, –password=””</strong> Password; </li>\n<li><strong>-u, –username=””</strong> Username  </li>\n</ul>\n<h2 id=\"9-发布image（push）\"><a href=\"#9-发布image（push）\" class=\"headerlink\" title=\"9. 发布image（push）\"></a>9. 发布image（push）</h2><h4 id=\"发布docker镜像\"><a href=\"#发布docker镜像\" class=\"headerlink\" title=\"发布docker镜像\"></a>发布docker镜像</h4><p><code>docker push new_image_name</code></p>\n<h2 id=\"10-根据Dockerfile-构建出一个容器\"><a href=\"#10-根据Dockerfile-构建出一个容器\" class=\"headerlink\" title=\"10.  根据Dockerfile 构建出一个容器\"></a>10.  根据Dockerfile 构建出一个容器</h2><h4 id=\"build\"><a href=\"#build\" class=\"headerlink\" title=\"build\"></a>build</h4><p><code>docker build -t image_name Dockerfile_path</code><br>参数：</p>\n<ul>\n<li><strong>–no-cache=false</strong> Do not use cache when building the image</li>\n<li><strong>-q, –quiet=false</strong> Suppress the verbose output generated by the containers</li>\n<li><strong>–rm=true</strong> Remove intermediate containers after a successful build</li>\n<li><strong>-t, –tag=””</strong> Repository name (and optionally a tag) to be applied to the resulting image in case of success  </li>\n</ul>\n<hr>\n<h2 id=\"参考资料：\"><a href=\"#参考资料：\" class=\"headerlink\" title=\"参考资料：\"></a>参考资料：</h2><p>搭建Docker环境:<br>搭建Java Web环境：<a href=\"http://www.open-open.com/lib/view/open1422413794439.html\">http://www.open-open.com/lib/view/open1422413794439.html</a><br>Docker搭建私有仓库：<a href=\"http://blog.csdn.net/wangtaoking1/article/details/44180901\">http://blog.csdn.net/wangtaoking1/article/details/44180901</a><br>搭建WordPress站点：<a href=\"https://linux.cn/article-5560-1.html\">https://linux.cn/article-5560-1.html</a></p>\n<p>docker常用命令:<br><a href=\"http://www.cnblogs.com/ivictor/archive/2015/09/08/4791274.html\">http://www.cnblogs.com/ivictor/archive/2015/09/08/4791274.html</a></p>\n<hr>\n"},{"title":"集群、自动化链接更新页","abbrlink":36339,"date":"2016-11-03T09:51:42.000Z","_content":"\n## jumpserver\n官网：http://www.jumpserver.org/\nhttps://github.com/jumpserver/jumpserver\n\n## 堡垒机集群搭建\nhttp://www.tuicool.com/articles/vI7VzyB\n\n\n---","source":"_posts/集群自动化/2016-11-03-集群、自动化链接更新页.md","raw":"---\ntitle: 集群、自动化链接更新页\ncategories:\n  - 集群自动化\ntags:\n  - 集群\n  - 自动化\n  - 堡垒机\nabbrlink: 36339\ndate: 2016-11-03 17:51:42\n---\n\n## jumpserver\n官网：http://www.jumpserver.org/\nhttps://github.com/jumpserver/jumpserver\n\n## 堡垒机集群搭建\nhttp://www.tuicool.com/articles/vI7VzyB\n\n\n---","slug":"集群自动化-2016-11-03-集群、自动化链接更新页","published":1,"updated":"2016-11-13T03:36:30.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civi8oukh00402c6n9jwv1g0c","content":"<h2 id=\"jumpserver\"><a href=\"#jumpserver\" class=\"headerlink\" title=\"jumpserver\"></a>jumpserver</h2><p>官网：<a href=\"http://www.jumpserver.org/\" target=\"_blank\" rel=\"external\">http://www.jumpserver.org/</a><br><a href=\"https://github.com/jumpserver/jumpserver\" target=\"_blank\" rel=\"external\">https://github.com/jumpserver/jumpserver</a></p>\n<h2 id=\"堡垒机集群搭建\"><a href=\"#堡垒机集群搭建\" class=\"headerlink\" title=\"堡垒机集群搭建\"></a>堡垒机集群搭建</h2><p><a href=\"http://www.tuicool.com/articles/vI7VzyB\" target=\"_blank\" rel=\"external\">http://www.tuicool.com/articles/vI7VzyB</a></p>\n<hr>\n","excerpt":"","more":"<h2 id=\"jumpserver\"><a href=\"#jumpserver\" class=\"headerlink\" title=\"jumpserver\"></a>jumpserver</h2><p>官网：<a href=\"http://www.jumpserver.org/\">http://www.jumpserver.org/</a><br><a href=\"https://github.com/jumpserver/jumpserver\">https://github.com/jumpserver/jumpserver</a></p>\n<h2 id=\"堡垒机集群搭建\"><a href=\"#堡垒机集群搭建\" class=\"headerlink\" title=\"堡垒机集群搭建\"></a>堡垒机集群搭建</h2><p><a href=\"http://www.tuicool.com/articles/vI7VzyB\">http://www.tuicool.com/articles/vI7VzyB</a></p>\n<hr>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"civi8oucm00092c6nkb48x6zp","category_id":"civi8ouch00052c6n957z6wut","_id":"civi8oucs000e2c6n6n4op765"},{"post_id":"civi8ouc700012c6n33qjnxfw","category_id":"civi8ouch00052c6n957z6wut","_id":"civi8oucu000h2c6n4sbi9iug"},{"post_id":"civi8ouce00032c6nyzyhgytv","category_id":"civi8ouch00052c6n957z6wut","_id":"civi8oucv000i2c6n9qormmyl"},{"post_id":"civi8ouck00072c6nxequnuxw","category_id":"civi8ouch00052c6n957z6wut","_id":"civi8oucw000l2c6nbrzzciz3"},{"post_id":"civi8oui8000u2c6n9mn9vjju","category_id":"civi8ouia000w2c6nlt97n0jx","_id":"civi8ouim00152c6n01a2ljlc"},{"post_id":"civi8ouid00102c6nelu9yjrl","category_id":"civi8ouia000w2c6nlt97n0jx","_id":"civi8ouiq00192c6nysu1dcel"},{"post_id":"civi8oui9000v2c6nqtda7lmf","category_id":"civi8ouia000w2c6nlt97n0jx","_id":"civi8ouis001b2c6nma5i1xf8"},{"post_id":"civi8ouia000y2c6n1zlh64qp","category_id":"civi8ouiq00172c6nbwn01eif","_id":"civi8ouix001h2c6ng8dowmoq"},{"post_id":"civi8ouic000z2c6ng0rngsu4","category_id":"civi8ouit001d2c6nna1lpfvw","_id":"civi8ouj0001m2c6nvsdd4jd3"},{"post_id":"civi8ouif00142c6n385hot20","category_id":"civi8ouiy001i2c6nbl0w9gmo","_id":"civi8ouj4001s2c6nhtuzo8oa"},{"post_id":"civi8ouim00162c6n6bmbtch1","category_id":"civi8ouj1001n2c6nr8zfj7ly","_id":"civi8ouj8001z2c6nk61xsea5"},{"post_id":"civi8ouir001a2c6n5ht9qj5n","category_id":"civi8ouj6001v2c6nbgiao4ui","_id":"civi8ouje00282c6nwx1d0mts"},{"post_id":"civi8ouis001c2c6nf1q8mjdj","category_id":"civi8ouj1001n2c6nr8zfj7ly","_id":"civi8ouji002f2c6nrg2u9zhj"},{"post_id":"civi8ouiu001f2c6n6o3l58y0","category_id":"civi8ouj1001n2c6nr8zfj7ly","_id":"civi8oujo002l2c6nd6nihr2s"},{"post_id":"civi8ouiw001g2c6nyh4uqvdd","category_id":"civi8ouj6001v2c6nbgiao4ui","_id":"civi8oujq002r2c6nptgtd85g"},{"post_id":"civi8ouiy001k2c6n7cvqbwqu","category_id":"civi8oujo002m2c6nc2ao3oxs","_id":"civi8oujt002x2c6n3ifwql5q"},{"post_id":"civi8ouiz001l2c6n0tc0t3dd","category_id":"civi8ouj6001v2c6nbgiao4ui","_id":"civi8oujx00322c6n2uwwzv1e"},{"post_id":"civi8ouj1001o2c6n5weht8zs","category_id":"civi8ouj6001v2c6nbgiao4ui","_id":"civi8ouk000392c6nki8z18u4"},{"post_id":"civi8ouj2001r2c6nmx09egen","category_id":"civi8oujo002m2c6nc2ao3oxs","_id":"civi8ouk3003e2c6nhwkhcr3a"},{"post_id":"civi8ouj4001u2c6nwiwgd5av","category_id":"civi8oujo002m2c6nc2ao3oxs","_id":"civi8ouk7003k2c6na8edxwrl"},{"post_id":"civi8ouj7001y2c6nwu81umdt","category_id":"civi8oujo002m2c6nc2ao3oxs","_id":"civi8oukb003q2c6nlggfglxb"},{"post_id":"civi8ouj900212c6n0n4iu2k2","category_id":"civi8oujo002m2c6nc2ao3oxs","_id":"civi8oukf003v2c6nvfmnlpqk"},{"post_id":"civi8oujb00252c6n1fhpc6ht","category_id":"civi8oujo002m2c6nc2ao3oxs","_id":"civi8ouki00412c6nvpohzxua"},{"post_id":"civi8oujd00272c6ntzifvf3m","category_id":"civi8oukf003w2c6nh3b4fg4p","_id":"civi8oukj00462c6n6c8whnyo"},{"post_id":"civi8oujf002c2c6n5trh1xfe","category_id":"civi8oukf003w2c6nh3b4fg4p","_id":"civi8oukk004a2c6n1jar1l4x"},{"post_id":"civi8oujh002e2c6n8qdzyr6i","category_id":"civi8oukf003w2c6nh3b4fg4p","_id":"civi8oukk004d2c6n5awa4vmp"},{"post_id":"civi8ouji002h2c6n0cdwpuyf","category_id":"civi8oukf003w2c6nh3b4fg4p","_id":"civi8oukm004h2c6nhvct096y"},{"post_id":"civi8oujk002k2c6nk688yrf0","category_id":"civi8oukf003w2c6nh3b4fg4p","_id":"civi8oukn004l2c6njqv5dfbr"},{"post_id":"civi8oujo002o2c6n41ok4uru","category_id":"civi8oukf003w2c6nh3b4fg4p","_id":"civi8oukp004o2c6nlz7g1qqr"},{"post_id":"civi8oujp002q2c6nw6aajgir","category_id":"civi8oukf003w2c6nh3b4fg4p","_id":"civi8oukq004s2c6ndb6omfb2"},{"post_id":"civi8oujr002u2c6n8a59xg9v","category_id":"civi8oukf003w2c6nh3b4fg4p","_id":"civi8oukq004w2c6n9fd0x1uc"},{"post_id":"civi8oujs002w2c6nnxyiw9pc","category_id":"civi8oukq004t2c6nrcjlmpuw","_id":"civi8oukr00502c6n9ztmqtli"},{"post_id":"civi8ouju002z2c6nsgdfsnpc","category_id":"civi8oukf003w2c6nh3b4fg4p","_id":"civi8ouks00542c6nitafkt6a"},{"post_id":"civi8oujw00312c6nydn7hm7v","category_id":"civi8oukq004t2c6nrcjlmpuw","_id":"civi8oukt00582c6n185e688r"},{"post_id":"civi8oujx00352c6nbew1fyj5","category_id":"civi8oukq004t2c6nrcjlmpuw","_id":"civi8ouku005c2c6nlr5w3wt8"},{"post_id":"civi8oujz00372c6nvxa6446r","category_id":"civi8oukq004t2c6nrcjlmpuw","_id":"civi8oukv005f2c6nm6v6m5qi"},{"post_id":"civi8ouk1003c2c6n2b382w3a","category_id":"civi8oukq004t2c6nrcjlmpuw","_id":"civi8ouky005i2c6nihaid4zu"},{"post_id":"civi8ouk2003d2c6nhix3f9gm","category_id":"civi8oukq004t2c6nrcjlmpuw","_id":"civi8oukz005n2c6n5qgh89p5"},{"post_id":"civi8ouk5003h2c6n41ztk2u0","category_id":"civi8oukq004t2c6nrcjlmpuw","_id":"civi8oul0005q2c6n2wpn0w44"},{"post_id":"civi8ouk6003j2c6nw2fy28nh","category_id":"civi8oukq004t2c6nrcjlmpuw","_id":"civi8oul0005t2c6nn958zfcz"},{"post_id":"civi8ouk8003n2c6nkq0pj4f2","category_id":"civi8oukq004t2c6nrcjlmpuw","_id":"civi8oul1005w2c6nw9s9e31j"},{"post_id":"civi8ouka003p2c6npp6vpkv6","category_id":"civi8oul0005u2c6n8bu5r2z5","_id":"civi8oul100602c6nxa8zca7z"},{"post_id":"civi8oukd003t2c6ng03obfsr","category_id":"civi8oul0005u2c6n8bu5r2z5","_id":"civi8oul200652c6nzwnjgaot"},{"post_id":"civi8ouke003u2c6nckb4tz46","category_id":"civi8oul0005u2c6n8bu5r2z5","_id":"civi8oul300682c6nvnl0i61l"},{"post_id":"civi8oukg003x2c6n0o6lgu8g","category_id":"civi8oul0005u2c6n8bu5r2z5","_id":"civi8oul3006c2c6ntcgyi401"},{"post_id":"civi8oukh00402c6n9jwv1g0c","category_id":"civi8oul300692c6n8uvsko6g","_id":"civi8oul3006g2c6n2krg8whh"}],"PostTag":[{"post_id":"civi8ouc700012c6n33qjnxfw","tag_id":"civi8oucj00062c6nucrp8uym","_id":"civi8oucs000d2c6nno6mi7mx"},{"post_id":"civi8ouce00032c6nyzyhgytv","tag_id":"civi8oucq000c2c6nghrqnsa3","_id":"civi8oucw000k2c6nu9rgx6sn"},{"post_id":"civi8ouce00032c6nyzyhgytv","tag_id":"civi8oucu000g2c6n76iprxhs","_id":"civi8oucw000m2c6n1tezmotk"},{"post_id":"civi8ouck00072c6nxequnuxw","tag_id":"civi8oucq000c2c6nghrqnsa3","_id":"civi8oucx000p2c6nm98bsbf0"},{"post_id":"civi8ouck00072c6nxequnuxw","tag_id":"civi8oucu000g2c6n76iprxhs","_id":"civi8oucy000q2c6n68ild5ev"},{"post_id":"civi8oucm00092c6nkb48x6zp","tag_id":"civi8oucq000c2c6nghrqnsa3","_id":"civi8oucy000s2c6nqbpsye60"},{"post_id":"civi8oucm00092c6nkb48x6zp","tag_id":"civi8oucu000g2c6n76iprxhs","_id":"civi8oucy000t2c6n5ujjmsvs"},{"post_id":"civi8oui8000u2c6n9mn9vjju","tag_id":"civi8ouia000x2c6nm9pizbxi","_id":"civi8ouie00132c6nykcprypi"},{"post_id":"civi8oui9000v2c6nqtda7lmf","tag_id":"civi8ouie00122c6nczwnhy21","_id":"civi8ouj2001q2c6ntgfcmxpz"},{"post_id":"civi8oui9000v2c6nqtda7lmf","tag_id":"civi8ouiq00182c6n6xa9knep","_id":"civi8ouj4001t2c6nb322jt2n"},{"post_id":"civi8oui9000v2c6nqtda7lmf","tag_id":"civi8ouiu001e2c6n5olj5wrq","_id":"civi8ouj7001x2c6ns18llv6t"},{"post_id":"civi8oui9000v2c6nqtda7lmf","tag_id":"civi8ouiy001j2c6nptmgy47m","_id":"civi8ouj800202c6n2y3tzl1v"},{"post_id":"civi8ouj1001o2c6n5weht8zs","tag_id":"civi8ouia000x2c6nm9pizbxi","_id":"civi8oujb00242c6nkgs5t7na"},{"post_id":"civi8ouj2001r2c6nmx09egen","tag_id":"civi8ouia000x2c6nm9pizbxi","_id":"civi8oujd00262c6n4cipy3wv"},{"post_id":"civi8ouia000y2c6n1zlh64qp","tag_id":"civi8ouj1001p2c6n9ngwjjkj","_id":"civi8oujf002b2c6n9nkuomhu"},{"post_id":"civi8ouia000y2c6n1zlh64qp","tag_id":"civi8ouj7001w2c6nlrnp0k8r","_id":"civi8oujg002d2c6nyd37jv1l"},{"post_id":"civi8ouic000z2c6ng0rngsu4","tag_id":"civi8oujb00232c6nqvq0922d","_id":"civi8oujk002j2c6nnic32tb8"},{"post_id":"civi8ouic000z2c6ng0rngsu4","tag_id":"civi8oujf002a2c6n51nw0jn2","_id":"civi8oujo002n2c6npegiz04e"},{"post_id":"civi8ouid00102c6nelu9yjrl","tag_id":"civi8oujk002i2c6ndogdlt7l","_id":"civi8oujq002s2c6nbxo2jbt4"},{"post_id":"civi8ouif00142c6n385hot20","tag_id":"civi8oujp002p2c6nybjzfqlv","_id":"civi8oujx00342c6nmjy8c4wa"},{"post_id":"civi8ouif00142c6n385hot20","tag_id":"civi8oujs002v2c6n8xzd6c80","_id":"civi8oujz00362c6nguu4o9kf"},{"post_id":"civi8ouim00162c6n6bmbtch1","tag_id":"civi8oujv00302c6nex4psral","_id":"civi8ouk0003b2c6ndi69hmkt"},{"post_id":"civi8ouir001a2c6n5ht9qj5n","tag_id":"civi8ouk000382c6nwygwhy2h","_id":"civi8ouk6003i2c6nbie2azwl"},{"post_id":"civi8ouis001c2c6nf1q8mjdj","tag_id":"civi8ouk4003f2c6njf9o89lv","_id":"civi8ouka003o2c6ngas1kjo2"},{"post_id":"civi8ouiu001f2c6n6o3l58y0","tag_id":"civi8ouk7003m2c6n2bns9qx0","_id":"civi8oukh003z2c6nnvlv0vhs"},{"post_id":"civi8ouiu001f2c6n6o3l58y0","tag_id":"civi8oukc003s2c6nkm9iunvk","_id":"civi8ouki00432c6nopeon3mm"},{"post_id":"civi8ouiw001g2c6nyh4uqvdd","tag_id":"civi8oukh003y2c6nbqdw1w9l","_id":"civi8oukj00452c6nd5br78v6"},{"post_id":"civi8ouiy001k2c6n7cvqbwqu","tag_id":"civi8oukj00442c6n7itzxd05","_id":"civi8oukk00492c6noe0l54p8"},{"post_id":"civi8ouiz001l2c6n0tc0t3dd","tag_id":"civi8oukj00482c6nhgumwx8j","_id":"civi8oukk004e2c6n74cznmc6"},{"post_id":"civi8ouj4001u2c6nwiwgd5av","tag_id":"civi8oukk004c2c6n663r976z","_id":"civi8oukn004j2c6n4s3xteun"},{"post_id":"civi8ouj7001y2c6nwu81umdt","tag_id":"civi8oukm004g2c6nmg792wg3","_id":"civi8oukp004n2c6nwktdfjjg"},{"post_id":"civi8ouj900212c6n0n4iu2k2","tag_id":"civi8oukn004k2c6ncqat3hjb","_id":"civi8oukq004r2c6np4uu795q"},{"post_id":"civi8oujb00252c6n1fhpc6ht","tag_id":"civi8oukp004p2c6n2mb1c0l1","_id":"civi8oukq004v2c6nie58ufqr"},{"post_id":"civi8oujd00272c6ntzifvf3m","tag_id":"civi8oukq004u2c6nk8gso96j","_id":"civi8oukr004z2c6n5c2hvgwy"},{"post_id":"civi8oujf002c2c6n5trh1xfe","tag_id":"civi8oukr004y2c6neiqltmwg","_id":"civi8ouks00532c6n2777myp1"},{"post_id":"civi8oujh002e2c6n8qdzyr6i","tag_id":"civi8oukr00522c6nlpfyhn6t","_id":"civi8oukt00572c6n4t2d10kd"},{"post_id":"civi8ouji002h2c6n0cdwpuyf","tag_id":"civi8ouks00562c6nzca00xok","_id":"civi8ouku005b2c6n3afkhx0e"},{"post_id":"civi8oujk002k2c6nk688yrf0","tag_id":"civi8oukt005a2c6nhpj6e66l","_id":"civi8ouky005k2c6nsmdyx64l"},{"post_id":"civi8oujk002k2c6nk688yrf0","tag_id":"civi8ouku005e2c6nnglmtqh1","_id":"civi8oukz005l2c6nwypeyg2b"},{"post_id":"civi8oujo002o2c6n41ok4uru","tag_id":"civi8oukx005h2c6nqzyaad6g","_id":"civi8oul0005p2c6nks164fep"},{"post_id":"civi8oujp002q2c6nw6aajgir","tag_id":"civi8oukz005m2c6n6q7p1zm0","_id":"civi8oul1005z2c6n5jzqcil5"},{"post_id":"civi8oujp002q2c6nw6aajgir","tag_id":"civi8oul0005r2c6n3l8apfd6","_id":"civi8oul100612c6n8ezkyvnl"},{"post_id":"civi8oujp002q2c6nw6aajgir","tag_id":"civi8oul1005v2c6nwccnhefw","_id":"civi8oul200642c6ngga4d0ko"},{"post_id":"civi8oujr002u2c6n8a59xg9v","tag_id":"civi8oul1005y2c6n0g1mhqkj","_id":"civi8oul3006b2c6ni4ney7nq"},{"post_id":"civi8oujr002u2c6n8a59xg9v","tag_id":"civi8oul200632c6nnr51w9c1","_id":"civi8oul3006d2c6nucm0ulp8"},{"post_id":"civi8oujr002u2c6n8a59xg9v","tag_id":"civi8oul200672c6n7ovwikek","_id":"civi8oul3006f2c6ncjfgzohr"},{"post_id":"civi8oujs002w2c6nnxyiw9pc","tag_id":"civi8oul3006a2c6nffve3juv","_id":"civi8oul3006h2c6n7emqdac2"},{"post_id":"civi8ouju002z2c6nsgdfsnpc","tag_id":"civi8oul3006e2c6ntd7ml7rz","_id":"civi8oul4006k2c6neo4k2y5f"},{"post_id":"civi8ouju002z2c6nsgdfsnpc","tag_id":"civi8oul4006i2c6nbnaz3mex","_id":"civi8oul4006l2c6np4l0cnyl"},{"post_id":"civi8oujw00312c6nydn7hm7v","tag_id":"civi8oul4006j2c6n9w0l07bw","_id":"civi8oul4006n2c6n44bli7of"},{"post_id":"civi8oujx00352c6nbew1fyj5","tag_id":"civi8oul4006m2c6nbvrzh1o2","_id":"civi8oul5006p2c6n3ridaof4"},{"post_id":"civi8oujz00372c6nvxa6446r","tag_id":"civi8oul4006o2c6nohogucyp","_id":"civi8oul5006r2c6nvhqo7uyz"},{"post_id":"civi8ouk1003c2c6n2b382w3a","tag_id":"civi8oul5006q2c6nytjbrlrd","_id":"civi8oul5006t2c6nmwtxexa8"},{"post_id":"civi8ouk2003d2c6nhix3f9gm","tag_id":"civi8oul5006s2c6nt6yqq5q3","_id":"civi8oul5006v2c6n0inbltvh"},{"post_id":"civi8ouk5003h2c6n41ztk2u0","tag_id":"civi8oul5006u2c6n1f9wp1so","_id":"civi8oul6006y2c6nfy7ya76x"},{"post_id":"civi8ouk5003h2c6n41ztk2u0","tag_id":"civi8oul5006w2c6ngcksboc6","_id":"civi8oul6006z2c6nynwd735g"},{"post_id":"civi8ouk6003j2c6nw2fy28nh","tag_id":"civi8oul6006x2c6nu2wp9fxu","_id":"civi8oul600712c6ngfpzrc20"},{"post_id":"civi8ouk8003n2c6nkq0pj4f2","tag_id":"civi8oul600702c6n7dwdncne","_id":"civi8oul600732c6nrk63cxy6"},{"post_id":"civi8ouka003p2c6npp6vpkv6","tag_id":"civi8oul600722c6nw0jtwplw","_id":"civi8oul700752c6n1p75i1g9"},{"post_id":"civi8oukd003t2c6ng03obfsr","tag_id":"civi8oul700742c6nyzk2l5a7","_id":"civi8oul800772c6nffyss5mx"},{"post_id":"civi8oukg003x2c6n0o6lgu8g","tag_id":"civi8oul700762c6npjpwjkd6","_id":"civi8oul800792c6nxzu9p2a2"},{"post_id":"civi8oukh00402c6n9jwv1g0c","tag_id":"civi8oul800782c6nia4yx62a","_id":"civi8oula007c2c6nkq98kh7a"},{"post_id":"civi8oukh00402c6n9jwv1g0c","tag_id":"civi8oul9007a2c6nysqmzdsh","_id":"civi8oula007d2c6nfodgsart"},{"post_id":"civi8oukh00402c6n9jwv1g0c","tag_id":"civi8oul9007b2c6n5bvchszk","_id":"civi8oula007e2c6nm29v2pes"}],"Tag":[{"name":"Git","_id":"civi8oucj00062c6nucrp8uym"},{"name":"Hexo","_id":"civi8oucq000c2c6nghrqnsa3"},{"name":"Next","_id":"civi8oucu000g2c6n76iprxhs"},{"name":"网页链接更新页","_id":"civi8ouia000x2c6nm9pizbxi"},{"name":"jenkins 安装","_id":"civi8ouie00122c6nczwnhy21"},{"name":"jenkins参数化构建git","_id":"civi8ouiq00182c6n6xa9knep"},{"name":"Git Parameter Plug-In 插件","_id":"civi8ouiu001e2c6n5olj5wrq"},{"name":"ansible plugin插件","_id":"civi8ouiy001j2c6nptmgy47m"},{"name":"用github写开源书籍","_id":"civi8ouj1001p2c6n9ngwjjkj"},{"name":"gitbook","_id":"civi8ouj7001w2c6nlrnp0k8r"},{"name":"穷人VPN","_id":"civi8oujb00232c6nqvq0922d"},{"name":"免安装VPN","_id":"civi8oujf002a2c6n51nw0jn2"},{"name":"Git教程","_id":"civi8oujk002i2c6ndogdlt7l"},{"name":"OpenResty","_id":"civi8oujp002p2c6nybjzfqlv"},{"name":"高性能web服务器","_id":"civi8oujs002v2c6n8xzd6c80"},{"name":"MySQL常用命令","_id":"civi8oujv00302c6nex4psral"},{"name":"vim常用命令","_id":"civi8ouk000382c6nwygwhy2h"},{"name":"数据库主主互备（高可用）","_id":"civi8ouk4003f2c6njf9o89lv"},{"name":"MongoDB3.2","_id":"civi8ouk7003m2c6n2bns9qx0"},{"name":"分布式数据库","_id":"civi8oukc003s2c6nkm9iunvk"},{"name":"工具集","_id":"civi8oukh003y2c6nbqdw1w9l"},{"name":"Linux学习流程发展","_id":"civi8oukj00442c6n7itzxd05"},{"name":"Linux常见面试题","_id":"civi8oukj00482c6nhgumwx8j"},{"name":"工作总结","_id":"civi8oukk004c2c6n663r976z"},{"name":"创业的公司","_id":"civi8oukm004g2c6nmg792wg3"},{"name":"高并发系统之降级特技","_id":"civi8oukn004k2c6ncqat3hjb"},{"name":"最佳 Linux 发行版汇总","_id":"civi8oukp004p2c6n2mb1c0l1"},{"name":"ruby2.3.1安装","_id":"civi8oukq004u2c6nk8gso96j"},{"name":"Centos7 lanm","_id":"civi8oukr004y2c6neiqltmwg"},{"name":"Centos PHP","_id":"civi8oukr00522c6nlpfyhn6t"},{"name":"Node.js","_id":"civi8ouks00562c6nzca00xok"},{"name":"Zabbix监控","_id":"civi8oukt005a2c6nhpj6e66l"},{"name":"Zabbix Centos7","_id":"civi8ouku005e2c6nnglmtqh1"},{"name":"检查Linux服务器性能","_id":"civi8oukx005h2c6nqzyaad6g"},{"name":"用Hexo搭建博客","_id":"civi8oukz005m2c6n6q7p1zm0"},{"name":"Hexo github","_id":"civi8oul0005r2c6n3l8apfd6"},{"name":"Hexo Coding","_id":"civi8oul1005v2c6nwccnhefw"},{"name":"用Jekyll搭建博客","_id":"civi8oul1005y2c6n0g1mhqkj"},{"name":"jekyll github","_id":"civi8oul200632c6nnr51w9c1"},{"name":"jekyll Coding","_id":"civi8oul200672c6n7ovwikek"},{"name":"Centos网络端口","_id":"civi8oul3006a2c6nffve3juv"},{"name":"GitLab","_id":"civi8oul3006e2c6ntd7ml7rz"},{"name":"版本控制","_id":"civi8oul4006i2c6nbnaz3mex"},{"name":"Linux内核升级","_id":"civi8oul4006j2c6n9w0l07bw"},{"name":"ssh远程重装centos系统","_id":"civi8oul4006m2c6nbvrzh1o2"},{"name":"VNC服务","_id":"civi8oul4006o2c6nohogucyp"},{"name":"grub引导修复","_id":"civi8oul5006q2c6nytjbrlrd"},{"name":"iptables防火墙","_id":"civi8oul5006s2c6nt6yqq5q3"},{"name":"LVM磁盘管理","_id":"civi8oul5006u2c6n1f9wp1so"},{"name":"LVM扩容","_id":"civi8oul5006w2c6ngcksboc6"},{"name":"服务器入侵肉鸡发包","_id":"civi8oul6006x2c6nu2wp9fxu"},{"name":"swap分区转换","_id":"civi8oul600702c6n7dwdncne"},{"name":"Docker安装","_id":"civi8oul600722c6nw0jtwplw"},{"name":"KVM","_id":"civi8oul700742c6nyzk2l5a7"},{"name":"Docker常用命令","_id":"civi8oul700762c6npjpwjkd6"},{"name":"集群","_id":"civi8oul800782c6nia4yx62a"},{"name":"自动化","_id":"civi8oul9007a2c6nysqmzdsh"},{"name":"堡垒机","_id":"civi8oul9007b2c6n5bvchszk"}]}}